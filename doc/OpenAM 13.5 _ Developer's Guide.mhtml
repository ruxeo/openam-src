From: <Saved by Blink>
Snapshot-Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html
Subject: OpenAM 13.5 > Developer's Guide
Date: Mon, 5 Aug 2024 01:51:54 +0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----"


------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/html
Content-ID: <frame-BF2BD5B788EF50F335CC546C4E8D8751@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-8d188cc1-9fbf-4972-a81b-546bf81b93a9@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-64d42b4a-c32a-4094=
-9478-0e6f09deb104@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-23f002bc-bb42-4aaa-8c72-6f263001f8a6@mhtml.blink" /><link=
 rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-12f73708-efad-462a-a3=
b2-ece9a4a09eaa@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" h=
ref=3D"cid:css-76b2e914-ced1-415d-9765-b8a7edd5f195@mhtml.blink" />
     =20
   <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0"><title>OpenAM 13.5 &gt; Developer's Guide</title><meta name=3D"gene=
rator" content=3D"DocBook XSL Stylesheets V1.79.1"><meta name=3D"descriptio=
n" content=3D"Guide to developing OpenAM client applications and service pr=
oviders. OpenAM provides open source Authentication, Authorization, Entitle=
ment and Federation software."><link rel=3D"stylesheet" type=3D"text/css" m=
edia=3D"screen" href=3D"https://cdn.forgerock.com/docs-ui/prod/fr-docs-styl=
es.screen.css"><meta content=3D"Tue, 15 Oct 2019 14:48:41 UTC" http-equiv=
=3D"date">
<link rel=3D"shortcut icon" href=3D"https://www.forgerock.com/favicon.ico">
<link rel=3D"apple-touch-icon-precomposed" sizes=3D"57x57" href=3D"https://=
www.forgerock.com/ico/apple-touch-icon-57x57.png">
<link rel=3D"apple-touch-icon-precomposed" sizes=3D"114x114" href=3D"https:=
//www.forgerock.com/ico/apple-touch-icon-114x114.png">
<link rel=3D"apple-touch-icon-precomposed" sizes=3D"72x72" href=3D"https://=
www.forgerock.com/ico/apple-touch-icon-72x72.png">
<link rel=3D"apple-touch-icon-precomposed" sizes=3D"144x144" href=3D"https:=
//www.forgerock.com/ico/apple-touch-icon-144x144.png">
<link rel=3D"apple-touch-icon-precomposed" sizes=3D"60x60" href=3D"https://=
www.forgerock.com/ico/apple-touch-icon-60x60.png">
<link rel=3D"apple-touch-icon-precomposed" sizes=3D"120x120" href=3D"https:=
//www.forgerock.com/ico/apple-touch-icon-120x120.png">
<link rel=3D"apple-touch-icon-precomposed" sizes=3D"76x76" href=3D"https://=
www.forgerock.com/ico/apple-touch-icon-76x76.png">
<link rel=3D"apple-touch-icon-precomposed" sizes=3D"152x152" href=3D"https:=
//www.forgerock.com/ico/apple-touch-icon-152x152.png">
<link rel=3D"icon" type=3D"image/png" href=3D"https://www.forgerock.com/ico=
/favicon-196x196.png" sizes=3D"196x196">
<link rel=3D"icon" type=3D"image/png" href=3D"https://www.forgerock.com/ico=
/favicon-96x96.png" sizes=3D"96x96">
<link rel=3D"icon" type=3D"image/png" href=3D"https://www.forgerock.com/ico=
/favicon-32x32.png" sizes=3D"32x32">
<link rel=3D"icon" type=3D"image/png" href=3D"https://www.forgerock.com/ico=
/favicon-16x16.png" sizes=3D"16x16">
<link rel=3D"icon" type=3D"image/png" href=3D"https://www.forgerock.com/ico=
/favicon-128.png" sizes=3D"128x128">
<meta name=3D"msapplication-TileColor" content=3D"#FFFFFF">
<meta name=3D"msapplication-TileImage" content=3D"https://www.forgerock.com=
/ico/mstile-144x144.png">
<meta name=3D"msapplication-square70x70logo" content=3D"https://www.forgero=
ck.com/ico/mstile-70x70.png">
<meta name=3D"msapplication-square150x150logo" content=3D"https://www.forge=
rock.com/ico/mstile-150x150.png">
<meta name=3D"msapplication-wide310x150logo" content=3D"https://www.forgero=
ck.com/ico/mstile-310x150.png">
<meta name=3D"msapplication-square310x310logo" content=3D"https://www.forge=
rock.com/ico/mstile-310x310.png"></head>
<body id=3D"top" bgcolor=3D"white" text=3D"black" link=3D"#0000FF" vlink=3D=
"#840084" alink=3D"#0000FF" style=3D"margin-bottom: var(--backstage-footer-=
offset); --backstage-footer-offset: 663px;"><backstage-site-header active-i=
tem=3D"docs" theme=3D"dark" active=3D"docs"><template shadowmode=3D"open"><=
nav class=3D"dark d-flex svelte-26nwlm"><div class=3D"d-flex justify-conten=
t-between align-items-center svelte-26nwlm container"><a href=3D"https://ba=
ckstage.forgerock.com/" class=3D"brand svelte-26nwlm"></a> <div class=3D"d-=
flex justify-content-between align-items-center flex-grow collapse svelte-2=
6nwlm"><div class=3D"collapse-container svelte-26nwlm"><div class=3D"d-flex=
 align-items-center svelte-26nwlm"><div class=3D"d-flex nav-items svelte-26=
nwlm"><div class=3D"nav-item svelte-26nwlm"><a href=3D"https://backstage.fo=
rgerock.com/downloads" class=3D"svelte-26nwlm">Downloads</a></div> <div cla=
ss=3D"nav-item svelte-26nwlm active"><backstage-dropdown><template shadowmo=
de=3D"open"><div class=3D"backstage-dropdown-container svelte-7le2g7"><div =
class=3D"backstage-dropdown-toggle-wrapper svelte-7le2g7"><span class=3D"ba=
ckstage-dropdown-toggle-label svelte-7le2g7">Docs &amp; Learning <i class=
=3D"caret svelte-7le2g7"></i></span></div> <div class=3D"backstage-dropdown=
-menu dark left svelte-7le2g7" style=3D"margin-top: 13px;"><slot></slot></d=
iv></div></template><backstage-dropdown-item><template shadowmode=3D"open">=
<div class=3D"backstage-dropdown-item dark svelte-152p09d hover"><a href=3D=
"https://backstage.forgerock.com/docs" class=3D"svelte-152p09d"><slot></slo=
t></a></div></template>Product Docs</backstage-dropdown-item> <backstage-dr=
opdown-item><template shadowmode=3D"open"><div class=3D"backstage-dropdown-=
item dark svelte-152p09d hover"><a href=3D"https://backstage.forgerock.com/=
knowledge" class=3D"svelte-152p09d"><slot></slot></a></div></template>Knowl=
edge Base</backstage-dropdown-item> <backstage-dropdown-item><template shad=
owmode=3D"open"><div class=3D"backstage-dropdown-item dark svelte-152p09d h=
over"><a href=3D"https://backstage.forgerock.com/university" class=3D"svelt=
e-152p09d"><slot></slot></a></div></template>Training</backstage-dropdown-i=
tem></backstage-dropdown></div> <div class=3D"nav-item svelte-26nwlm"><back=
stage-dropdown><template shadowmode=3D"open"><div class=3D"backstage-dropdo=
wn-container svelte-7le2g7"><div class=3D"backstage-dropdown-toggle-wrapper=
 svelte-7le2g7"><span class=3D"backstage-dropdown-toggle-label svelte-7le2g=
7">Support <i class=3D"caret svelte-7le2g7"></i></span></div> <div class=3D=
"backstage-dropdown-menu dark left svelte-7le2g7" style=3D"margin-top: 13px=
;"><slot></slot></div></div></template><backstage-dropdown-item><template s=
hadowmode=3D"open"><div class=3D"backstage-dropdown-item dark svelte-152p09=
d hover"><a href=3D"https://backstage.forgerock.com/support/tickets" class=
=3D"svelte-152p09d"><slot></slot></a></div></template>Tickets</backstage-dr=
opdown-item> <backstage-dropdown-item><template shadowmode=3D"open"><div cl=
ass=3D"backstage-dropdown-item dark svelte-152p09d hover"><a href=3D"https:=
//backstage.forgerock.com/support/issues" class=3D"svelte-152p09d"><slot></=
slot></a></div></template>Issue
                                    Tracking</backstage-dropdown-item> <bac=
kstage-dropdown-item><template shadowmode=3D"open"><div class=3D"backstage-=
dropdown-item dark svelte-152p09d hover"><a href=3D"https://backstage.forge=
rock.com/cloudstorage" class=3D"svelte-152p09d"><slot></slot></a></div></te=
mplate>Cloud Storage</backstage-dropdown-item></backstage-dropdown></div> <=
div class=3D"nav-item svelte-26nwlm" data-testid=3D"community"><backstage-d=
ropdown><template shadowmode=3D"open"><div class=3D"backstage-dropdown-cont=
ainer svelte-7le2g7"><div class=3D"backstage-dropdown-toggle-wrapper svelte=
-7le2g7"><span class=3D"backstage-dropdown-toggle-label svelte-7le2g7">Comm=
unity <i class=3D"caret svelte-7le2g7"></i></span></div> <div class=3D"back=
stage-dropdown-menu dark left svelte-7le2g7" style=3D"margin-top: 13px;"><s=
lot></slot></div></div></template><backstage-dropdown-item><template shadow=
mode=3D"open"><div class=3D"backstage-dropdown-item dark svelte-152p09d hov=
er"><a href=3D"https://backstage.forgerock.com/community/events" class=3D"s=
velte-152p09d"><slot></slot></a></div></template>Events</backstage-dropdown=
-item> <backstage-dropdown-item><template shadowmode=3D"open"><div class=3D=
"backstage-dropdown-item dark svelte-152p09d hover"><a href=3D"https://back=
stage.forgerock.com/community/developers" class=3D"svelte-152p09d"><slot></=
slot></a></div></template>Developers</backstage-dropdown-item> <backstage-d=
ropdown-item><template shadowmode=3D"open"><div class=3D"backstage-dropdown=
-item dark svelte-152p09d hover"><a href=3D"https://community.forgerock.com=
/tag/blog" class=3D"svelte-152p09d"><slot></slot></a></div></template>Blogs=
</backstage-dropdown-item> <backstage-dropdown-item><template shadowmode=3D=
"open"><div class=3D"backstage-dropdown-item dark svelte-152p09d hover"><a =
href=3D"https://community.forgerock.com/tag/video" class=3D"svelte-152p09d"=
><slot></slot></a></div></template>Videos</backstage-dropdown-item> <backst=
age-dropdown-item><template shadowmode=3D"open"><div class=3D"backstage-dro=
pdown-item dark svelte-152p09d hover"><a href=3D"https://community.forgeroc=
k.com/" class=3D"svelte-152p09d"><slot></slot></a></div></template>Discussi=
ons</backstage-dropdown-item> <backstage-dropdown-item><template shadowmode=
=3D"open"><div class=3D"backstage-dropdown-item dark svelte-152p09d hover">=
<a href=3D"https://backstage.forgerock.com/marketplace" class=3D"svelte-152=
p09d"><slot></slot></a></div></template>Marketplace</backstage-dropdown-ite=
m></backstage-dropdown></div>  </div></div> <div class=3D"d-flex align-item=
s-end svelte-26nwlm"><div class=3D"d-flex nav-items align-items-center svel=
te-26nwlm"><div class=3D"nav-item svelte-26nwlm"><backstage-site-search><te=
mplate shadowmode=3D"open"><div class=3D"search dark svelte-13trxox"><backs=
tage-dropdown><template shadowmode=3D"open"><div class=3D"backstage-dropdow=
n-container svelte-7le2g7"><div class=3D"backstage-dropdown-toggle-wrapper =
svelte-7le2g7"><slot name=3D"label"></slot></div> <div class=3D"backstage-d=
ropdown-menu dark right svelte-7le2g7" style=3D"margin-top: 13px;"><slot></=
slot></div></div></template><div slot=3D"label"><a href=3D"https://backstag=
e.forgerock.com/search" data-testid=3D"toggle"><svg xmlns=3D"http://www.w3.=
org/2000/svg" viewBox=3D"0 0 512 512" class=3D"svelte-13trxox"><path d=3D"M=
505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 9=
3.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.=
3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9=
.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7=
 0 128 57.2 128 128 0 70.7-57.2 128-128 128z" class=3D"svelte-13trxox"></pa=
th></svg></a></div> <backstage-dropdown-item><template shadowmode=3D"open">=
<div class=3D"backstage-dropdown-item dark svelte-152p09d"><slot></slot></d=
iv></template><input type=3D"text" data-testid=3D"query" placeholder=3D"Sea=
rch ForgeRock..." class=3D"svelte-13trxox"> <button class=3D"svelte-13trxox=
">Go</button></backstage-dropdown-item></backstage-dropdown></div></templat=
e></backstage-site-search></div> <div class=3D"nav-item svelte-26nwlm"><a h=
ref=3D"http://www.forgerock.com/contact" class=3D"svelte-26nwlm"><strong>Co=
ntact Sales</strong></a></div> <div class=3D"nav-item svelte-26nwlm"><a hre=
f=3D"https://sso.forgerock.com/login?goto=3Dhttps%3A%2F%2Fbackstage.forgero=
ck.com%2Fdocs%2Fopenam%2F13.5%2Fdev-guide%2Findex.html" class=3D"svelte-26n=
wlm">Sign in</a></div> <div class=3D"nav-item svelte-26nwlm"><a href=3D"htt=
ps://backstage.forgerock.com/account/register?goto=3Dhttps%3A%2F%2Fbackstag=
e.forgerock.com%2Fdocs%2Fopenam%2F13.5%2Fdev-guide%2Findex.html" class=3D"s=
velte-26nwlm">Register</a></div></div></div></div></div> <div class=3D"hamb=
urger svelte-26nwlm"><div class=3D"hamburger-bar svelte-26nwlm"></div> <div=
 class=3D"hamburger-bar svelte-26nwlm"></div> <div class=3D"hamburger-bar s=
velte-26nwlm"></div></div></div></nav></template></backstage-site-header><n=
av class=3D"navbar navbar-default navbar-secondary navbar-fixed-top" bs-aff=
ix=3D"true" offset-top=3D"35"><div class=3D"container"><div class=3D"navbar=
-header"><button type=3D"button" class=3D"navbar-toggle collapsed" data-tog=
gle=3D"collapse" data-target=3D"#docs-secondary-navbar-collapse" aria-expan=
ded=3D"false"><span class=3D"sr-only">Toggle navigation</span><span class=
=3D"icon-bar"></span><span class=3D"icon-bar"></span><span class=3D"icon-ba=
r"></span></button><div class=3D"navbar-brand hidden-sm hidden-md hidden-xs=
"><a id=3D"top-link-to-docs" href=3D"https://backstage.forgerock.com/docs/"=
><i class=3D"glyphicon glyphicon-file"></i> Docs</a></div></div><div class=
=3D"collapse navbar-collapse" id=3D"docs-secondary-navbar-collapse"><div cl=
ass=3D"nav navbar-text"><span class=3D"text-muted nowrap hidden-sm hidden-m=
d hidden-xs"><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/">=
OpenAM 13.5</a> =E2=80=BA
        </span><span class=3D"dropdown" style=3D""><a class=3D"strong dropd=
own-toggle nowrap" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#" data-toggle=3D"dropdown" data-placement=3D"bottom" =
title=3D"Choose a different book" role=3D"button" aria-haspopup=3D"true" ar=
ia-expanded=3D"false"><span data-toggle=3D"tooltip" data-placement=3D"botto=
m" title=3D"" data-original-title=3D"Choose a different book">Developer's G=
uide<span class=3D"caret"></span></span></a><!--
 * The contents of this file are subject to the terms of the Common Develop=
ment and
 * Distribution License (the License). You may not use this file except in =
compliance with the
 * License.
 *
 * You can obtain a copy of the License at legal/CDDLv1.0.txt. See the Lice=
nse for the
 * specific language governing permission and limitations under the License=
.
 *
 * When distributing Covered Software, include this CDDL Header Notice in e=
ach file and include
 * the License file at legal/CDDLv1.0.txt. If applicable, add the following=
 below the CDDL
 * Header, with the fields enclosed by brackets [] replaced by your own ide=
ntifying
 * information: "Portions copyright [year] [name of copyright owner]".
 *
 * Copyright 2017 ForgeRock AS.
-->
<ul class=3D"dropdown-menu">
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/release-not=
es/index.html">Release Notes</a></li>
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/getting-sta=
rted/index.html">Getting Started With OpenAM</a></li>
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/install-gui=
de/index.html">Installation Guide</a></li>
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/upgrade-gui=
de/index.html">Upgrade Guide</a></li>
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide=
/index.html">Administration Guide</a></li>
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html">Developer's Guide</a></li>
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/deployment-=
planning/index.html">Deployment Planning Guide</a></li>
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/reference/i=
ndex.html">Reference</a></li>
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/apidocs/ind=
ex.html">OpenAM API Javadoc</a></li>
</ul></span></div><div class=3D"navbar-right navbar-form"><form id=3D"secon=
dHeaderSearchForm" role=3D"search" class=3D"form-inline" target=3D"_blank" =
action=3D"https://backstage.forgerock.com/docs/search"><div class=3D"form-g=
roup"><div class=3D"input-group input-group-sm"><div class=3D"input-group-b=
tn hidden-sm search-panel"><button type=3D"button" class=3D"btn btn-default=
 dropdown-toggle" data-toggle=3D"dropdown"><span id=3D"search_concept">Sear=
ch in</span>&nbsp;<span class=3D"caret"></span></button><ul class=3D"dropdo=
wn-menu" role=3D"menu"><li><a href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#all">All books</a></li><li class=3D"divide=
r"></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#book">This book</a></li><li><a href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#version">This version</=
a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-=
guide/index.html#product">This product</a></li></ul></div><label for=3D"q" =
class=3D"sr-only">Search</label><input id=3D"q" name=3D"q" placeholder=3D"S=
earch for..." class=3D"input-sm form-control" type=3D"text"><span class=3D"=
input-group-btn"><button type=3D"submit" class=3D"btn btn-default btn-sm" d=
ata-toggle=3D"tooltip" data-placement=3D"bottom" title=3D"" data-original-t=
itle=3D"Search the documentation"><i class=3D"fa fa-search"></i></button></=
span></div><div class=3D"toolbar-icons"><div class=3D"toolbar-icon"><div cl=
ass=3D"btn-link" id=3D"mailFeedbackIcon" data-toggle=3D"tooltip" data-place=
ment=3D"bottom" title=3D"" data-original-title=3D"Report documentation feed=
back"><i class=3D"fa fa-envelope-open-o"></i><span class=3D"toolbar-text">F=
eedback</span></div></div><div class=3D"toolbar-icon"><a id=3D"downloadPDFL=
ink" target=3D"_blank" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/OpenAM-13.5-Dev-Guide.pdf" data-toggle=3D"tooltip" data-placement=3D"b=
ottom" title=3D"" data-original-title=3D"Download PDF"><i class=3D"fa fa-fi=
le-pdf-o"></i><span class=3D"toolbar-text">PDF</span></a></div><div class=
=3D"toolbar-icon" style=3D"display: none;"><div class=3D"btn-link" data-tog=
gle=3D"tooltip" data-placement=3D"bottom" title=3D"" data-original-title=3D=
"Print / export to PDF"><i class=3D"fa fa-print"></i></div></div><div class=
=3D"toolbar-icon" data-placement=3D"bottom" title=3D"" data-toggle=3D"toolt=
ip" data-original-title=3D"About this Document"><a target=3D"_blank" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#"=
 data-toggle=3D"modal" data-target=3D"#aboutModal"><i class=3D"fa fa-info-c=
ircle"></i><span class=3D"toolbar-text">About</span></a></div></div></div><=
/form></div></div></div></nav><div class=3D"left-shape-content"></div><div =
class=3D"container" id=3D"main-content"><div class=3D"row"><div class=3D"co=
l-sm-3 hidden-xs hidden-print"><div id=3D"sidebar" data-clampedwidth=3D".co=
l-sm-3" class=3D"affix-top" style=3D"width: 262.5px;"><div class=3D"display=
Version"><span class=3D"updatelabel">Latest update: </span><span class=3D"b=
adge">13.5.2</span></div><ul class=3D"nav nav-stacked hidden-print"><li><a =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#preface">Preface</a><ul class=3D"nav nav-stacked hidden-print"><li><a hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#who-should-use">1. Who Should Use This Guide</a></li><li><a href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#formatting-=
conventions">2. Formatting Conventions</a></li><li><a href=3D"https://backs=
tage.forgerock.com/docs/openam/13.5/dev-guide/index.html#accessing-doc-onli=
ne">3. Accessing Documentation Online</a></li><li><a href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#joining-the-communi=
ty">4. Using the ForgeRock.org Site</a></li><li><a href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-support-contact">=
5. Getting Support and Contacting ForgeRock</a></li></ul></li><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#c=
hap-api-overview">1. OpenAM APIs and Protocols</a><ul class=3D"nav nav-stac=
ked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#openam-apis">1.1. OpenAM APIs</a></li><li><a hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#openam-spis">1.2. OpenAM SPIs</a></li><li><a href=3D"https://backstage.for=
gerock.com/docs/openam/13.5/dev-guide/index.html#openam-ipv">1.3. OpenAM, I=
Pv4, and IPv6</a></li></ul></li><li><a href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#chap-client-dev">2. Developing Cl=
ient Applications</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
ec-rest">2.1. Using the REST API</a><ul class=3D"nav nav-stacked hidden-pri=
nt"><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#about-openam-rest-api">2.1.1. About the RESTful APIs</a></li>=
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#rest-api-versioning">2.1.2. REST API Versioning</a><ul class=3D"n=
av nav-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#rest-api-versioning-supported-versio=
ns">2.1.2.1. Supported REST API Versions</a></li><li><a href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-explici=
t-version">2.1.2.2. Specifying an Explicit REST API Version</a></li><li><a =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#rest-api-versioning-messages">2.1.2.3. REST API Versioning Messages</a><=
/li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#c66-encoding">2.1.3. Token Encoding</a></li><li><a =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#realms-rest">2.1.4. Specifying Realms in REST API Calls</a></li><li><a h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#rest-api-auth">2.1.5. Authentication and Logout</a><ul class=3D"nav nav-s=
tacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#load-balancer-requirements">2.1.5.1. Load Ba=
lancer and Proxy Layer Requirements</a></li><li><a href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#windows-desktop-sso-r=
equirements">2.1.5.2. Windows Desktop SSO Requirements</a></li></ul></li><l=
i><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/ind=
ex.html#rest-api-ssotoken">2.1.6. Using the Session Token After Authenticat=
ion</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#rest-api-filter-sort-page">2.1.7. Filtering, Sorting,=
 and Paging Results</a></li><li><a href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/dev-guide/index.html#rest-api-serverinfo">2.1.8. Server In=
formation</a></li><li><a href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#rest-api-tokens">2.1.9. Token Validation and Se=
ssion Information</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-token-validation">2.1.9.1. Validating Sessions</a></li><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-session-information">2.1.9.2. Obtaining Information About Sessions<=
/a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#rest-api-session-refresh">2.1.9.3. Refreshing Stateful Se=
ssions</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-session-logout">2.1.9.4. Invalidating Ses=
sions</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#rest-api-session-properties">2.1.9.5. Session Prope=
rties</a></li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#rest-api-goto-url-validation">2.1.10. RES=
T Goto URL Validation</a></li><li><a href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#rest-api-logging">2.1.11. Logging</=
a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backsta=
ge.forgerock.com/docs/openam/13.5/dev-guide/index.html#common-audit-logging=
">2.1.11.1. Common Audit Logging of REST API Calls</a></li><li><a href=3D"h=
ttps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#legacy=
-logging">2.1.11.2. Legacy Logging of REST API Calls</a></li></ul></li><li>=
<a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index=
.html#rest-api-status-codes">2.1.12. REST Status Codes</a></li><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
ec-rest-authz-policy">2.1.13. RESTful Authorization and Policy Management S=
ervices</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-au=
thz">2.1.13.1. About the REST Policy Endpoints</a></li><li><a href=3D"https=
://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-a=
uthz-policy-decisions">2.1.13.2. Requesting Policy Decisions</a><ul class=
=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstage.forgeroc=
k.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-policy-decision-=
concrete">2.1.13.2.1. Requesting Policy Decisions For Specific Resources</a=
></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-g=
uide/index.html#rest-api-authz-policy-decision-advice">2.1.13.2.2. Policy D=
ecision Advice</a></li><li><a href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#rest-api-authz-policy-decision-subtree">2.=
1.13.2.3. Requesting Policy Decisions For a Tree of Resources</a></li></ul>=
</li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gu=
ide/index.html#rest-api-authz-resource-types">2.1.13.3. Managing Resource T=
ypes</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://b=
ackstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz=
-resource-types-query">2.1.13.3.1. Querying Resource Types</a></li><li><a h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#rest-api-authz-resource-types-read">2.1.13.3.2. Reading a Specific Resour=
ce Type</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#rest-api-authz-resource-types-create">2.1.13.3.3.=
 Creating a Resource Type</a></li><li><a href=3D"https://backstage.forgeroc=
k.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-resource-types-u=
pdate">2.1.13.3.4. Updating a Resource Type</a></li><li><a href=3D"https://=
backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-auth=
z-resource-types-delete">2.1.13.3.5. Deleting a Specific Resource Type</a><=
/li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#rest-api-authz-application-types">2.1.13.4. Managin=
g Application Types</a><ul class=3D"nav nav-stacked hidden-print"><li><a hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#rest-api-authz-application-types-query">2.1.13.4.1. Querying Application T=
ypes</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#rest-api-authz-application-types-read">2.1.13.4.2. R=
eading a Specific Application Type</a></li></ul></li><li><a href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-aut=
hz-applications">2.1.13.5. Managing Policy Sets</a><ul class=3D"nav nav-sta=
cked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#rest-api-authz-applications-query">2.1.13.5.1.=
 Querying Policy Sets</a></li><li><a href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#rest-api-authz-applications-read">2=
.1.13.5.2. Reading a Specific Policy Set</a></li><li><a href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-a=
pplications-create">2.1.13.5.3. Creating Policy Sets</a></li><li><a href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest=
-api-authz-applications-update">2.1.13.5.4. Updating Policy Sets</a></li><l=
i><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/ind=
ex.html#rest-api-authz-applications-delete">2.1.13.5.5. Deleting Policy Set=
s</a></li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#rest-api-authz-policies">2.1.13.6. Managing P=
olicies</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-au=
thz-policies-query">2.1.13.6.1. Querying Policies</a></li><li><a href=3D"ht=
tps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-ap=
i-authz-policies-read">2.1.13.6.2. Reading a Specific Policy</a></li><li><a=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#rest-api-authz-policies-create">2.1.13.6.3. Creating Policies</a></li><=
li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#rest-api-authz-policies-update">2.1.13.6.4. Updating Policies</a><=
/li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#rest-api-authz-policies-delete">2.1.13.6.5. Deleting Policies=
</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#rest-api-authz-policies-copy-move-policies">2.1.13.6.6. =
Copying and Moving Policies</a></li></ul></li><li><a href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-manage-xac=
ml">2.1.13.7. Importing and Exporting XACML 3.0</a><ul class=3D"nav nav-sta=
cked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#xacml-export">2.1.13.7.1. Exporting from OpenA=
M to XACML</a></li><li><a href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#xacml-import">2.1.13.7.2. Importing from XACML=
 to OpenAM</a></li></ul></li><li><a href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#rest-api-authz-condition-types">2.1.=
13.8. Managing Environment Condition Types</a><ul class=3D"nav nav-stacked =
hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#rest-api-authz-condition-types-query">2.1.13.8.1. Q=
uerying Environment Condition Types</a></li><li><a href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-condit=
ion-types-read">2.1.13.8.2. Reading a Specific Environment Condition Type</=
a></li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#rest-api-authz-subject-types">2.1.13.9. Managing=
 Subject Condition Types</a><ul class=3D"nav nav-stacked hidden-print"><li>=
<a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index=
.html#rest-api-authz-subject-types-query">2.1.13.9.1. Querying Subject Cond=
ition Types</a></li><li><a href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#rest-api-authz-subject-types-read">2.1.13.9.2=
. Reading a Specific Subject Condition Type</a></li></ul></li><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-authz-subject-attributes">2.1.13.10. Managing Subject Attributes</a=
><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-subjec=
t-attributes-query">2.1.13.10.1. Querying Subject Attributes</a></li></ul><=
/li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#rest-api-authz-decision-combiners">2.1.13.11. Managing Decisi=
on Combiners</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"h=
ttps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-a=
pi-authz-decision-combiner-query">2.1.13.11.1. Querying Decision Combiners<=
/a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#rest-api-authz-decision-combiner-read">2.1.13.11.2. Readi=
ng a Specific Decision Combiner</a></li></ul></li></ul></li><li><a href=3D"=
https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-r=
est-oauth2-oidc">2.1.14. RESTful OAuth 2.0, OpenID Connect 1.0 and UMA 1.0 =
Services</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https=
://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-o=
auth2">2.1.14.1. OAuth 2.0</a><ul class=3D"nav nav-stacked hidden-print"><l=
i><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/ind=
ex.html#rest-api-oauth2-client-endpoints">2.1.14.1.1. OAuth 2.0 Client and =
Resource Server Endpoints</a></li><li><a href=3D"https://backstage.forgeroc=
k.com/docs/openam/13.5/dev-guide/index.html#rest-api-oauth2-device-flow">2.=
1.14.1.2. Using Endpoints for OAuth 2.0 Device Flow</a></li><li><a href=3D"=
https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-=
api-oauth2-resourceset-endpoint">2.1.14.1.3. OAuth 2.0 Resource Set Endpoin=
t</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/index.html#rest-api-oauth2-token-admin-endpoint">2.1.14.1.4. OAuth=
 2.0 Token Administration Endpoint</a></li><li><a href=3D"https://backstage=
.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-oauth2-client=
-admin-endpoint">2.1.14.1.5. OAuth 2.0 Client Administration Endpoint</a></=
li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#rest-api-openid-connect">2.1.14.2. OpenID Connect 1.=
0</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-openid-c=
onnect-discovery">2.1.14.2.1. Endpoints for Discovering OpenID Connect 1.0 =
Configuration</a></li><li><a href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#rest-api-openid-connect-dynamic-registratio=
n">2.1.14.2.2. Endpoints for Registering OpenID Connect 1.0 Clients</a></li=
><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/=
index.html#rest-api-openid-connect-authorization">2.1.14.2.3. Endpoints for=
 Performing OpenID Connect 1.0 Client Authorization</a></li><li><a href=3D"=
https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-=
api-openid-connect-session">2.1.14.2.4. Endpoints for Managing OpenID Conne=
ct 1.0 Sessions</a></li><li><a href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#rest-api-oidc-idtoken-validation">2.1.14.=
2.5. Endpoint for Validating OpenID Connect 1.0 ID Tokens</a></li><li><a hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#rest-api-oidc-stateless">2.1.14.2.6. Configuring Stateless OpenID Connect =
1.0 Tokens</a></li></ul></li><li><a href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#sec-rest-uma">2.1.14.3. User-Managed=
 Access (UMA)</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"=
https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-=
api-uma-well-known">2.1.14.3.1. Discovering UMA Configuration</a></li><li><=
a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#rest-api-uma-resource-set-registration">2.1.14.3.2. Managing UMA Resou=
rce Sets</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#rest-api-uma-policies">2.1.14.3.3. Managing UMA =
Policies</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#rest-api-uma-access-protected-resources">2.1.14.=
3.4. Accessing UMA Protected Resources</a></li></ul></li></ul></li><li><a h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#sec-rest-user-services">2.1.15. RESTful User Self-Service</a><ul class=3D=
"nav nav-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.c=
om/docs/openam/13.5/dev-guide/index.html#common-self-registration">2.1.15.1=
. Registering Users</a></li><li><a href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/dev-guide/index.html#common-forgotten-username">2.1.15.2. =
Retrieving Forgotten Usernames</a></li><li><a href=3D"https://backstage.for=
gerock.com/docs/openam/13.5/dev-guide/index.html#common-forgotten-password"=
>2.1.15.3. Replacing Forgotten Passwords</a></li><li><a href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-dashboard">=
2.1.15.4. Displaying Dashboard Applications</a></li><li><a href=3D"https://=
backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-devi=
ce-profile-reset">2.1.15.5. Resetting Device Profiles</a></li></ul></li><li=
><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#sec-rest-identity-realm-mgmt">2.1.16. RESTful Identity and Realm Man=
agement Services</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-crud-identity">2.1.16.1. Identity Management</a><ul class=3D"nav na=
v-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#rest-api-create-identity">2.1.16.1.1. Cre=
ating Identities</a></li><li><a href=3D"https://backstage.forgerock.com/doc=
s/openam/13.5/dev-guide/index.html#rest-api-read-identity">2.1.16.1.2. Read=
ing Identities</a></li><li><a href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#rest-api-update-identity">2.1.16.1.3. Upda=
ting Identities</a></li><li><a href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#rest-api-delete-identity">2.1.16.1.4. Del=
eting Identities</a></li><li><a href=3D"https://backstage.forgerock.com/doc=
s/openam/13.5/dev-guide/index.html#rest-api-query-identity">2.1.16.1.5. Lis=
ting Identities</a></li><li><a href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#rest-api-retrieve-identity-using-session-=
cookie">2.1.16.1.6. Retrieving Identities Using the Session Cookie</a></li>=
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#rest-api-change-password">2.1.16.1.7. Changing Passwords</a></li>=
</ul></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/index.html#rest-api-crud-realm">2.1.16.2. Realm Management</a><ul =
class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstage.for=
gerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-parameters-realm"=
>2.1.16.2.1. Default Parameters for Realms</a></li><li><a href=3D"https://b=
ackstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-creat=
e-realm">2.1.16.2.2. Creating Realms</a></li><li><a href=3D"https://backsta=
ge.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-read-realm"=
>2.1.16.2.3. Reading Realms</a></li><li><a href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#rest-api-list-realm">2.1.16.2=
.4. Listing Realms</a></li><li><a href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#rest-api-update-realm">2.1.16.2.5. Upd=
ating Realms</a></li><li><a href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#rest-api-delete-realm">2.1.16.2.6. Deleting =
Realms</a></li></ul></li></ul></li><li><a href=3D"https://backstage.forgero=
ck.com/docs/openam/13.5/dev-guide/index.html#sec-manage-scripts-rest">2.1.1=
7. RESTful Script Management</a><ul class=3D"nav nav-stacked hidden-print">=
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#rest-api-scripts-query">2.1.17.1. Querying Scripts</a></li><li><a=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#rest-api-scripts-read">2.1.17.2. Reading a Script</a></li><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-scripts-validate">2.1.17.3. Validating a Script</a></li><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-scripts-create">2.1.17.4. Creating a Script</a></li><li><a href=3D"=
https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-=
api-scripts-update">2.1.17.5. Updating a Script</a></li><li><a href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-=
scripts-delete">2.1.17.6. Deleting a Script</a></li></ul></li><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
ec-rest-api-recording">2.1.18. RESTful Troubleshooting Information Recordin=
g</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-records-=
start">2.1.18.1. Starting a Recording Event</a></li><li><a href=3D"https://=
backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-reco=
rds-get-status">2.1.18.2. Getting the Status of a Recording Event</a></li><=
li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#rest-api-records-stop">2.1.18.3. Stopping a Recording Event</a></l=
i></ul></li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#sec-sdk">2.2. Using the OpenAM Java SDK</a>=
<ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstage=
.forgerock.com/docs/openam/13.5/dev-guide/index.html#install-sdk-samples">2=
.2.1. Installing OpenAM Client SDK Samples</a></li><li><a href=3D"https://b=
ackstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#about-sdk">2.2=
.2. About the OpenAM Java SDK</a></li><li><a href=3D"https://backstage.forg=
erock.com/docs/openam/13.5/dev-guide/index.html#sec-authentication">2.2.3. =
Authenticating Using OpenAM Java SDK</a><ul class=3D"nav nav-stacked hidden=
-print"><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#encoding-pwds">2.2.3.1. Encoding Passwords and Password R=
eset Questions and Answers</a></li></ul></li><li><a href=3D"https://backsta=
ge.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-session">2.2.4. =
Handling Single Sign-On Using OpenAM Java SDK</a><ul class=3D"nav nav-stack=
ed hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#session-receiving-notifications">2.2.4.1. Receiv=
ing Notifications</a></li></ul></li><li><a href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#sec-policy-decisions">2.2.5. =
Requesting Policy Decisions Using OpenAM Java SDK</a></li><li><a href=3D"ht=
tps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-xac=
ml">2.2.6. Requesting a XACML Policy Decision Using OpenAM Java SDK</a></li=
></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#sec-csdk">2.3. Using the OpenAM C SDK</a></li></ul></l=
i><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#chap-customizing">3. Customizing OpenAM</a><ul class=3D"nav nav=
-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#sec-custom-attr">3.1. Customizing Profile =
Attributes</a></li><li><a href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#sec-oauth2-scopes">3.2. Customizing OAuth 2.0 =
Scope Handling</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#desi=
gn-oauth2-scopes-plugin">3.2.1. Designing an OAuth 2.0 Scope Validator Plug=
in</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#build-oauth2-scopes-plugin">3.2.2. Building the OAuth =
2.0 Scope Validator Sample Plugin</a></li><li><a href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#configure-oauth2-scopes=
-plugin">3.2.3. Configuring OpenAM to Use the Plugin</a></li><li><a href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#try-=
oauth2-scopes-plugin">3.2.4. Trying the Sample Plugin</a></li></ul></li><li=
><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#sec-auth-spi">3.3. Creating a Custom Authentication Module</a><ul cl=
ass=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#about-custom-auth-module">3.=
3.1. About the Sample Authentication Module</a></li><li><a href=3D"https://=
backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#properties-sa=
mple-auth-module">3.3.2. Sample Auth Properties</a></li><li><a href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#callbacks=
-file-sample-auth-module">3.3.3. Sample Auth Callbacks</a></li><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#a=
uthentication-logic-sample-auth-module">3.3.4. The Sample Authentication Lo=
gic</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#principal-sample-auth-module">3.3.5. The Sample Auth =
Principal</a></li><li><a href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#service-conf-sample-auth-module">3.3.6. The Sam=
ple Auth Service Configuration</a></li><li><a href=3D"https://backstage.for=
gerock.com/docs/openam/13.5/dev-guide/index.html#build-config-sample-auth-m=
odule">3.3.7. Building and Installing the Sample Auth Module</a><ul class=
=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstage.forgeroc=
k.com/docs/openam/13.5/dev-guide/index.html#building-sample-auth-module">3.=
3.7.1. Building the Module</a></li><li><a href=3D"https://backstage.forgero=
ck.com/docs/openam/13.5/dev-guide/index.html#installing-sample-auth-module"=
>3.3.7.2. Installing the Module</a></li></ul></li><li><a href=3D"https://ba=
ckstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#configuring-tes=
ting-sample-auth-module">3.3.8. Configuring &amp; Testing the Sample Auth M=
odule</a></li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#sec-custom-quota-exhaustion-action">3.4. =
Customizing Session Quota Exhaustion Actions</a><ul class=3D"nav nav-stacke=
d hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#create-custom-quota-exhaustion-action">3.4.1. Cre=
ating &amp; Installing a Custom Session Quota Exhaustion Action</a></li><li=
><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#list-custom-quota-exhaustion-actions">3.4.2. Listing Session Quota E=
xhaustion Actions</a></li><li><a href=3D"https://backstage.forgerock.com/do=
cs/openam/13.5/dev-guide/index.html#remove-custom-quota-exhaustion-actions"=
>3.4.3. Removing a Session Quota Exhaustion Action</a></li></ul></li><li><a=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#sec-policy-spi">3.5. Customizing Policy Evaluation</a><ul class=3D"nav =
nav-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/do=
cs/openam/13.5/dev-guide/index.html#about-sample-policy-plugins">3.5.1. Abo=
ut the Sample Plugin</a></li><li><a href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#build-a-sample-plugin">3.5.2. Buildi=
ng the Sample Plugin</a></li><li><a href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#add-custom-policy-impl-to-existing-a=
pps">3.5.3. Adding Custom Policy Implementations to Existing Policy Sets</a=
></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-g=
uide/index.html#trying-sample-policy-plugin">3.5.4. Trying the Sample Subje=
ct and Environment Conditions</a></li><li><a href=3D"https://backstage.forg=
erock.com/docs/openam/13.5/dev-guide/index.html#trying-custom-policy-resour=
ce-attributes">3.5.5. Trying the Sample Resource Attributes</a></li><li><a =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#extend-ssoadm-classpath">3.5.6. Extending the ssoadm Classpath</a></li><=
/ul></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#sec-identity-repo-spi">3.6. Customizing Identity Data St=
orage</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://=
backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#about-idrepo-=
plugin">3.6.1. About the Identity Repository Plugin</a><ul class=3D"nav nav=
-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#idrepo-plugin-inheritance">3.6.1.1. IdRepo=
 Inheritance</a></li><li><a href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#idrepo-plugin-lifecycle">3.6.1.2. IdRepo Lif=
ecycle</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#idrepo-plugin-capabilities">3.6.1.3. IdRepo Plugin=
 Capabilities</a></li></ul></li><li><a href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#idrepo-plugin-implementation">3.6=
.2. Identity Repository Plugin Implementation</a></li><li><a href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#idrepo-plug=
in-deployment">3.6.3. Identity Repository Plugin Deployment</a></li></ul></=
li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#chap-extending">4. Extending OpenAM</a><ul class=3D"=
nav nav-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#sec-post-auth">4.1. Creating a Post=
 Authentication Plugin</a><ul class=3D"nav nav-stacked hidden-print"><li><a=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#design-post-authentication-plugin">4.1.1. Designing Your Post Authentic=
ation Plugin</a></li><li><a href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#build-post-authentication-plugin">4.1.2. Bui=
lding Your Sample Post Authentication Plugin</a></li><li><a href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#configure-po=
st-authentication-plugin">4.1.3. Configuring Your Post Authentication Plugi=
n</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/index.html#test-post-authentication-plugin">4.1.4. Testing Your Po=
st Authentication Plugin</a></li></ul></li><li><a href=3D"https://backstage=
.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-uma-extension-poin=
ts">4.2. Extending UMA Workflow with Extension Points</a><ul class=3D"nav n=
av-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/doc=
s/openam/13.5/dev-guide/index.html#ext-resource-registration">4.2.1. Resour=
ce Set Registration Extension Point</a></li><li><a href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#ext-permission-reques=
ts">4.2.2. Permission Request Extension Point</a></li><li><a href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#ext-authori=
zation-requests">4.2.3. Authorization Request Extension Point</a></li><li><=
a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#ext-resource-delegation">4.2.4. Resource Sharing Extension Point</a></=
li></ul></li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#chap-scripting">5. Scripting OpenAM</a><ul=
 class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstage.fo=
rgerock.com/docs/openam/13.5/dev-guide/index.html#script-env">5.1. The Scri=
pting Environment</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
cript-engine-security">5.1.1. Security</a></li><li><a href=3D"https://backs=
tage.forgerock.com/docs/openam/13.5/dev-guide/index.html#script-engine-thre=
ad-pool">5.1.2. Thread Pools</a></li></ul></li><li><a href=3D"https://backs=
tage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api">5.2=
. The Scripting API</a><ul class=3D"nav nav-stacked hidden-print"><li><a hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#scripting-api-global">5.2.1. Global API Functionality</a><ul class=3D"nav =
nav-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/do=
cs/openam/13.5/dev-guide/index.html#scripting-api-global-http-client">5.2.1=
.1. Accessing HTTP Services</a></li><li><a href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#scripting-api-global-logger">=
5.2.1.2. Debug Logging</a></li></ul></li><li><a href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api-authn">5.2=
.2. Authentication API Functionality</a><ul class=3D"nav nav-stacked hidden=
-print"><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#scripting-api-authn-state">5.2.2.1. Accessing Authenticat=
ion State</a></li><li><a href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#scripting-api-authn-id-repo">5.2.2.2. Accessing=
 Profile Data</a></li><li><a href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#scripting-api-authn-client-data">5.2.2.3. A=
ccessing Client-Side Script Output Data</a></li><li><a href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api-aut=
hn-request-data">5.2.2.4. Accessing Request Data</a></li></ul></li><li><a h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#scripting-api-authz">5.2.3. Authorization API Functionality</a><ul class=
=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstage.forgeroc=
k.com/docs/openam/13.5/dev-guide/index.html#scripted-api-authz-state">5.2.3=
.1. Accessing Authorization State</a></li><li><a href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api-authz-id-=
repo">5.2.3.2. Accessing Profile Data</a></li><li><a href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api-authz=
-session">5.2.3.3. Accessing Session Data</a></li><li><a href=3D"https://ba=
ckstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api-a=
uthz-response">5.2.3.4. Setting Authorization Responses</a></li></ul></li><=
li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#scripting-api-oidc-claims">5.2.4. OIDC Claims API Functionality</a=
><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripted-api-oidc-req=
uest">5.2.4.1. Accessing OpenID Connect Requests</a></li></ul></li></ul></l=
i><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#sec-scripting-default-scripts">5.3. Using the Default Scripts</=
a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backsta=
ge.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-scripted-auth-mo=
dule">5.3.1. Default Server-side Authentication Script</a><ul class=3D"nav =
nav-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/do=
cs/openam/13.5/dev-guide/index.html#sec-scripted-auth-module-prepare">5.3.1=
.1. Preparing OpenAM</a></li><li><a href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#scripted-auth-module-try-it-out">5.3=
.1.2. Trying the Default Server-side Authentication Script</a></li></ul></l=
i><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#sec-scripted-policy-condition">5.3.2. Default Policy Condition =
Script</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-scripted=
-policy-condition-prepare">5.3.2.1. Preparing OpenAM</a></li><li><a href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-=
scripted-policy-condition-evaluate">5.3.2.2. Trying the Default Policy Cond=
ition Script</a></li></ul></li><li><a href=3D"https://backstage.forgerock.c=
om/docs/openam/13.5/dev-guide/index.html#sec-scripted-oidc-claims">5.3.3. D=
efault OIDC Claims Script</a><ul class=3D"nav nav-stacked hidden-print"><li=
><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#sec-scripted-oidc-claims-prepare">5.3.3.1. Preparing OpenAM</a></li>=
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#scripted-oidc-claims-try-it-out">5.3.3.2. Trying the Default OIDC=
 Claims Script</a></li></ul></li></ul></li></ul></li><li><a href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#chap-fedlets=
">6. Building SAML v2.0 Service Providers With Fedlets</a><ul class=3D"nav =
nav-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/do=
cs/openam/13.5/dev-guide/index.html#sec-fedlet-java">6.1. Using Fedlets in =
Java Web Applications</a><ul class=3D"nav nav-stacked hidden-print"><li><a =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#create-install-java-fedlet">6.1.1. Creating and Installing a Java Fedlet=
</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backs=
tage.forgerock.com/docs/openam/13.5/dev-guide/index.html#generating-fedlet-=
configuration-idp">6.1.1.1. Generating the Fedlet Configuration on the Iden=
tity Provider</a></li><li><a href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#installing-fedlet-sp">6.1.1.2. Installing a=
nd Configuring the Fedlet on the Service Provider</a></li><li><a href=3D"ht=
tps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#testing=
-fedlet-sso-slo">6.1.1.3. Testing Fedlet Single Sign-on and Single Logout</=
a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-=
guide/index.html#fedlet-attribute-query">6.1.1.4. Querying an Attribute Aut=
hority</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#fedlet-xacml-pdp">6.1.1.5. Querying an XACML Polic=
y Decision Point</a></li></ul></li><li><a href=3D"https://backstage.forgero=
ck.com/docs/openam/13.5/dev-guide/index.html#fedlet-signing-encryption">6.1=
.2. Enabling Signing and Encryption in a Fedlet</a></li><li><a href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#customize=
-java-fedlet">6.1.3. Customizing a Java Fedlet</a><ul class=3D"nav nav-stac=
ked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#fedlet-perform-sso">6.1.3.1. Performing Single =
Sign-On</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#fedlet-perform-slo">6.1.3.2. Performing Single Lo=
gout</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#fedlet-perform-attr-query">6.1.3.3. Performing Attri=
bute Queries</a></li><li><a href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#fedlet-perform-xacml-query">6.1.3.4. Perform=
ing XACML Queries</a></li></ul></li></ul></li><li><a href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-fedlet-unconfig=
ured">6.2. Configuring Java Fedlets By Hand</a><ul class=3D"nav nav-stacked=
 hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#unconfigured-fedlet-conf">6.2.1. Java Fedlet Layou=
t</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/index.html#unconfigured-fedlet-properties">6.2.2. Configuring Java=
 Fedlet Properties</a></li><li><a href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-cot">6.2.3. Config=
uring Circles of Trust</a></li><li><a href=3D"https://backstage.forgerock.c=
om/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-idp">6.2.4. Co=
nfiguring the Identity Providers</a><ul class=3D"nav nav-stacked hidden-pri=
nt"><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#unconfigured-fedlet-idp-standard">6.2.4.1. Identity Provider =
Standard XML</a></li><li><a href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#unconfigured-fedlet-idp-extended">6.2.4.2. I=
dentity Provider Extended XML</a></li><li><a href=3D"https://backstage.forg=
erock.com/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-idp-ext=
ended-idpssoconfig">6.2.4.3. Identity Provider Extended XML: IDPSSOConfig S=
ettings</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#unconfigured-fedlet-idp-extended-attributeAuthori=
tyConfig">6.2.4.4. Identity Provider Extended XML: Attribute Authority Conf=
iguration Settings</a></li><li><a href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-idp-extended-xacml=
PdpConfig">6.2.4.5. Identity Provider Extended XML: XACML PDP Configuration=
</a></li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#unconfigured-fedlet-sp">6.2.5. Configuring the=
 Service Providers</a><ul class=3D"nav nav-stacked hidden-print"><li><a hre=
f=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#=
unconfigured-fedlet-sp-standard">6.2.5.1. Service Provider Standard XML</a>=
<ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstage=
.forgerock.com/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp=
-standard-sso">6.2.5.1.1. Single Sign-On and Logout: SPSSODescriptor Elemen=
t</a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/index.html#unconfigured-fedlet-sp-standard-attr-query">6.2.5.1.2. =
Attribute Queries: RoleDescriptor Element</a></li><li><a href=3D"https://ba=
ckstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#unconfigured-fe=
dlet-sp-standard-xacml">6.2.5.1.3. XACML Requests: XACMLAuthzDecisionQueryD=
escriptor Element</a></li></ul></li><li><a href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp-extend=
ed">6.2.5.2. Service Provider Extended XML</a><ul class=3D"nav nav-stacked =
hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#unconfigured-fedlet-sp-extended-spssoconfig">6.2.5.=
2.1. Service Provider Extended XML: SPSSOConfig Settings</a></li><li><a hre=
f=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#=
unconfigured-fedlet-sp-extended-attributequeryconfig">6.2.5.2.2. Service Pr=
ovider Extended XML: AttributeQueryConfig Settings</a></li><li><a href=3D"h=
ttps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#unconf=
igured-fedlet-sp-extended-xacmlauthzdecisionqueryconfig">6.2.5.2.3. Service=
 Provider Extended XML: XACMLAuthzDecisionQueryConfig Settings</a></li></ul=
></li></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#unconfigured-fedlet-embedding">6.2.6. Embedding t=
he Java Fedlet in a Web Application</a></li></ul></li></ul></li><li><a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#c=
hap-sts">7. Working With the Security Token Service</a><ul class=3D"nav nav=
-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#sts-publish">7.1. Publishing STS Instances=
</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backs=
tage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-publish-servic=
e">7.1.1. The Publish Service</a></li><li><a href=3D"https://backstage.forg=
erock.com/docs/openam/13.5/dev-guide/index.html#sts-publish-rest">7.1.2. Pu=
blishing REST STS Instances</a></li><li><a href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#sts-publish-soap">7.1.3. Publ=
ishing SOAP STS Instances</a></li></ul></li><li><a href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-consume">7.2. Con=
suming STS Instances</a><ul class=3D"nav nav-stacked hidden-print"><li><a h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#sts-consume-rest">7.2.1. Consuming REST STS Instances</a><ul class=3D"nav=
 nav-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#sts-consume-rest-endpoint">7.2.1.1. RE=
ST STS Instance Endpoint</a></li><li><a href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#sts-consume-json-payload">7.2.1.=
2. JSON Representation of Token Transformations</a></li><li><a href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-consu=
me-rest-cli">7.2.1.3. Command-Line Example</a></li><li><a href=3D"https://b=
ackstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-consume-re=
st-programmatic">7.2.1.4. Java Example</a></li></ul></li><li><a href=3D"htt=
ps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-cons=
ume-soap">7.2.2. Consuming SOAP STS Instances</a><ul class=3D"nav nav-stack=
ed hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#sts-consume-soap-endpoint">7.2.2.1. SOAP STS Ins=
tance URL</a></li><li><a href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#sts-consume-soap-messages">7.2.2.2. Consuming S=
OAP STS Instances Using SOAP Messages</a></li><li><a href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-consume-soap-cl=
ient-sdk">7.2.2.3. Consuming SOAP STS Instances Using the OpenAM SOAP STS C=
lient SDK</a><ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-consu=
me-soap-client-sdk-about">7.2.2.3.1. About the SOAP STS Client SDK</a></li>=
<li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#sts-consume-soap-client-sdk-build">7.2.2.3.2. Building a SOAP STS=
 Client SDK .jar File</a></li></ul></li></ul></li></ul></li><li><a href=3D"=
https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-q=
uery-validate-cancel">7.3. Querying, Validating, and Canceling Tokens</a><u=
l class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#sts-query-validate-cance=
l-sts-tokengen">7.3.1. Invoking the sts-tokengen Endpoint</a><ul class=3D"n=
av nav-stacked hidden-print"><li><a href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#sts-query-validate-cancel-sts-tokeng=
en-query">7.3.1.1. Querying Tokens</a></li><li><a href=3D"https://backstage=
.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-query-validate-can=
cel-sts-tokengen-cancel">7.3.1.2. Cancelling Tokens</a></li></ul></li><li><=
a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#query-validate-cancel-rest-sts-instance">7.3.2. Validating and Cancell=
ing Tokens by Invoking a REST STS Instance</a></li><li><a href=3D"https://b=
ackstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#query-validate=
-cancel-soap-sts-instance">7.3.3. Validating and Cancelling Tokens by Invok=
ing a SOAP STS Instance</a></li></ul></li><li><a href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-custom-token-types"=
>7.4. Extending STS to Support Custom Token Types</a><ul class=3D"nav nav-s=
tacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#sts-consume-rest-custom-validator">7.4.1. De=
veloping Custom Token Type Validator Classes</a></li><li><a href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-consume-=
rest-custom-provider">7.4.2. Developing Custom Token Type Provider Classes<=
/a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#sts-consume-rest-custom-using">7.4.3. Using Custom Token =
Type Validators and Providers</a></li></ul></li></ul></li><li><a href=3D"ht=
tps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#chap-sa=
e">8. Using Secure Attribute Exchange</a><ul class=3D"nav nav-stacked hidde=
n-print"><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#sae-install-prerequisites">8.1. Installing the Samples</=
a></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-=
guide/index.html#sae-security-prerequisites">8.2. Preparing to Secure SAE C=
ommunications</a></li><li><a href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#sae-secure-idp">8.3. Securing the Identity =
Provider Side</a></li><li><a href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#sae-secure-sp">8.4. Securing the Service Pr=
ovider Side</a></li><li><a href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#sae-trying-it-out">8.5. Trying It Out</a></li=
></ul></li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#appendix-deprecated-apis">A. Deprecated REST APIs</a><=
ul class=3D"nav nav-stacked hidden-print"><li><a href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#deprecated-session-apis=
-auth">A.1. Deprecated Session Information APIs</a></li><li><a href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#deprecate=
d-self-service">A.2. Deprecated Self-Service APIs</a><ul class=3D"nav nav-s=
tacked hidden-print"><li><a href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#deprecated-rest-api-self-registration">A.2.1=
. Legacy User Self-Registration</a></li><li><a href=3D"https://backstage.fo=
rgerock.com/docs/openam/13.5/dev-guide/index.html#deprecated-rest-api-passw=
ord-reset">A.2.2. Legacy Forgotten Password Reset</a></li></ul></li></ul></=
li><li><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#index">Index</a></li></ul></div></div><div id=3D"doc-content" =
class=3D"col-sm-9"><div id=3D"doc-content-abstract"><p>Guide to developing =
OpenAM client applications and service providers.
   OpenAM provides open source Authentication, Authorization, Entitlement a=
nd
   Federation software.</p></div><div lang=3D"" class=3D"preface" id=3D"pre=
face"><div class=3D"titlepage"><div><div><h1 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#preface">Preface</a></h1></div></div></div><p>
  This guide demonstrates how to handle sessions to permit single sign-on a=
nd
  single logout in OpenAM client applications. This guide further
  demonstrates how to use the OpenAM APIs including both APIs for client
  applications, and also SPIs for authentication, policy, service managemen=
t,
  delegation, and identity storage. Finally, this guide demonstrates how to
  write your own web policy agent.
 </p><div class=3D"section" id=3D"who-should-use"><div class=3D"titlepage">=
<div><div><h2 class=3D"title" style=3D"clear: both"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#who-should-use">1.&nbsp;Who Should Use This Guide</a></h2></div></div></=
div><p>
   This guide is written for developers who adapt client applications
   to use OpenAM access management capabilities. It is also written for
   designers and developers extending and integrating OpenAM services for
   their organizations.
  </p><p>
   You do not need to be an OpenAM wizard to learn something from
   this guide, though a background in access management and developing
   web applications or developing for web and application servers can help.
   You can nevertheless get started with this guide, and then learn more as=
 you
   go along.
  </p></div><div lang=3D"en" class=3D"section" id=3D"formatting-conventions=
"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: bo=
th"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#formatting-conventions">2.&nbsp;Formatting Co=
nventions</a></h2></div></div></div><p>
  Most examples in the documentation are created in GNU/Linux or Mac OS X
  operating environments.

  If distinctions are necessary between operating environments,
  examples are labeled with the operating environment name in parentheses.

  To avoid repetition file system directory names are often given
  only in UNIX format as in <code class=3D"filename">/path/to/server</code>=
,
  even if the text applies to <code class=3D"filename">C:\path\to\server</c=
ode> as well.
 </p><p>
  Absolute path names usually begin with the placeholder
  <code class=3D"filename">/path/to/</code>.

  This path might translate to <code class=3D"filename">/opt/</code>,
  <code class=3D"filename">C:\Program Files\</code>, or somewhere else on y=
our system.
 </p><p>
  Command-line, terminal sessions are formatted as follows:
 </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy com=
mand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$=
 <strong class=3D"userinput">echo $JAVA_HOME</strong>
<em class=3D"computeroutput">/path/to/jdk</em></pre><p>
  Command output is sometimes formatted for narrower, more readable output
  even though formatting parameters are not shown in the command.
 </p><p>
  Program listings are formatted as follows:
 </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy cod=
e to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"codelisting prettyprint java hljs=
"><span class=3D"hljs-class"><span class=3D"hljs-keyword">class</span> <spa=
n class=3D"hljs-title">Test</span> </span>{
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">static</span> <span class=3D"hljs-keyword">v=
oid</span> <span class=3D"hljs-title">main</span><span class=3D"hljs-params=
">(String [] args)</span>  </span>{
        System.out.println(<span class=3D"hljs-string">"This is a program l=
isting."</span>);
    }
}</pre></div><div lang=3D"en" class=3D"section" id=3D"accessing-doc-online"=
><div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: bot=
h"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#accessing-doc-online">3.&nbsp;Accessing Docume=
ntation Online</a></h2></div></div></div><div class=3D"itemizedlist"><p>
   ForgeRock publishes comprehensive documentation online:
  </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li clas=
s=3D"listitem"><p>
    The ForgeRock
    <a class=3D"link" href=3D"https://backstage.forgerock.com/knowledge/kb"=
 target=3D"_blank">Knowledge Base</a>
    offers a large and increasing number of up-to-date, practical articles
    that help you deploy and manage ForgeRock software.
   </p><p>
    While many articles are visible to community members,
    ForgeRock customers have access to much more,
    including advanced information for customers using ForgeRock software
    in a mission-critical capacity.
   </p></li><li class=3D"listitem"><p>
    ForgeRock product documentation, such as this document,
    aims to be technically accurate and complete
    with respect to the software documented.
    It is visible to everyone and covers all product features
    and examples of how to use them.
   </p></li></ul></div></div><div lang=3D"en" class=3D"section" id=3D"joini=
ng-the-community"><div class=3D"titlepage"><div><div><h2 class=3D"title" st=
yle=3D"clear: both"><a class=3D"self-link" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#joining-the-community">4.&nbs=
p;Using the ForgeRock.org Site</a></h2></div></div></div><p>
  The
  <a class=3D"link" href=3D"https://forgerock.org/" target=3D"_blank">Forge=
Rock.org site</a>
  has links to source code for ForgeRock open source software,
  as well as links to the ForgeRock forums and technical blogs.
 </p><p>
  If you are a <span class=3D"emphasis"><em>ForgeRock customer</em></span>,
  raise a support ticket instead of using the forums.
  ForgeRock support professionals will get in touch to help you.
 </p></div><div lang=3D"en" class=3D"section" id=3D"sec-support-contact"><d=
iv class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both">=
<a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#sec-support-contact">5.&nbsp;Getting Support and =
Contacting ForgeRock</a></h2></div></div></div><p>
  ForgeRock provides support services, professional services, training thro=
ugh
  ForgeRock University, and partner services to assist you in setting up an=
d
  maintaining your deployments.
  For a general overview of these services, see
  <a class=3D"link" href=3D"https://www.forgerock.com/" target=3D"_blank">h=
ttps://www.forgerock.com</a>.
 </p><p>
  ForgeRock has staff members around the globe who
  support our international customers and partners.
  For details, visit
  <a class=3D"link" href=3D"https://www.forgerock.com/" target=3D"_blank">h=
ttps://www.forgerock.com</a>,
  or send an email to ForgeRock at
  <a class=3D"link" href=3D"mailto:info@forgerock.com" target=3D"_blank">in=
fo@forgerock.com</a>.
 </p></div></div><div lang=3D"" class=3D"chapter" id=3D"chap-api-overview">=
<div class=3D"titlepage"><div><div><h1 class=3D"title"><a class=3D"self-lin=
k" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index=
.html#chap-api-overview">Chapter&nbsp;1.&nbsp;OpenAM APIs and Protocols</a>=
</h1></div></div></div><p>
  Although policy agents and standards support make it possible for
  applications to use OpenAM for access management without changing your
  code, some deployments require tighter integration, or direct use of
  supported protocols and OpenAM APIs.
 </p><p>
  OpenAM supports a range of protocols and APIs that allow you not
  only to define specifically how access is managed in your client
  applications, but also to extend OpenAM capabilities to meet even
  those deployment requirements not yet covered in OpenAM.
 </p><p>
  This short chapter presents an overview of the APIs and protocols that
  OpenAM supports.
 </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-openam-apis-o=
verview"><a class=3D"fancybox cboxElement" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/images/openam-apis-overview.png"><img cl=
ass=3D"img-responsive center-block" data-toggle=3D"tooltip" src=3D"https://=
backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_openam-apis=
-overview.png" align=3D"middle" height=3D"525" alt=3D"High-level view of Op=
enAM APIs and SPIs" title=3D"" data-original-title=3D"OpenAM APIs and SPIs =
are shown in this diagram in orange, and
   briefly described in the following sections."></a></div><p>
  This guide primarily covers the OpenAM client APIs and SPIs, with an
  emphasis on the Java APIs.
 </p><div class=3D"section" id=3D"openam-apis"><div class=3D"titlepage"><di=
v><div><h2 class=3D"title" style=3D"clear: both"><a class=3D"self-link" hre=
f=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#=
openam-apis">1.1.&nbsp;OpenAM APIs</a></h2></div></div></div><p>
   OpenAM provides client application programming interfaces for a variety
   of needs.
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     The OpenAM Java APIs provided through the OpenAM Java SDK let your
     Java and Java EE applications call on OpenAM for authentication, and
     authorization in both OpenAM and federated environments.</p><p>Detaile=
d reference information is provided in the <a class=3D"link" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/apidocs" target=3D"_blank"><em c=
lass=3D"citetitle">OpenAM Java SDK API Specification</em></a>.
    </p></li><li class=3D"listitem"><p>
     The C SDK also provides APIs for native applications, such as new
     web server policy agents. The C SDK is delivered with OpenAM for Linux=
,
     Solaris, and Windows platforms.
    </p></li><li class=3D"listitem"><p>
     OpenAM exposes a RESTful API that can return JSON or XML over HTTP,
     allowing you to access authentication, authorization, and identity
     services from your web applications using REST clients in the language=
 of
     your choice.
    </p></li></ul></div></div><div class=3D"section" id=3D"openam-spis"><di=
v class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#openam-spis">1.2.&nbsp;OpenAM SPIs</a></h2></div><=
/div></div><p>
   OpenAM provides Java based service provider interfaces to let you
   extend services for the requirements of your particular deployment.
  </p><div class=3D"itemizedlist"><p>
    Some examples of the plugins you can write follow in the list below.
    This guide demonstrates how to implement such plugins.
   </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li cla=
ss=3D"listitem"><p>
     Custom OAuth 2.0 scopes plugins define how OpenAM, when playing the ro=
le
     of authorization server, handles scopes, including which token informa=
tion
     to return for scopes set when authorization was granted.
    </p></li><li class=3D"listitem"><p>
     Custom authentication plugins let OpenAM authenticate users against
     a new authentication service or an authentication service specific to =
your
     deployment
    </p></li><li class=3D"listitem"><p>
     Post authentication plugins perform additional processing at the end
     of the authentication process, but before the subject is authenticated=
.
     Post authentication plugins can, for example, store information about =
the
     authentication in the user's profile, or call another system for audit
     logging purposes.
    </p></li><li class=3D"listitem"><p>
     Policy evaluation plugins implement new policy conditions, send
     attributes from the user profile as part of a policy response, extend =
the
     definition of the subjects to whom the policy applies, or customize ho=
w
     policy management is delegated.
    </p></li><li class=3D"listitem"><p>
     Identity repository plugins let OpenAM employ a new or custom user
     data store, other than a directory server or JDBC-accessible
     database.
    </p></li></ul></div></div><div class=3D"section" id=3D"openam-ipv"><div=
 class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a=
 class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#openam-ipv">1.3.&nbsp;OpenAM, IPv4, and IPv6</a></h=
2></div></div></div><p>
   OpenAM provides functionality for IPv4, IPv6, and a hybrid of the two.
   While the majority of the interaction is done on the backend, there are =
a few
   places where the GUI requires some inputs, such as setting up policy con=
ditions.
   These areas follow the same standard that applies to IPv4 and IPv6. IPv4=
 uses
   a 32-bit integer value, with a dot-decimal system. IPv6 uses a hexadecim=
al
   system, and the eight groups of hexadecimal digits are separated by a co=
lon.
  =20
  </p></div></div><div lang=3D"" class=3D"chapter" id=3D"chap-client-dev"><=
div class=3D"titlepage"><div><div><h1 class=3D"title"><a class=3D"self-link=
" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#chap-client-dev">Chapter&nbsp;2.&nbsp;Developing Client Applications</=
a></h1></div></div></div><p>
  Client applications access OpenAM services for authentication,
  authorization, and single sign-on/single logout through the use of
  sessions. Client applications can also be allowed to manage authorization
  policies.
 </p><p>
  Client application integration with OpenAM can be coupled loosely,
  as in the case of an application running in a web server with an OpenAM
  policy agent to handle interaction with OpenAM service, more directly,
  as in the case where the client interacts with OpenAM over protocol, or
  tightly, as in the case of an application using the OpenAM Java or C API
  to interact with OpenAM services.
 </p><p>
  This chapter covers client interaction with OpenAM using OpenAM APIs
  over supported protocols.
 </p><div class=3D"section" id=3D"sec-rest"><div class=3D"titlepage"><div><=
div><h2 class=3D"title" style=3D"clear: both"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
ec-rest">2.1.&nbsp;Using the REST API</a></h2></div></div></div><p>
  This section shows how to use the OpenAM RESTful interfaces for direct
  integration between web client applications and OpenAM.
 </p><div class=3D"section" id=3D"about-openam-rest-api"><div class=3D"titl=
epage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#about-openam=
-rest-api">2.1.1.&nbsp;About the RESTful APIs</a></h3></div></div></div><p>
   <a class=3D"link" href=3D"http://en.wikipedia.org/wiki/Representational_=
state_transfer" target=3D"_blank">Representational State Transfer</a> (REST=
) is an architectural style
   that sets certain constraints for designing and building
   large-scale distributed hypermedia systems.
  </p><p>
   As an architectural style, REST has very broad applications.
   The designs of both HTTP 1.1 and URIs follow RESTful principles.
   The World Wide Web is no doubt the largest and best known REST applicati=
on.
   Many other web services also follow the REST architectural style.
   Examples include OAuth 2.0, OpenID Connect 1.0, and User-Managed Access
   (UMA) 1.0.
  </p><p>
   ForgeRock Common REST (CREST) applies RESTful principles
   to define common verbs for HTTP-based APIs that access web resources
   and collections of web resources.
  </p><p>
   Native OpenAM REST APIs in version 11.0.0 and later use the CREST verbs.
   (In contrast, OAuth 2.0, OpenID Connect 1.0 and UMA 1.0 APIs follow thei=
r
   respective standards.)
   APIs covered
   in <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#appendix-deprecated-apis" class=3D"link">Deprecated
   REST APIs</a> predate CREST,
   do not use the CREST verbs, and are deprecated
   in OpenAM 13.5.2-15.
  </p><p>
   When using a CREST API, you use the common verbs as query string paramet=
ers
   in resource and resource collection URIs.
  </p><div class=3D"variablelist"><p>
    CREST APIs use these verbs:
   </p><dl class=3D"variablelist"><dt><span class=3D"term">create</span></d=
t><dd><p>
      Add a new resource.
     </p><p>
      Create maps to HTTP POST (or PUT).
     </p></dd><dt><span class=3D"term">read</span></dt><dd><p>
      Retrieve a single resource.
     </p><p>
      Read maps to HTTP GET.
     </p></dd><dt><span class=3D"term">update</span></dt><dd><p>
      Replace an existing resource.
     </p><p>
      Update maps to HTTP PUT.
     </p></dd><dt><span class=3D"term">delete</span></dt><dd><p>
      Remove an existing resource.
     </p><p>
      Delete maps to HTTP DELETE.
     </p></dd><dt><span class=3D"term">patch</span></dt><dd><p>
      Modify part of an existing resource
     </p><p>
      Patch maps to HTTP PATCH.
     </p></dd><dt><span class=3D"term">_action</span></dt><dd><p>
      Perform a predefined action.
     </p><p>
      Action maps to HTTP POST.
     </p><p>
      The generic <code class=3D"literal">_action</code> verb extends the A=
PI's capabilities
      where none of the other standard CREST verbs fit,
      as in <code class=3D"literal">_action=3Dlogout</code>.
     </p></dd><dt><span class=3D"term">query</span></dt><dd><p>
      Search a collection of resources.
     </p><p>
      Query maps to HTTP GET.
     </p></dd></dl></div><p>
   <acronym class=3D"acronym">CRUDPAQ</acronym> is an acronym for the verbs=
.
   Notice that reserved words in CREST, such as the verbs,
   start with underscores (<code class=3D"literal">_</code>).
  </p><p>
   In CREST, you can address resources in collections of resources
   by their unique identifiers, their IDs.
   IDs are exposed in the resource URIs
   as in <code class=3D"literal">/users/<em class=3D"replaceable">id</em></=
code>
   and <code class=3D"literal">/groups/<em class=3D"replaceable">id</em></c=
ode>.
   The ID is also in the <code class=3D"literal">_id</code> field of the re=
source.
  </p><p>
   In CREST, resources are versioned using revision numbers.
   A revision is specified in the resource's <code class=3D"literal">_rev</=
code> field.
   Revisions make it possible to figure out whether to apply changes
   without resource locking and without distributed transactions.
  </p><p>
   In CREST, you can explicitly request API versions.
   This means that OpenAM can continue to support older API versions
   as well as newer API versions as developers migrate their applications
   to take advantage of capabilities provided by newer APIs.
  </p><p>
   Interface Stability: <a href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/admin-guide/index.html#interface-stability" class=3D"olink">Evolvi=
ng</a>
  </p><p>
   OpenAM offers RESTful APIs for access and identity management as follows=
:
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"htt=
ps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api=
-auth" title=3D"2.1.5.&nbsp;Authentication and Logout">Authentication and L=
ogout</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https=
://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-t=
okens" title=3D"2.1.9.&nbsp;Token Validation and Session Information">Token=
 Validation and Session Information</a></p></li><li class=3D"listitem"><p><=
a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/index.html#rest-api-logging" title=3D"2.1.11.&nbsp;Logging">Loggin=
g</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://b=
ackstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-goto-=
url-validation" title=3D"2.1.10.&nbsp;REST Goto URL Validation">REST Goto U=
RL Validation</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-status-codes" title=3D"2.1.12.&nbsp;REST Status Codes">REST Status =
Codes</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https=
://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-rest-a=
uthz-policy" title=3D"2.1.13.&nbsp;RESTful Authorization and Policy Managem=
ent Services">RESTful Authorization and Policy Management Services</a></p><=
/li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-oauth2" title=
=3D"2.1.14.1.&nbsp;OAuth 2.0">OAuth 2.0</a></p></li><li class=3D"listitem">=
<p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#rest-api-openid-connect" title=3D"2.1.14.2.&nbsp;Op=
enID Connect 1.0">OpenID Connect 1.0</a></p></li><li class=3D"listitem"><p>=
<a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#sec-rest-uma" title=3D"2.1.14.3.&nbsp;User-Managed Acc=
ess (UMA)">User-Managed Access (UMA)</a></p></li><li class=3D"listitem"><p>=
<a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#common-self-registration" title=3D"2.1.15.1.&nbsp;Regi=
stering Users">Registering Users</a></p></li><li class=3D"listitem"><p><a c=
lass=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-=
guide/index.html#common-forgotten-username" title=3D"2.1.15.2.&nbsp;Retriev=
ing Forgotten Usernames">Retrieving Forgotten Usernames</a></p></li><li cla=
ss=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#common-forgotten-password" title=3D=
"2.1.15.3.&nbsp;Replacing Forgotten Passwords">Replacing Forgotten Password=
s</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://b=
ackstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-dashboard=
" title=3D"2.1.15.4.&nbsp;Displaying Dashboard Applications">Displaying Das=
hboard Applications</a></p></li><li class=3D"listitem"><p><a class=3D"xref"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#rest-api-device-profile-reset" title=3D"2.1.15.5.&nbsp;Resetting Device=
 Profiles">Resetting Device Profiles</a></p></li><li class=3D"listitem"><p>=
<a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#rest-api-crud-identity" title=3D"2.1.16.1.&nbsp;Identi=
ty Management">Identity Management</a></p></li><li class=3D"listitem"><p><a=
 class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#rest-api-crud-realm" title=3D"2.1.16.2.&nbsp;Realm Manag=
ement">Realm Management</a></p></li><li class=3D"listitem"><p><a class=3D"l=
ink" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/ind=
ex.html#sec-manage-scripts-rest" title=3D"2.1.17.&nbsp;RESTful Script Manag=
ement">Script Management</a></p></li><li class=3D"listitem"><p><a class=3D"=
link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#chap-sts" title=3D"Chapter&nbsp;7.&nbsp;Working With the Security =
Token Service">Security Token Service</a></p></li><li class=3D"listitem"><p=
><a class=3D"link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#sec-rest-api-recording" title=3D"2.1.18.&nbsp;RESTful=
 Troubleshooting Information Recording">Troubleshooting Information Recordi=
ng</a></p></li></ul></div><p>
   In this section, long URLs are wrapped to fit the printed page, as some
   of the output is formatted for easier reading.
  </p></div><div class=3D"section" id=3D"rest-api-versioning"><div class=3D=
"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"ht=
tps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-ap=
i-versioning">2.1.2.&nbsp;REST API Versioning</a></h3></div></div></div><p>
   In OpenAM 12.0.0 and later, REST API features are assigned version numbe=
rs.
  </p><p>Providing version numbers in the REST API helps ensure compatibili=
ty
   between OpenAM releases. The version number of a feature increases when =
OpenAM
   introduces a non-backwards-compatible change that affects clients making=
 use
   of the feature.</p><div class=3D"variablelist"><p>
   OpenAM provides versions for the following aspects of the REST API.
  </p><dl class=3D"variablelist"><dt><span class=3D"term"><span class=3D"em=
phasis"><em>resource</em></span></span></dt><dd><p>
     Any changes to the structure or syntax of a returned response will inc=
ur
     a <span class=3D"emphasis"><em>resource</em></span> version change. Fo=
r example changing
     <code class=3D"literal">errorMessage</code> to <code class=3D"literal"=
>message</code> in a
     JSON response.
    </p></dd><dt><span class=3D"term"><span class=3D"emphasis"><em>protocol=
</em></span></span></dt><dd><p>
     Any changes to the methods used to make REST API calls will incur
     a <span class=3D"emphasis"><em>protocol</em></span> version change. Fo=
r example changing
     <code class=3D"literal">_action</code> to <code class=3D"literal">$act=
ion</code> in the required
     parameters of an API feature.
    </p></dd></dl></div><div class=3D"section" id=3D"rest-api-versioning-su=
pported-versions"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a=
 class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#rest-api-versioning-supported-versions">2.1.2.1.&nb=
sp;Supported REST API Versions</a></h4></div></div></div><p>The REST API ve=
rsion numbers supported in
    OpenAM 13.5.2-15
    are as follows:</p><div class=3D"variablelist"><dl class=3D"variablelis=
t"><dt><span class=3D"term"><span class=3D"emphasis"><em>Supported protocol=
 versions</em></span></span></dt><dd><p>The <span class=3D"emphasis"><em>pr=
otocol</em></span> versions supported in OpenAM 13.5.2-15
      are:</p><table border=3D"0" summary=3D"Simple list" class=3D"simpleli=
st"><tbody><tr><td><code class=3D"literal">1.0</code></td></tr></tbody></ta=
ble></dd><dt><span class=3D"term"><span class=3D"emphasis"><em>Supported re=
source versions</em></span></span></dt><dd><p>The <span class=3D"emphasis">=
<em>resource</em></span> versions supported in OpenAM 13.5.2-15
      are shown in the following table.</p><div class=3D"table" id=3D"rest-=
api-supported-resource-versions"><div class=3D"table-title"><a class=3D"sel=
f-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/=
index.html#rest-api-supported-resource-versions">Supported <span class=3D"e=
mphasis"><em>resource</em></span> Versions</a></div><div class=3D"table-con=
tents"><table xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http:/=
/docbook.org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=
=3D"http://exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentati=
on/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xm=
lns:xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apach=
e.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table"=
 class=3D"table table-striped" summary=3D"Supported resource Versions" widt=
h=3D"100%" border=3D"0"><colgroup><col width=3D"33%"><col width=3D"33%"><co=
l width=3D"34%"></colgroup><thead><tr><th>Base</th><th>End Point</th><th>Su=
pported Versions</th></tr></thead><tbody><tr><td>/json</td><td>/authenticat=
e</td><td>1.1, 2.0</td></tr><tr><td> </td><td>/users</td><td>1.1, 1.2, 2.0,=
 2.1, 3.0</td></tr><tr><td> </td><td>/groups</td><td>1.1, 2.0, 2.1, 3.0</td=
></tr><tr><td> </td><td>/agents</td><td>1.1, 2.0, 2.1, 3.0</td></tr><tr><td=
> </td><td>/realms</td><td>1.0</td></tr><tr><td> </td><td>/dashboard</td><t=
d>1.0</td></tr><tr><td> </td><td>/sessions</td><td>1.1</td></tr><tr><td> </=
td><td>/serverinfo/*</td><td>1.1</td></tr><tr><td> </td><td>/users/<span cl=
ass=3D"emphasis"><em>{user}</em></span>/devices/trusted</td><td>1.0</td></t=
r><tr><td> </td><td>/users/<span class=3D"emphasis"><em>{user}</em></span>/=
uma/policies</td><td>1.0</td></tr><tr><td> </td><td>/applications</td><td>1=
.0, 2.0</td></tr><tr><td> </td><td>/resourcetypes</td><td>1.0</td></tr><tr>=
<td> </td><td>/policies</td><td>1.0, 2.0</td></tr><tr><td> </td><td>/applic=
ationtypes</td><td>1.0</td></tr><tr><td> </td><td>/conditiontypes</td><td>1=
.0</td></tr><tr><td> </td><td>/subjecttypes</td><td>1.0</td></tr><tr><td> <=
/td><td>/subjectattributes</td><td>1.0</td></tr><tr><td> </td><td>/decision=
combiners</td><td>1.0</td></tr><tr><td> </td><td>/subjectattributes</td><td=
>1.0</td></tr><tr><td>/xacml</td><td>/policies</td><td>1.0</td></tr><tr><td=
>/frrest</td><td>/token</td><td>1.0</td></tr><tr><td> </td><td>/client</td>=
<td>1.0</td></tr></tbody></table></div></div><br class=3D"table-break"></dd=
></dl></div><p>The <em class=3D"citetitle">OpenAM Release Notes</em> sectio=
n,
     <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/release-no=
tes/index.html#chap-compatibility" class=3D"olink">"Changes and Deprecated =
Functionality"</a> in the <em>Release Notes</em>
     describes the differences between API versions.</p></div><div class=3D=
"section" id=3D"rest-api-explicit-version"><div class=3D"titlepage"><div><d=
iv><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.for=
gerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-explicit-version"=
>2.1.2.2.&nbsp;Specifying an Explicit REST API Version</a></h4></div></div>=
</div><p>You can specify which version of the REST API to use by adding an
    <code class=3D"literal">Accept-API-Version</code> header to the request=
, as in the
    following example, which is requesting <span class=3D"emphasis"><em>res=
ource</em></span> version
    2.0 and <span class=3D"emphasis"><em>protocol</em></span> version 1.0:<=
/p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comma=
nd to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-file=
s-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ <=
strong class=3D"userinput">curl \
 --request POST \
 --header "X-OpenAM-Username: demo" \
 --header "X-OpenAM-Password: changeit" \
 --header "Accept-API-Version: resource=3D2.0, protocol=3D1.0" \
 https://openam.example.com:8443/openam/json/authenticate</strong></pre><p>=
You can configure the default behavior OpenAM will take when a REST
    call does not specify explicit version information. For more
    information, see <a href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/admin-guide/index.html#sec-rest" class=3D"olink">"Configuring REST AP=
Is"</a> in the <em>Administration Guide</em>.</p></div><div class=3D"sectio=
n" id=3D"rest-api-versioning-messages"><div class=3D"titlepage"><div><div><=
h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgero=
ck.com/docs/openam/13.5/dev-guide/index.html#rest-api-versioning-messages">=
2.1.2.3.&nbsp;REST API Versioning Messages</a></h4></div></div></div><p>Ope=
nAM provides REST API version messages in the JSON response to a
   REST API call. You can also configure OpenAM to return version messages
   in the response headers. See <a href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/admin-guide/index.html#sec-rest" class=3D"olink">"Configur=
ing REST APIs"</a> in the <em>Administration Guide</em>.</p><p>Messages inc=
lude:</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"li=
st-style-type: disc; "><li class=3D"listitem"><p>Details of the REST API ve=
rsions used to service a
    REST API call.</p></li><li class=3D"listitem"><p>Warning messages if RE=
ST API version information is not specified
    or is incorrect in a REST API call.</p></li></ul></div><p>The <code cla=
ss=3D"literal">resource</code> and <code class=3D"literal">protocol</code> =
version
   used to service a REST API call are returned in the
   <code class=3D"literal">Content-API-Version</code> header, as shown belo=
w:</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 -i \
 --request POST \
 --header "X-OpenAM-Username: demo" \
 --header "X-OpenAM-Password: changeit" \
 --header "Accept-API-Version: resource=3D2.0, protocol=3D1.0" \
 https://openam.example.com:8443/openam/json/authenticate</strong>

<em class=3D"computeroutput">HTTP/1.1 200 OK
Content-API-Version: protocol=3D1.0,resource=3D2.0
Server: Restlet-Framework/2.1.7
Content-Type: application/json;charset=3DUTF-8

{
 "tokenId":"AQIC5wM...TU3OQ*",
 "successUrl":"/openam/console"
}</em></pre><p>If the default REST API version behavior is set to <code cla=
ss=3D"literal">None</code>,
   and a REST API call does not include the <code class=3D"literal">Accept-=
API-Version</code>
   header, or does not specify a <code class=3D"literal">resource</code> ve=
rsion, then a
   <code class=3D"literal">400 Bad Request</code> status code is returned,
   as shown below:</p><div class=3D"zero-clipboard hidden-xs hidden-print" =
title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span =
class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettypri=
nt nohighlight">$ <strong class=3D"userinput">curl \
 --header "Content-Type: application/json" \
 --header "Accept-API-Version: protocol=3D1.0" \
 https://openam.example.com:8443/openam/json/serverinfo/*</strong>

<em class=3D"computeroutput">{
 "code":400,
 "reason":"Bad Request",
 "message":"No requested version specified and behavior set to NONE."
}</em></pre><p>If a REST API call does include the <code class=3D"literal">=
Accept-API-Version</code>
   header, but the specified <code class=3D"literal">resource</code> or
   <code class=3D"literal">protocol</code> version does not exist in OpenAM=
, then a
   <code class=3D"literal">404 Not Found</code> status code is returned,
   as shown below:</p><div class=3D"zero-clipboard hidden-xs hidden-print" =
title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span =
class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettypri=
nt nohighlight">$ <strong class=3D"userinput">curl \
 --header "Content-Type: application/json" \
 --header "Accept-API-Version: protocol=3D1.0, resource=3D999.0" \
 https://openam.example.com:8443/openam/json/serverinfo/*</strong>

<em class=3D"computeroutput">{
 "code":404,
 "reason":"Not Found",
 "message":"Accept-API-Version: Requested version \"999.0\" does not match =
any routes."
}</em></pre><div class=3D"panel panel-success"><div class=3D"panel-heading"=
><h3 class=3D"panel-title">Tip</h3></div><div class=3D"panel-body"><p>For m=
ore information on setting the default REST API
   version behavior, see <a href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/admin-guide/index.html#sec-rest" class=3D"olink">"Configuring RES=
T APIs"</a> in the <em>Administration Guide</em>.</p></div></div></div></di=
v><div class=3D"section" id=3D"c66-encoding"><div class=3D"titlepage"><div>=
<div><h3 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#c66-encoding">2.1.3.&nbs=
p;Token Encoding</a></h3></div></div></div><p>Valid tokens in OpenAM requir=
es configuration either in percent encoding or in <span class=3D"emphasis">=
<em>C66Encode</em></span>
  format. C66Encode format is encouraged. It is the default token format fo=
r
   OpenAM, and is used in this section.
  The following is an example token that has not been encoded:</p><pre clas=
s=3D"literallayout">AQIC5wM2LY4SfczntBbXvEAOuECbqMY3J4NW3byH6xwgkGE=3D@AAJT=
SQACMDE=3D#</pre><p>This token includes reserved characters such as <code c=
lass=3D"literal">+</code>, <code class=3D"literal">/</code>,
  and <code class=3D"literal">=3D</code> (The <code class=3D"literal">@</co=
de>, <code class=3D"literal">#</code>, and <code class=3D"literal">*</code>=
 are not
  reserved characters per se, but substitutions are still required). To c66=
encode this token,
  you would substitute certain characters for others, as follows:</p><table=
 border=3D"0" summary=3D"Simple list" class=3D"simplelist"><tbody><tr><td><=
kbd>+</kbd> is replaced with <kbd>-</kbd></td></tr><tr><td><kbd>/</kbd> is =
replaced with <kbd>_</kbd></td></tr><tr><td><kbd>=3D</kbd> is replaced with=
 <kbd>.</kbd></td></tr><tr><td><kbd>@</kbd> is replaced with <kbd>*</kbd></=
td></tr><tr><td><kbd>#</kbd> is replaced with <kbd>*</kbd></td></tr><tr><td=
><kbd>*</kbd> (first instance) is replaced with <kbd>@</kbd></td></tr><tr><=
td><kbd>*</kbd> (subsequent instances) is replaced with <kbd>#</kbd></td></=
tr></tbody></table><p>In this case, the translated token would appear as sh=
own here:</p><pre class=3D"literallayout">AQIC5wM2LY4SfczntBbXvEAOuECbqMY3J=
4NW3byH6xwgkGE.*AAJTSQACMDE.*</pre></div><div class=3D"section" id=3D"realm=
s-rest"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"=
self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#realms-rest">2.1.4.&nbsp;Specifying Realms in REST API Calls<=
/a></h3></div></div></div><a class=3D"indexterm" name=3D"d15472e1013"></a><=
p>This section describes how to work with realms when
  making REST API calls to OpenAM.</p><p>Realms can be specified in three w=
ays when making a REST API call to
  OpenAM:</p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><sp=
an class=3D"term">DNS Alias</span></dt><dd><p>When making a REST API call, =
the DNS alias of a realm can be
     specified in the subdomain and domain name components of the REST endp=
oint.</p><p>To list all users in the top-level realm use the DNS alias of t=
he
     OpenAM instance, for example the REST endpoint would be:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">https://openam.example.com:8443/openam/json/users?_queryId=3D*</pre><p>
    </p><p>To list all users in a realm with DNS alias
     <code class=3D"literal">suppliers.example.com</code> the REST endpoint=
 would be:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">https://<em><strong class=3D"replaceable">suppliers.example.com</strong>=
</em>:8443/openam/json/users?_queryId=3D*</pre><p>
    </p></dd><dt><span class=3D"term">Path</span></dt><dd><p>When making a =
REST API call, the realm, or realm alias, can be
     specified in the path component of the REST endpoint.</p><p>To authent=
icate a user in the top-level realm the REST endpoint
     would be:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">https://openam.example.com:8443/openam/json/authenticate</pre><p>
    </p><p>To authenticate a user in a realm named
     <code class=3D"literal">customers</code> the REST endpoint would be:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">https://openam.example.com:8443/openam/json<em><strong class=3D"replacea=
ble">/customers</strong></em>/authenticate</pre><p>
    </p><p>Subrealms are supported and should be separated with a forward s=
lash (<kbd>/</kbd>).</p><p>For example, to authenticate to a subrealm named=
 <code class=3D"literal">europe</code>
  of a realm named <code class=3D"literal">partners</code>, the REST endpoi=
nt would be:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
https://openam.example.com:8443/openam/json<em><strong class=3D"replaceable=
">/partners/europe</strong></em>/authenticate</pre></dd><dt><span class=3D"=
term">Query Parameter</span></dt><dd><p>When making a REST API call the rea=
lm, or realm alias, can be
     specified as the value of a query parameter named <code class=3D"liter=
al">realm</code>.</p><p>To list the groups in the top-level realm the REST =
endpoint would be:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">https://openam.example.com:8443/openam/json/groups?_queryId=3D*</pre><p>
    </p><p>To list the groups in a realm named
     <code class=3D"literal">partners</code> the REST endpoint would be:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">https://openam.example.com:8443/openam/json/groups?<em><strong class=3D"=
replaceable">realm=3D/partners</strong></em>&amp;_queryId=3D*</pre><p>
    </p><div class=3D"panel panel-primary"><div class=3D"panel-heading"><h3=
 class=3D"panel-title">Important</h3></div><div class=3D"panel-body"><p>Whe=
n working with a named subrealm of the top-level
     realm a forward slash preceeding the realm name is required.
     You should not use a forward slash when using a realm alias.</p></div>=
</div><p>Subrealms are supported and should be separated with a forward sla=
sh (<kbd>/</kbd>).</p><p>To authenticate a user in a subrealm named <code c=
lass=3D"literal">europe</code> of a
  realm named <code class=3D"literal">partners</code> the REST endpoint wou=
ld be:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
https://openam.example.com:8443/openam/json/authenticate?<em><strong class=
=3D"replaceable">realm=3D/partners/europe</strong></em></pre></dd></dl></di=
v><p>If more than one of the above methods is used to specify realms in a
 REST endpoint, OpenAM applies the following rules to determine the realm
 to use.
</p><div class=3D"orderedlist"><ol class=3D"orderedlist" type=3D"1"><li cla=
ss=3D"listitem"><p>If realms are specified using both the DNS alias and pat=
h
    methods, they are concatenated together.</p><p>For example, the followi=
ng REST endpoint returns users in a
    subrealm named <code class=3D"literal">europe</code> of a realm with DN=
S alias
    <code class=3D"literal">suppliers</code>.
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">https://<em><strong class=3D"replaceable">suppliers.example.com</strong><=
/em>:8443/openam/json<em><strong class=3D"replaceable">/europe</strong></em=
>/users?_queryId=3D*</pre></li><li class=3D"listitem"><p>If realms are spec=
ified using the <code class=3D"literal">realm</code> query
    parameter, they override anything specified in either the DNS alias or =
path
    method.</p><p>For example, the following REST endpoint returns users in=
 a
    subrealm of the <code class=3D"literal">customers</code> realm, named <=
code class=3D"literal">asia</code>.
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">https://<em><strong class=3D"replaceable">suppliers.example.com</strong><=
/em>:8443/openam/json<em><strong class=3D"replaceable">/europe</strong></em=
>/users?<em><strong class=3D"replaceable">realm=3D/customers/asia</strong><=
/em>&amp;_queryId=3D*</pre></li></ol></div></div><div class=3D"section" id=
=3D"rest-api-auth"><div class=3D"titlepage"><div><div><h3 class=3D"title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-auth">2.1.5.&nbsp;Authentication and Logo=
ut</a></h3></div></div></div><p>
   You can use REST-like APIs under <code class=3D"literal">/json/authentic=
ate</code> and
   <code class=3D"literal">/json/sessions</code> for authentication and for=
 logout.
  </p><p>
   The <code class=3D"literal">/json/authenticate</code> endpoint does not =
support the
   CRUDPAQ verbs and therefore does not technically satisfy REST architectu=
ral
   requirements. The term <span class=3D"emphasis"><em>REST-like</em></span=
> describes this
   endpoint better than <span class=3D"emphasis"><em>REST</em></span>.
  </p><p>
   The simplest user name/password authentication returns a
   <code class=3D"literal">tokenId</code> that applications can present as =
a cookie
   value for other operations that require authentication. The type of
   <code class=3D"literal">tokenId</code> returned varies depending on whet=
her stateless
   sessions are enabled in the realm to which the user authenticates:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      If stateless sessions are not enabled, the <code class=3D"literal">to=
kenId</code>
      is an OpenAM SSO token.
     </p></li><li class=3D"listitem"><p>
      If stateless sessions are enabled, the <code class=3D"literal">tokenI=
d</code> is
      an OpenAM SSO token that includes an encoded OpenAM session.
     </p></li></ul></div><p>
   Developers should be aware that the size of the <code class=3D"literal">=
tokenId</code>
   for stateless sessions=E2=80=942000 bytes or greater=E2=80=94is
   considerably longer than for stateful sessions=E2=80=94approximately 100=
 bytes.
   For more information about stateful and stateless session tokens,
   see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-gu=
ide/index.html#session-state-cookies" class=3D"olink">"Session Cookies"</a>=
 in the <em>Administration Guide</em>.
  </p><p>
   When authenticating with a user name and password, use
   HTTP POST to prevent the web container from logging the credentials.
   Pass the user name in an <code class=3D"literal">X-OpenAM-Username</code=
> header, and
   the password in an <code class=3D"literal">X-OpenAM-Password</code> head=
er:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "X-OpenAM-Username: demo" \
 --header "X-OpenAM-Password: changeit" \
 --data "{}" \
 https://openam.example.com:8443/openam/json/authenticate</strong>
<em class=3D"computeroutput">{ "tokenId": "AQIC5w...NTcy*", "successUrl": "=
/openam/console" }</em></pre><p>
   To use UTF-8 user names and passwords in calls to the <code class=3D"lit=
eral">/json/authenticate</code>
   endpoint, base64-encode the string, and then wrap the string as describe=
d in
   <a class=3D"link" href=3D"https://www.ietf.org/rfc/rfc2047.txt" target=
=3D"_top">RFC 2047</a>:</p><div class=3D"zero-clipboard hidden-xs hidden-pr=
int" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><=
span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline pret=
typrint nohighlight"><strong class=3D"userinput">encoded-word =3D "=3D?" <e=
m><strong class=3D"replaceable">charset</strong></em> "?" <em><strong class=
=3D"replaceable">encoding</strong></em> "?" <em><strong class=3D"replaceabl=
e">encoded-text</strong></em> "?=3D"</strong></pre><p>
   For example, to authenticate using a UTF-8 username, such as <code class=
=3D"literal">=C9=97=C3=AB=C9=B1=C3=B8</code>, perform
   the following steps:
  </p><div class=3D"orderedlist"><ol class=3D"orderedlist" type=3D"1"><li c=
lass=3D"listitem"><p>
     Encode the string in base64 format: <code class=3D"literal">yZfDq8mxw7=
g=3D</code>.
    </p></li><li class=3D"listitem"><p>
     Wrap the base64-encoded string as per RFC 2047: <code class=3D"literal=
">=3D?UTF-8?B?yZfDq8mxw7g=3D?=3D</code>.
    </p></li><li class=3D"listitem"><p>
     Use the result in the <code class=3D"literal">X-OpenAM-Username</code>=
 header passed to the
     authentication endpoint as follows:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "X-OpenAM-Username: =3D?UTF-8?B?yZfDq8mxw7g=3D?=3D" \
--header "X-OpenAM-Password: changeit" \
--data "{}" \
https://openam.example.com:8443/openam/json/authenticate</strong>
     <em class=3D"computeroutput">{
      "tokenId": "AQIC5w...NTcy*",
      "successUrl": "/openam/console"
      }</em></pre></li></ol></div><p>
   This zero page login mechanism works only for name/password
   authentication. If you include a POST body with the request, it must
   be an empty JSON string as shown in the example. Alternatively, you can
   leave the POST body empty. Otherwise, OpenAM interprets the body as a
   continuation of an existing authentication attempt, one that uses a
   supported callback mechanism.
  </p><p>
   The authentication service at <code class=3D"literal">/json/authenticate=
</code>
   supports callback mechanisms that make it possible to perform other type=
s of
   authentication in addition to simple user name/password login.
  </p><p>
   Callbacks that are not completed based on the content of the client
   HTTP request are returned in JSON as a response to the request. Each
   callback has an array of output suitable for displaying to the end user,
   and input which is what the client must complete and send back to
   OpenAM. The default is still user name/password authentication:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint json hlj=
s">$ curl \
 --request POST \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/a=
uthenticate</span>
{
    <span class=3D"hljs-attr">"authId"</span>: <span class=3D"hljs-string">=
"...jwt-value..."</span>,
    <span class=3D"hljs-attr">"template"</span>: <span class=3D"hljs-string=
">""</span>,
    <span class=3D"hljs-attr">"stage"</span>: <span class=3D"hljs-string">"=
DataStore1"</span>,
    <span class=3D"hljs-attr">"callbacks"</span>: [
        {
            <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-st=
ring">"NameCallback"</span>,
            <span class=3D"hljs-attr">"output"</span>: [
                {
                    <span class=3D"hljs-attr">"name"</span>: <span class=3D=
"hljs-string">"prompt"</span>,
                    <span class=3D"hljs-attr">"value"</span>: <span class=
=3D"hljs-string">" User Name: "</span>
                }
            ],
            <span class=3D"hljs-attr">"input"</span>: [
                {
                    <span class=3D"hljs-attr">"name"</span>: <span class=3D=
"hljs-string">"IDToken1"</span>,
                    <span class=3D"hljs-attr">"value"</span>: <span class=
=3D"hljs-string">""</span>
                }
            ]
        },
        {
            <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-st=
ring">"PasswordCallback"</span>,
            <span class=3D"hljs-attr">"output"</span>: [
                {
                    <span class=3D"hljs-attr">"name"</span>: <span class=3D=
"hljs-string">"prompt"</span>,
                    <span class=3D"hljs-attr">"value"</span>: <span class=
=3D"hljs-string">" Password: "</span>
                }
            ],
            <span class=3D"hljs-attr">"input"</span>: [
                {
                    <span class=3D"hljs-attr">"name"</span>: <span class=3D=
"hljs-string">"IDToken2"</span>,
                    <span class=3D"hljs-attr">"value"</span>: <span class=
=3D"hljs-string">""</span>
                }
            ]
        }
    ]
}</pre><p>
   The <code class=3D"literal">authID</code> value is a JSON Web Token (JWT=
) that
   uniquely identifies
   the authentication context to OpenAM, and so must also be sent back with=
 the
   requests.
  </p><p>
   To respond to the callback, send back the JSON object with the missing
   values filled, as in this case where the user name is <code class=3D"lit=
eral">demo</code>
   and the password is <code class=3D"literal">changeit</code>:
  </p><div class=3D"informalexample"><div class=3D"zero-clipboard hidden-xs=
 hidden-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-=
cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cm=
dline prettyprint nohighlight">$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --data '{ "authId": "...jwt-value...", "template": "", "stage": "DataStore=
1",
   "callbacks": [ { "type": "NameCallback", "output": [ { "name": "prompt",
   "value": " User Name: " } ], "input": [ { "name": "IDToken1", "value": "=
demo" } ] },
   { "type": "PasswordCallback", "output": [ { "name": "prompt", "value": "=
 Password: " } ],
   "input": [ { "name": "IDToken2", "value": "changeit" } ] } ] }' \
 https://openam.example.com:8443/openam/json/authenticate</strong>
<em class=3D"computeroutput">
{ "tokenId": "AQIC5wM2...U3MTE4NA..*", "successUrl": "/openam/console" }</e=
m></pre></div><p>
   The response is a token ID holding the SSO token value.
  </p><p>
   Alternatively, you can authenticate without requesting a session
   using the <code class=3D"literal">noSession</code> query string paramete=
r:
  </p><div class=3D"informalexample"><div class=3D"zero-clipboard hidden-xs=
 hidden-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-=
cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cm=
dline prettyprint nohighlight">$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --data '{ "authId": "...jwt-value...", "template": "", "stage": "DataStore=
1",
   "callbacks": [ { "type": "NameCallback", "output": [ { "name": "prompt",
   "value": " User Name: " } ], "input": [ { "name": "IDToken1", "value": "=
demo" } ] },
   { "type": "PasswordCallback", "output": [ { "name": "prompt", "value": "=
 Password: " } ],
   "input": [ { "name": "IDToken2", "value": "changeit" } ] } ] }' \
 https://openam.example.com:8443/openam/json/authenticate?noSession=3Dtrue<=
/strong>
<em class=3D"computeroutput">
{ "message": "Authentication Successful", "successUrl": "/openam/console" }=
</em></pre></div><p>
   OpenAM can be configured to return a failure URL value when
   authentication fails. No failure URL is configured by default. The Defau=
lt
   Failure Login URL can be configured for the
   <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#core-module-conf-hints" class=3D"olink">"Configuring Core Authen=
tication Attributes"</a> in the <em>Administration Guide</em> authenticatio=
n
   module. Alternatively, failure URLs can be configured per authentication
   chain, which your client can specify using the <code class=3D"literal">s=
ervice</code>
   parameter described below. On failure OpenAM then returns HTTP status
   code 401 Unauthorized, and the JSON in the reply indicates the failure
   URL:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request POST \
 --header "X-OpenAM-Username: demo" \
 --header "X-OpenAM-Password: badpassword" \
 https://openam.example.com:8443/openam/json/authenticate</strong>
<em class=3D"computeroutput">{
  "code":401,
  "reason":"Unauthorized",
  "message":"Invalid Password!!",
  "failureUrl": "http://www.example.com/401.html"
}</em></pre><p>
   To specify a realm in your request, first make sure that the name of you=
r realm does not match
   an endpoint name to avoid any potential routing errors.
   Then, specify the realm in one of two ways. For example, if you have a r=
ealm
   titled <code class=3D"literal">myRealm</code>, you can use it in your re=
quest as follows:
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     Using the realm in the URI to the endpoint (preferred method):
    </p><pre class=3D"literallayout">https://openam.example.com:8443/openam=
/json/<code class=3D"literal">myRealm</code>/authenticate</pre></li><li cla=
ss=3D"listitem"><p>
     Using the realm query string parameter:
    </p><pre class=3D"literallayout">https://openam.example.com:8443/openam=
/json/authenticate?realm=3D<code class=3D"literal">myRealm</code></pre></li=
></ul></div><div class=3D"variablelist"><p>
    You can use the <code class=3D"literal">authIndexType</code> and
    <code class=3D"literal">authIndexValue</code> query string parameters a=
s a pair
    to provide additional information about how you are authenticating.
    The <code class=3D"literal">authIndexType</code> can be one of the foll=
owing
    types:
   </p><dl class=3D"variablelist"><dt><span class=3D"term">composite</span>=
</dt><dd><p>Set the value to a composite advice string.</p></dd><dt><span c=
lass=3D"term">level</span></dt><dd><p>Set the value to the authentication l=
evel.</p></dd><dt><span class=3D"term">module</span></dt><dd><p>Set the val=
ue to the name of an authentication module.</p></dd><dt><span class=3D"term=
">resource</span></dt><dd><p>Set the value to a URL protected by an OpenAM =
policy.</p></dd><dt><span class=3D"term">role</span></dt><dd><p>Set the val=
ue to an OpenAM role.</p></dd><dt><span class=3D"term">service</span></dt><=
dd><p>Set the value to the name of an authentication chain.</p></dd><dt><sp=
an class=3D"term">user</span></dt><dd><p>Set the value to an OpenAM user ID=
.</p></dd></dl></div><p>
    You can use the query string parameter,
    <code class=3D"literal">sessionUpgradeSSOTokenId=3D<em class=3D"replace=
able">tokenId</em></code>,
    to request session upgrade.
    For an explanation of session upgrade,
    see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-g=
uide/index.html#session-upgrade" class=3D"olink">"Authentication Levels and=
 Session Upgrade"</a> in the <em>Administration Guide</em>.
  </p><div class=3D"itemizedlist"><p>
    OpenAM uses the following callback types depending on the
    authentication module in use:
   </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li cla=
ss=3D"listitem"><p>
     <code class=3D"literal">ChoiceCallback</code>:
     Used to display a list of choices and retrieve the selected choice.
    </p></li><li class=3D"listitem"><p>
     <code class=3D"literal">ConfirmationCallback</code>:
     Used to ask for a confirmation such as Yes, No, or Cancel and retrieve
     the selection.
    </p></li><li class=3D"listitem"><p>
     <code class=3D"literal">HiddenValueCallback</code>:
     Used to return form values that are not visually rendered to the end u=
ser.
    </p></li><li class=3D"listitem"><p>
     <code class=3D"literal">HttpCallback</code>:
     Used for HTTP handshake negotiations.
    </p></li><li class=3D"listitem"><p>
     <code class=3D"literal">LanguageCallback</code>:
     Used to retrieve the locale for localizing text presented to the end u=
ser.
    </p></li><li class=3D"listitem"><p>
    <code class=3D"literal">NameCallback</code>:
     Used to retrieve a name string.
    </p></li><li class=3D"listitem"><p>
     <code class=3D"literal">PasswordCallback</code>:
     Used to retrieve a password value.
    </p></li><li class=3D"listitem"><p>
     <code class=3D"literal">RedirectCallback</code>:
     Used to redirect the client user-agent.
    </p></li><li class=3D"listitem"><p>
     <code class=3D"literal">ScriptTextOutputCallback</code>:
     Used to insert a script into the page presented to the end user.
     The script can, for example, collect data about the user's environment=
.
    </p></li><li class=3D"listitem"><p>
     <code class=3D"literal">TextInputCallback</code>:
     Used to retrieve text input from the end user.
    </p></li><li class=3D"listitem"><p>
     <code class=3D"literal">TextOutputCallback</code>:
     Used to display a message to the end user.
    </p></li><li class=3D"listitem"><p>
     <code class=3D"literal">X509CertificateCallback</code>:
     Used to retrieve the content of an x.509 certificate.
    </p></li></ul></div><p>
   Authenticated users can log out with the token cookie value and an HTTP
   POST to <code class=3D"literal">/json/sessions/?_action=3Dlogout</code>:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request POST \
 --header "iplanetDirectoryPro: AQIC5wM2...U3MTE4NA..*" \
 "https://openam.example.com:8443/openam/json/sessions/?_action=3Dlogout"</=
strong>
<em class=3D"computeroutput">
{"result":"Successfully logged out"}</em></pre><div class=3D"section" id=3D=
"load-balancer-requirements"><div class=3D"titlepage"><div><div><h4 class=
=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#load-balancer-requirements">2.1.5.1.&n=
bsp;Load Balancer and Proxy Layer Requirements</a></h4></div></div></div><p=
>
    When authentication depends on the client IP address and OpenAM lies be=
hind
    a load balancer or proxy layer, configure the load balancer or proxy to=
 send
    the address by using the <code class=3D"literal">X-Forwarded-For</code>=
 header, and
    configure OpenAM to consume and forward the header as necessary. For
    details, see
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/install-gui=
de/index.html#handle-request-headers" class=3D"olink">"Handling HTTP Reques=
t Headers"</a> in the <em>Installation Guide</em>.
   </p></div><div class=3D"section" id=3D"windows-desktop-sso-requirements"=
><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#windows-desktop-sso-requirements">2.1.5.2.&nbsp;Windows Desktop SSO =
Requirements</a></h4></div></div></div><p>
    When authenticating with Windows Desktop SSO, add an
    <code class=3D"literal">Authorization</code> header containing the stri=
ng
    <code class=3D"literal">Basic </code>, followed by a base64-encoded str=
ing of the
    username, a colon character, and the password. In the following example=
, the
    credentials <code class=3D"literal">demo:changeit</code> are base64-enc=
oded into the
    string <code class=3D"literal">ZGVtbzpjaGFuZ2VpdA=3D=3D</code>:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "X-OpenAM-Username: demo" \
 --header "X-OpenAM-Password: changeit" \
 --header "Authorization: Basic ZGVtbzpjaGFuZ2VpdA=3D=3D" \
 --data "{}" \
 https://openam.example.com:8443/openam/json/authenticate</strong>
<em class=3D"computeroutput">
{ "tokenId": "AQIC5w...NTcy*", "successUrl": "/openam/console" }</em></pre>=
</div></div><div class=3D"section" id=3D"rest-api-ssotoken"><div class=3D"t=
itlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-=
ssotoken">2.1.6.&nbsp;Using the Session Token After Authentication</a></h3>=
</div></div></div><p>
   The following is a common scenario when accessing OpenAM by using REST A=
PI
   calls:
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     First, call the <code class=3D"literal">/json/authenticate</code> endp=
oint to log a
     user in to OpenAM. This REST API call returns a <code class=3D"literal=
">tokenID</code>
     value, which is used in subsequent REST API calls to identify the user=
:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "X-OpenAM-Username: demo" \
 --header "X-OpenAM-Password: changeit" \
 --data "{}" \
 https://openam.example.com:8443/openam/json/authenticate</strong>
<em class=3D"computeroutput">
{ "tokenId": "AQIC5w...NTcy*", "successUrl": "/openam/console" }</em></pre>=
<p>
     The returned <code class=3D"literal">tokenID</code> is known as a sess=
ion token
     (also referred to as an SSO token). REST API calls made after successf=
ul
     authentication to OpenAM must present the session token in the HTTP he=
ader
     as proof of authentication.
    </p></li><li class=3D"listitem"><p>
     Next, call one or more additional REST APIs on behalf of the logged-in
     user. Each REST API call passes the user's <code class=3D"literal">tok=
enID</code> back
     to OpenAM in the HTTP header as proof of previous authentication.
    </p><p>
     The following is a <span class=3D"emphasis"><em>partial</em></span> ex=
ample of
     a <span class=3D"command"><strong>curl</strong></span> command that in=
serts the token ID
     returned from a prior successful OpenAM authentication attempt into th=
e
     HTTP header:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iPlanetDirectoryPro: AQIC5w...NTcy*" \
--data '{
  ...
</strong></pre><p>
     Observe that the session token is inserted into a header field named
     <code class=3D"literal">iPlanetDirectoryPro</code>. This header field =
name must
     correspond to the name of the OpenAM session cookie=E2=80=94by
     default, <code class=3D"literal">iPlanetDirectoryPro</code>. You can f=
ind the
     cookie name in the OpenAM console by navigating to Deployment &gt; Ser=
vers &gt;
     <em class=3D"replaceable">Server Name</em> &gt; Security &gt; Cookie, =
in the
     Cookie Name field of the OpenAM console.
    </p><p>
     Once a user has authenticated, it is <span class=3D"emphasis"><em>not<=
/em></span>
     necessary to insert login credentials in the HTTP header in subsequent
     REST API calls. Note the absence
     of <code class=3D"literal">X-OpenAM-Username</code> and
     <code class=3D"literal">X-OpenAM-Password</code> headers in the preced=
ing example.
    </p><p>
     Users are required to have appropriate privileges in order to
     access OpenAM functionality using the REST API. For example,
     users who lack administrative privileges cannot create OpenAM realms.
     For more information on the OpenAM privilege model,
     see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-=
guide/index.html#manage-realms" class=3D"olink">"Managing Realms"</a> in th=
e <em>Administration Guide</em>.
    </p></li><li class=3D"listitem"><p>
     Finally, call the REST API to log the user out of OpenAM as described
     in <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#rest-api-auth" title=3D"2.1.5.&nbsp;Authentica=
tion and Logout">"Authentication and Logout"</a>. As with
     other REST API calls made after a user has authenticated, the REST API=
 call
     to log out of OpenAM requires the user's <code class=3D"literal">token=
ID</code>
     in the HTTP header.
    </p></li></ul></div></div><div class=3D"section" id=3D"rest-api-filter-=
sort-page"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#rest-api-filter-sort-page">2.1.7.&nbsp;Filtering, Sorting=
, and Paging Results</a></h3></div></div></div><p>Some OpenAM endpoints sup=
port additional query string parameters when
   querying the REST APIs to manipulate the returned data.
  </p><div class=3D"variablelist"><p>The query string parameters for manipu=
lating
    returned results are:</p><dl class=3D"variablelist"><dt><span class=3D"=
term"><code class=3D"literal">_queryFilter</code></span></dt><dd><p>
    The <code class=3D"literal">_queryFilter</code> parameter can take
    <code class=3D"literal">true</code> to return every result,
    <code class=3D"literal">false</code> to return no results,
    or a filter of the following form to match field values:
    <code class=3D"literal"><em class=3D"replaceable">field</em> <em class=
=3D"replaceable">operator</em> <em class=3D"replaceable">value</em></code>
    where <em class=3D"replaceable">field</em> represents the field name,
    <em class=3D"replaceable">operator</em> is the operator code,
    <em class=3D"replaceable">value</em> is the value to match,
    and the entire filter is URL-encoded.</p><div class=3D"panel panel-info=
"><div class=3D"panel-heading"><h3 class=3D"panel-title">Note</h3></div><di=
v class=3D"panel-body"><p>Supported fields and operator codes vary dependin=
g on the
     endpoint.</p></div></div><p>
        The operators codes are as follows:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
      <code class=3D"literal">co</code>: contains
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">eq</code>: equals
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">ge</code>: greater than or equal to
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">gt</code>: greater than
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">le</code>: less than or equal to
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">lt</code>: less than
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">pr</code>: <em class=3D"replaceable">field</e=
m> exists,
      <em class=3D"replaceable">field</em> is present
     </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 c=
lass=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
      Do not set a <em class=3D"replaceable">value</em> when using this ope=
rator.
     </p></div></div></li><li class=3D"listitem"><p>
      <code class=3D"literal">sw</code>: starts with
     </p></li></ul></div><p>
    Filters can be composed of multiple expressions
    by a using boolean operator <code class=3D"literal">AND</code>,
     <code class=3D"literal">OR</code>, or <code class=3D"literal">!</code>=
 (NOT)
    and by using parentheses, <code class=3D"literal">(<em class=3D"replace=
able">expression</em>)</code>
    to group expressions.</p><p>Regular expressions are implemented for som=
e operators, so you can
      create a filter that includes or excludes certain records.</p><p>You =
must URL-encode the <em class=3D"replaceable">filter</em> expression
    in <code class=3D"literal">_queryFilter=3D<em class=3D"replaceable">fil=
ter</em></code>.
   </p><p>The following example returns resource types with a <span class=
=3D"emphasis"><em>name</em></span>
      that contains <code class=3D"literal">Service</code> and also has a
      <span class=3D"emphasis"><em>pattern</em></span> that starts with <co=
de class=3D"literal">http</code>:</p><div class=3D"zero-clipboard hidden-xs=
 hidden-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-=
cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cm=
dline prettyprint nohighlight">$ <strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
--get \
--data-urlencode \
'_queryFilter=3Dname co "Service" and patterns sw "http"' \
https://openam.example.com:8443/openam/json/resourcetypes</strong></pre></d=
d><dt><span class=3D"term"><code class=3D"literal">_fields</code></span></d=
t><dd><p>You can use <code class=3D"literal">_fields=3D<em class=3D"replace=
able">field-name</em>[,<em class=3D"replaceable">field-name</em>...]</code>
    to limit the fields returned in the output.
   </p><p>The following example returns the <span class=3D"emphasis"><em>na=
me</em></span> and
      <span class=3D"emphasis"><em>creationDate</em></span> of all policies=
 in the top level realm:</p><div class=3D"zero-clipboard hidden-xs hidden-p=
rint" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline">=
<span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline pre=
ttyprint nohighlight">$ <strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
--get \
--data-urlencode '_queryFilter=3Dtrue' \
--data-urlencode '_fields=3Dname,creationDate' \
https://openam.example.com:8443/openam/json/policies</strong></pre></dd><dt=
><span class=3D"term"><code class=3D"literal">_prettyPrint</code></span></d=
t><dd><p>
    You can use the query string parameters <code class=3D"literal">_pretty=
Print=3Dtrue</code>
         to make the output easier to read.
   </p></dd><dt><span class=3D"term"><code class=3D"literal">_pageSize</cod=
e></span></dt><dd><p>
    You can use <code class=3D"literal">_pageSize=3D<em class=3D"replaceabl=
e">integer</em></code>
    to limit the number of results returned.
   </p></dd><dt><span class=3D"term"><code class=3D"literal">_pagedResultsO=
ffset</code></span></dt><dd><p> You can use <code class=3D"literal">_pagedR=
esultsOffset=3D<em class=3D"replaceable">integer</em></code>
    to return results starting at a specified result when using paged
         results.</p></dd><dt><span class=3D"term"><code class=3D"literal">=
_sortKeys</code></span></dt><dd><p>
      You can use <code class=3D"literal">_sortKeys=3D[+-]<em class=3D"repl=
aceable">field-name</em>[,<em class=3D"replaceable">field-name</em>...]</co=
de>
      to sort the results returned, where <em class=3D"replaceable">field-n=
ame</em>
      represents a field in the returned JSON.
      Optionally use the <code class=3D"literal">+</code> prefix to sort in=
 ascending order
      (the default), or <code class=3D"literal">-</code> to sort in descend=
ing order.
     </p><p>The following example returns all applications in the top level
      realm, sorted in descending <span class=3D"emphasis"><em>creationDate=
</em></span> order:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
--get \
--data-urlencode '_queryFilter=3Dtrue' \
--data-urlencode '_sortKeys=3D-creationDate' \
https://openam.example.com:8443/openam/json/applications</strong></pre></dd=
></dl></div></div><div class=3D"section" id=3D"rest-api-serverinfo"><div cl=
ass=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-serverinfo">2.1.8.&nbsp;Server Information</a></h3></div></div></di=
v><p>You can retrieve OpenAM server information by using HTTP GET on
   <code class=3D"literal">/json/serverinfo/*</code> as follows:</p><div cl=
ass=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to clip=
board"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></spa=
n></span></div><pre class=3D"cmdline prettyprint nohighlight">$ <strong cla=
ss=3D"userinput">curl https://openam.example.com:8443/openam/json/serverinf=
o/*</strong>
<em class=3D"computeroutput">{
    "domains": [
        ".example.com"
    ],
    "protectedUserAttributes": [],
    "cookieName": "iPlanetDirectoryPro",
    "secureCookie": false,
    "forgotPassword": "false",
    "forgotUsername": "false",
    "kbaEnabled": "false",
    "selfRegistration": "false",
    "lang": "en-US",
    "successfulUserRegistrationDestination": "default",
    "socialImplementations": [
        {
            "iconPath": "XUI/images/logos/facebook.png",
            "authnChain": "FacebookSocialAuthenticationService",
            "displayName": "Facebook",
            "valid": true
        }
    ],
    "referralsEnabled": "false",
    "zeroPageLogin": {
        "enabled": false,
        "refererWhitelist": [
            ""
        ],
        "allowedWithoutReferer": true
    },
    "realm": "/",
    "xuiUserSessionValidationEnabled": true,
    "FQDN": "openam.example.com"
}</em></pre></div><div class=3D"section" id=3D"rest-api-tokens"><div class=
=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest=
-api-tokens">2.1.9.&nbsp;Token Validation and Session Information</a></h3><=
/div></div></div><p>
   OpenAM provides REST APIs under <code class=3D"literal">/json/sessions</=
code> for
   validating SSO tokens and getting information about active sessions.
  </p><div class=3D"section" id=3D"rest-api-token-validation"><div class=3D=
"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"ht=
tps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-ap=
i-token-validation">2.1.9.1.&nbsp;Validating Sessions</a></h4></div></div><=
/div><p>
    To check over REST whether a session token is valid,
    perform an HTTP POST
    to the resource URL,
    <code class=3D"literal">/json/sessions/<em class=3D"replaceable">tokenI=
d</em></code>,
    using the <code class=3D"literal">validate</code> action
    as shown in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
  http://openam.example.com:8080/openam/json/sessions/AQIC5...?_action=3Dva=
lidate</strong>
<em class=3D"computeroutput">{"valid":true,"uid":"demo","realm":"/myRealm"}=
</em>
   </pre><p>
    If the session token is not valid, a <code class=3D"literal">"valid": f=
alse</code> JSON message is
    returned, as shown below:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
  http://openam.example.com:8080/openam/json/sessions/AQIC5...?_action=3Dva=
lidate</strong>
<em class=3D"computeroutput">{"valid":false}</em>
   </pre><p>
    Validating a session token has the tangential effect of resetting the i=
dle
    timeout for a stateful session. If session failover is enabled in your
    deployment, validating session tokens can trigger write operations to t=
he
    Core Token Service token store. See
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-session-information" title=3D"2.1.9.2.&nb=
sp;Obtaining Information About Sessions">"Obtaining Information About Sessi=
ons"</a> for information about
    how to validate a session token without resetting the idle timeout, the=
reby
    avoiding the overhead of writes to the token store.
   </p><p>
    Note that OpenAM does not reset the idle timeout for
    a stateless session.
   </p></div><div class=3D"section" id=3D"rest-api-session-information"><di=
v class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#rest-api-session-information">2.1.9.2.&nbsp;Obtaining Information About =
Sessions</a></h4></div></div></div><p>
    You can use REST API calls to:

    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
       Identify whether a session is active
      </p></li><li class=3D"listitem"><p>
       Check the maximum remaining amount of time a session has left before
       the user is required to reauthenticate
      </p></li><li class=3D"listitem"><p>
       Determine the length of time a stateful session has been idle
      </p></li><li class=3D"listitem"><p>
       Reset a stateful session's idle time to 0
      </p></li></ul></div><p>
   </p><p>
    For these REST endpoints, specify two token IDs. Provide the token ID f=
or the
    current authenticated user as the value of a header whose name is the n=
ame
    of the SSO token cookie, by default <code class=3D"literal">iPlanetDire=
ctoryPro</code>.
    Specify the token ID you want information about as the
    <code class=3D"literal">tokenId</code> query string parameter of the RE=
ST URL.
    In the examples in this section, <code class=3D"literal">AQIC5w...NTcy*=
</code> is the
    token ID for the current authenticated user, while <code class=3D"liter=
al">BXCCq...NX*1*</code>
    is the token being queried.
   </p><p>
    To determine whether a session is active,
    perform an HTTP POST to the resource URL,
    <code class=3D"literal">/json/sessions/</code>,
    using the <code class=3D"literal">isActive</code> action
    as shown in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DisActive&a=
mp;tokenId=3DBXCCq...NX*1*</strong>
<em class=3D"computeroutput">{"active":true}</em>
   </pre><p>
    To check the maximum remaining time (in seconds) of a session,
    perform an HTTP POST to the resource URL,
    <code class=3D"literal">/json/sessions/</code>,
    using the <code class=3D"literal">getTimeLeft</code> action
    as shown in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DgetTimeLef=
t&amp;tokenId=3DBXCCq...NX*1*</strong>
<em class=3D"computeroutput">{"maxtime":7022}</em>
   </pre><p>
    To check the time (in minutes) configured for
    sessions, perform an HTTP POST to the resource URL,
    <code class=3D"literal">/json/sessions/</code>,
    using the <code class=3D"literal">getMaxSessionTime</code> action
    as shown in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DgetMaxSess=
ionTime</strong>
<em class=3D"computeroutput">{"maxsessiontime":120}</em>
   </pre><p>
    To check the idle time (in minutes) configured
    for sessions, perform an HTTP POST to the resource URL,
    <code class=3D"literal">/json/sessions/</code>,
    using the <code class=3D"literal">getMaxIdle</code> action
    as shown in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DgetMaxIdle=
</strong>
<em class=3D"computeroutput">{"maxidletime":30}</em>
   </pre><p>
    To check the amount of time (in seconds) that a stateful session has be=
en idle,
    perform an HTTP POST to the resource URL,
    <code class=3D"literal">/json/sessions/</code>,
    using the <code class=3D"literal">getIdle</code> action
    as shown in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DgetIdle&am=
p;tokenId=3DBXCCq...NX*1*</strong>
<em class=3D"computeroutput">{"idletime":355}</em>
   </pre><p>
    Because OpenAM does not monitor idle time for stateless sessions,
    do not use the <code class=3D"literal">tokenId</code> of a
    stateless session when using the <code class=3D"literal">getIdle</code>=
 action.
   </p><p>
    To reset a stateful session's idle time,
    perform an HTTP POST to the resource URL,
    <code class=3D"literal">/json/sessions/</code>,
    using the <code class=3D"literal">isActive</code> action with the
    <code class=3D"literal">refresh=3Dtrue</code>
    option as shown in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DisActive&a=
mp;refresh=3Dtrue&amp;tokenId=3DBXCCq...NX*1*</strong>
<em class=3D"computeroutput">{"active":true}</em>
   </pre><p>
    REST API calls to retrieve session information do not reset a stateful
    session's idle time if you specify the <code class=3D"literal">refresh=
=3Dfalse</code>
    parameter, which is the default.
   </p><p>
    If you specify the <code class=3D"literal">refresh=3Dtrue</code>
    parameter, OpenAM resets the idle time for stateful sessions.
    If session failover is enabled in your deployment, resetting a
    stateful session's idle time can trigger write operations to the Core T=
oken
    Service token store. Therefore, to avoid the overhead of writes to the
    token store, be careful to use the <code class=3D"literal">refresh=3Dtr=
ue</code> parameter
    only if you want to reset a stateful session's idle time.
   </p><p>
    Because OpenAM does not monitor idle time for stateless sessions,
    do not use the <code class=3D"literal">tokenId</code> of a
    stateless session when refreshing a session's idle time.
   </p></div><div class=3D"section" id=3D"rest-api-session-refresh"><div cl=
ass=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-session-refresh">2.1.9.3.&nbsp;Refreshing Stateful Sessions</a></h4=
></div></div></div><p>
    To reset the idle time of a stateful session using REST,
    perform an HTTP POST to the <code class=3D"literal">/json/sessions/</co=
de> endpoint,
    using the <code class=3D"literal">refresh</code> action. The endpoint w=
ill refresh the session
    token provided in the <code class=3D"literal">iPlanetDirectoryPro</code=
> header by default. To
    refresh a different session token, include it as the value of the
    <code class=3D"literal">tokenId</code> query parameter.
   </p><p>The following example shows an administrative user passing their =
session token
    in the <code class=3D"literal">iPlanetDirectoryPro</code> header, and t=
he session token of
    the <code class=3D"literal">demo</code> user as the <code class=3D"lite=
ral">tokenId</code> query parameter:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
http://openam.example.com:8080/openam/json/sessions/?_action=3DisActive&amp=
;refresh=3Dtrue&amp;tokenId=3DBXCCq...NX*1*</strong>
<em class=3D"computeroutput">{
 "uid": "demo",
 "realm": "/",
 "idletime": 4,
 "maxidletime": 30,
 "maxsessiontime": 120,
 "maxtime": 7195
}</em></pre><p>
    On success, OpenAM resets the idle time for the stateful session, and r=
eturns timeout
    details of the session.
   </p><p>
    Resetting a stateful session's idle time triggers a write
    operation to the Core Token Service token store. Therefore, to avoid th=
e
    overhead of write operations to the token store, be careful to use the
    <code class=3D"literal">refresh</code> action only if you want to reset=
 a
    stateful session's idle time.
   </p><p>
    Because OpenAM does not monitor idle time for stateless sessions,
    do not use the <code class=3D"literal">tokenId</code> of a
    stateless session when refreshing a session's idle time.
   </p></div><div class=3D"section" id=3D"rest-api-session-logout"><div cla=
ss=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-session-logout">2.1.9.4.&nbsp;Invalidating Sessions</a></h4></div><=
/div></div><p>
    To invalidate a session, perform an HTTP POST to the <code class=3D"lit=
eral">/json/sessions/</code>
    endpoint using the <code class=3D"literal">logout</code> action. The en=
dpoint will invalidate the
    session token provided in the <code class=3D"literal">iPlanetDirectoryP=
ro</code> header by default. To
    refresh a different session token, include it as the value of the <code=
 class=3D"literal">tokenId</code>
    query parameter.
   </p><p>For example, the following shows an administrative user passing t=
heir session token
    in the <code class=3D"literal">iPlanetDirectoryPro</code> header, and t=
he session token of
    the <code class=3D"literal">demo</code> user as the <code class=3D"lite=
ral">tokenId</code> query parameter:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
http://openam.example.com:8080/openam/json/sessions/?_action=3Dlogout&amp;t=
okenId=3DBXCCq...NX*1*</strong>
<em class=3D"computeroutput">{
 "result": "Successfully logged out"
}</em></pre><p>
    On success, OpenAM invalidates the session and returns a success messag=
e.
   </p><p>
    If the token is not valid and cannot be invalidated an error message is=
 returned,
    as follows:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
><em class=3D"computeroutput">{
 "result": "Token has expired"
}</em></pre></div><div class=3D"section" id=3D"rest-api-session-properties"=
><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#rest-api-session-properties">2.1.9.5.&nbsp;Session Properties</a></h=
4></div></div></div><p>
    OpenAM lets you set, read, and delete properties on users' sessions usi=
ng
    REST API calls.
   </p><p>
    Before you can perform operations on session properties using the REST =
API,
    you must first define the properties you want to set in the Session Pro=
perty
    Whitelist Service configuration. For information on whitelisting sessio=
n
    properties, see
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/reference/i=
ndex.html#session-whitelist" class=3D"olink">"Session Property Whitelist"</=
a> in the <em>Reference</em>.
   </p><p>
    You can use REST API calls for the following purposes:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      To retrieve the names of the properties that you can read, set, or de=
lete.
      This is the same set of properties configured in the Session Property
      Whitelist Service.
     </p></li><li class=3D"listitem"><p>
      To set property values.
     </p></li><li class=3D"listitem"><p>
      To read property values.
     </p></li><li class=3D"listitem"><p>
      To delete property values. Deleting a property value sets the propert=
y
      to an empty string.
     </p></li></ul></div><p>
    Session state affects the ability to set and delete properties as follo=
ws:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      You can set and delete properties on a stateful session at any time d=
uring
      the session's lifetime.
     </p></li><li class=3D"listitem"><p>
      You can only set and delete properties on a stateless session during
      the authentication process, before the user receives the session toke=
n
      from OpenAM. For example, you could set or delete properties on a
      stateless session from within a post-authentication plugin.
     </p></li></ul></div><p>
    Differentiate the user who performs the operation on session properties=
 from
    the session affected by the operation as follows:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      Specify the session token of the user performing the operation on ses=
sion
      properties in the <code class=3D"literal">iPlanetDirectoryPro</code> =
header.
     </p></li><li class=3D"listitem"><p>
      Specify the session token of the user whose session is to be read or
      modified as the <code class=3D"literal">tokenId</code> parameter to t=
he REST API call.
     </p></li><li class=3D"listitem"><p>
      Omit the <code class=3D"literal">tokenId</code> parameter from the RE=
ST API call if
      the session of the user performing the operation is the session that =
you
      want to read or modify.
     </p></li></ul></div><p>
    The following examples assume that you configured a property named
    <code class=3D"literal">LoginLocation</code> in the Session Property Wh=
itelist Service
    configuration.
   </p><p>
    To retrieve the names of the properties you can get or set, perform an
    an HTTP POST to the resource URL, <code class=3D"literal">/json/session=
s/</code>,
    using the <code class=3D"literal">getPropertyNames</code> action as sho=
wn in the
    following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DgetPropert=
yNames</strong>
<em class=3D"computeroutput">{"properties":["LoginLocation"]}</em>
   </pre><p>
    To set the value of a session property, perform an HTTP POST to the
    resource URL, <code class=3D"literal">/json/sessions/</code>, using the
    <code class=3D"literal">setProperty</code> action. Because no <code cla=
ss=3D"literal">tokenId</code>
    parameter is present in the REST API call, the session affected by the
    operation is the session specified in the
    <code class=3D"literal">iPlanetDirectoryPro</code> header:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
--data '{"LoginLocation":"40.748440, -73.984559"}' \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DsetPropert=
y</strong>
<em class=3D"computeroutput">{"success":true}</em>
   </pre><p>
    You can set multiple properties in a single REST API call by specifying=
 a
    set of fields and their values in the JSON data. For example,
    <code class=3D"literal">--data '{"property1":"value1", "property2":"val=
ue2"}'</code>.
   </p><p>
    To set the value of a session property on another user's session, speci=
fy
    the session token of the user performing the <code class=3D"literal">se=
tProperty</code>
    action in the <code class=3D"literal">iPlanetDirectoryPro</code>, and s=
pecify the
    session token to be modified as the value of the <code class=3D"literal=
">tokenId</code>
    parameter:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
--data '{"LoginLocation":"40.748440, -73.984559"}' \
    http://openam.example.com:8080/openam/json/sessions/?_action=3DsetPrope=
rty&amp;tokenId=3DBXCCq...NX*1*</strong>
<em class=3D"computeroutput">{"success":true}</em>
   </pre><p>
    If the user attempting to modify the session does not have sufficient
    access privileges, the preceding example results in a 403 Forbidden err=
or.
   </p><p>
    To read the value of a session property, perform an HTTP POST to the
    resource URL, <code class=3D"literal">/json/sessions/</code>, using the
    <code class=3D"literal">getProperty</code> action:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
--data '{"properties": ["LoginLocation"]}' \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DgetPropert=
y</strong>
<em class=3D"computeroutput">{"LoginLocation":"40.748440, -73.984559"}</em>
   </pre><p>
    You can read multiple properties in a single REST API call
    by specifying an array of fields in the JSON data. For example,
    <code class=3D"literal">--data '{"properties": ["property1", "property2=
"]}'</code>.
   </p><p>
    To delete the value of a session property, perform an HTTP POST to the
    resource URL, <code class=3D"literal">/json/sessions/</code>, using the
    <code class=3D"literal">deleteProperty</code> action:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
--data '{"properties": ["LoginLocation"]}' \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DdeleteProp=
erty</strong>
<em class=3D"computeroutput">{"success":true}</em>
   </pre><p>
    You can not read or set properties internal to OpenAM sessions. If you
    specify an internal property in a REST API call, a 403 Forbidden error =
is
    returned. For example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iplanetDirectoryPro: AQIC5w...NTcy*" \
--data '{"properties": ["AuthLevel"]}' \
  http://openam.example.com:8080/openam/json/sessions/?_action=3DgetPropert=
y</strong>
<em class=3D"computeroutput">{"code":403,"reason":"Forbidden","message":"Fo=
rbidden"}</em>
   </pre></div></div><div class=3D"section" id=3D"rest-api-goto-url-validat=
ion"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"sel=
f-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/=
index.html#rest-api-goto-url-validation">2.1.10.&nbsp;REST Goto URL Validat=
ion</a></h3></div></div></div><p>
   You can set valid goto URLs using the OpenAM console by following the
   instructions in <a href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/admin-guide/index.html#configure-valid-goto-url-resources" class=3D"oli=
nk">"Configuring Valid goto URL Resources"</a> in the <em>Administration Gu=
ide</em>.
  </p><p>
   To validate a goto URL over REST, use the endpoint:
   <code class=3D"literal">/json/user?_action=3DvalidateGoto</code>.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
--request POST --header "Content-Type: application/json" \
--header "iPlanetDirectoryPro: AQIC5...ACMDE.*" \
--data "'{"goto":"http://www.example.com/"}' \
http://openam.example.com:8080/openam/json/users?_action=3DvalidateGoto
  </strong>
<em class=3D"computeroutput">{"successURL":"http://www.example.com/"}</em><=
/pre></div><div class=3D"section" id=3D"rest-api-logging"><div class=3D"tit=
lepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-lo=
gging">2.1.11.&nbsp;Logging</a></h3></div></div></div><p>
   OpenAM 13.5.2-15 supports two Audit Logging Services: a new
   common REST-based Audit Logging Service, and the legacy Logging Service,
   which is based on a Java SDK and is available in OpenAM versions prior t=
o
   OpenAM 13. The legacy Logging Service is deprecated in OpenAM
   13.5.2-15.
  </p><p>
   Both audit facilities log OpenAM REST API calls.
  </p><div class=3D"section" id=3D"common-audit-logging"><div class=3D"titl=
epage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#common-audit=
-logging">2.1.11.1.&nbsp;Common Audit Logging of REST API Calls</a></h4></d=
iv></div></div><p>
    OpenAM logs information about all REST API calls to the
    <code class=3D"filename">access</code> topic. For more information abou=
t OpenAM audit
    topics, see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/admin-guide/index.html#audit-log-topics" class=3D"olink">"Audit Log Topics=
"</a> in the <em>Administration Guide</em>.
   </p><p>
    Locate specific REST endpoints in the <code class=3D"literal">http.path=
</code> log file
    property.
   </p></div><div class=3D"section" id=3D"legacy-logging"><div class=3D"tit=
lepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#legacy-logg=
ing">2.1.11.2.&nbsp;Legacy Logging of REST API Calls</a></h4></div></div></=
div><p>
    OpenAM logs information about REST API calls to two files:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p><span class=3D"bold"><strong=
>amRest.access</strong></span>. Records accesses
      to a
      CREST endpoint, regardless of whether the request successfully reache=
d the
      endpoint through policy authorization.
     </p><p>
      An <code class=3D"literal">amRest.access</code> example is as follows=
:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">cat openam/openam/log/amRest.access</stron=
g>

<em class=3D"computeroutput">#Version: 1.0
#Fields: time  Data  LoginID  ContextID  IPAddr  LogLevel  Domain  LoggedBy=
  MessageID  ModuleName
NameID  HostName
"2011-09-14 16:38:17"   /home/user/openam/openam/log/ "cn=3Ddsameuser,ou=3D=
DSAME Users,o=3Dopenam"
aa307b2dcb721d4201 "Not Available" INFO  o=3Dopenam   "cn=3Ddsameuser,ou=3D=
DSAME Users,o=3Dopenam"
LOG-1  amRest.access  "Not Available"  192.168.56.2
"2011-09-14 16:38:17"  "Hello World"  id=3Dbjensen,ou=3Duser,o=3Dopenam 8a4=
025a2b3af291d01  "Not Available"
INFO  o=3Dopenam id=3Damadmin,ou=3Duser,o=3Dopenam "Not Available" amRest.a=
ccess "Not Available"
192.168.56.2</em></pre></li><li class=3D"listitem"><p><span class=3D"bold">=
<strong>amRest.authz</strong></span>. Records all CREST
      authorization results regardless of success. If a request has an entr=
y in the
      <code class=3D"literal">amRest.access</code> log, but no correspondin=
g entry in
      <code class=3D"literal">amRest.authz</code>, then that
      endpoint was not protected by an authorization filter and therefore t=
he
      request was granted access to the resource.
     </p><p>
      The <code class=3D"literal">amRest.authz</code> file contains the
      <code class=3D"literal">Data</code> field, which specifies the author=
ization decision,
      resource, and type of action performed on that resource.
      The <code class=3D"literal">Data</code> field has the following synta=
x:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint nohig=
hlight">("GRANT"||"DENY") &gt; "RESOURCE | ACTION"

where
  "GRANT &gt; " is prepended to the entry if the request was allowed
  "DENY  &gt; " is prepended to the entry if the request was not allowed
  "RESOURCE" is "ResourceLocation | ResourceParameter"
     where
       "ResourceLocation" is the endpoint location (e.g., subrealm/applicat=
iontypes)
       "ResourceParameter" is the ID of the resource being touched
        (e.g., myApplicationType) if applicable. Otherwise, this field is e=
mpty
        if touching the resource itself, such as in a query.

  "ACTION" is "ActionType | ActionParameter"
     where
       "ActionType" is "CREATE||READ||UPDATE||DELETE||PATCH||ACTION||QUERY"
       "ActionParameter" is one of the following depending on the ActionTyp=
e:
          For CREATE: the new resource ID
          For READ: empty
          For UPDATE: the revision of the resource to update
          For DELETE: the revision of the resource to delete
          For PATCH: the revision of the resource to patch
          For ACTION: the actual action performed (e.g., "forgotPassword")
          For QUERY: the query ID if any</pre><div class=3D"zero-clipboard =
hidden-xs hidden-print" title=3D"Copy command to clipboard"><span class=3D"=
btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre cl=
ass=3D"cmdline prettyprint nohighlight">$ <strong class=3D"userinput">cat o=
penam/openam/log/amRest.authz</strong>

<em class=3D"computeroutput">#Version: 1.0
#Fields: time   Data  ContextID  LoginID  IPAddr  LogLevel  Domain  Message=
ID  LoggedBy  NameID
ModuleName    HostName
"2014-09-16 14:17:28"   /var/root/openam/openam/log/   7d3af9e799b6393301
"cn=3Ddsameuser,ou=3DDSAME Users,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg" "Not =
Available" INFO
dc=3Dopenam,dc=3Dforgerock,dc=3Dorg  LOG-1  "cn=3Ddsameuser,ou=3DDSAME User=
s,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
"Not Available" amRest.authz    10.0.1.5
"2014-09-16 15:56:12"  "GRANT &gt; sessions|ACTION|logout|AdminOnlyFilter" =
 d3977a55a2ee18c201
id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg "Not Available" =
INFO  dc=3Dopenam,dc=3Dforgerock,dc=3Dorg
OAuth2Provider-2  "cn=3Ddsameuser,ou=3DDSAME Users,dc=3Dopenam,dc=3Dforgero=
ck,dc=3Dorg"  "Not Available"
amRest.authz    127.0.0.1
"2014-09-16 15:56:40"   "GRANT &gt; sessions|ACTION|logout|AdminOnlyFilter"=
  eedbc205bf51780001
id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg  "Not Available"=
 INFO dc=3Dopenam,dc=3Dforgerock,dc=3Dorg
OAuth2Provider-2  "cn=3Ddsameuser,ou=3DDSAME Users,dc=3Dopenam,dc=3Dforgero=
ck,dc=3Dorg"  "Not Available"
amRest.authz    127.0.0.1</em></pre></li></ul></div><p>
    OpenAM also provides additional information in its debug notifications =
for
    accesses to any endpoint,
    depending on the message type (error, warning or message) including rea=
lm,
    user, and result of the operation.
   </p></div></div><div class=3D"section" id=3D"rest-api-status-codes"><div=
 class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#rest-api-status-codes">2.1.12.&nbsp;REST Status Codes</a></h3></div></div=
></div><p>OpenAM REST APIs respond to successful requests with HTTP status =
codes
   in the 2xx range. OpenAM REST APIs respond to error conditions with HTTP
   status codes in the 4xx and 5xx range. Status codes used are described i=
n
   the following list:</p><div class=3D"variablelist"><dl class=3D"variable=
list"><dt><span class=3D"term">200 OK</span></dt><dd><p>The request was suc=
cessful and a resource returned, depending on the
      request. For example, a successful HTTP GET on
      <code class=3D"literal">/users/myUser</code> returns a user profile a=
nd status code
      200, whereas a successful HTTP DELETE returns
      <code class=3D"literal">{"success","true"}</code> and status code 200=
.</p></dd><dt><span class=3D"term">201 Created</span></dt><dd><p>The reques=
t succeeded and the resource was created.</p></dd><dt><span class=3D"term">=
400 Bad Request</span></dt><dd><p>The request was malformed. Either paramet=
ers required by the
       action were missing, or as in the following example incorrect data w=
as
       sent in the payload for the action:</p><div class=3D"zero-clipboard =
hidden-xs hidden-print" title=3D"Copy command to clipboard"><span class=3D"=
btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre cl=
ass=3D"cmdline prettyprint nohighlight">$ <strong class=3D"userinput">curl =
\
 --request POST \
 --header "Content-Type: application/json" \
 --data '{"bad":"data"}' \
 https://openam.example.com:8443/openam/json/users?_action=3DforgotPassword
</strong>
<em class=3D"computeroutput">{
 "code":400,
 "reason":"Bad Request",
 "message":"Username or email not provided in request"
}</em></pre></dd><dt><span class=3D"term">401 Unauthorized</span></dt><dd><=
p>The request requires user authentication as in the following
      example, which is missing an SSO Token value:</p><div class=3D"zero-c=
lipboard hidden-xs hidden-print" title=3D"Copy command to clipboard"><span =
class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></di=
v><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=3D"userinp=
ut">curl \
 --request POST \
 https://openam.example.com:8443/openam/json/sessions?_action=3Dlogout
</strong>
<em class=3D"computeroutput">{
 "code": 401,
 "reason": "Unauthorized",
 "message": "Access denied"
}</em></pre></dd><dt><span class=3D"term">403 Forbidden</span></dt><dd><p>A=
ccess was forbidden during an operation on a resource as in the
      following example, which has a regular user trying to read the OpenAM
      administrator profile:</p><div class=3D"zero-clipboard hidden-xs hidd=
en-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdli=
ne"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline=
 prettyprint nohighlight">$ <strong class=3D"userinput">curl \
 --request POST \
 --header "X-OpenAM-Username: demo" \
 --header "X-OpenAM-Password: changeit" \
 https://openam.example.com:8443/openam/json/authenticate
</strong>
<em class=3D"computeroutput">{ "tokenId": "AQIC5w...YyMA..*" }</em>

$ <strong class=3D"userinput">curl \
 --header "iplanetDirectoryPro: AQIC5w...YyMA..*" \
 https://openam.example.com:8443/openam/json/users/amadmin
</strong>
<em class=3D"computeroutput">{
 "code": 403,
 "reason": "Forbidden",
 "message": "Permission to perform the read operation denied to
             id=3Ddemo,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
}</em></pre></dd><dt><span class=3D"term">404 Not Found</span></dt><dd><p>T=
he specified resource could not be found as in the following
      example, which is attempting to read a nonexistent user's profile:</p=
><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command=
 to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-=
o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ <st=
rong class=3D"userinput">curl \
 --header "iplanetDirectoryPro: AQIC5w...NTcy*" \
 https://openam.example.com:8443/openam/json/users/missing
</strong>
<em class=3D"computeroutput">{
 "code":404,
 "reason":"Not Found",
 "message":"Resource cannot be found."
}</em></pre></dd><dt><span class=3D"term">405 Method Not Allowed</span></dt=
><dd><p>The HTTP method is not allowed for the requested resource.</p></dd>=
<dt><span class=3D"term">406 Not Acceptable</span></dt><dd><p>The request c=
ontains parameters that are not acceptable as in
     the following example, which specifies an API version parameter that
     is not supported by OpenAM:</p><div class=3D"zero-clipboard hidden-xs =
hidden-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-c=
mdline"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmd=
line prettyprint nohighlight">$ <strong class=3D"userinput">curl \
 --request POST \
 --header "X-OpenAM-Username: demo" \
 --header "X-OpenAM-Password: changeit" \
 --header "Accept-API-Version: protocol=3D1.0, resource=3D999.0" \
 https://openam.example.com:8443/openam/json/authenticate</strong>

<em class=3D"computeroutput">{
 "code":406,
 "reason":"Not Acceptable",
 "message":"Accept-API-Version: Requested version \"999.0\" does not match =
any routes."
}</em></pre></dd><dt><span class=3D"term">409 Conflict</span></dt><dd><p>Th=
e request would have resulted in a conflict with the current
      state of the resource. For example using the Forgot Password feature
       and specifying the user's email address as in the following
       example, where multiple users have the same email address:</p><div c=
lass=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to cli=
pboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></sp=
an></span></div><pre class=3D"cmdline prettyprint nohighlight">$ <strong cl=
ass=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --data '{"email":"demo@example.com"}' \
 https://openam.example.com:8443/openam/json/users?_action=3DforgotPassword
</strong>
<em class=3D"computeroutput">{
 "code":409,
 "reason":"Conflict",
 "message":"Multiple users found"
}</em></pre></dd><dt><span class=3D"term">410 Gone</span></dt><dd><p>The re=
quested resource is no longer available, and will not
       become available again. The URI returned for resetting a password ma=
y
       have expired as in the following example:</p><div class=3D"zero-clip=
board hidden-xs hidden-print" title=3D"Copy command to clipboard"><span cla=
ss=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></div><=
pre class=3D"cmdline prettyprint nohighlight">$ <strong class=3D"userinput"=
>curl \
 --request POST \
 --header "Content-Type: application/json" \
 --data '{"username": "demo"}' \
 https://openam.example.com:8443/openam/json/users/?_action=3DforgotPasswor=
d
</strong>
<em class=3D"computeroutput">{
 "code":410,
 "reason":"Gone",
 "message":"Token not found"
}</em></pre></dd><dt><span class=3D"term">415 Unsupported Media Type</span>=
</dt><dd><p>The request is in a format not supported by the requested resou=
rce
      for the requested method as in the following example, which is attemp=
ting
      to pass basic authentication credentials as form-encoded data rather =
than
      query string parameters:</p><div class=3D"zero-clipboard hidden-xs hi=
dden-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmd=
line"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdli=
ne prettyprint nohighlight">$ <strong class=3D"userinput">curl \
 --request POST \
 --data "username=3Ddemo&amp;password=3Dchangeit" \
 https://openam.example.com:8443/openam/json/authenticate
</strong>
<em class=3D"computeroutput">...
HTTP Status 415
...
The server refused this request because the request entity is in a
format not supported by the requested resource for the requested method
...</em></pre></dd><dt><span class=3D"term">500 Internal Server Error</span=
></dt><dd><p>The server encountered an unexpected condition which prevented=
 it
      from fulfilling the request. This could be caused by an invalid
       configuration in the Email Service, or as in the following example t=
he
       specified user account not  having an associated email address to se=
nd
       the Forgot Password URI to:</p><div class=3D"zero-clipboard hidden-x=
s hidden-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy=
-cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"c=
mdline prettyprint nohighlight">$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --data '{"username": "demo"}' \
 https://openam.example.com:8443/openam/json/users/?_action=3DforgotPasswor=
d
</strong>
<em class=3D"computeroutput">{
 "code":500,
 "reason":"Internal Server Error",
 "message":"No email provided in profile."
}</em></pre></dd><dt><span class=3D"term">501 Not Implemented</span></dt><d=
d><p>The resource does not support the functionality required to fulfill
      the request as in the following example, which is attempting to delet=
e
      an entry as a delete action instead of using an HTTP DELETE request:<=
/p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comma=
nd to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-file=
s-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ <=
strong class=3D"userinput">curl \
 --request POST \
 --header "iplanetDirectoryPro: AQIC5w...NTcy*" \
 https://openam.example.com:8443/openam/json/users/demo?_action=3Ddelete
</strong>
<em class=3D"computeroutput">{
 "code": 501,
 "reason": "Not Implemented",
 "message": "Actions are not supported for resource instances"
}</em></pre></dd><dt><span class=3D"term">503 Service Unavailable</span></d=
t><dd><p>The requested resource was temporarily unavailable. The
       service may have been disabled, as in the following example,
       where the Forgot Password functionality has been disabled:</p><div c=
lass=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to cli=
pboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></sp=
an></span></div><pre class=3D"cmdline prettyprint nohighlight">$ <strong cl=
ass=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --data '{"username": "demo"}' \
 https://openam.example.com:8443/openam/json/users/?_action=3DforgotPasswor=
d
</strong>
<em class=3D"computeroutput">{
 "code":503,
 "reason":"Service Unavailable",
 "message":"Forgot password is not accessible."
}</em></pre></dd></dl></div></div><div class=3D"section" id=3D"sec-rest-aut=
hz-policy"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#sec-rest-authz-policy">2.1.13.&nbsp;RESTful Authorization=
 and Policy Management Services</a></h3></div></div></div><a class=3D"index=
term" name=3D"d15472e2706"></a><p>This section shows how to use the OpenAM =
RESTful interfaces for
  authorization and policy management.
 </p><div class=3D"section" id=3D"rest-api-authz"><div class=3D"titlepage">=
<div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz">2.1=
.13.1.&nbsp;About the REST Policy Endpoints</a></h4></div></div></div><a cl=
ass=3D"indexterm" name=3D"d15472e2714"></a><p>
   OpenAM provides REST APIs both for requesting policy decisions,
   and also for administering policy definitions.
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     Under
     <code class=3D"literal">/json{/<em class=3D"replaceable">realm</em>}/r=
esourcetypes</code>,
     you find a JSON-based API for managing resource types.
    </p></li><li class=3D"listitem"><p>
     Under
     <code class=3D"literal">/json{/<em class=3D"replaceable">realm</em>}/a=
pplications</code>
     and <code class=3D"literal">/json/applicationtypes</code>
     you find JSON-based APIs
     for administering policy sets and reading application types.
    </p></li><li class=3D"listitem"><p>
     Under <code class=3D"literal">/json{/<em class=3D"replaceable">realm</=
em>}/policies</code>,
     you find a JSON-based API for policy management and evaluation.
    </p></li><li class=3D"listitem"><p>
     Under <code class=3D"literal">/json/conditiontypes</code> you find a J=
SON-based API
     for viewing what types of conditions you can use when defining policie=
s.
    </p></li><li class=3D"listitem"><p>
     Under <code class=3D"literal">/json/subjecttypes</code> you find a JSO=
N-based API
     for viewing what types of subjects you can use when defining policies.
    </p></li><li class=3D"listitem"><p>
     Under <code class=3D"literal">/json/subjectattributes</code> you find =
a JSON-based API
     for viewing subjects' attributes you can use when defining response
     attributes in policies.
    </p></li><li class=3D"listitem"><p>
     Under <code class=3D"literal">/json/decisioncombiners</code> you find =
a JSON-based API
     for viewing implementations you can use when defining policies
     to specify how to combine results when multiple policies apply.
    </p></li></ul></div><p>
   Before making a REST API call to request a policy decision or manage a
   policy component, make sure that you have:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      Authenticated successfully to OpenAM as a user with sufficient privil=
eges
      to make the REST API call
     </p></li><li class=3D"listitem"><p>
      Obtained the session token returned after successful authentication
     </p></li></ul></div><p>
   When making the REST API call, pass the session token in the HTTP header=
.
   For more information about the OpenAM session token and its use in REST =
API
   calls, see <a class=3D"xref" href=3D"https://backstage.forgerock.com/doc=
s/openam/13.5/dev-guide/index.html#rest-api-ssotoken" title=3D"2.1.6.&nbsp;=
Using the Session Token After Authentication">"Using the Session Token Afte=
r Authentication"</a>.
  </p></div><div class=3D"section" id=3D"rest-api-authz-policy-decisions"><=
div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link=
" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#rest-api-authz-policy-decisions">2.1.13.2.&nbsp;Requesting Policy Deci=
sions</a></h4></div></div></div><p>
   You can request policy decisions from OpenAM
   by using the REST APIs described in this section.
   OpenAM evaluates requests
   based on the context and the policies configured,
   and returns decisions that indicate what actions are allowed or denied,
   as well as any attributes or advice
   for the resources specified.
  </p><p>
   To request decisions for specific resources,
   see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#rest-api-authz-policy-decision-concrete" title=
=3D"2.1.13.2.1.&nbsp;Requesting Policy Decisions For Specific Resources">"R=
equesting Policy Decisions For Specific Resources"</a>.
  </p><p>
   To request decisions for a resource and all resources beneath it,
   see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#rest-api-authz-policy-decision-subtree" title=
=3D"2.1.13.2.3.&nbsp;Requesting Policy Decisions For a Tree of Resources">"=
Requesting Policy Decisions For a Tree of Resources"</a>.
  </p><div class=3D"section" id=3D"rest-api-authz-policy-decision-concrete"=
><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#rest-api-authz-policy-decision-concrete">2.1.13.2.1.&nbsp;Requesting=
 Policy Decisions For Specific Resources</a></h5></div></div></div><p>
    This section shows how you can request a policy decision over REST
    for specific resources.
   </p><p>
    To request policy decisions for specific resources,
    perform an HTTP POST using the evaluation action
    to the appropriate path under the URI where OpenAM is deployed,
    <code class=3D"literal">/json{/<em class=3D"replaceable">realm</em>}{/<=
em class=3D"replaceable">subrealm</em>}/policies?_action=3Devaluate</code>,
    where <em class=3D"replaceable">realm</em> and
    <em class=3D"replaceable">subrealm</em>
    optionally specifies the realm.
    The payload for the HTTP POST is a JSON object
    that specifies at least the resources,
    and takes the following form.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"resources"</span>: [
        <span class=3D"hljs-string">"resource1"</span>,
        <span class=3D"hljs-string">"resource2"</span>,
        ...,
        <span class=3D"hljs-string">"resourceN"</span>
    ],
    <span class=3D"hljs-string">"application"</span>: <span class=3D"hljs-s=
tring">"defaults to iPlanetAMWebAgentService if not specified"</span>,
    <span class=3D"hljs-string">"subject"</span>: {
        <span class=3D"hljs-string">"ssoToken"</span>: <span class=3D"hljs-=
string">"SSO token ID string"</span>,
        <span class=3D"hljs-string">"jwt"</span>: <span class=3D"hljs-strin=
g">"JSON Web Token string"</span>,
        <span class=3D"hljs-string">"claims"</span>: {
            <span class=3D"hljs-string">"key"</span>: <span class=3D"hljs-s=
tring">"value"</span>,
            ...
        }
    },
    <span class=3D"hljs-string">"environment"</span>: {
        <span class=3D"hljs-string">"optional key1"</span>: [
            <span class=3D"hljs-string">"value"</span>,
            <span class=3D"hljs-string">"another value"</span>,
            ...
        ],
        <span class=3D"hljs-string">"optional key2"</span>: [
            <span class=3D"hljs-string">"value"</span>,
            <span class=3D"hljs-string">"another value"</span>,
            ...
        ],
        ...
    }
}</pre><div class=3D"variablelist"><p>
     The values for the fields shown above are explained below:
    </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"=
literal">"resources"</code></span></dt><dd><p>
       This required field specifies the list of resources
       for which to return decisions.
      </p><p>
       For example, when using the default policy set,
       <code class=3D"literal">"iPlanetAMWebAgentService"</code>,
       you can request decisions for resource URLs.
      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint java=
script hljs">{
    <span class=3D"hljs-string">"resources"</span>: [
        <span class=3D"hljs-string">"http://www.example.com/index.html"</sp=
an>,
        <span class=3D"hljs-string">"http://www.example.com/do?action=3Drun=
"</span>
    ]
}</pre></dd><dt><span class=3D"term"><code class=3D"literal">"application"<=
/code></span></dt><dd><p>
       This field holds the name of the policy set,
       and defaults to <code class=3D"literal">"iPlanetAMWebAgentService"</=
code>
       if not specified.
      </p><p>
       For more on policy sets,
       see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#rest-api-authz-applications" title=3D"2.1.1=
3.5.&nbsp;Managing Policy Sets">"Managing Policy Sets"</a>.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"subject"</=
code></span></dt><dd><p>
      </p><div class=3D"variablelist"><p>
        This optional field holds an object that represents the subject.
        You can specify one or more of the following keys.
        If you specify multiple keys,
        the subject can have multiple associated principals,
        and you can use subject conditions corresponding to any type in the=
 request.
       </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=
=3D"literal">"ssoToken"</code></span></dt><dd><p>
          The value is the SSO token ID string for the subject,
          returned for example on successful authentication as described in
          <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#rest-api-auth" title=3D"2.1.5.&nbsp;Authenti=
cation and Logout">"Authentication and Logout"</a>.
         </p></dd><dt><span class=3D"term"><code class=3D"literal">"jwt"</c=
ode></span></dt><dd><p>
          The value is a JWT string.
         </p></dd><dt><span class=3D"term"><code class=3D"literal">"claims"=
</code></span></dt><dd><p>
          The value is an object (map) of JWT claims to their values.
         </p></dd></dl></div><p>
       If you do not specify the subject,
       OpenAM uses the SSO token ID of the subject making the request.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"environmen=
t"</code></span></dt><dd><p>
       This optional field holds a map of keys to lists of values.
      </p><p>
       If you do not specify the environment, the default is an empty map.
      </p></dd></dl></div><p>
    The example below requests policy decisions for two URL resources.
    The <code class=3D"literal">iPlanetDirectoryPro</code> header sets the =
SSO token
    for a user who has access to perform the operation.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
 --request POST \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span=
> \
 --data '{
    <span class=3D"hljs-attr">"resources"</span>: [
        <span class=3D"hljs-string">"http://www.example.com/index.html"</sp=
an>,
        <span class=3D"hljs-string">"http://www.example.com/do?action=3Drun=
"</span>
    ],
    <span class=3D"hljs-attr">"application"</span>: <span class=3D"hljs-str=
ing">"iPlanetAMWebAgentService"</span>
 }' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/p=
olicies?_action=3Devaluate</span>
 [ {
  <span class=3D"hljs-attr">"resource"</span> : <span class=3D"hljs-string"=
>"http://www.example.com/do?action=3Drun"</span>,
  <span class=3D"hljs-attr">"actions"</span> : {
  },
  <span class=3D"hljs-attr">"attributes"</span> : {
  },
  <span class=3D"hljs-attr">"advices"</span> : {
    <span class=3D"hljs-attr">"AuthLevelConditionAdvice"</span> : [ <span c=
lass=3D"hljs-string">"3"</span> ]
  }
}, {
  <span class=3D"hljs-attr">"resource"</span> : <span class=3D"hljs-string"=
>"http://www.example.com/index.html"</span>,
  <span class=3D"hljs-attr">"actions"</span> : {
    <span class=3D"hljs-attr">"POST"</span> : <span class=3D"hljs-literal">=
false</span>,
    <span class=3D"hljs-attr">"GET"</span> : <span class=3D"hljs-literal">t=
rue</span>
  },
  <span class=3D"hljs-attr">"attributes"</span> : {
    <span class=3D"hljs-attr">"cn"</span> : [ <span class=3D"hljs-string">"=
demo"</span> ]
  },
  <span class=3D"hljs-attr">"advices"</span> : {
  }
 }
]</pre><div class=3D"variablelist"><p>
     In the JSON list of decisions returned for each resource,
     OpenAM includes these fields.
    </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"=
literal">"resource"</code></span></dt><dd><p>
       A resource specified in the request.
      </p><p>
       The decisions returned are not guaranteed
       to be in the same order as the resources were requested.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"actions"</=
code></span></dt><dd><p>
       A map of action name keys
       to Boolean values that indicate whether
       the action is allowed (<code class=3D"literal">true</code>)
       or denied (<code class=3D"literal">false</code>)
       for the specified resource.
      </p><p>
       In the example,
       for resource <code class=3D"literal">http://www.example.com:80/index=
.html</code>
       HTTP GET is allowed, whereas HTTP POST is denied.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"attributes=
"</code></span></dt><dd><p>
       A map of attribute names to their values,
       if any response attributes are returned
       according to applicable policies.
      </p><p>
       In the example, the policy that applies
       to <code class=3D"literal">http://www.example.com:80/index.html</cod=
e>
       causes that the value of the subject's "cn" profile attribute
       to be returned.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"advices"</=
code></span></dt><dd><p>
       A map of advice names to their values,
       if any advice is returned according to applicable policies.
      </p><p>
       The <code class=3D"literal">"advices"</code> field can provide hints
       regarding what OpenAM needs to take the authorization decision.
      </p><p>
       In the example, the policy that applies
       to <code class=3D"literal">http://www.example.com:80/do?action=3Drun=
</code>
       requests that the subject be authenticated
       at an authentication level of at least 3.
      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint java=
script hljs">{
    <span class=3D"hljs-string">"advices"</span>: {
        <span class=3D"hljs-string">"AuthLevelConditionAdvice"</span>: [
            <span class=3D"hljs-string">"3"</span>
        ]
    }
}</pre><p>
       See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#rest-api-authz-policy-decision-advice" titl=
e=3D"2.1.13.2.2.&nbsp;Policy Decision Advice">"Policy Decision Advice"</a> =
for details.
      </p></dd></dl></div><p>
    You can use the query string parameters
    <code class=3D"literal">_prettyPrint=3Dtrue</code> to make the output e=
asier to read,
    and <code class=3D"literal">_fields=3D<em class=3D"replaceable">field-n=
ame</em>[,<em class=3D"replaceable">field-name</em>...]</code>
    to limit the fields returned in the output.
   </p></div><div class=3D"section" id=3D"rest-api-authz-policy-decision-ad=
vice"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#rest-api-authz-policy-decision-advice">2.1.13.2.2.&nbsp;Policy =
Decision Advice</a></h5></div></div></div><p>
    When OpenAM returns a policy decision,
    the JSON for the decision can include an "advices" field.
    This field contains hints for the policy enforcement point.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"advices"</span>: {
        <span class=3D"hljs-string">"type"</span>: [
            <span class=3D"hljs-string">"advice"</span>
        ]
    }
}</pre><p>
    The "advices" returned depend on policy conditions. For more
    information about OpenAM policy conditions, see
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-authz-policies" title=3D"2.1.13.6.&nbsp;M=
anaging Policies">"Managing Policies"</a>.
   </p><p>
    This section shows examples of the different types
    of policy decision advice
    and the conditions that cause OpenAM to return the advice.
   </p><p>
    <code class=3D"literal">"AuthLevel"</code>
    and
    <code class=3D"literal">"LEAuthLevel"</code>
    condition failures can result in advice
    showing the expected or maximum possible authentication level.
    For example, failure against the following condition:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AuthLevel"</span>,
    <span class=3D"hljs-string">"authLevel"</span>: <span class=3D"hljs-num=
ber">2</span>
}</pre><p>
    Leads to this advice:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"AuthLevelConditionAdvice"</span>: [
        <span class=3D"hljs-string">"2"</span>
    ]
}</pre><p>
    An <code class=3D"literal">"AuthScheme"</code>
    condition failure can result in advice
    showing one or more required authentication modules.
    For example, failure against the following condition:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AuthScheme"</span>,
    <span class=3D"hljs-string">"authScheme"</span>: [
        <span class=3D"hljs-string">"HOTP"</span>
    ],
    <span class=3D"hljs-string">"applicationName"</span>: <span class=3D"hl=
js-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-string">"applicationIdleTimeout"</span>: <span clas=
s=3D"hljs-number">10</span>
}</pre><p>
    Leads to this advice:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"AuthSchemeConditionAdvice"</span>: [
        <span class=3D"hljs-string">"HOTP"</span>
    ]
}</pre><p>
    An
    <code class=3D"literal">"AuthenticateToRealm"</code>
    condition failure can result in advice
    showing the name of the realm to which authentication
    is required. For example, failure against the following condition:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AuthenticateToRealm"</span>,
    <span class=3D"hljs-string">"authenticateToRealm"</span>: <span class=
=3D"hljs-string">"MyRealm"</span>
}</pre><p>
    Leads to this advice:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"AuthenticateToRealmConditionAdvice"</span>=
: [
        <span class=3D"hljs-string">"/myRealm"</span>
    ]
}</pre><p>
    An
    <code class=3D"literal">"AuthenticateToService"</code>
    condition failure can result in advice
    showing the name of the required authentication chain.
    For example, failure against the following condition:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AuthenticateToService"</span>,
    <span class=3D"hljs-string">"authenticateToService"</span>: <span class=
=3D"hljs-string">"MyAuthnChain"</span>
}</pre><p>
    Leads to this advice:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"AuthenticateToServiceConditionAdvice"</spa=
n>: [
        <span class=3D"hljs-string">"MyAuthnChain"</span>
    ]
}</pre><p>
    A
    <code class=3D"literal">"ResourceEnvIP"</code>
    condition failure can result in advice
    showing that indicates corrective action to be taken
    to resolve the problem. The advice varies, depending on what the condit=
ion
    tests. For example, failure against the following condition:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"ResourceEnvIP"</span>,
    <span class=3D"hljs-string">"resourceEnvIPConditionValue"</span>: [
        <span class=3D"hljs-string">"IF IP=3D[127.0.0.12] THEN authlevel=3D=
4"</span>
    ]
}</pre><p>
    Leads to this advice:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"AuthLevelConditionAdvice"</span>: [
        <span class=3D"hljs-string">"4"</span>
    ]
}</pre><p>
    Failure against a different type of
    <code class=3D"literal">"ResourceEnvIP"</code>
    condition such as the following:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"ResourceEnvIP"</span>,
    <span class=3D"hljs-string">"resourceEnvIPConditionValue"</span>: [
        <span class=3D"hljs-string">"IF IP=3D[127.0.0.11] THEN service=3DMy=
AuthnChain"</span>
    ]
}</pre><p>
    Leads to this advice:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"AuthenticateToServiceConditionAdvice"</spa=
n>: [
        <span class=3D"hljs-string">"MyAuthnChain"</span>
    ]
}</pre><p>
    A
    <code class=3D"literal">"Session"</code>
    condition failure can result in advice
    showing that access has been denied because
    the user's stateful or stateless session has been active
    longer than allowed by the condition.
    The advice will also show if the user's session
    was terminated and reauthentication is required.
    For example, failure against the following condition:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"Session"</span>,
    <span class=3D"hljs-string">"maxSessionTime"</span>: <span class=3D"hlj=
s-string">"10"</span>,
    <span class=3D"hljs-string">"terminateSession"</span>: <span class=3D"h=
ljs-literal">false</span>
}</pre><p>
    Leads to this advice:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"SessionConditionAdvice"</span>: [
        <span class=3D"hljs-string">"deny"</span>
    ]
}</pre><p>
    When policy evaluation denials occur against the following conditions,
    OpenAM does not return any advice:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
       <code class=3D"literal">IPv4</code>
      </p></li><li class=3D"listitem"><p>
       <code class=3D"literal">IPv6</code>
      </p></li><li class=3D"listitem"><p>
       <code class=3D"literal">LDAPFilter</code>
      </p></li><li class=3D"listitem"><p>
       <code class=3D"literal">OAuth2Scope</code>
      </p></li><li class=3D"listitem"><p>
       <code class=3D"literal">SessionProperty</code>
      </p></li><li class=3D"listitem"><p>
       <code class=3D"literal">SimpleTime</code>
      </p></li></ul></div><p>
   </p></div><div class=3D"section" id=3D"rest-api-authz-policy-decision-su=
btree"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"s=
elf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#rest-api-authz-policy-decision-subtree">2.1.13.2.3.&nbsp;Reque=
sting Policy Decisions For a Tree of Resources</a></h5></div></div></div><p=
>
    This section shows how you can request policy decisions over REST
    for a resource and all other resources in the subtree beneath it.
   </p><p>
    To request policy decisions for a tree of resources,
    perform an HTTP POST using the evaluation action to the appropriate pat=
h
    under the URI where OpenAM is deployed,
    <code class=3D"literal">/json{/<em class=3D"replaceable">realm</em>}/po=
licies?_action=3DevaluateTree</code>,
    where <em class=3D"replaceable">realm</em> optionally specifies the rea=
lm.
    The payload for the HTTP POST is a JSON object that specifies
    at least the root resource, and takes the following form.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"resource"</span>: <span class=3D"hljs-stri=
ng">"resource string"</span>,
    <span class=3D"hljs-string">"application"</span>: <span class=3D"hljs-s=
tring">"defaults to iPlanetAMWebAgentService if not specified"</span>,
    <span class=3D"hljs-string">"subject"</span>: {
        <span class=3D"hljs-string">"ssoToken"</span>: <span class=3D"hljs-=
string">"SSO token ID string"</span>,
        <span class=3D"hljs-string">"jwt"</span>: <span class=3D"hljs-strin=
g">"JSON Web Token string"</span>,
        <span class=3D"hljs-string">"claims"</span>: {
            <span class=3D"hljs-string">"key"</span>: <span class=3D"hljs-s=
tring">"value"</span>,
            ...
        }
    },
    <span class=3D"hljs-string">"environment"</span>: {
        <span class=3D"hljs-string">"optional key1"</span>: [
            <span class=3D"hljs-string">"value"</span>,
            <span class=3D"hljs-string">"another value"</span>,
            ...
        ],
        <span class=3D"hljs-string">"optional key2"</span>: [
            <span class=3D"hljs-string">"value"</span>,
            <span class=3D"hljs-string">"another value"</span>,
            ...
        ],
        ...
    }
}</pre><div class=3D"variablelist"><p>
     The values for the fields shown above are explained below:
    </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"=
literal">"resource"</code></span></dt><dd><p>
       This required field specifies the root resource
       for the decisions to return.
      </p><p>
       For example, when using the default policy set,
       <code class=3D"literal">"iPlanetAMWebAgentService"</code>,
       you can request decisions for resource URLs.
      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint java=
script hljs">{
    <span class=3D"hljs-string">"resource"</span>: <span class=3D"hljs-stri=
ng">"http://www.example.com/"</span>
}</pre></dd><dt><span class=3D"term"><code class=3D"literal">"application"<=
/code></span></dt><dd><p>
       This field holds the name of the policy set,
       and defaults to <code class=3D"literal">"iPlanetAMWebAgentService"</=
code>
       if not specified.
      </p><p>
       For more on policy sets,
       see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#rest-api-authz-applications" title=3D"2.1.1=
3.5.&nbsp;Managing Policy Sets">"Managing Policy Sets"</a>.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"subject"</=
code></span></dt><dd><p>
      </p><div class=3D"variablelist"><p>
        This optional field holds an object that represents the subject.
        You can specify one or more of the following keys.
        If you specify multiple keys,
        the subject can have multiple associated principals,
        and you can use subject conditions corresponding to any type in the=
 request.
       </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=
=3D"literal">"ssoToken"</code></span></dt><dd><p>
          The value is the SSO token ID string for the subject,
          returned for example on successful authentication as described in=
,
          <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#rest-api-auth" title=3D"2.1.5.&nbsp;Authenti=
cation and Logout">"Authentication and Logout"</a>.
         </p></dd><dt><span class=3D"term"><code class=3D"literal">"jwt"</c=
ode></span></dt><dd><p>
          The value is a JWT string.
         </p></dd><dt><span class=3D"term"><code class=3D"literal">"claims"=
</code></span></dt><dd><p>
          The value is an object (map) of JWT claims to their values.
         </p></dd></dl></div><p>
       If you do not specify the subject,
       OpenAM uses the SSO token ID of the subject making the request.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"environmen=
t"</code></span></dt><dd><p>
       This optional field holds a map of keys to lists of values.
      </p><p>
       If you do not specify the environment, the default is an empty map.
      </p></dd></dl></div><p>
    The example below requests policy decisions
    for <code class=3D"literal">http://www.example.com/</code>.
    The <code class=3D"literal">iPlanetDirectoryPro</code> header sets the =
SSO token
    for a user who has access to perform the operation,
    and the subject takes the SSO token of the user
    who wants to access a resource.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js"> $ curl \
 --request POST \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5...NDU1*"<=
/span> \
 --data '{
    <span class=3D"hljs-attr">"resource"</span>: <span class=3D"hljs-string=
">"http://www.example.com/"</span>,
    <span class=3D"hljs-attr">"subject"</span>: { <span class=3D"hljs-attr"=
>"ssoToken"</span>: <span class=3D"hljs-string">"AQIC5...zE4*"</span> }
 }' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/p=
olicies?_action=3DevaluateTree</span>
 [ {
  <span class=3D"hljs-attr">"resource"</span> : <span class=3D"hljs-string"=
>"http://www.example.com/"</span>,
  <span class=3D"hljs-attr">"actions"</span> : {
    <span class=3D"hljs-attr">"GET"</span> : <span class=3D"hljs-literal">t=
rue</span>,
    <span class=3D"hljs-attr">"OPTIONS"</span> : <span class=3D"hljs-litera=
l">true</span>,
    <span class=3D"hljs-attr">"HEAD"</span> : <span class=3D"hljs-literal">=
true</span>
  },
  <span class=3D"hljs-attr">"attributes"</span> : {
  },
  <span class=3D"hljs-attr">"advices"</span> : {
  }
}, {
  <span class=3D"hljs-attr">"resource"</span> : <span class=3D"hljs-string"=
>"http://www.example.com/*"</span>,
  <span class=3D"hljs-attr">"actions"</span> : {
    <span class=3D"hljs-attr">"POST"</span> : <span class=3D"hljs-literal">=
false</span>,
    <span class=3D"hljs-attr">"PATCH"</span> : <span class=3D"hljs-literal"=
>false</span>,
    <span class=3D"hljs-attr">"GET"</span> : <span class=3D"hljs-literal">t=
rue</span>,
    <span class=3D"hljs-attr">"DELETE"</span> : <span class=3D"hljs-literal=
">true</span>,
    <span class=3D"hljs-attr">"OPTIONS"</span> : <span class=3D"hljs-litera=
l">true</span>,
    <span class=3D"hljs-attr">"HEAD"</span> : <span class=3D"hljs-literal">=
true</span>,
    <span class=3D"hljs-attr">"PUT"</span> : <span class=3D"hljs-literal">t=
rue</span>
  },
  <span class=3D"hljs-attr">"attributes"</span> : {
    <span class=3D"hljs-attr">"myStaticAttr"</span> : [ <span class=3D"hljs=
-string">"myStaticValue"</span> ]
  },
  <span class=3D"hljs-attr">"advices"</span> : {
  }
}, {
  <span class=3D"hljs-attr">"resource"</span> : <span class=3D"hljs-string"=
>"http://www.example.com/*?*"</span>,
  <span class=3D"hljs-attr">"actions"</span> : {
    <span class=3D"hljs-attr">"POST"</span> : <span class=3D"hljs-literal">=
false</span>,
    <span class=3D"hljs-attr">"PATCH"</span> : <span class=3D"hljs-literal"=
>false</span>,
    <span class=3D"hljs-attr">"GET"</span> : <span class=3D"hljs-literal">f=
alse</span>,
    <span class=3D"hljs-attr">"DELETE"</span> : <span class=3D"hljs-literal=
">false</span>,
    <span class=3D"hljs-attr">"OPTIONS"</span> : <span class=3D"hljs-litera=
l">true</span>,
    <span class=3D"hljs-attr">"HEAD"</span> : <span class=3D"hljs-literal">=
false</span>,
    <span class=3D"hljs-attr">"PUT"</span> : <span class=3D"hljs-literal">f=
alse</span>
  },
  <span class=3D"hljs-attr">"attributes"</span> : {
  },
  <span class=3D"hljs-attr">"advices"</span> : {
    <span class=3D"hljs-attr">"AuthLevelConditionAdvice"</span> : [ <span c=
lass=3D"hljs-string">"3"</span> ]
  }
} ]</pre><p>
    Notice that OpenAM returns decisions not only for the specified resourc=
e,
    but also for matching resource names
    in the tree whose root is the specified resource.
   </p><div class=3D"variablelist"><p>
     In the JSON list of decisions returned for each resource,
     OpenAM includes these fields.
    </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"=
literal">"resource"</code></span></dt><dd><p>
       A resource name whose root is the resource specified in the request.
      </p><p>
       The decisions returned are not guaranteed
       to be in the same order as the resources were requested.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"actions"</=
code></span></dt><dd><p>
       A map of action name keys
       to Boolean values that indicate whether
       the action is allowed (<code class=3D"literal">true</code>)
       or denied (<code class=3D"literal">false</code>)
       for the specified resource.
      </p><p>
       In the example, for matching resources with a query string
       only HTTP OPTIONS is allowed according to the policies configured.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"attributes=
"</code></span></dt><dd><p>
       A map of attribute names to their values,
       if any response attributes are returned
       according to applicable policies.
      </p><p>
       In the example, the policy that applies
       to <code class=3D"literal">http://www.example.com:80/*</code>
       causes a static attribute to be returned.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"advices"</=
code></span></dt><dd><p>
       A map of advice names to their values,
       if any advice is returned according to applicable policies.
      </p><p>
       The <code class=3D"literal">"advices"</code> field can provide hints
       regarding what OpenAM needs to take the authorization decision.
      </p><p>
       In the example, the policy that applies
       to resources with a query string
       requests that the subject be authenticated
       at an authentication level of at least 3.
      </p><p>
       Notice that with the <code class=3D"literal">"advices"</code> field
       present, no <code class=3D"literal">"advices"</code> appear in the
       JSON response.
      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint java=
script hljs">{
    <span class=3D"hljs-string">"advices"</span>: {
        <span class=3D"hljs-string">"AuthLevelConditionAdvice"</span>: [ <s=
pan class=3D"hljs-string">"3"</span> ]
    }
}</pre></dd></dl></div><p>
    You can use the query string parameters
    <code class=3D"literal">_prettyPrint=3Dtrue</code> to make the output e=
asier to read,
    and <code class=3D"literal">_fields=3D<em class=3D"replaceable">field-n=
ame</em>[,<em class=3D"replaceable">field-name</em>...]</code>
    to limit the fields returned in the output.
   </p></div></div><div class=3D"section" id=3D"rest-api-authz-resource-typ=
es"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self=
-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#rest-api-authz-resource-types">2.1.13.3.&nbsp;Managing Resource T=
ypes</a></h4></div></div></div><a class=3D"indexterm" name=3D"d15472e3331">=
</a><p>
   This section describes the process of using the OpenAM REST API for mana=
ging
   resource types, which define a template for the resources that <a class=
=3D"link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#rest-api-authz-policies" title=3D"2.1.13.6.&nbsp;Managing Poli=
cies">policies</a> apply
   to, and the actions associated with those resources.
  </p><p>For information on creating resource types by using the OpenAM
  console, see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
admin-guide/index.html#what-is-authz-policies" class=3D"olink">"OpenAM Reso=
urce Types, Policy Sets, and Policies"</a> in the <em>Administration Guide<=
/em>.</p><div class=3D"itemizedlist"><p>OpenAM provides the <code class=3D"=
literal">resourcetypes</code> REST endpoint
    for the following:</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-r=
esource-types-query" title=3D"2.1.13.3.1.&nbsp;Querying Resource Types">"Qu=
erying Resource Types"</a></p></li><li class=3D"listitem"><p><a class=3D"xr=
ef" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#rest-api-authz-resource-types-read" title=3D"2.1.13.3.2.&nbsp;Readin=
g a Specific Resource Type">"Reading a Specific Resource Type"</a></p></li>=
<li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-resource-type=
s-create" title=3D"2.1.13.3.3.&nbsp;Creating a Resource Type">"Creating a R=
esource Type"</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-authz-resource-types-update" title=3D"2.1.13.3.4.&nbsp;Updating a R=
esource Type">"Updating a Resource Type"</a></p></li><li class=3D"listitem"=
><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-authz-resource-types-delete" title=3D"2.1=
.13.3.5.&nbsp;Deleting a Specific Resource Type">"Deleting a Specific Resou=
rce Type"</a></p></li></ul></div><p>
   Resource types are realm specific, hence the URI for the resource
   types API can contain a realm component, such as
   <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/res=
ourcetypes</code>.
   If the realm is not specified in the URI, the top level realm is
   used.</p><p>
   Resource types are represented in JSON and take the following form.
   Resource types are built from standard JSON objects and values
   (strings, numbers, objects, sets, arrays, <code class=3D"literal">true</=
code>,
   <code class=3D"literal">false</code>, and <code class=3D"literal">null</=
code>). Each resource type
   has a unique, system-generated UUID, which must be used when modifying
   existing resource types. Renaming a resource type will not affect the UU=
ID.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint json hlj=
s">{
    <span class=3D"hljs-attr">"uuid"</span>: <span class=3D"hljs-string">"1=
2345a67-8f0b-123c-45de-6fab78cd01e2"</span>,
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"U=
RL"</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"The built-in URL Resource Type available to OpenAM Policies."</span>,
    <span class=3D"hljs-attr">"patterns"</span>: [
        <span class=3D"hljs-string">"*://*:*/*?*"</span>,
        <span class=3D"hljs-string">"*://*:*/*"</span>
    ],
    <span class=3D"hljs-attr">"actions"</span>: {
        <span class=3D"hljs-attr">"POST"</span>: <span class=3D"hljs-litera=
l">true</span>,
        <span class=3D"hljs-attr">"PATCH"</span>: <span class=3D"hljs-liter=
al">true</span>,
        <span class=3D"hljs-attr">"GET"</span>: <span class=3D"hljs-literal=
">true</span>,
        <span class=3D"hljs-attr">"DELETE"</span>: <span class=3D"hljs-lite=
ral">true</span>,
        <span class=3D"hljs-attr">"OPTIONS"</span>: <span class=3D"hljs-lit=
eral">true</span>,
        <span class=3D"hljs-attr">"HEAD"</span>: <span class=3D"hljs-litera=
l">true</span>,
        <span class=3D"hljs-attr">"PUT"</span>: <span class=3D"hljs-literal=
">true</span>
    },
    <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-strin=
g">"id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hljs-nu=
mber">1422892465848</span>,
    <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"hljs-=
string">"id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</spa=
n>,
    <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D"hlj=
s-number">1422892465848</span>
}</pre><div class=3D"variablelist"><p>
    The values for the fields shown in the description are explained below:
   </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"l=
iteral">"uuid"</code></span></dt><dd><p>
      String matching the unique identifier OpenAM generated for the resour=
ce
      type when created.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"name"</code=
></span></dt><dd><p>
      The name provided for the resource type.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"description=
"</code></span></dt><dd><p>
      An optional text string to help identify the resource type.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"patterns"</=
code></span></dt><dd><p>
      An array of resource patterns specifying individual URLs or resource
      names to protect.
     </p><p>For more information on patterns in resource types and
      policies, see
      <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-gui=
de/index.html#policy-patterns-wildcards" class=3D"olink">"Specifying Resour=
ce Patterns with Wildcards"</a> in the <em>Administration Guide</em></p></d=
d><dt><span class=3D"term"><code class=3D"literal">"actions"</code></span><=
/dt><dd><p>
      Set of string action names,
      each set to a boolean indicating whether the action is allowed.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"createdBy"<=
/code></span></dt><dd><p>
      A string containing the universal identifier DN of the subject that
      created the resource type.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"creationDat=
e"</code></span></dt><dd><p>
      An integer containing the creation date and time, in ISO 8601 format.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"lastModifie=
dBy"</code></span></dt><dd><p>
      A string containing the universal identifier DN of the subject that
      most recently updated the resource type.
     </p><p>If the resource type has not been modified since it was
      created, this will be the same value as
      <code class=3D"literal">createdBy</code>.</p></dd><dt><span class=3D"=
term"><code class=3D"literal">"lastModifiedDate"</code></span></dt><dd><p>
      An string containing the last modified date and time, in ISO 8601 for=
mat.
     </p><p>If the resource type has not been modified since it was
      created, this will be the same value as <code class=3D"literal">creat=
ionDate</code>.
     </p></dd></dl></div><div class=3D"section" id=3D"rest-api-authz-resour=
ce-types-query"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a c=
lass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#rest-api-authz-resource-types-query">2.1.13.3.1.&nbsp=
;Querying Resource Types</a></h5></div></div></div><p>
    To list all the resource types in a realm, perform an HTTP GET to the
    <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/re=
sourcetypes</code>
    endpoint, with a <code class=3D"literal">_queryFilter</code> parameter
    set to <code class=3D"literal">true</code>.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM returns
    resource types in the top level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/myrealm/resourcetypes?_queryFil=
ter=3Dtrue</strong>
<em class=3D"computeroutput">{
    "result": [
    {
        "uuid": "12345a67-8f0b-123c-45de-6fab78cd01e3",
        "name": "LIGHTS",
        "description": "",
        "patterns": [
            "light://*/*"
        ],
        "actions": {
            "switch_off": true,
            "switch_on": true
        },
        "createdBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=
=3Dorg",
        "creationDate": 1431013059131,
        "lastModifiedBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgeroc=
k,dc=3Dorg",
        "lastModifiedDate": 1431013069803
    }
    ],
    "resultCount": 1,
    "pagedResultsCookie": null,
    "remainingPagedResults": 0
}</em></pre><p>
    Additional query strings can be specified to alter the returned results=
.
    For more information,
    see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#rest-api-filter-sort-page" title=3D"2.1.7.&nbs=
p;Filtering, Sorting, and Paging Results">"Filtering, Sorting, and Paging R=
esults"</a>.
   </p><div class=3D"table" id=3D"d15472e3506"><div class=3D"table-title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#d15472e3506">Supported _queryFilter Fields and
     Operators</a></div><div class=3D"table-contents"><table xmlns:ng=3D"ht=
tp://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.org/ns/docbook" xml=
ns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http://exslt.org/common"=
 xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" xmlns:stbl=3D"http:/=
/nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwal=
sh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"ht=
tp://nwalsh.com/xslt/ext/xsltproc/python/Table" class=3D"table table-stripe=
d" summary=3D"Supported _queryFilter Fields and
     Operators" border=3D"0"><colgroup><col width=3D"25%" class=3D"col1"><c=
ol width=3D"75%" class=3D"col2"></colgroup><thead><tr><th>Field</th><th>Sup=
ported Operators</th></tr></thead><tbody><tr><td><code class=3D"literal">uu=
id</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr><tr><td><code class=3D"literal">name</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr><tr><td><code class=3D"literal">description</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr><tr><td><code class=3D"literal">patterns</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr><tr><td><code class=3D"literal">actions</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr></tbody></table></div></div><br class=3D"table-break"></div=
><div class=3D"section" id=3D"rest-api-authz-resource-types-read"><div clas=
s=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-authz-resource-types-read">2.1.13.3.2.&nbsp;Reading a Specific Reso=
urce Type</a></h5></div></div></div><p>
    To read an individual resource types in a realm, perform an HTTP
    GET to the <code class=3D"literal">/json{<em class=3D"replaceable">/rea=
lm</em>}/resourcetypes</code>
    endpoint, and specify the UUID in the URL.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/myrealm/resourcetypes/12345a67-=
8f0b-123c-45de-6fab78cd01e3</strong>
<em class=3D"computeroutput">{
    "uuid": "12345a67-8f0b-123c-45de-6fab78cd01e3",
    "name": "LIGHTS",
    "description": "",
    "patterns": [
        "light://*/*"
    ],
    "actions": {
        "switch_off": true,
        "switch_on": true
    },
    "createdBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dor=
g",
    "creationDate": 1431013059131,
    "lastModifiedBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=
=3Dorg",
    "lastModifiedDate": 1431013069803
}</em></pre></div><div class=3D"section" id=3D"rest-api-authz-resource-type=
s-create"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#rest-api-authz-resource-types-create">2.1.13.3.3.&nbsp;Cr=
eating a Resource Type</a></h5></div></div></div><p>
    To create a resource type in a realm, perform an HTTP POST to the
    <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/re=
sourcetypes</code>
    endpoint, with an <code class=3D"literal">_action</code> parameter
    set to <code class=3D"literal">create</code>. Include a JSON representa=
tion of the
    resource type in the POST data.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM creates the
    resource type in the top level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><p lang=3D"en">
Do not use special characters within resource type, policy,
or policy set names (for example, "my+resource+type") when using the consol=
e
or REST endpoints. Using the special characters listed below causes
OpenAM to return a 400 Bad Request error.
The special characters are: double quotes (<kbd>"</kbd>), plus
sign (<kbd>+</kbd>), comma (<kbd>,</kbd>),
less than (<kbd>&lt;</kbd>), equals (<kbd>=3D</kbd>), greater
than (<kbd>&gt;</kbd>), backslash (<kbd>\</kbd>), forward slash
(<kbd>/</kbd>), semicolon (<kbd>;</kbd>), and
null (<kbd>\u0000</kbd>).
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iPlanetDirectoryPro: AQIC5..." \
--data '{
    "name": "My Resource Type",
    "actions": {
        "LEFT": true,
        "RIGHT": true,
        "UP": true,
        "DOWN": true
    },
    "patterns": [
        "http://device/location/*"
    ]
}' \
https://openam.example.com:8443/openam/json/myrealm/resourcetypes/?_action=
=3Dcreate</strong>
<em class=3D"computeroutput">{
    "uuid": "12345a67-8f0b-123c-45de-6fab78cd01e4",
    "name": "My Resource Type",
    "description": null,
    "patterns": [
        "http://device/location/*"
    ],
    "actions": {
        "RIGHT": true,
        "DOWN": true,
        "UP": true,
        "LEFT": true
    },
    "createdBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dor=
g",
    "creationDate": 1431099940616,
    "lastModifiedBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=
=3Dorg",
    "lastModifiedDate": 1431099940616
}</em></pre></div><div class=3D"section" id=3D"rest-api-authz-resource-type=
s-update"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#rest-api-authz-resource-types-update">2.1.13.3.4.&nbsp;Up=
dating a Resource Type</a></h5></div></div></div><p>
    To update an individual resource type in a realm, perform an HTTP
    PUT to the <code class=3D"literal">/json{<em class=3D"replaceable">/rea=
lm</em>}/resourcetypes
   </code> endpoint, and specify the UUID in both the URL and the PUT body.
    Include a JSON representation of the updated resource type in the PUT
    data, alongside the UUID.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><p lang=3D"en">
Do not use special characters within resource type, policy,
or policy set names (for example, "my+resource+type") when using the consol=
e
or REST endpoints. Using the special characters listed below causes
OpenAM to return a 400 Bad Request error.
The special characters are: double quotes (<kbd>"</kbd>), plus
sign (<kbd>+</kbd>), comma (<kbd>,</kbd>),
less than (<kbd>&lt;</kbd>), equals (<kbd>=3D</kbd>), greater
than (<kbd>&gt;</kbd>), backslash (<kbd>\</kbd>), forward slash
(<kbd>/</kbd>), semicolon (<kbd>;</kbd>), and
null (<kbd>\u0000</kbd>).
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint json hljs"=
>$ curl \
--header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span>=
 \
--request PUT \
--header <span class=3D"hljs-string">"Content-Type: application/json"</span=
> \
--data '{
    <span class=3D"hljs-attr">"uuid"</span>: <span class=3D"hljs-string">"1=
2345a67-8f0b-123c-45de-6fab78cd01e4"</span>,
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"M=
y Updated Resource Type"</span>,
    <span class=3D"hljs-attr">"actions"</span>: {
        <span class=3D"hljs-attr">"LEFT"</span>: <span class=3D"hljs-litera=
l">false</span>,
        <span class=3D"hljs-attr">"RIGHT"</span>: <span class=3D"hljs-liter=
al">false</span>,
        <span class=3D"hljs-attr">"UP"</span>: <span class=3D"hljs-literal"=
>false</span>,
        <span class=3D"hljs-attr">"DOWN"</span>: <span class=3D"hljs-litera=
l">false</span>
    },
    <span class=3D"hljs-attr">"patterns"</span>: [
        <span class=3D"hljs-string">"http://device/location/*"</span>
    ]
}' \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/my=
realm/resourcetypes/12345a67-8f0b-123c-45de-6fab78cd01e4</span>
{
    <span class=3D"hljs-attr">"uuid"</span>: <span class=3D"hljs-string">"1=
2345a67-8f0b-123c-45de-6fab78cd01e4"</span>,
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"M=
y Updated Resource Type"</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-lit=
eral">null</span>,
    <span class=3D"hljs-attr">"patterns"</span>: [
        <span class=3D"hljs-string">"http://device/location/*"</span>
    ],
    <span class=3D"hljs-attr">"actions"</span>: {
        <span class=3D"hljs-attr">"RIGHT"</span>: <span class=3D"hljs-liter=
al">false</span>,
        <span class=3D"hljs-attr">"DOWN"</span>: <span class=3D"hljs-litera=
l">false</span>,
        <span class=3D"hljs-attr">"UP"</span>: <span class=3D"hljs-literal"=
>false</span>,
        <span class=3D"hljs-attr">"LEFT"</span>: <span class=3D"hljs-litera=
l">false</span>
    },
    <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-strin=
g">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hljs-nu=
mber">1431099940616</span>,
    <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"hljs-=
string">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>=
,
    <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D"hlj=
s-number">1431101016427</span>
}</pre></div><div class=3D"section" id=3D"rest-api-authz-resource-types-del=
ete"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"sel=
f-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/=
index.html#rest-api-authz-resource-types-delete">2.1.13.3.5.&nbsp;Deleting =
a Specific Resource Type</a></h5></div></div></div><p>
    To delete an individual resource types in a realm, perform an HTTP
    DELETE to the <code class=3D"literal">/json{<em class=3D"replaceable">/=
realm</em>}/resourcetypes</code>
    endpoint, and specify the UUID in the URL.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--request DELETE \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/myrealm/resourcetypes/12345a67-=
8f0b-123c-45de-6fab78cd01e4</strong>
<em class=3D"computeroutput">{}</em></pre><p>You can only delete resource t=
ypes that are not being used by
    a policy set or policy. Trying to delete a resource type that is in
   use will return an HTTP 409 Conflict status code, with a message such as=
:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
><em class=3D"computeroutput">{
    "code": 409,
    "reason": "Conflict",
    "message": "Unable to remove resource type 12345a67-8f0b-123c-45de-6fab=
78cd01e4 because it is
                referenced in the policy model."
}</em></pre><p>Remove the resource type from any associated policy sets or
    policies to be able to delete it.</p></div></div><div class=3D"section"=
 id=3D"rest-api-authz-application-types"><div class=3D"titlepage"><div><div=
><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-application-t=
ypes">2.1.13.4.&nbsp;Managing Application Types</a></h4></div></div></div><=
p>
   Application types act as templates for policy sets, and define how to co=
mpare
      resources and index policies. OpenAM provides a default
   application type that represents web resources called
      <code class=3D"literal">iPlanetAMWebAgentService</code>. OpenAM polic=
y agents use a
      default policy set that is based on this type, which is also called
      <code class=3D"literal">iPlanetAMWebAgentService</code>.
  </p><div class=3D"itemizedlist"><p>OpenAM provides the <code class=3D"lit=
eral">applicationtypes</code> REST endpoint
    for the following:</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-a=
pplication-types-query" title=3D"2.1.13.4.1.&nbsp;Querying Application Type=
s">"Querying Application Types"</a></p></li><li class=3D"listitem"><p><a cl=
ass=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-g=
uide/index.html#rest-api-authz-application-types-read" title=3D"2.1.13.4.2.=
&nbsp;Reading a Specific Application Type">"Reading a Specific Application =
Type"</a></p></li></ul></div><p>
   Applications types are server-wide, and do not differ by realm.
   Hence the URI for the application types API
   does not contain a realm component,
   but is <code class=3D"literal">/json/applicationtypes</code>.
  </p><p>
   Application type resources are represented in JSON and take the followin=
g form.
   Application type resources are built from standard JSON objects and valu=
es
   (strings, numbers, objects, arrays, <code class=3D"literal">true</code>,
   <code class=3D"literal">false</code>, and <code class=3D"literal">null</=
code>).
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint javascri=
pt hljs">{
    <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-string">=
"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-string">"actions"</span>: {
        <span class=3D"hljs-string">"POST"</span>: <span class=3D"hljs-lite=
ral">true</span>,
        <span class=3D"hljs-string">"PATCH"</span>: <span class=3D"hljs-lit=
eral">true</span>,
        <span class=3D"hljs-string">"GET"</span>: <span class=3D"hljs-liter=
al">true</span>,
        <span class=3D"hljs-string">"DELETE"</span>: <span class=3D"hljs-li=
teral">true</span>,
        <span class=3D"hljs-string">"OPTIONS"</span>: <span class=3D"hljs-l=
iteral">true</span>,
        <span class=3D"hljs-string">"PUT"</span>: <span class=3D"hljs-liter=
al">true</span>,
        <span class=3D"hljs-string">"HEAD"</span>: <span class=3D"hljs-lite=
ral">true</span>
    },
    <span class=3D"hljs-string">"resourceComparator"</span>: <span class=3D=
"hljs-string">"com.sun.identity.entitlement.URLResourceName"</span>,
    <span class=3D"hljs-string">"saveIndex"</span>: <span class=3D"hljs-str=
ing">"org.forgerock.openam.entitlement.indextree.TreeSaveIndex"</span>,
    <span class=3D"hljs-string">"searchIndex"</span>: <span class=3D"hljs-s=
tring">"org.forgerock.openam.entitlement.indextree.TreeSearchIndex"</span>,
    <span class=3D"hljs-string">"applicationClassName"</span>: <span class=
=3D"hljs-string">"com.sun.identity.entitlement.Application"</span>
}</pre><div class=3D"variablelist"><p>
    The values for the fields shown in the description are explained below:
   </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"l=
iteral">"name"</code></span></dt><dd><p>
      The name provided for the application type.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"actions"</c=
ode></span></dt><dd><p>
      Set of string action names, each set to a boolean indicating whether =
the
      action is allowed.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"resourceCom=
parator"</code></span></dt><dd><p>
      Class name of the resource comparator implementation used
      in the context of this application type.
     </p><p>
      The following implementations are available:
     </p><table border=3D"0" summary=3D"Simple list" class=3D"simplelist"><=
tbody><tr><td><code class=3D"literal">"com.sun.identity.entitlement.ExactMa=
tchResourceName"</code></td></tr><tr><td><code class=3D"literal">"com.sun.i=
dentity.entitlement.PrefixResourceName"</code></td></tr><tr><td><code class=
=3D"literal">"com.sun.identity.entitlement.RegExResourceName"</code></td></=
tr><tr><td><code class=3D"literal">"com.sun.identity.entitlement.URLResourc=
eName"</code></td></tr></tbody></table></dd><dt><span class=3D"term"><code =
class=3D"literal">"saveIndex"</code></span></dt><dd><p>
      Class name of the implementation for creating indexes for resource na=
mes,
      such as <code class=3D"literal">"com.sun.identity.entitlement.util.Re=
sourceNameIndexGenerator"</code>
      for URL resource names.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"searchIndex=
"</code></span></dt><dd><p>
      Class name of the implementation for searching indexes for resource n=
ames,
      such as <code class=3D"literal">"com.sun.identity.entitlement.util.Re=
sourceNameSplitter"</code>
      for URL resource names.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"application=
ClassName"</code></span></dt><dd><p>
      Class name of the application type implementation,
      such as <code class=3D"literal">"com.sun.identity.entitlement.Applica=
tion"</code>.
     </p></dd></dl></div><div class=3D"section" id=3D"rest-api-authz-applic=
ation-types-query"><div class=3D"titlepage"><div><div><h5 class=3D"title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-authz-application-types-query">2.1.13.4.1=
.&nbsp;Querying Application Types</a></h5></div></div></div><p>
    To list all application types, perform an HTTP GET to the
    <code class=3D"literal">/json/applicationtypes</code> endpoint,
    with a <code class=3D"literal">_queryFilter</code> parameter set to <co=
de class=3D"literal">true</code>.
   </p><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/applicationtypes?_queryFilter=
=3Dtrue</strong>
<em class=3D"computeroutput">{
    "result" : [ ... application types ... ],
    "resultCount" : 8,
    "pagedResultsCookie" : null,
    "remainingPagedResults" : -1
}</em></pre><p>
    Additional query strings can be specified to alter the returned results=
.
    For more information,
    see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#rest-api-filter-sort-page" title=3D"2.1.7.&nbs=
p;Filtering, Sorting, and Paging Results">"Filtering, Sorting, and Paging R=
esults"</a>.
   </p></div><div class=3D"section" id=3D"rest-api-authz-application-types-=
read"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#rest-api-authz-application-types-read">2.1.13.4.2.&nbsp;Reading=
 a Specific Application Type</a></h5></div></div></div><p>
    To read an individual application type, perform an HTTP GET to the
    <code class=3D"literal">/json/applicationtypes</code> endpoint, and spe=
cify the
    application type name in the URL.
   </p><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/applicationtypes/iPlanetAMWebAg=
entService</strong>
<em class=3D"computeroutput">{
    "name": "iPlanetAMWebAgentService",
    "actions": {
        "POST": true,
        "PATCH": true,
        "GET": true,
        "DELETE": true,
        "OPTIONS": true,
        "PUT": true,
        "HEAD": true
    },
    "resourceComparator": "com.sun.identity.entitlement.URLResourceName",
    "saveIndex": "org.forgerock.openam.entitlement.indextree.TreeSaveIndex"=
,
    "searchIndex": "org.forgerock.openam.entitlement.indextree.TreeSearchIn=
dex",
    "applicationClassName": "com.sun.identity.entitlement.Application"
}</em></pre></div></div><div class=3D"section" id=3D"rest-api-authz-applica=
tions"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"s=
elf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#rest-api-authz-applications">2.1.13.5.&nbsp;Managing Policy Se=
ts</a></h4></div></div></div><p>
   This section describes the process of using the OpenAM REST API for mana=
ging
   policy sets.
  </p><p>
   Policy set definitions set constraints
   for defining <a class=3D"link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#rest-api-authz-policies" title=3D"2.1.=
13.6.&nbsp;Managing Policies">policies</a>.
   The default built-in policy set is called <code class=3D"literal">iPlane=
tAMWebAgentService</code>,
   which OpenAM policy agents use to allow policy management through the co=
nsole.
  </p><p>For information on creating policy sets by using the OpenAM
  console, see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
admin-guide/index.html#what-is-authz-policies" class=3D"olink">"OpenAM Reso=
urce Types, Policy Sets, and Policies"</a> in the <em>Administration Guide<=
/em>.</p><div class=3D"itemizedlist"><p>OpenAM provides the <code class=3D"=
literal">applications</code> REST endpoint
    for the following:</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-a=
pplications-query" title=3D"2.1.13.5.1.&nbsp;Querying Policy Sets">"Queryin=
g Policy Sets"</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-authz-applications-read" title=3D"2.1.13.5.2.&nbsp;Reading a Specif=
ic Policy Set">"Reading a Specific Policy Set"</a></p></li><li class=3D"lis=
titem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#rest-api-authz-applications-create" title=3D=
"2.1.13.5.3.&nbsp;Creating Policy Sets">"Creating Policy Sets"</a></p></li>=
<li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-applications-=
update" title=3D"2.1.13.5.4.&nbsp;Updating Policy Sets">"Updating Policy Se=
ts"</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-aut=
hz-applications-delete" title=3D"2.1.13.5.5.&nbsp;Deleting Policy Sets">"De=
leting Policy Sets"</a></p></li></ul></div><p>
   Policy sets are realm specific, hence the URI for the policy set API can
   contain a realm component, such as
   <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/app=
lications</code>.
   If the realm is not specified in the URI, the top level realm is
   used.</p><p>
   Policy sets are represented in JSON and take the following form.
   Policy sets are built from standard JSON objects and values
   (strings, numbers, objects, arrays, <code class=3D"literal">true</code>,
   <code class=3D"literal">false</code>, and <code class=3D"literal">null</=
code>).
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint javascri=
pt hljs">{
    <span class=3D"hljs-string">"creationDate"</span>: <span class=3D"hljs-=
number">1431351677264</span>,
    <span class=3D"hljs-string">"lastModifiedDate"</span>: <span class=3D"h=
ljs-number">1431351677264</span>,
    <span class=3D"hljs-string">"conditions"</span>: [
        <span class=3D"hljs-string">"AuthenticateToService"</span>,
        <span class=3D"hljs-string">"Script"</span>,
        <span class=3D"hljs-string">"AuthScheme"</span>,
        <span class=3D"hljs-string">"IPv6"</span>,
        <span class=3D"hljs-string">"SimpleTime"</span>,
        <span class=3D"hljs-string">"OAuth2Scope"</span>,
        <span class=3D"hljs-string">"IPv4"</span>,
        <span class=3D"hljs-string">"AuthenticateToRealm"</span>,
        <span class=3D"hljs-string">"OR"</span>,
        <span class=3D"hljs-string">"AMIdentityMembership"</span>,
        <span class=3D"hljs-string">"LDAPFilter"</span>,
        <span class=3D"hljs-string">"AuthLevel"</span>,
        <span class=3D"hljs-string">"SessionProperty"</span>,
        <span class=3D"hljs-string">"LEAuthLevel"</span>,
        <span class=3D"hljs-string">"Session"</span>,
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"AND"</span>,
        <span class=3D"hljs-string">"ResourceEnvIP"</span>
    ],
    <span class=3D"hljs-string">"applicationType"</span>: <span class=3D"hl=
js-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-string">"subjects"</span>: [
        <span class=3D"hljs-string">"JwtClaim"</span>,
        <span class=3D"hljs-string">"AuthenticatedUsers"</span>,
        <span class=3D"hljs-string">"Identity"</span>,
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"AND"</span>,
        <span class=3D"hljs-string">"NONE"</span>,
        <span class=3D"hljs-string">"OR"</span>
    ],
    <span class=3D"hljs-string">"entitlementCombiner"</span>: <span class=
=3D"hljs-string">"DenyOverride"</span>,
    <span class=3D"hljs-string">"saveIndex"</span>: <span class=3D"hljs-lit=
eral">null</span>,
    <span class=3D"hljs-string">"searchIndex"</span>: <span class=3D"hljs-l=
iteral">null</span>,
    <span class=3D"hljs-string">"resourceComparator"</span>: <span class=3D=
"hljs-literal">null</span>,
    <span class=3D"hljs-string">"resourceTypeUuids"</span>: [
        <span class=3D"hljs-string">"12345a67-8f0b-123c-45de-6fab78cd01e4"<=
/span>
    ],
    <span class=3D"hljs-string">"attributeNames"</span>: [ ],
    <span class=3D"hljs-string">"editable"</span>: <span class=3D"hljs-lite=
ral">true</span>,
    <span class=3D"hljs-string">"createdBy"</span>: <span class=3D"hljs-str=
ing">"id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-string">"lastModifiedBy"</span>: <span class=3D"hlj=
s-string">"id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</s=
pan>,
    <span class=3D"hljs-string">"description"</span>: <span class=3D"hljs-s=
tring">"The built-in Application used by OpenAM Policy Agents."</span>,
    <span class=3D"hljs-string">"realm"</span>: <span class=3D"hljs-string"=
>"/"</span>,
    <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-string">=
"iPlanetAMWebAgentService"</span>
}</pre><div class=3D"variablelist"><p>
    The values for the fields shown in the description are explained below:
   </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"l=
iteral">"conditions"</code></span></dt><dd><p>
      Condition types allowed in the context of this policy set.
     </p><p>
      For information on condition types,
      see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#rest-api-authz-policies" title=3D"2.1.13.6.&=
nbsp;Managing Policies">"Managing Policies"</a> and
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#rest-api-authz-condition-types" title=3D"2.1.13.=
8.&nbsp;Managing Environment Condition Types">"Managing Environment Conditi=
on Types"</a>.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"application=
Type"</code></span></dt><dd><p>
      Name of the application type used as a template for this policy set.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"subjects"</=
code></span></dt><dd><p>
      Subject types allowed in the context of this policy set.
     </p><p>
      For information on subject types,
      see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#rest-api-authz-policies" title=3D"2.1.13.6.&=
nbsp;Managing Policies">"Managing Policies"</a> and
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#rest-api-authz-subject-types" title=3D"2.1.13.9.=
&nbsp;Managing Subject Condition Types">"Managing Subject Condition Types"<=
/a>.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"entitlement=
Combiner"</code></span></dt><dd><p>
      Name of the decision combiner, such as <code class=3D"literal">"DenyO=
verride"</code>.
     </p><p>
      For more on decision combiners,
      see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#rest-api-authz-decision-combiners" title=3D"=
2.1.13.11.&nbsp;Managing Decision Combiners">"Managing Decision Combiners"<=
/a>.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"saveIndex"<=
/code></span></dt><dd><p>
      Class name of the implementation for creating indexes for resource na=
mes,
      such as <code class=3D"literal">"com.sun.identity.entitlement.util.Re=
sourceNameIndexGenerator"</code>
      for URL resource names.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"searchIndex=
"</code></span></dt><dd><p>
      Class name of the implementation for searching indexes for resource n=
ames,
      such as <code class=3D"literal">"com.sun.identity.entitlement.util.Re=
sourceNameSplitter"</code>
      for URL resource names.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"resourceCom=
parator"</code></span></dt><dd><p>
      Class name of the resource comparator implementation used
      in the context of this policy set.
     </p><p>
      The following implementations are available:
     </p><table border=3D"0" summary=3D"Simple list" class=3D"simplelist"><=
tbody><tr><td><code class=3D"literal">"com.sun.identity.entitlement.ExactMa=
tchResourceName"</code></td></tr><tr><td><code class=3D"literal">"com.sun.i=
dentity.entitlement.PrefixResourceName"</code></td></tr><tr><td><code class=
=3D"literal">"com.sun.identity.entitlement.RegExResourceName"</code></td></=
tr><tr><td><code class=3D"literal">"com.sun.identity.entitlement.URLResourc=
eName"</code></td></tr></tbody></table></dd><dt><span class=3D"term"><code =
class=3D"literal">"resourceTypeUuids"</code></span></dt><dd><p>
      A list of the UUIDs of the resource types associated with the policy =
set.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"attributeNa=
mes"</code></span></dt><dd><p>
      A list of attribute names such as
      <code class=3D"literal">cn</code>.
      The list is used to aid policy indexing and lookup.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"description=
"</code></span></dt><dd><p>
      String describing the policy set.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"realm"</cod=
e></span></dt><dd><p>
      Name of the realm where this policy set is defined. You must specify =
the
      realm in the policy set JSON even though it can be derived from
      the URL that is used when creating the policy set.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"name"</code=
></span></dt><dd><p>
      String matching the name
      in the URL used when creating the policy set by HTTP PUT
      or in the body when creating the policy set by HTTP POST.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"createdBy"<=
/code></span></dt><dd><p>
      A string containing the universal identifier DN of the subject that
      created the policy set.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"creationDat=
e"</code></span></dt><dd><p>
      An integer containing the creation date and time, in number of second=
s
      since the Unix epoch (1970-01-01T00:00:00Z).
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"lastModifie=
dBy"</code></span></dt><dd><p>
      A string containing the universal identifier DN of the subject that
      most recently updated the policy set.
     </p><p>If the policy set has not been modified since it was
      created, this will be the same value as
      <code class=3D"literal">createdBy</code>.</p></dd><dt><span class=3D"=
term"><code class=3D"literal">"lastModifiedDate"</code></span></dt><dd><p>
      An integer containing the last modified date and time, in number of
      seconds since the Unix epoch (1970-01-01T00:00:00Z).
     </p><p>If the policy set has not been modified since it was
      created, this will be the same value as <code class=3D"literal">creat=
ionDate</code>.
     </p></dd></dl></div><div class=3D"section" id=3D"rest-api-authz-applic=
ations-query"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a cla=
ss=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/index.html#rest-api-authz-applications-query">2.1.13.5.1.&nbsp;Que=
rying Policy Sets</a></h5></div></div></div><p>
    To list all the policy sets in a realm, perform an HTTP GET to the
    <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/ap=
plications</code>
    endpoint, with a <code class=3D"literal">_queryFilter</code> parameter
    set to <code class=3D"literal">true</code>.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM returns
    policy sets in the top level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint json hljs"=
>$ curl \
--header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span>=
 \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/ap=
plications?_queryFilter=3Dtrue</span>
{
 <span class=3D"hljs-attr">"result"</span>: [
 {
   <span class=3D"hljs-attr">"_id"</span>: <span class=3D"hljs-string">"iPl=
anetAMWebAgentService"</span>,
   <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"iP=
lanetAMWebAgentService"</span>,
   <span class=3D"hljs-attr">"displayName"</span>: <span class=3D"hljs-stri=
ng">"Default Policy Set"</span>,
   <span class=3D"hljs-attr">"subjects"</span>: [
     <span class=3D"hljs-string">"NOT"</span>,
     <span class=3D"hljs-string">"OR"</span>,
     <span class=3D"hljs-string">"JwtClaim"</span>,
     <span class=3D"hljs-string">"AuthenticatedUsers"</span>,
     <span class=3D"hljs-string">"AND"</span>,
     <span class=3D"hljs-string">"Identity"</span>,
     <span class=3D"hljs-string">"NONE"</span>
   ],
   <span class=3D"hljs-attr">"saveIndex"</span>: <span class=3D"hljs-litera=
l">null</span>,
   <span class=3D"hljs-attr">"searchIndex"</span>: <span class=3D"hljs-lite=
ral">null</span>,
   <span class=3D"hljs-attr">"entitlementCombiner"</span>: <span class=3D"h=
ljs-string">"DenyOverride"</span>,
   <span class=3D"hljs-attr">"resourceComparator"</span>: <span class=3D"hl=
js-literal">null</span>,
   <span class=3D"hljs-attr">"attributeNames"</span>: [
   ],
   <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"hljs-s=
tring">"id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span=
>,
   <span class=3D"hljs-attr">"editable"</span>: <span class=3D"hljs-literal=
">true</span>,
   <span class=3D"hljs-attr">"resourceTypeUuids"</span>: [
     <span class=3D"hljs-string">"76656a38-5f8e-401b-83aa-4ccb74ce88d2"</sp=
an>
   ],
   <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hljs-num=
ber">1480651214923</span>,
   <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D"hljs=
-number">1480651214923</span>,
   <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-string=
">"id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
   <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-stri=
ng">"The built-in Application used by OpenAM Policy Agents."</span>,
   <span class=3D"hljs-attr">"applicationType"</span>: <span class=3D"hljs-=
string">"iPlanetAMWebAgentService"</span>,
   <span class=3D"hljs-attr">"conditions"</span>: [
     <span class=3D"hljs-string">"LEAuthLevel"</span>,
     <span class=3D"hljs-string">"Script"</span>,
     <span class=3D"hljs-string">"AuthenticateToService"</span>,
     <span class=3D"hljs-string">"SimpleTime"</span>,
     <span class=3D"hljs-string">"AMIdentityMembership"</span>,
     <span class=3D"hljs-string">"OR"</span>,
     <span class=3D"hljs-string">"IPv6"</span>,
     <span class=3D"hljs-string">"IPv4"</span>,
     <span class=3D"hljs-string">"SessionProperty"</span>,
     <span class=3D"hljs-string">"AuthScheme"</span>,
     <span class=3D"hljs-string">"AuthLevel"</span>,
     <span class=3D"hljs-string">"NOT"</span>,
     <span class=3D"hljs-string">"AuthenticateToRealm"</span>,
     <span class=3D"hljs-string">"AND"</span>,
     <span class=3D"hljs-string">"ResourceEnvIP"</span>,
     <span class=3D"hljs-string">"LDAPFilter"</span>,
     <span class=3D"hljs-string">"OAuth2Scope"</span>,
     <span class=3D"hljs-string">"Session"</span>
   ]
 },
 {
   <span class=3D"hljs-attr">"_id"</span>: <span class=3D"hljs-string">"sun=
AMDelegationService"</span>,
   <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"su=
nAMDelegationService"</span>,
   <span class=3D"hljs-attr">"displayName"</span>: <span class=3D"hljs-stri=
ng">"Delegation Policy Set"</span>,
   <span class=3D"hljs-attr">"subjects"</span>: [
     <span class=3D"hljs-string">"NOT"</span>,
     <span class=3D"hljs-string">"OR"</span>,
     <span class=3D"hljs-string">"AuthenticatedUsers"</span>,
     <span class=3D"hljs-string">"AND"</span>,
     <span class=3D"hljs-string">"Identity"</span>
   ],
   <span class=3D"hljs-attr">"saveIndex"</span>: <span class=3D"hljs-litera=
l">null</span>,
   <span class=3D"hljs-attr">"searchIndex"</span>: <span class=3D"hljs-lite=
ral">null</span>,
   <span class=3D"hljs-attr">"entitlementCombiner"</span>: <span class=3D"h=
ljs-string">"DenyOverride"</span>,
   <span class=3D"hljs-attr">"resourceComparator"</span>: <span class=3D"hl=
js-literal">null</span>,
   <span class=3D"hljs-attr">"attributeNames"</span>: [
   ],
   <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"hljs-s=
tring">"id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span=
>,
   <span class=3D"hljs-attr">"editable"</span>: <span class=3D"hljs-literal=
">true</span>,
   <span class=3D"hljs-attr">"resourceTypeUuids"</span>: [
     <span class=3D"hljs-string">"20a13582-1f32-4f83-905f-f71ff4e2e00d"</sp=
an>
   ],
   <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hljs-num=
ber">1480651214933</span>,
   <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D"hljs=
-number">1480651214933</span>,
   <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-string=
">"id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
   <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-lite=
ral">null</span>,
   <span class=3D"hljs-attr">"applicationType"</span>: <span class=3D"hljs-=
string">"sunAMDelegationService"</span>,
   <span class=3D"hljs-attr">"conditions"</span>: [
   ]
 }
 ],
 <span class=3D"hljs-attr">"resultCount"</span>: <span class=3D"hljs-number=
">2</span>,
 <span class=3D"hljs-attr">"pagedResultsCookie"</span>: <span class=3D"hljs=
-literal">null</span>,
 <span class=3D"hljs-attr">"totalPagedResultsPolicy"</span>: <span class=3D=
"hljs-string">"NONE"</span>,
 <span class=3D"hljs-attr">"totalPagedResults"</span>: <span class=3D"hljs-=
number">-1</span>,
 <span class=3D"hljs-attr">"remainingPagedResults"</span>: <span class=3D"h=
ljs-number">0</span>
}</pre><p>
    Additional query strings can be specified to alter the returned results=
.
    For more information,
    see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#rest-api-filter-sort-page" title=3D"2.1.7.&nbs=
p;Filtering, Sorting, and Paging Results">"Filtering, Sorting, and Paging R=
esults"</a>.
   </p><div class=3D"table" id=3D"d15472e4228"><div class=3D"table-title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#d15472e4228">Supported _queryFilter Fields and
     Operators</a></div><div class=3D"table-contents"><table xmlns:ng=3D"ht=
tp://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.org/ns/docbook" xml=
ns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http://exslt.org/common"=
 xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" xmlns:stbl=3D"http:/=
/nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwal=
sh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"ht=
tp://nwalsh.com/xslt/ext/xsltproc/python/Table" class=3D"table table-stripe=
d" summary=3D"Supported _queryFilter Fields and
     Operators" border=3D"0"><colgroup><col width=3D"25%" class=3D"col1"><c=
ol width=3D"75%" class=3D"col2"></colgroup><thead><tr><th>Field</th><th>Sup=
ported Operators</th></tr></thead><tbody><tr><td><p><code class=3D"literal"=
>name</code></p></td><td><p>Equals (<code class=3D"literal">eq</code>)</p><=
/td></tr><tr><td><p><code class=3D"literal">description</code></p></td><td>=
<p>Equals (<code class=3D"literal">eq</code>)</p></td></tr><tr><td><p><code=
 class=3D"literal">createdBy</code></p></td><td><p>Equals (<code class=3D"l=
iteral">eq</code>)</p></td></tr><tr><td><p><code class=3D"literal">creation=
Date</code></p></td><td>
       <p>
        Equals (<code class=3D"literal">eq</code>),
        Greater than or equal to (<code class=3D"literal">ge</code>),
        Greater than (<code class=3D"literal">gt</code>),
        Less than or equal to (<code class=3D"literal">le</code>),
        Less than (<code class=3D"literal">lt</code>)
       </p>
      <div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 clas=
s=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>The implement=
ation of <code class=3D"literal">eq</code> for this date
       field does not use regular expression pattern matching.</p></div></d=
iv></td></tr><tr><td><p><code class=3D"literal">lastModifiedBy</code></p></=
td><td><p>Equals (<code class=3D"literal">eq</code>)</p></td></tr><tr><td><=
p><code class=3D"literal">lastModifiedDate</code></p></td><td><p>
        Equals (<code class=3D"literal">eq</code>),
        Greater than or equal to (<code class=3D"literal">ge</code>),
        Greater than (<code class=3D"literal">gt</code>),
        Less than or equal to (<code class=3D"literal">le</code>),
        Less than (<code class=3D"literal">lt</code>)
       </p>
      <div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 clas=
s=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>The implement=
ation of <code class=3D"literal">eq</code> for this date
       field does not use regular expression pattern matching.</p></div></d=
iv></td></tr></tbody></table></div></div><br class=3D"table-break"></div><d=
iv class=3D"section" id=3D"rest-api-authz-applications-read"><div class=3D"=
titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" href=3D"htt=
ps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api=
-authz-applications-read">2.1.13.5.2.&nbsp;Reading a Specific Policy Set</a=
></h5></div></div></div><p>
    To read an individual policy set in a realm, perform an HTTP
    GET to the <code class=3D"literal">/json{<em class=3D"replaceable">/rea=
lm</em>}/applications
   </code> endpoint, and specify the policy set name in the URL.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint json hljs"=
>$ curl \
--header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span>=
 \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/ap=
plications/mypolicyset</span>
{
    <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hljs-nu=
mber">1431360678810</span>,
    <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D"hlj=
s-number">1431360678810</span>,
    <span class=3D"hljs-attr">"conditions"</span>: [
        <span class=3D"hljs-string">"AuthenticateToService"</span>,
        <span class=3D"hljs-string">"AuthScheme"</span>,
        <span class=3D"hljs-string">"IPv6"</span>,
        <span class=3D"hljs-string">"SimpleTime"</span>,
        <span class=3D"hljs-string">"OAuth2Scope"</span>,
        <span class=3D"hljs-string">"IPv4"</span>,
        <span class=3D"hljs-string">"AuthenticateToRealm"</span>,
        <span class=3D"hljs-string">"OR"</span>,
        <span class=3D"hljs-string">"AMIdentityMembership"</span>,
        <span class=3D"hljs-string">"LDAPFilter"</span>,
        <span class=3D"hljs-string">"SessionProperty"</span>,
        <span class=3D"hljs-string">"AuthLevel"</span>,
        <span class=3D"hljs-string">"LEAuthLevel"</span>,
        <span class=3D"hljs-string">"Session"</span>,
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"AND"</span>,
        <span class=3D"hljs-string">"ResourceEnvIP"</span>
    ],
    <span class=3D"hljs-attr">"applicationType"</span>: <span class=3D"hljs=
-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-attr">"subjects"</span>: [
        <span class=3D"hljs-string">"JwtClaim"</span>,
        <span class=3D"hljs-string">"AuthenticatedUsers"</span>,
        <span class=3D"hljs-string">"Identity"</span>,
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"AND"</span>,
        <span class=3D"hljs-string">"OR"</span>
    ],
    <span class=3D"hljs-attr">"entitlementCombiner"</span>: <span class=3D"=
hljs-string">"DenyOverride"</span>,
    <span class=3D"hljs-attr">"saveIndex"</span>: <span class=3D"hljs-liter=
al">null</span>,
    <span class=3D"hljs-attr">"searchIndex"</span>: <span class=3D"hljs-lit=
eral">null</span>,
    <span class=3D"hljs-attr">"resourceComparator"</span>: <span class=3D"h=
ljs-string">"com.sun.identity.entitlement.URLResourceName"</span>,
    <span class=3D"hljs-attr">"resourceTypeUuids"</span>: [
        <span class=3D"hljs-string">"12345a67-8f0b-123c-45de-6fab78cd01e2"<=
/span>
    ],
    <span class=3D"hljs-attr">"attributeNames"</span>: [ ],
    <span class=3D"hljs-attr">"editable"</span>: <span class=3D"hljs-litera=
l">true</span>,
    <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-strin=
g">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"hljs-=
string">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>=
,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"My example policy set."</span>,
    <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string">"=
/"</span>,
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"m=
ypolicyset"</span>
}</pre><p>
    You can use the query string parameters
    <code class=3D"literal">_prettyPrint=3Dtrue</code> to make the output e=
asier to read,
    and <code class=3D"literal">_fields=3D<em class=3D"replaceable">field-n=
ame</em>[,<em class=3D"replaceable">field-name</em>...]</code>
    to limit the fields returned in the output.
   </p></div><div class=3D"section" id=3D"rest-api-authz-applications-creat=
e"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-=
link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#rest-api-authz-applications-create">2.1.13.5.3.&nbsp;Creating Poli=
cy Sets</a></h5></div></div></div><p>
    To create a policy set in a realm, perform an HTTP POST to the
    <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/ap=
plications</code>
    endpoint, with an <code class=3D"literal">_action</code> parameter
    set to <code class=3D"literal">create</code>. Include a JSON representa=
tion of the
    policy set in the POST data.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM creates the
    policy set in the top level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><p lang=3D"en">
Do not use special characters within resource type, policy,
or policy set names (for example, "my+resource+type") when using the consol=
e
or REST endpoints. Using the special characters listed below causes
OpenAM to return a 400 Bad Request error.
The special characters are: double quotes (<kbd>"</kbd>), plus
sign (<kbd>+</kbd>), comma (<kbd>,</kbd>),
less than (<kbd>&lt;</kbd>), equals (<kbd>=3D</kbd>), greater
than (<kbd>&gt;</kbd>), backslash (<kbd>\</kbd>), forward slash
(<kbd>/</kbd>), semicolon (<kbd>;</kbd>), and
null (<kbd>\u0000</kbd>).
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint json hljs"=
>$ curl \
--request POST \
--header <span class=3D"hljs-string">"Content-Type: application/json"</span=
> \
--header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span>=
 \
--data '{
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"m=
ypolicyset"</span>,
    <span class=3D"hljs-attr">"resourceTypeUuids"</span>: [
        <span class=3D"hljs-string">"12345a67-8f0b-123c-45de-6fab78cd01e2"<=
/span>
    ],
    <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string">"=
/"</span>,
    <span class=3D"hljs-attr">"conditions"</span>: [
        <span class=3D"hljs-string">"AND"</span>,
        <span class=3D"hljs-string">"OR"</span>,
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"AMIdentityMembership"</span>,
        <span class=3D"hljs-string">"AuthLevel"</span>,
        <span class=3D"hljs-string">"AuthScheme"</span>,
        <span class=3D"hljs-string">"AuthenticateToRealm"</span>,
        <span class=3D"hljs-string">"AuthenticateToService"</span>,
        <span class=3D"hljs-string">"IPv4"</span>,
        <span class=3D"hljs-string">"IPv6"</span>,
        <span class=3D"hljs-string">"LDAPFilter"</span>,
        <span class=3D"hljs-string">"LEAuthLevel"</span>,
        <span class=3D"hljs-string">"OAuth2Scope"</span>,
        <span class=3D"hljs-string">"ResourceEnvIP"</span>,
        <span class=3D"hljs-string">"Session"</span>,
        <span class=3D"hljs-string">"SessionProperty"</span>,
        <span class=3D"hljs-string">"SimpleTime"</span>
    ],
    <span class=3D"hljs-attr">"applicationType"</span>: <span class=3D"hljs=
-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"My example policy set."</span>,
    <span class=3D"hljs-attr">"resourceComparator"</span>: <span class=3D"h=
ljs-string">"com.sun.identity.entitlement.URLResourceName"</span>,
    <span class=3D"hljs-attr">"subjects"</span>: [
        <span class=3D"hljs-string">"AND"</span>,
        <span class=3D"hljs-string">"OR"</span>,
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"AuthenticatedUsers"</span>,
        <span class=3D"hljs-string">"Identity"</span>,
        <span class=3D"hljs-string">"JwtClaim"</span>
    ],
    <span class=3D"hljs-attr">"entitlementCombiner"</span>: <span class=3D"=
hljs-string">"DenyOverride"</span>,
    <span class=3D"hljs-attr">"saveIndex"</span>: <span class=3D"hljs-liter=
al">null</span>,
    <span class=3D"hljs-attr">"searchIndex"</span>: <span class=3D"hljs-lit=
eral">null</span>,
    <span class=3D"hljs-attr">"attributeNames"</span>: []
}' \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/ap=
plications/?_action=3Dcreate</span>
{
    <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hljs-nu=
mber">1431360678810</span>,
    <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D"hlj=
s-number">1431360678810</span>,
    <span class=3D"hljs-attr">"conditions"</span>: [
        <span class=3D"hljs-string">"AuthenticateToService"</span>,
        <span class=3D"hljs-string">"AuthScheme"</span>,
        <span class=3D"hljs-string">"IPv6"</span>,
        <span class=3D"hljs-string">"SimpleTime"</span>,
        <span class=3D"hljs-string">"OAuth2Scope"</span>,
        <span class=3D"hljs-string">"IPv4"</span>,
        <span class=3D"hljs-string">"AuthenticateToRealm"</span>,
        <span class=3D"hljs-string">"OR"</span>,
        <span class=3D"hljs-string">"AMIdentityMembership"</span>,
        <span class=3D"hljs-string">"LDAPFilter"</span>,
        <span class=3D"hljs-string">"SessionProperty"</span>,
        <span class=3D"hljs-string">"AuthLevel"</span>,
        <span class=3D"hljs-string">"LEAuthLevel"</span>,
        <span class=3D"hljs-string">"Session"</span>,
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"AND"</span>,
        <span class=3D"hljs-string">"ResourceEnvIP"</span>
    ],
    <span class=3D"hljs-attr">"applicationType"</span>: <span class=3D"hljs=
-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-attr">"subjects"</span>: [
        <span class=3D"hljs-string">"JwtClaim"</span>,
        <span class=3D"hljs-string">"AuthenticatedUsers"</span>,
        <span class=3D"hljs-string">"Identity"</span>,
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"AND"</span>,
        <span class=3D"hljs-string">"OR"</span>
    ],
    <span class=3D"hljs-attr">"entitlementCombiner"</span>: <span class=3D"=
hljs-string">"DenyOverride"</span>,
    <span class=3D"hljs-attr">"saveIndex"</span>: <span class=3D"hljs-liter=
al">null</span>,
    <span class=3D"hljs-attr">"searchIndex"</span>: <span class=3D"hljs-lit=
eral">null</span>,
    <span class=3D"hljs-attr">"resourceComparator"</span>: <span class=3D"h=
ljs-string">"com.sun.identity.entitlement.URLResourceName"</span>,
    <span class=3D"hljs-attr">"resourceTypeUuids"</span>: [
        <span class=3D"hljs-string">"12345a67-8f0b-123c-45de-6fab78cd01e2"<=
/span>
    ],
    <span class=3D"hljs-attr">"attributeNames"</span>: [ ],
    <span class=3D"hljs-attr">"editable"</span>: <span class=3D"hljs-litera=
l">true</span>,
    <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-strin=
g">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"hljs-=
string">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>=
,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"My example policy set."</span>,
    <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string">"=
/"</span>,
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"m=
ypolicyset"</span>
}</pre><p>
    You can use the query string parameters
    <code class=3D"literal">_prettyPrint=3Dtrue</code> to make the output e=
asier to read,
    and <code class=3D"literal">_fields=3D<em class=3D"replaceable">field-n=
ame</em>[,<em class=3D"replaceable">field-name</em>...]</code>
    to limit the fields returned in the output.
   </p></div><div class=3D"section" id=3D"rest-api-authz-applications-updat=
e"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-=
link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#rest-api-authz-applications-update">2.1.13.5.4.&nbsp;Updating Poli=
cy Sets</a></h5></div></div></div><p>
    To update an individual policy set in a realm, perform an HTTP
    PUT to the <code class=3D"literal">/json{<em class=3D"replaceable">/rea=
lm</em>}/applications
   </code> endpoint, and specify the policy set name in the URL. Include a
    JSON representation of the updated policy set in the PUT data.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><p lang=3D"en">
Do not use special characters within resource type, policy,
or policy set names (for example, "my+resource+type") when using the consol=
e
or REST endpoints. Using the special characters listed below causes
OpenAM to return a 400 Bad Request error.
The special characters are: double quotes (<kbd>"</kbd>), plus
sign (<kbd>+</kbd>), comma (<kbd>,</kbd>),
less than (<kbd>&lt;</kbd>), equals (<kbd>=3D</kbd>), greater
than (<kbd>&gt;</kbd>), backslash (<kbd>\</kbd>), forward slash
(<kbd>/</kbd>), semicolon (<kbd>;</kbd>), and
null (<kbd>\u0000</kbd>).
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint json hljs"=
>$ curl \
--request PUT \
--header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span>=
 \
--header <span class=3D"hljs-string">"Content-Type: application/json"</span=
> \
--data '{
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"m=
yupdatedpolicyset"</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"My updated policy set - new name and fewer allowable conditions/subje=
cts."</span>,
    <span class=3D"hljs-attr">"conditions"</span>: [
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"SimpleTime"</span>
    ],
    <span class=3D"hljs-attr">"subjects"</span>: [
        <span class=3D"hljs-string">"AND"</span>,
        <span class=3D"hljs-string">"OR"</span>,
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"AuthenticatedUsers"</span>,
        <span class=3D"hljs-string">"Identity"</span>
    ],
    <span class=3D"hljs-attr">"applicationType"</span>: <span class=3D"hljs=
-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-attr">"entitlementCombiner"</span>: <span class=3D"=
hljs-string">"DenyOverride"</span>,
    <span class=3D"hljs-attr">"resourceTypeUuids"</span>: [
        <span class=3D"hljs-string">"76656a38-5f8e-401b-83aa-4ccb74ce88d2"<=
/span>
    ]
}' \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/ap=
plications/mypolicyset</span>
{
    <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hljs-nu=
mber">1431362370739</span>,
    <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D"hlj=
s-number">1431362390817</span>,
    <span class=3D"hljs-attr">"conditions"</span>: [
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"SimpleTime"</span>
    ],
    <span class=3D"hljs-attr">"resourceComparator"</span>: <span class=3D"h=
ljs-string">"com.sun.identity.entitlement.URLResourceName"</span>,
    <span class=3D"hljs-attr">"resourceTypeUuids"</span>: [
        <span class=3D"hljs-string">"76656a38-5f8e-401b-83aa-4ccb74ce88d2"<=
/span>
    ],
    <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-strin=
g">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"hljs-=
string">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>=
,
    <span class=3D"hljs-attr">"applicationType"</span>: <span class=3D"hljs=
-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-attr">"subjects"</span>: [
        <span class=3D"hljs-string">"AuthenticatedUsers"</span>,
        <span class=3D"hljs-string">"Identity"</span>,
        <span class=3D"hljs-string">"NOT"</span>,
        <span class=3D"hljs-string">"AND"</span>,
        <span class=3D"hljs-string">"OR"</span>
    ],
    <span class=3D"hljs-attr">"entitlementCombiner"</span>: <span class=3D"=
hljs-string">"DenyOverride"</span>,
    <span class=3D"hljs-attr">"saveIndex"</span>: <span class=3D"hljs-liter=
al">null</span>,
    <span class=3D"hljs-attr">"searchIndex"</span>: <span class=3D"hljs-lit=
eral">null</span>,
    <span class=3D"hljs-attr">"attributeNames"</span>: [ ],
    <span class=3D"hljs-attr">"editable"</span>: <span class=3D"hljs-litera=
l">true</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"My updated policy set - new name and fewer allowable conditions/subje=
cts."</span>,
    <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string">"=
/"</span>,
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"m=
yupdatedpolicyset"</span>
}</pre><p>
    You can use the query string parameters
    <code class=3D"literal">_prettyPrint=3Dtrue</code> to make the output e=
asier to read,
    and <code class=3D"literal">_fields=3D<em class=3D"replaceable">field-n=
ame</em>[,<em class=3D"replaceable">field-name</em>...]</code>
    to limit the fields returned in the output.
   </p></div><div class=3D"section" id=3D"rest-api-authz-applications-delet=
e"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-=
link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#rest-api-authz-applications-delete">2.1.13.5.5.&nbsp;Deleting Poli=
cy Sets</a></h5></div></div></div><p>
    To delete an individual policy set in a realm, perform an HTTP
    DELETE to the <code class=3D"literal">/json{<em class=3D"replaceable">/=
realm</em>}/applications
   </code> endpoint, and specify the policy set name in the URL.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
  --request DELETE \
  --header "iPlanetDirectoryPro: AQIC5..." \
  https://openam.example.com:8443/openam/json/applications/myupdatedpolicys=
et</strong>
<em class=3D"computeroutput">{}</em></pre></div></div><div class=3D"section=
" id=3D"rest-api-authz-policies"><div class=3D"titlepage"><div><div><h4 cla=
ss=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#rest-api-authz-policies">2.1.13.6.&n=
bsp;Managing Policies</a></h4></div></div></div><p>
   This section describes the process of using the OpenAM REST API for mana=
ging
   policies.
  </p><p>For information on creating policies by using the OpenAM
  console, see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
admin-guide/index.html#what-is-authz-policies" class=3D"olink">"OpenAM Reso=
urce Types, Policy Sets, and Policies"</a> in the <em>Administration Guide<=
/em>.</p><div class=3D"itemizedlist"><p>OpenAM provides the <code class=3D"=
literal">policies</code> REST endpoint
    for the following:</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-p=
olicies-query" title=3D"2.1.13.6.1.&nbsp;Querying Policies">"Querying Polic=
ies"</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-au=
thz-policies-read" title=3D"2.1.13.6.2.&nbsp;Reading a Specific Policy">"Re=
ading a Specific Policy"</a></p></li><li class=3D"listitem"><p><a class=3D"=
xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#rest-api-authz-policies-create" title=3D"2.1.13.6.3.&nbsp;Creating=
 Policies">"Creating Policies"</a></p></li><li class=3D"listitem"><p><a cla=
ss=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gu=
ide/index.html#rest-api-authz-policies-update" title=3D"2.1.13.6.4.&nbsp;Up=
dating Policies">"Updating Policies"</a></p></li><li class=3D"listitem"><p>=
<a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#rest-api-authz-policies-delete" title=3D"2.1.13.6.5.&n=
bsp;Deleting Policies">"Deleting Policies"</a></p></li><li class=3D"listite=
m"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#rest-api-authz-policies-copy-move-policies" titl=
e=3D"2.1.13.6.6.&nbsp;Copying and Moving Policies">"Copying and Moving Poli=
cies"</a></p></li></ul></div><p>
   Policies are realm specific, hence the URI for the policies API can
   contain a realm component, such as
   <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/pol=
icies</code>.
   If the realm is not specified in the URI, the top level realm is
   used.</p><p>
   Policy resources are represented in JSON and take the following form.
   Policy resources are built from standard JSON objects and values
   (strings, numbers, objects, arrays, <code class=3D"literal">true</code>,
   <code class=3D"literal">false</code>, and <code class=3D"literal">null</=
code>).
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint javascri=
pt hljs">{
    <span class=3D"hljs-string">"name"</span>: <span class=3D"hljs-string">=
"mypolicy"</span>,
    <span class=3D"hljs-string">"active"</span>: <span class=3D"hljs-litera=
l">true</span>,
    <span class=3D"hljs-string">"description"</span>: <span class=3D"hljs-s=
tring">"My Policy."</span>,
    <span class=3D"hljs-string">"applicationName"</span>: <span class=3D"hl=
js-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-string">"actionValues"</span>: {
        <span class=3D"hljs-string">"POST"</span>: <span class=3D"hljs-lite=
ral">true</span>,
        <span class=3D"hljs-string">"GET"</span>: <span class=3D"hljs-liter=
al">true</span>
    },
    <span class=3D"hljs-string">"resources"</span>: [
        <span class=3D"hljs-string">"http://www.example.com:80/*"</span>,
        <span class=3D"hljs-string">"http://www.example.com:80/*?*"</span>
    ],
    <span class=3D"hljs-string">"subject"</span>: {
        <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-stri=
ng">"AuthenticatedUsers"</span>
    },
    <span class=3D"hljs-string">"condition"</span>: {
        <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-stri=
ng">"SimpleTime"</span>,
        <span class=3D"hljs-string">"startTime"</span>: <span class=3D"hljs=
-string">"09:00"</span>,
        <span class=3D"hljs-string">"endTime"</span>: <span class=3D"hljs-s=
tring">"17:00"</span>,
        <span class=3D"hljs-string">"startDay"</span>: <span class=3D"hljs-=
string">"mon"</span>,
        <span class=3D"hljs-string">"endDay"</span>: <span class=3D"hljs-st=
ring">"fri"</span>,
        <span class=3D"hljs-string">"enforcementTimeZone"</span>: <span cla=
ss=3D"hljs-string">"GMT"</span>
    },
    <span class=3D"hljs-string">"resourceTypeUuid"</span>: <span class=3D"h=
ljs-string">"76656a38-5f8e-401b-83aa-4ccb74ce88d2"</span>,
    <span class=3D"hljs-string">"resourceAttributes"</span>: [
        {
            <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-=
string">"User"</span>,
            <span class=3D"hljs-string">"propertyName"</span>: <span class=
=3D"hljs-string">"givenName"</span>,
            <span class=3D"hljs-string">"propertyValues"</span>: [ ]
        }
    ],
    <span class=3D"hljs-string">"lastModifiedBy"</span>: <span class=3D"hlj=
s-string">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</spa=
n>,
    <span class=3D"hljs-string">"lastModifiedDate"</span>: <span class=3D"h=
ljs-string">"2015-05-11T17:39:09.393Z"</span>,
    <span class=3D"hljs-string">"createdBy"</span>: <span class=3D"hljs-str=
ing">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-string">"creationDate"</span>: <span class=3D"hljs-=
string">"2015-05-11T17:37:24.556Z"</span>
}</pre><div class=3D"variablelist"><p>
    The values for the fields shown in the example are explained below:
   </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"l=
iteral">"name"</code></span></dt><dd><p>
      String matching the name
      in the URL used when creating the policy by HTTP PUT
      or in the body when creating the policy by HTTP POST.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"active"</co=
de></span></dt><dd><p>
      Boolean indicating whether OpenAM considers the policy active
      for evaluation purposes, defaults to <code class=3D"literal">false</c=
ode>.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"description=
"</code></span></dt><dd><p>
      String describing the policy.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"resources"<=
/code></span></dt><dd><p>
      List of the resource name pattern strings to which the policy applies=
.
      Must conform to the pattern templates provided by the associated
      <a class=3D"link" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#rest-api-authz-resource-types" title=3D"2.1.13.3=
.&nbsp;Managing Resource Types">resource type</a>.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"application=
Name"</code></span></dt><dd><p>
      String containing the policy set name,
      such as <code class=3D"literal">"iPlanetAMWebAgentService"</code>, or
      <code class=3D"literal">"mypolicyset"</code>.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"actionValue=
s"</code></span></dt><dd><p>
      Set of string action names, each set to a boolean indicating whether =
the
      action is allowed. Chosen from the available actions provided by the
      associated <a class=3D"link" href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/dev-guide/index.html#rest-api-authz-resource-types" title=
=3D"2.1.13.3.&nbsp;Managing Resource Types">resource type</a>.
     </p><div class=3D"panel panel-success"><div class=3D"panel-heading"><h=
3 class=3D"panel-title">Tip</h3></div><div class=3D"panel-body"><p>
      Action values can also be expressed as numeric values. When using
      numeric values, use the value <code class=3D"literal">0</code> for
      <code class=3D"literal">false</code> and use any non-zero numeric
      value for <code class=3D"literal">true</code>.</p></div></div></dd><d=
t><span class=3D"term"><code class=3D"literal">"subject"</code></span></dt>=
<dd><p>
      Specifies the subject conditions to which the policy applies,
      where subjects can be combined by using the built-in types
      <code class=3D"literal">"AND"</code>, <code class=3D"literal">"OR"</c=
ode>,
      and <code class=3D"literal">"NOT"</code>,
      and where subject implementations are pluggable.
     </p><p>
      Subjects are shown as JSON objects
      with <code class=3D"literal">"type"</code> set to the name of the imp=
lementation
      (using a short name for all registered subject implementations),
      and also other fields depending on the implementation.
      The subject types registered by default include the following:
     </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"li=
st-style-type: disc; "><li class=3D"listitem"><p>
        <code class=3D"literal">"AuthenticatedUsers"</code>,
        meaning any user that has successfully authenticated to OpenAM.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AuthenticatedUsers"</span>
}       </pre><div class=3D"panel panel-warning"><div class=3D"panel-headin=
g"><h3 class=3D"panel-title">Warning</h3></div><div class=3D"panel-body"><p=
>
              The <code class=3D"literal">AuthenticatedUsers</code> subject=
 condition does
              not take into account the realm to which a user authenticated=
. Any
              user that has authenticated successfully to any realm passes =
this
              subject condition.</p><p>To test whether a user has authentic=
ated successfully to a
                  specific realm, also add the <code class=3D"literal">Auth=
enticateToRealm</code>
                  environment condition.
              </p></div></div></li><li class=3D"listitem"><p>
        <code class=3D"literal">"Identity"</code>
        to specify one or more users from an OpenAM identity repository:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
   <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">"=
Identity"</span>,
   <span class=3D"hljs-string">"subjectValues"</span>: [
       <span class=3D"hljs-string">"uid=3Dscarter,ou=3DPeople,dc=3Dexample,=
dc=3Dcom"</span>,
       <span class=3D"hljs-string">"uid=3Dahall,ou=3DPeople,dc=3Dexample,dc=
=3Dcom"</span>
   ]
}</pre><p>
        You can also use the
        <code class=3D"literal">"Identity"</code>
        subject type to specify one or more groups from an identity reposit=
ory:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"Identity"</span>,
    <span class=3D"hljs-string">"subjectValues"</span>: [
        <span class=3D"hljs-string">"cn=3DHR Managers,ou=3DGroups,dc=3Dexam=
ple,dc=3Dcom"</span>
    ]
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"JwtClaim"</code>
        to specify a claim in a
        user's JSON web token (JWT).
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"JwtClaim"</span>,
    <span class=3D"hljs-string">"claimName"</span>: <span class=3D"hljs-str=
ing">"sub"</span>,
    <span class=3D"hljs-string">"claimValue"</span>: <span class=3D"hljs-st=
ring">"scarter"</span>
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"NONE"</code>,
        meaning never match any subject. The result is not that access is d=
enied, but
        rather that the policy itself does not match and therefore cannot b=
e
        evaluated in order to allow access.
       </p></li></ul></div><p>
      The following example defines the subject
      either as the user Sam Carter from an OpenAM identity repository,
      or as a user with a JWT claim with a subject claim with the value
      scarter:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint javas=
cript hljs"><span class=3D"hljs-string">"subject"</span>: {
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"OR"</span>,
    <span class=3D"hljs-string">"subjects"</span>: [
       {
           <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-s=
tring">"Identity"</span>,
           <span class=3D"hljs-string">"subjectValues"</span>: [
               <span class=3D"hljs-string">"uid=3Dscarter,ou=3DPeople,dc=3D=
example,dc=3Dcom"</span>
           ]
       },
       {
           <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-s=
tring">"JwtClaim"</span>,
           <span class=3D"hljs-string">"claimName"</span>: <span class=3D"h=
ljs-string">"sub"</span>,
           <span class=3D"hljs-string">"claimValue"</span>: <span class=3D"=
hljs-string">"scarter"</span>
       }
   ]
}</pre><p>
      To read a single subject type description,
      or to list all the available subject types,
      see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#rest-api-authz-subject-types" title=3D"2.1.1=
3.9.&nbsp;Managing Subject Condition Types">"Managing Subject Condition Typ=
es"</a>.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"condition"<=
/code></span></dt><dd><p>
      Specifies environment conditions, where conditions can be combined
      by using the built-in types <code class=3D"literal">"AND"</code>,
      <code class=3D"literal">"OR"</code>, and <code class=3D"literal">"NOT=
"</code>,
      and where condition implementations are pluggable.
     </p><p>
      Conditions are shown as JSON objects
      with <code class=3D"literal">"type"</code> set to the name of the imp=
lementation
      (using a short name for all registered condition implementations),
      and also other fields depending on the implementation.
      The condition types registered by default include the following.
     </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"li=
st-style-type: disc; "><li class=3D"listitem"><p>
       <code class=3D"literal">"AMIdentityMembership"</code>
       to specify a list of OpenAM users and groups.
      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint java=
script hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AMIdentityMembership"</span>,
    <span class=3D"hljs-string">"amIdentityName"</span>: [
        <span class=3D"hljs-string">"id=3Dscarter,ou=3DPeople,dc=3Dexample,=
dc=3Dcom"</span>
    ]
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"AuthLevel"</code>
        to specify the authentication level.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AuthLevel"</span>,
    <span class=3D"hljs-string">"authLevel"</span>: <span class=3D"hljs-num=
ber">2</span>
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"AuthScheme"</code>
        to specify the authentication module used to authenticate and
        the policy set name, and to set a timeout for authentication.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AuthScheme"</span>,
    <span class=3D"hljs-string">"authScheme"</span>: [
        <span class=3D"hljs-string">"DataStore"</span>
    ],
    <span class=3D"hljs-string">"applicationName"</span>: <span class=3D"hl=
js-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-string">"applicationIdleTimeout"</span>: <span clas=
s=3D"hljs-number">10</span>
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"AuthenticateToRealm"</code>
        to specify the realm to which the user authenticated.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AuthenticateToRealm"</span>,
    <span class=3D"hljs-string">"authenticateToRealm"</span>: <span class=
=3D"hljs-string">"MyRealm"</span>
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"AuthenticateToService"</code>
        to specify the authentication chain that was used
        to authenticate.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AuthenticateToService"</span>,
    <span class=3D"hljs-string">"authenticateToService"</span>: <span class=
=3D"hljs-string">"MyAuthnChain"</span>
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"IPv4"</code>
        or
        <code class=3D"literal">"IPv6"</code>
        to specify an IP address range from which
        the request originated.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
   <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">"=
IPv4"</span>,
   <span class=3D"hljs-string">"startIp"</span>: <span class=3D"hljs-string=
">"127.0.0.1"</span>,
   <span class=3D"hljs-string">"endIp"</span>: <span class=3D"hljs-string">=
"127.0.0.255"</span>
}</pre><p>
        You can also use the
        <code class=3D"literal">"IPv4"</code>
        and
        <code class=3D"literal">"IPv6"</code>
        conditions with the
        <code class=3D"literal">"dnsName"</code>
        field to specify domain names from which the request originated. Om=
it
        <code class=3D"literal">"startIp"</code>
        and
        <code class=3D"literal">"endIp"</code>
        when using
        <code class=3D"literal">"dnsName"</code>.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"IPv4"</span>,
    <span class=3D"hljs-string">"dnsName"</span>: [
        <span class=3D"hljs-string">"*.example.com"</span>
    ]
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"LDAPFilter"</code>
        to specify an LDAP search filter. The user's entry is tested
        against the search filter in the directory configured in the
        Policy Configuration Service.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"LDAPFilter"</span>,
    <span class=3D"hljs-string">"ldapFilter"</span>: <span class=3D"hljs-st=
ring">"(&amp;(c=3DUS)(preferredLanguage=3Den-us))"</span>
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"LEAuthLevel"</code>
        to specify a maximum acceptable authentication level.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"LEAuthLevel"</span>,
    <span class=3D"hljs-string">"authLevel"</span>: <span class=3D"hljs-num=
ber">2</span>
}
       </pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"OAuth2Scope"</code>
        to specify a list of attributes that
        must be present in the user profile.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"OAuth2Scope"</span>,
    <span class=3D"hljs-string">"requiredScopes"</span>: [
        <span class=3D"hljs-string">"name"</span>,
        <span class=3D"hljs-string">"address"</span>,
        <span class=3D"hljs-string">"email"</span>
    ]
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"ResourceEnvIP"</code>
        to specify a complex condition such as whether the user is making a
        request from a given host and has authenticated with a given
        authentication level. For example:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"ResourceEnvIP"</span>,
    <span class=3D"hljs-string">"resourceEnvIPConditionValue"</span>: [
        <span class=3D"hljs-string">"IF IP=3D[127.168.10.*] THEN authlevel=
=3D4"</span>
    ]
}</pre><p>
        Entries must take the form of one or more IF...ELSE statements.
        If the IF statement is true,
        the THEN statement must also be true for the condition to be fulfil=
led.
        The IF statement can specify either IP to match the user's IP addre=
ss,
        or dnsName to match their DNS name.
        The IP address can be IPv4 or IPv6 format, or a hybrid of the two, =
and
        can include wildcard characters.
       </p><p>
         The available parameters for the THEN statement are as follows:
       </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span=
 class=3D"term">
          <code class=3D"literal">module</code>
         </span></dt><dd><p>
           The module that was used to authenticate the user,
           for example DataStore.
          </p></dd><dt><span class=3D"term">
          <code class=3D"literal">service</code>
         </span></dt><dd><p>
           The authentication chain that was used to authenticate the user.
          </p></dd><dt><span class=3D"term">
          <code class=3D"literal">authlevel</code>
         </span></dt><dd><p>
           The minimum required authentication level.
          </p></dd><dt><span class=3D"term">
          <code class=3D"literal">role</code>
         </span></dt><dd><p>
           The role of the authenticated user.
          </p></dd><dt><span class=3D"term">
          <code class=3D"literal">user</code>
         </span></dt><dd><p>
           The name of the authenticated user.
          </p></dd><dt><span class=3D"term">
          <code class=3D"literal">redirectURL</code>
         </span></dt><dd><p>
           The URL from which the user was redirected.
          </p></dd><dt><span class=3D"term">
          <code class=3D"literal">realm</code>
         </span></dt><dd><p>
           The realm to which the user authenticated.
          </p></dd></dl></div></li><li class=3D"listitem"><p>
        <code class=3D"literal">"Session"</code>
        to specify how long the user's stateful or stateless session has be=
en
        active, and to terminate the session if deemed too old,
        such that the user must authenticate again. Note that OpenAM termin=
ates
        stateless sessions only if session blacklisting is in effect.
        For more information about session blacklisting, see <a href=3D"htt=
ps://backstage.forgerock.com/docs/openam/13.5/admin-guide/index.html#sessio=
n-state-session-termination" class=3D"olink">"Session Termination"</a> in t=
he <em>Administration Guide</em>.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"Session"</span>,
    <span class=3D"hljs-string">"maxSessionTime"</span>: <span class=3D"hlj=
s-string">"10"</span>,
    <span class=3D"hljs-string">"terminateSession"</span>: <span class=3D"h=
ljs-literal">false</span>
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"SessionProperty"</code>
        to specify attributes set in the user's stateful or stateless sessi=
on.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"SessionProperty"</span>,
    <span class=3D"hljs-string">"ignoreValueCase"</span>: <span class=3D"hl=
js-literal">true</span>,
    <span class=3D"hljs-string">"properties"</span>: {
        <span class=3D"hljs-string">"CharSet"</span>: [
            <span class=3D"hljs-string">"UTF-8"</span>
        ],
        <span class=3D"hljs-string">"clientType"</span>: [
            <span class=3D"hljs-string">"genericHTML"</span>
        ]
    }
}</pre></li><li class=3D"listitem"><p>
        <code class=3D"literal">"SimpleTime"</code>
        to specify a time range, where
        <code class=3D"literal">"type"</code>
        is the only required field.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint jav=
ascript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"SimpleTime"</span>,
    <span class=3D"hljs-string">"startTime"</span>: <span class=3D"hljs-str=
ing">"07:00"</span>,
    <span class=3D"hljs-string">"endTime"</span>: <span class=3D"hljs-strin=
g">"19:00"</span>,
    <span class=3D"hljs-string">"startDay"</span>: <span class=3D"hljs-stri=
ng">"mon"</span>,
    <span class=3D"hljs-string">"endDay"</span>: <span class=3D"hljs-string=
">"fri"</span>,
    <span class=3D"hljs-string">"startDate"</span>: <span class=3D"hljs-str=
ing">"2015:01:01"</span>,
    <span class=3D"hljs-string">"endDate"</span>: <span class=3D"hljs-strin=
g">"2015:12:31"</span>,
    <span class=3D"hljs-string">"enforcementTimeZone"</span>: <span class=
=3D"hljs-string">"GMT+0:00"</span>
}</pre></li></ul></div><p>
      The following example defines the condition as
      neither Saturday or Sunday, nor certain client IP addresses.
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint javas=
cript hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"NOT"</span>,
    <span class=3D"hljs-string">"condition"</span>: {
        <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-stri=
ng">"OR"</span>,
        <span class=3D"hljs-string">"conditions"</span>: [
            {
                <span class=3D"hljs-string">"type"</span>: <span class=3D"h=
ljs-string">"SimpleTime"</span>,
                <span class=3D"hljs-string">"startDay"</span>: <span class=
=3D"hljs-string">"sat"</span>,
                <span class=3D"hljs-string">"endDay"</span>: <span class=3D=
"hljs-string">"sun"</span>,
                <span class=3D"hljs-string">"enforcementTimeZone"</span>: <=
span class=3D"hljs-string">"GMT+8:00"</span>
            },
            {
                <span class=3D"hljs-string">"type"</span>: <span class=3D"h=
ljs-string">"IPv4"</span>,
                <span class=3D"hljs-string">"startIp"</span>: <span class=
=3D"hljs-string">"192.168.0.1"</span>,
                <span class=3D"hljs-string">"endIp"</span>: <span class=3D"=
hljs-string">"192.168.0.255"</span>
            }
        ]
    }
}</pre><p>
       To read a single condition type description,
       or to list all the available condition types,
       see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#rest-api-authz-condition-types" title=3D"2.=
1.13.8.&nbsp;Managing Environment Condition Types">"Managing Environment Co=
ndition Types"</a>.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">"resourceTy=
peUuid"</code></span></dt><dd><p>The UUIDs of the resource type associated =
with the policy.</p></dd><dt><span class=3D"term"><code class=3D"literal">"=
resourceAttributes"</code></span></dt><dd><p>
      List of attributes to return with decisions. These attributes
      are known as <em class=3D"firstterm">response attributes</em>.
     </p><p>The response attribute provider is pluggable.
      The default implementation provides
      for statically defined attributes
      and for attributes retrieved from user profiles.
     </p><p>
      Attributes are shown as JSON objects
      with <code class=3D"literal">"type"</code> set to the name of the imp=
lementation
      (by default either
      <code class=3D"literal">"Static"</code> for statically defined attrib=
utes
      or <code class=3D"literal">"User"</code> for attributes from the user=
 profile),
      <code class=3D"literal">"propertyName"</code> set to the attribute na=
mes.
      For static attributes, <code class=3D"literal">"propertyValues"</code=
>
      holds the attribute values.
      For user attributes, <code class=3D"literal">"propertyValues"</code>
      is not used; the property values are determined at evaluation time.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"createdBy"<=
/code></span></dt><dd><p>
      A string containing the universal identifier DN of the subject that
      created the policy.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"creationDat=
e"</code></span></dt><dd><p>
      An integer containing the creation date and time, in number of second=
s
      since the Unix epoch (1970-01-01T00:00:00Z).
     </p></dd><dt><span class=3D"term"><code class=3D"literal">"lastModifie=
dBy"</code></span></dt><dd><p>
      A string containing the universal identifier DN of the subject that
      most recently updated the policy.
     </p><p>If the policy has not been modified since it was
      created, this will be the same value as
      <code class=3D"literal">createdBy</code>.</p></dd><dt><span class=3D"=
term"><code class=3D"literal">"lastModifiedDate"</code></span></dt><dd><p>
      An integer containing the last modified date and time, in number of
      seconds since the Unix epoch (1970-01-01T00:00:00Z).
     </p><p>If the policy has not been modified since it was
      created, this will be the same value as <code class=3D"literal">creat=
ionDate</code>.
     </p></dd></dl></div><div class=3D"section" id=3D"rest-api-authz-polici=
es-query"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#rest-api-authz-policies-query">2.1.13.6.1.&nbsp;Querying =
Policies</a></h5></div></div></div><p>Use REST calls to list all the polici=
es in a realm, or to find policies
      that explicitly apply to a given user or group, by using the procedur=
es below:</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=
=3D"list-style-type: disc; "><li class=3D"listitem"><p><a class=3D"xref" hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#proc-query-all-policies" title=3D"To List All Policies in a Realm">"To Lis=
t All Policies in a Realm"</a></p></li><li class=3D"listitem"><p><a class=
=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#proc-query-user-or-group-policies" title=3D"To Query Policies =
in a Realm by User or Group">"To Query Policies in a Realm by User or Group=
"</a></p></li></ul></div><div class=3D"procedure" id=3D"proc-query-all-poli=
cies"><div class=3D"procedure-inner"><div class=3D"procedure-title"><a clas=
s=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#proc-query-all-policies">To List All Policies in a Realm=
</a></div><ul class=3D"procedure"><li class=3D"step"><p>
      To list all the policies in a realm, perform an HTTP GET to the
      <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/=
policies</code>
      endpoint, with an <code class=3D"literal">_queryFilter</code> paramet=
er
      set to <code class=3D"literal">true</code>.
     </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 c=
lass=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the rea=
lm is not specified in the URL, OpenAM returns
      policies in the top level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
  --header "iPlanetDirectoryPro: AQIC5w..." \
  https://openam.example.com:8443/openam/json/myrealm/policies?_queryFilter=
=3Dtrue</strong>

<em class=3D"computeroutput">{
    "result": [
        {
        "name": "example",
        "active": true,
        "description": "Example Policy",
        "applicationName": "iPlanetAMWebAgentService",
        "actionValues": {
            "POST": false,
            "GET": true
        },
        "resources": [
            "http://www.example.com:80/*",
            "http://www.example.com:80/*?*"
        ],
        "subject": {
            "type": "Identity",
            "subjectValues": [
                "uid=3Ddemo,ou=3DPeople,dc=3Dexample,dc=3Dcom"
            ]
        },
        "resourceTypeUuid": "12345a67-8f0b-123c-45de-6fab78cd01e4",
        "lastModifiedBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgeroc=
k,dc=3Dorg",
        "lastModifiedDate": "2015-05-11T14:48:08.711Z",
        "createdBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=
=3Dorg",
        "creationDate": "2015-05-11T14:48:08.711Z"
        }
    ],
    "resultCount": 1,
    "pagedResultsCookie": null,
    "remainingPagedResults": 0
}</em></pre><p>
      Additional query strings can be specified to alter the returned resul=
ts.
      For more information,
      see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#rest-api-filter-sort-page" title=3D"2.1.7.&n=
bsp;Filtering, Sorting, and Paging Results">"Filtering, Sorting, and Paging=
 Results"</a>.
     </p><div class=3D"table" id=3D"d15472e5153"><div class=3D"table-title"=
><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#d15472e5153">Supported _queryFilter Fields and
     Operators</a></div><div class=3D"table-contents"><table xmlns:ng=3D"ht=
tp://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.org/ns/docbook" xml=
ns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http://exslt.org/common"=
 xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" xmlns:stbl=3D"http:/=
/nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwal=
sh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"ht=
tp://nwalsh.com/xslt/ext/xsltproc/python/Table" class=3D"table table-stripe=
d" summary=3D"Supported _queryFilter Fields and
     Operators" border=3D"0"><colgroup><col width=3D"25%" class=3D"col1"><c=
ol width=3D"75%" class=3D"col2"></colgroup><thead><tr><th>Field</th><th>Sup=
ported Operators</th></tr></thead><tbody><tr><td><p><code class=3D"literal"=
>name</code></p></td><td><p>Equals (<code class=3D"literal">eq</code>)</p><=
/td></tr><tr><td><p><code class=3D"literal">description</code></p></td><td>=
<p>Equals (<code class=3D"literal">eq</code>)</p></td></tr><tr><td><p><code=
 class=3D"literal">applicationName</code></p></td><td><p>Equals (<code clas=
s=3D"literal">eq</code>)</p></td></tr><tr><td><p><code class=3D"literal">cr=
eatedBy</code></p></td><td><p>Equals (<code class=3D"literal">eq</code>)</p=
></td></tr><tr><td><p><code class=3D"literal">creationDate</code></p></td><=
td>
       <p>
        Equals (<code class=3D"literal">eq</code>),
        Greater than or equal to (<code class=3D"literal">ge</code>),
        Greater than (<code class=3D"literal">gt</code>),
        Less than or equal to (<code class=3D"literal">le</code>),
        Less than (<code class=3D"literal">lt</code>)
       </p>
      <div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 clas=
s=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>The implement=
ation of <code class=3D"literal">eq</code> for this date
       field does not use regular expression pattern matching.</p></div></d=
iv></td></tr><tr><td><p><code class=3D"literal">lastModifiedBy</code></p></=
td><td><p>Equals (<code class=3D"literal">eq</code>)</p></td></tr><tr><td><=
p><code class=3D"literal">lastModifiedDate</code></p></td><td><p>
        Equals (<code class=3D"literal">eq</code>),
        Greater than or equal to (<code class=3D"literal">ge</code>),
        Greater than (<code class=3D"literal">gt</code>),
        Less than or equal to (<code class=3D"literal">le</code>),
        Less than (<code class=3D"literal">lt</code>)
       </p>
      <div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 clas=
s=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>The implement=
ation of <code class=3D"literal">eq</code> for this date
       field does not use regular expression pattern matching.</p></div></d=
iv></td></tr></tbody></table></div></div><br class=3D"table-break"></li></u=
l></div></div><div class=3D"procedure" id=3D"proc-query-user-or-group-polic=
ies"><div class=3D"procedure-inner"><div class=3D"procedure-title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#proc-query-user-or-group-policies">To Query Policies in a=
 Realm by User or Group</a></div><p>You can query policies that explicitly =
reference a given subject by providing
       the universal ID (UID) of either a user or group. OpenAM returns any=
 policies that
       explicitly apply to the user or group as part of a subject condition=
.</p><div class=3D"panel panel-success"><div class=3D"panel-heading"><h3 cl=
ass=3D"panel-title">Tip</h3></div><div class=3D"panel-body"><p>You can obta=
in the universal ID for a user or group by using REST. See
       <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#rest-api-read-identity" title=3D"2.1.16.1.2.&nb=
sp;Reading Identities">"Reading Identities"</a>.</p></div></div><p>The foll=
owing caveats apply to querying policies by user or group:</p><div class=3D=
"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "=
><li class=3D"listitem"><p>Group membership is not considered. For example,=
 querying policies for a
         specific user will not return policies that only use groups in the=
ir subject
         conditions, even if the user is a member of any of those groups.</=
p></li><li class=3D"listitem"><p>Wildcards are not supported, only exact ma=
tches.</p></li><li class=3D"listitem"><p>Only policies with a subject condi=
tion type of <code class=3D"literal">Identity</code> are
         queried=E2=80=94environment conditions are not queried. The <code =
class=3D"literal">Identity</code>
         subject condition type is labelled as <span class=3D"emphasis"><em=
>Users &amp; Groups</em></span> in the
         policy editor in the OpenAM console.
        </p></li><li class=3D"listitem"><p>Policies with subject conditions=
 that only contain the user or group in a logical
         <span class=3D"emphasis"><em>NOT</em></span> operator are not retu=
rned.</p></li></ul></div><p>To query policies by user or group:</p><ul clas=
s=3D"procedure"><li class=3D"step"><p>
      Perform an HTTP GET to the
      <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/=
policies</code>
      endpoint, with an <code class=3D"literal">_queryId</code> parameter s=
et to
      <code class=3D"literal">queryByIdentityUid</code>, and a <code class=
=3D"literal">uid</code> parameter
      containing the universal ID of the user or group:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint json =
hljs">$ curl \
  --get \
  --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5w..."</sp=
an> \
  --data <span class=3D"hljs-string">"_queryId=3DqueryByIdentityUid"</span>=
 \
  --data <span class=3D"hljs-string">"uid=3Did=3Ddemo,ou=3Duser,o=3Dmyrealm=
,ou=3Dservices,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span> \
  https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/=
myrealm/policies</span>
 {
  <span class=3D"hljs-attr">"result"</span> : [ {
    <span class=3D"hljs-attr">"name"</span> : <span class=3D"hljs-string">"=
mySubRealmPolicy"</span>,
    <span class=3D"hljs-attr">"active"</span> : <span class=3D"hljs-literal=
">true</span>,
    <span class=3D"hljs-attr">"description"</span> : <span class=3D"hljs-st=
ring">""</span>,
    <span class=3D"hljs-attr">"resources"</span> : [ <span class=3D"hljs-st=
ring">"*://*:*/*?*"</span>, <span class=3D"hljs-string">"*://*:*/*"</span> =
],
    <span class=3D"hljs-attr">"applicationName"</span> : <span class=3D"hlj=
s-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-attr">"actionValues"</span> : {
      <span class=3D"hljs-attr">"POST"</span> : <span class=3D"hljs-literal=
">true</span>,
      <span class=3D"hljs-attr">"PATCH"</span> : <span class=3D"hljs-litera=
l">true</span>,
      <span class=3D"hljs-attr">"GET"</span> : <span class=3D"hljs-literal"=
>true</span>,
      <span class=3D"hljs-attr">"DELETE"</span> : <span class=3D"hljs-liter=
al">true</span>,
      <span class=3D"hljs-attr">"OPTIONS"</span> : <span class=3D"hljs-lite=
ral">true</span>,
      <span class=3D"hljs-attr">"PUT"</span> : <span class=3D"hljs-literal"=
>true</span>,
      <span class=3D"hljs-attr">"HEAD"</span> : <span class=3D"hljs-literal=
">true</span>
    },
    <span class=3D"hljs-attr">"subject"</span> : {
      <span class=3D"hljs-attr">"type"</span> : <span class=3D"hljs-string"=
>"Identity"</span>,
      <span class=3D"hljs-attr">"subjectValues"</span> :
      [
        <span class=3D"hljs-string">"id=3Ddemo,ou=3Duser,o=3Dmyrealm,ou=3Ds=
ervices,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>
      ]
    },
    <span class=3D"hljs-attr">"resourceTypeUuid"</span> : <span class=3D"hl=
js-string">"76656a38-5f8e-401b-83aa-4ccb74ce88d2"</span>,
    <span class=3D"hljs-attr">"lastModifiedBy"</span> : <span class=3D"hljs=
-string">"id=3DamAdmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span=
>,
    <span class=3D"hljs-attr">"lastModifiedDate"</span> : <span class=3D"hl=
js-string">"2016-05-05T08:45:35.716Z"</span>,
    <span class=3D"hljs-attr">"createdBy"</span> : <span class=3D"hljs-stri=
ng">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-attr">"creationDate"</span> : <span class=3D"hljs-s=
tring">"2016-05-03T13:45:38.137Z"</span>
  } ],
  <span class=3D"hljs-attr">"resultCount"</span> : <span class=3D"hljs-numb=
er">1</span>,
  <span class=3D"hljs-attr">"pagedResultsCookie"</span> : <span class=3D"hl=
js-literal">null</span>,
  <span class=3D"hljs-attr">"totalPagedResultsPolicy"</span> : <span class=
=3D"hljs-string">"NONE"</span>,
  <span class=3D"hljs-attr">"totalPagedResults"</span> : <span class=3D"hlj=
s-number">-1</span>,
  <span class=3D"hljs-attr">"remainingPagedResults"</span> : <span class=3D=
"hljs-number">0</span>
}</pre><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM searches the top level
       realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p></li></ul></div></div></div><div class=3D"section" id=3D"rest-api-authz=
-policies-read"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a c=
lass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#rest-api-authz-policies-read">2.1.13.6.2.&nbsp;Readin=
g a Specific Policy</a></h5></div></div></div><p>
    To read an individual policy in a realm, perform an HTTP
    GET to the <code class=3D"literal">/json{<em class=3D"replaceable">/rea=
lm</em>}/policies
   </code> endpoint, and specify the policy name in the URL.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint json hljs"=
>$ curl \
--header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span>=
 \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/po=
licies/example</span>
{
    <span class=3D"hljs-attr">"result"</span>: [
        {
        <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string=
">"example"</span>,
        <span class=3D"hljs-attr">"active"</span>: <span class=3D"hljs-lite=
ral">true</span>,
        <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs=
-string">"Example Policy"</span>,
        <span class=3D"hljs-attr">"applicationName"</span>: <span class=3D"=
hljs-string">"iPlanetAMWebAgentService"</span>,
        <span class=3D"hljs-attr">"actionValues"</span>: {
            <span class=3D"hljs-attr">"POST"</span>: <span class=3D"hljs-li=
teral">false</span>,
            <span class=3D"hljs-attr">"GET"</span>: <span class=3D"hljs-lit=
eral">true</span>
        },
        <span class=3D"hljs-attr">"resources"</span>: [
            <span class=3D"hljs-string">"http://www.example.com:80/*"</span=
>,
            <span class=3D"hljs-string">"http://www.example.com:80/*?*"</sp=
an>
        ],
        <span class=3D"hljs-attr">"subject"</span>: {
            <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-st=
ring">"Identity"</span>,
            <span class=3D"hljs-attr">"subjectValues"</span>: [
                <span class=3D"hljs-string">"uid=3Ddemo,ou=3DPeople,dc=3Dex=
ample,dc=3Dcom"</span>
            ]
        },
        <span class=3D"hljs-attr">"resourceTypeUuid"</span>: <span class=3D=
"hljs-string">"12345a67-8f0b-123c-45de-6fab78cd01e4"</span>,
        <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"h=
ljs-string">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</s=
pan>,
        <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D=
"hljs-string">"2015-05-11T14:48:08.711Z"</span>,
        <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-s=
tring">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
        <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hlj=
s-string">"2015-05-11T14:48:08.711Z"</span>
        }
    ],
    <span class=3D"hljs-attr">"resultCount"</span>: <span class=3D"hljs-num=
ber">1</span>,
    <span class=3D"hljs-attr">"pagedResultsCookie"</span>: <span class=3D"h=
ljs-literal">null</span>,
    <span class=3D"hljs-attr">"remainingPagedResults"</span>: <span class=
=3D"hljs-number">0</span>
}</pre><p>
    You can use the query string parameters
    <code class=3D"literal">_prettyPrint=3Dtrue</code> to make the output e=
asier to read,
    and <code class=3D"literal">_fields=3D<em class=3D"replaceable">field-n=
ame</em>[,<em class=3D"replaceable">field-name</em>...]</code>
    to limit the fields returned in the output.
   </p></div><div class=3D"section" id=3D"rest-api-authz-policies-create"><=
div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link=
" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#rest-api-authz-policies-create">2.1.13.6.3.&nbsp;Creating Policies</a>=
</h5></div></div></div><p>
    To create a policy in a realm, perform an HTTP POST to the
    <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/po=
licies</code>
    endpoint, with an <code class=3D"literal">_action</code> parameter
    set to <code class=3D"literal">create</code>. Include a JSON representa=
tion of the
    policy in the POST data.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><p lang=3D"en">
Do not use special characters within resource type, policy,
or policy set names (for example, "my+resource+type") when using the consol=
e
or REST endpoints. Using the special characters listed below causes
OpenAM to return a 400 Bad Request error.
The special characters are: double quotes (<kbd>"</kbd>), plus
sign (<kbd>+</kbd>), comma (<kbd>,</kbd>),
less than (<kbd>&lt;</kbd>), equals (<kbd>=3D</kbd>), greater
than (<kbd>&gt;</kbd>), backslash (<kbd>\</kbd>), forward slash
(<kbd>/</kbd>), semicolon (<kbd>;</kbd>), and
null (<kbd>\u0000</kbd>).
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint json hljs"=
>$ curl \
 --request POST \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span=
> \
 --data '{
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"m=
ypolicy"</span>,
    <span class=3D"hljs-attr">"active"</span>: <span class=3D"hljs-literal"=
>true</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"My Policy."</span>,
    <span class=3D"hljs-attr">"applicationName"</span>: <span class=3D"hljs=
-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-attr">"actionValues"</span>: {
        <span class=3D"hljs-attr">"POST"</span>: <span class=3D"hljs-litera=
l">false</span>,
        <span class=3D"hljs-attr">"GET"</span>: <span class=3D"hljs-literal=
">true</span>
    },
    <span class=3D"hljs-attr">"resources"</span>: [
        <span class=3D"hljs-string">"http://www.example.com:80/*"</span>,
        <span class=3D"hljs-string">"http://www.example.com:80/*?*"</span>
    ],
    <span class=3D"hljs-attr">"subject"</span>: {
        <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string=
">"Identity"</span>,
        <span class=3D"hljs-attr">"subjectValues"</span>: [
            <span class=3D"hljs-string">"uid=3Ddemo,ou=3DPeople,dc=3Dexampl=
e,dc=3Dcom"</span>
        ]
    },
    <span class=3D"hljs-attr">"resourceTypeUuid"</span>: <span class=3D"hlj=
s-string">"12345a67-8f0b-123c-45de-6fab78cd01e4"</span>
 }' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/p=
olicies?_action=3Dcreate</span>
 {
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"m=
ypolicy"</span>,
    <span class=3D"hljs-attr">"active"</span>: <span class=3D"hljs-literal"=
>true</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"My Policy."</span>,
    <span class=3D"hljs-attr">"applicationName"</span>: <span class=3D"hljs=
-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-attr">"actionValues"</span>: {
        <span class=3D"hljs-attr">"POST"</span>: <span class=3D"hljs-litera=
l">false</span>,
        <span class=3D"hljs-attr">"GET"</span>: <span class=3D"hljs-literal=
">true</span>
    },
    <span class=3D"hljs-attr">"resources"</span>: [
        <span class=3D"hljs-string">"http://www.example.com:80/*"</span>,
        <span class=3D"hljs-string">"http://www.example.com:80/*?*"</span>
    ],
    <span class=3D"hljs-attr">"subject"</span>: {
        <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string=
">"Identity"</span>,
        <span class=3D"hljs-attr">"subjectValues"</span>: [
            <span class=3D"hljs-string">"uid=3Ddemo,ou=3DPeople,dc=3Dexampl=
e,dc=3Dcom"</span>
        ]
    },
    <span class=3D"hljs-attr">"resourceTypeUuid"</span>: <span class=3D"hlj=
s-string">"12345a67-8f0b-123c-45de-6fab78cd01e4"</span>,
    <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"hljs-=
string">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>=
,
    <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D"hlj=
s-string">"2015-05-11T14:48:08.711Z"</span>,
    <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-strin=
g">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hljs-st=
ring">"2015-05-11T14:48:08.711Z"</span>
}</pre><p>
    You can use the query string parameters
    <code class=3D"literal">_prettyPrint=3Dtrue</code> to make the output e=
asier to read,
    and <code class=3D"literal">_fields=3D<em class=3D"replaceable">field-n=
ame</em>[,<em class=3D"replaceable">field-name</em>...]</code>
    to limit the fields returned in the output.
   </p></div><div class=3D"section" id=3D"rest-api-authz-policies-update"><=
div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link=
" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#rest-api-authz-policies-update">2.1.13.6.4.&nbsp;Updating Policies</a>=
</h5></div></div></div><p>
    To update an individual policy in a realm, perform an HTTP
    PUT to the <code class=3D"literal">/json{<em class=3D"replaceable">/rea=
lm</em>}/policies
   </code> endpoint, and specify the policy name in the URL. Include a
    JSON representation of the updated policy in the PUT data.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><p lang=3D"en">
Do not use special characters within resource type, policy,
or policy set names (for example, "my+resource+type") when using the consol=
e
or REST endpoints. Using the special characters listed below causes
OpenAM to return a 400 Bad Request error.
The special characters are: double quotes (<kbd>"</kbd>), plus
sign (<kbd>+</kbd>), comma (<kbd>,</kbd>),
less than (<kbd>&lt;</kbd>), equals (<kbd>=3D</kbd>), greater
than (<kbd>&gt;</kbd>), backslash (<kbd>\</kbd>), forward slash
(<kbd>/</kbd>), semicolon (<kbd>;</kbd>), and
null (<kbd>\u0000</kbd>).
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint json hljs"=
>$ curl \
 --request PUT \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5w..."</spa=
n> \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --data '{
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"m=
yupdatedpolicy"</span>,
    <span class=3D"hljs-attr">"active"</span>: <span class=3D"hljs-literal"=
>true</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"My Updated Policy."</span>,
    <span class=3D"hljs-attr">"resources"</span>: [
        <span class=3D"hljs-string">"http://www.example.com:80/*"</span>,
        <span class=3D"hljs-string">"http://www.example.com:80/*?*"</span>
    ],
    <span class=3D"hljs-attr">"actionValues"</span>: {
        <span class=3D"hljs-attr">"POST"</span>: <span class=3D"hljs-litera=
l">true</span>,
        <span class=3D"hljs-attr">"GET"</span>: <span class=3D"hljs-literal=
">true</span>
    },
    <span class=3D"hljs-attr">"subject"</span>: {
        <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string=
">"Identity"</span>,
        <span class=3D"hljs-attr">"subjectValues"</span>: [
            <span class=3D"hljs-string">"uid=3Dscarter,ou=3DPeople,dc=3Dexa=
mple,dc=3Dcom"</span>,
            <span class=3D"hljs-string">"uid=3Dbjenson,ou=3DPeople,dc=3Dexa=
mple,dc=3Dcom"</span>
        ]
    },
    <span class=3D"hljs-attr">"resourceTypeUuid"</span>: <span class=3D"hlj=
s-string">"12345a67-8f0b-123c-45de-6fab78cd01e4"</span>
}' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/p=
olicies/mypolicy</span>
 {
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"m=
yupdatedpolicy"</span>,
    <span class=3D"hljs-attr">"active"</span>: <span class=3D"hljs-literal"=
>true</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"My Updated Policy."</span>,
    <span class=3D"hljs-attr">"applicationName"</span>: <span class=3D"hljs=
-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-attr">"actionValues"</span>: {
        <span class=3D"hljs-attr">"POST"</span>: <span class=3D"hljs-litera=
l">true</span>,
        <span class=3D"hljs-attr">"GET"</span>: <span class=3D"hljs-literal=
">true</span>
    },
    <span class=3D"hljs-attr">"resources"</span>: [
        <span class=3D"hljs-string">"http://www.example.com:80/*"</span>,
        <span class=3D"hljs-string">"http://www.example.com:80/*?*"</span>
    ],
    <span class=3D"hljs-attr">"subject"</span>: {
        <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string=
">"Identity"</span>,
        <span class=3D"hljs-attr">"subjectValues"</span>: [
            <span class=3D"hljs-string">"uid=3Dbjenson,ou=3DPeople,dc=3Dexa=
mple,dc=3Dcom"</span>,
            <span class=3D"hljs-string">"uid=3Dscarter,ou=3DPeople,dc=3Dexa=
mple,dc=3Dcom"</span>
        ]
    },
    <span class=3D"hljs-attr">"resourceTypeUuid"</span>: <span class=3D"hlj=
s-string">"12345a67-8f0b-123c-45de-6fab78cd01e4"</span>,
    <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"hljs-=
string">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>=
,
    <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D"hlj=
s-string">"2015-05-11T17:26:59.116Z"</span>,
    <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-strin=
g">"id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hljs-st=
ring">"2015-05-11T17:25:18.632Z"</span>
}</pre><p>
    You can use the query string parameters
    <code class=3D"literal">_prettyPrint=3Dtrue</code> to make the output e=
asier to read,
    and <code class=3D"literal">_fields=3D<em class=3D"replaceable">field-n=
ame</em>[,<em class=3D"replaceable">field-name</em>...]</code>
    to limit the fields returned in the output.
   </p></div><div class=3D"section" id=3D"rest-api-authz-policies-delete"><=
div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link=
" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#rest-api-authz-policies-delete">2.1.13.6.5.&nbsp;Deleting Policies</a>=
</h5></div></div></div><p>
    To delete an individual policy in a realm, perform an HTTP
    DELETE to the <code class=3D"literal">/json{<em class=3D"replaceable">/=
realm</em>}/policies
   </code> endpoint, and specify the policy name in the URL.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
  --header "iPlanetDirectoryPro: AQIC5w..." \
  --request DELETE \
  https://openam.example.com:8443/openam/json/policies/myupdatedpolicy</str=
ong>
<em class=3D"computeroutput">{}</em></pre></div><div class=3D"section" id=
=3D"rest-api-authz-policies-copy-move-policies"><div class=3D"titlepage"><d=
iv><div><h5 class=3D"title"><a class=3D"self-link" href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-polici=
es-copy-move-policies">2.1.13.6.6.&nbsp;Copying and Moving Policies</a></h5=
></div></div></div><p>
    You can copy or move an individual policy by performing an HTTP POST to=
 the
    <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/po=
licies/<em class=3D"replaceable">policyName</em></code>
    endpoint as follows:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      Specify the <code class=3D"literal">_action=3Dcopy</code> or
      <code class=3D"literal">_action=3Dmove</code> URL parameter.
     </p></li><li class=3D"listitem"><p>
      Specify the realm in which the input policy resides in the URL. If th=
e
      realm is not specified in the URL, OpenAM copies or moves a policy fr=
om
      the top level realm.
     </p></li><li class=3D"listitem"><p>
      Specify the policy to be copied or moved in the URL.
     </p></li><li class=3D"listitem"><p>
      Specify the SSO token of an administrative user who has access to per=
form
      the operation in the <code class=3D"literal">iPlanetDirectoryPro</cod=
e> header.
     </p></li></ul></div><p>
    Specify JSON input data as follows:
   </p><div class=3D"table" id=3D"rest-api-authz-policies-copy-move-policie=
s-json"><div class=3D"table-title"><a class=3D"self-link" href=3D"https://b=
ackstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz=
-policies-copy-move-policies-json">JSON Input Data for Copying or Moving In=
dividual Policies</a></div><div class=3D"table-contents"><table xmlns:ng=3D=
"http://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.org/ns/docbook" =
xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http://exslt.org/comm=
on" xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" xmlns:stbl=3D"htt=
p://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.n=
walsh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D=
"http://nwalsh.com/xslt/ext/xsltproc/python/Table" class=3D"table table-str=
iped" summary=3D"JSON Input Data for Copying or Moving Individual Policies"=
 border=3D"0"><colgroup><col width=3D"33%"><col width=3D"22%"><col width=3D=
"45%"></colgroup><thead><tr><th>Object</th><th>Property</th><th>Description=
</th></tr></thead><tbody><tr><td><code class=3D"literal">to</code></td><td>=
<code class=3D"literal">name</code></td><td>
        <p>
         The name of the output policy.
        </p>
        <p>
         Required unless you are copying or moving a policy to a different =
realm
         and you want the output policy to have the same name as the input
         policy.
        </p>
       </td></tr><tr><td><code class=3D"literal">to</code></td><td><code cl=
ass=3D"literal">application</code></td><td>
        <p>
         The policy set in which to place the output policy.
        </p>
        <p>
         Required when copying or moving a policy to a different policy set=
.
        </p>
       </td></tr><tr><td><code class=3D"literal">to</code></td><td><code cl=
ass=3D"literal">realm</code></td><td>
        <p>
         The realm in which to place the output policy. If not
         specified, OpenAM copies or moves the policy within the realm
         identified in the URL.
        </p>
        <p>
         Required when copying or moving a policy to a different realm.
        </p>
       </td></tr><tr><td><code class=3D"literal">to</code></td><td><code cl=
ass=3D"literal">resourceType</code></td><td>
        <p>
         The UUID of the output policy's resource type.
        </p>
        <p>
         Required when copying or moving a policy to a different realm.
        </p>
       </td></tr></tbody></table></div></div><br class=3D"table-break"><p>
    The follow example copies the policy <code class=3D"literal">myPolicy</=
code>
    to <code class=3D"literal">myNewPolicy</code>. The output policy is pla=
ced in the
    <code class=3D"literal">myRealm</code> realm, in the same policy set as=
 the input
    policy:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
  --request POST \
  --header "Content-Type: application/json" \
  --header "iPlanetDirectoryPro: AQIC5w..." \
  --data '{
      "to": {
          "name": "myNewPolicy"
      }
  }' \
  https://openam.example.com:8443/openam/json/myRealm/policies/myPolicy?_ac=
tion=3Dcopy</strong>
<em class=3D"computeroutput">{
    "name":"myNewPolicy",
    "active":true,
    "description":"",
    "applicationName":"iPlanetAMWebAgentService",
    "actionValues":{},
    "resources":['"*://*:*/*"],
    "subject":{"type":"NONE"},
    "resourceTypeUuid":"d98e59c9-766a-4934-b5de-8a28a9edc158",
    "lastModifiedBy":"id=3Damadmin,ou=3Duser,dc=3Dexample,dc=3Dcom",
    "lastModifiedDate":"2015-12-19T15:22:44.861Z",
    "createdBy":"id=3Damadmin,ou=3Duser,dc=3Dexample,dc=3Dcom",
    "creationDate":"2015-12-19T15:22:44.861Z"
}</em></pre><p>
    The following example moves a policy named <code class=3D"literal">myPo=
licy</code>
    in the <code class=3D"literal">myRealm</code> realm to <code class=3D"l=
iteral">myMovedPolicy</code>
    in the <code class=3D"literal">myOtherRealm</code> realm. The output po=
licy is placed in
    the <code class=3D"literal">iPlanetAMWebAgentService</code> policy set,=
 which is the
    policy set in which the input policy is located.
   </p><p>
    The realm <code class=3D"literal">myOtherRealm</code> must be configure=
d as follows
    for the example to run successfully:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
       It must have a resource type that has the same resources as the reso=
urce
       type configured for the <code class=3D"literal">myPolicy</code> poli=
cy.
      </p></li><li class=3D"listitem"><p>
       It must have a policy set named
       <code class=3D"literal">iPlanetAMWebAgentService</code>.
      </p></li></ul></div><p>
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
  --request POST \
  --header "Content-Type: application/json" \
  --header "iPlanetDirectoryPro: AQIC5w..." \
  --data '{
      "to": {
          "name": "myMovedPolicy",
          "realm": "/myOtherRealm",
          "resourceType: "616b3d02-7a8d-4422-b6a7-174f62afd065"
      }
  }' \
  https://openam.example.com:8443/openam/json/myRealm/policies/myPolicy?_ac=
tion=3Dmove</strong>
<em class=3D"computeroutput">{
    "name":"myMovedPolicy",
    "active":true,
    "description":"",
    "actionValues":{},
    "applicationName":"iPlanetAMWebAgentService",
    "resources":["*://*:*/*"],
    "subject":{"type":"NONE"},
    "resourceTypeUuid":"616b3d02-7a8d-4422-b6a7-174f62afd065",
    "lastModifiedBy":"id=3Damadmin,ou=3Duser,dc=3Dexample,dc=3Dcom",
    "lastModifiedDate":"2015-12-21T19:32:59.502Z",
    "createdBy":"id=3Damadmin,ou=3Duser,dc=3Dexample,dc=3Dcom",
    "creationDate":"2015-12-21T19:32:59.502Z"
 }</em></pre><p>
    You can also copy and move multiple policies=E2=80=94all the policies
    in a policy set=E2=80=94in a single operation by performing an HTTP POS=
T to
    the <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>=
}/policies</code>
    endpoint as follows:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      Specify the <code class=3D"literal">_action=3Dcopy</code> or
      <code class=3D"literal">_action=3Dmove</code> URL parameter.
     </p></li><li class=3D"listitem"><p>
      Specify the realm in which the input policies reside as part of the U=
RL.
      If no realm is specified in the URL, OpenAM copies or moves policies
      within the top level realm.
     </p></li><li class=3D"listitem"><p>
      Specify the SSO token of an administrative user who has access to per=
form
      the operation in the <code class=3D"literal">iPlanetDirectoryPro</cod=
e> header.
     </p></li></ul></div><p>
    Specify JSON input data as follows:
   </p><div class=3D"table" id=3D"rest-api-authz-policies-copy-move-multipl=
e-policies-json"><div class=3D"table-title"><a class=3D"self-link" href=3D"=
https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-=
api-authz-policies-copy-move-multiple-policies-json">JSON Input Data for Co=
pying or Moving Multiple Policies</a></div><div class=3D"table-contents"><t=
able xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.=
org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http:=
//exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" x=
mlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=
=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xs=
lt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table" class=
=3D"table table-striped" summary=3D"JSON Input Data for Copying or Moving M=
ultiple Policies" border=3D"0"><colgroup><col width=3D"33%"><col width=3D"2=
2%"><col width=3D"45%"></colgroup><thead><tr><th>Object</th><th>Property</t=
h><th>Description</th></tr></thead><tbody><tr><td><code class=3D"literal">f=
rom</code></td><td><code class=3D"literal">application</code></td><td>
        <p>
         The policy set in which the input policies are located.
        </p>
        <p>
         Required.
        </p>
       </td></tr><tr><td><code class=3D"literal">to</code></td><td><code cl=
ass=3D"literal">application</code></td><td>
        <p>
         The policy set in which to store output policies.
        </p>
        <p>
         Required when copying or moving policies to a different policy set=
.
        </p>
       </td></tr><tr><td><code class=3D"literal">to</code></td><td><code cl=
ass=3D"literal">realm</code></td><td>
        <p>
         The realm in which to store output policies.
        </p>
        <p>
         Required when copying or moving policies to a different realm.
        </p>
       </td></tr><tr><td><code class=3D"literal">to</code></td><td><code cl=
ass=3D"literal">namePostfix</code></td><td>
        <p>
         A value appended to output policy names in order to prevent name
         clashes.
        </p>
        <p>
         Required.
        </p>
       </td></tr><tr><td><code class=3D"literal">resourceTypeMapping</code>=
</td><td>Varies; see Description</td><td>
        <p>
         One or more resource types mappings, where the left side of the
         mapping specifies the UUID of a resource type used by the input
         policies and the right side of the mapping specifies the UUID of a
         resource type used by the output policies. The two resource types
         should have the same resource patterns.
        </p>
        <p>
         Required when copying or moving policies to a different realm.
        </p>
       </td></tr></tbody></table></div></div><br class=3D"table-break"><p>
    The following example copies all the policies in the
    <code class=3D"literal">iPlanetAMWebAgentService</code> policy set in t=
he
    <code class=3D"literal">myRealm</code> realm to the
    <code class=3D"literal">iPlanetAMWebAgentService</code> policy set in t=
he
    <code class=3D"literal">myOtherRealm</code> realm, appending the string
    <code class=3D"literal">-copy</code> to the output policy names.
   </p><p>
    The realm <code class=3D"literal">myOtherRealm</code> must be configure=
d as follows
    for the example to run successfully:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
       It must have a resource type that maps to the
       <code class=3D"literal">ccb50c1a-206d-4946-9106-4164e8f2b35b</code>
       resource type. The two resource types should have the same resource
       patterns.
      </p></li><li class=3D"listitem"><p>
       It must have a policy set named
       <code class=3D"literal">iPlanetAMWebAgentService</code>.
      </p></li></ul></div><p>
   </p><p>
    The JSON output shows that a single policy is copied. The policy
    <code class=3D"literal">myNewPolicy</code> is copied to realm
    <code class=3D"literal">myOtherRealm</code>. The copied policy receives=
 the name=20
    <code class=3D"literal">myOtherRealm-copy</code>:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
  --request POST \
  --header "Content-Type: application/json" \
  --header "iPlanetDirectoryPro: AQIC5w..." \
  --data '{
      "from": {
          "application": "iPlanetAMWebAgentService"
      },
      "to": {
          "realm": "/myOtherRealm",
          "namePostfix": "-copy"
      },
      "resourceTypeMapping": {
          "ccb50c1a-206d-4946-9106-4164e8f2b35b": "616b3d02-7a8d-4422-b6a7-=
174f62afd065"
      }

  }' \
https://openam.example.com:8443/openam/json/myRealm/policies?_action=3Dcopy=
</strong>
<em class=3D"computeroutput">{
    "name":"myNewPolicy-copy",
    "active":true,
    "description":"",
    "actionValues":{},
    "applicationName":"iPlanetAMWebAgentService",
    "resources":["*://*:*/*"],"subject":{"type":"NONE"},
    "resourceTypeUuid":"616b3d02-7a8d-4422-b6a7-174f62afd065",
    "lastModifiedBy":"id=3Damadmin,ou=3Duser,dc=3Dexample,dc=3Dcom",
    "lastModifiedDate":"2015-12-21T20:01:42.410Z",
    "createdBy":"id=3Damadmin,ou=3Duser,dc=3Dexample,dc=3Dcom",
    "creationDate":"2015-12-21T20:01:42.410Z"
}</em></pre></div></div><div class=3D"section" id=3D"rest-api-manage-xacml"=
><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#rest-api-manage-xacml">2.1.13.7.&nbsp;Importing and Exporting XACML =
3.0</a></h4></div></div></div><p>
   OpenAM supports the ability to export policies to
   eXtensible Access Control Markup Language (XACML) 3.0-based
   formatted policy sets
   through its <code class=3D"literal">/xacml/policies</code> REST endpoint=
.
   You can also import XACML 3.0 policy sets back into OpenAM by using the
   same endpoint.
   The endpoint's functionally is identical to that of the
   <span class=3D"command"><strong>ssoadm create-xacml</strong></span> and
   <span class=3D"command"><strong>ssoadm list-xacml</strong></span> comman=
ds.
   For more information, see
   <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#script-policy" class=3D"olink">"Importing and Exporting Policies=
"</a> in the <em>Administration Guide</em>
  </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 clas=
s=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
   OpenAM can only import XACML 3.0 policy sets that were either created by=
 an
   OpenAM instance, or that have had minor manual modifications,
   due to the reuse of some XACML 3.0 parameters for non-standard informati=
on.
   </p></div></div><p>
   When exporting OpenAM policies to XACML 3.0 policy sets, OpenAM maps its
   policies to XACML 3.0 policy elements. The
   mappings are as follows:
  </p><div class=3D"table" id=3D"xacml-mappings"><div class=3D"table-title"=
><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#xacml-mappings">OpenAM Policies to XACML Mapping=
s</a></div><div class=3D"table-contents"><table xmlns:ng=3D"http://docbook.=
org/docbook-ng" xmlns:db=3D"http://docbook.org/ns/docbook" xmlns:exsl=3D"ht=
tp://exslt.org/common" xmlns:exslt=3D"http://exslt.org/common" xmlns:doc=3D=
"http://nwalsh.com/xsl/documentation/1.0" xmlns:stbl=3D"http://nwalsh.com/x=
slt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwalsh.xalan.Tabl=
e" xmlns:lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"http://nwalsh.c=
om/xslt/ext/xsltproc/python/Table" class=3D"table table-striped" summary=3D=
"OpenAM Policies to XACML Mappings" border=3D"0"><colgroup><col width=3D"50=
%"><col width=3D"50%"></colgroup><thead><tr><th>OpenAM Policy</th><th>XACML=
 Policy</th></tr></thead><tbody><tr><td>Policy Name</td><td>Policy ID</td><=
/tr><tr><td>Description</td><td>Description</td></tr><tr><td>Current Time (=
yyyy.MM.dd.HH.mm.ss.SSS)</td><td>Version</td></tr><tr><td>xacml rule target=
</td><td>entitlement excluded resource names</td></tr><tr><td>Rule Deny Ove=
rrides</td><td>Rule Combining Algorithm ID</td></tr><tr><td>
       <p>Any of:
        </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D=
"list-style-type: disc; "><li class=3D"listitem"><p>Entitlement Subject</p>=
</li><li class=3D"listitem"><p>Resource Names</p></li><li class=3D"listitem=
"><p>Policy Set Names</p></li><li class=3D"listitem"><p>Action Values</p></=
li></ul></div><p>
       </p>
      </td><td>Target</td></tr><tr><td>
       <p>Any of:
        </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D=
"list-style-type: disc; "><li class=3D"listitem"><p>Policy Set Name</p></li=
><li class=3D"listitem"><p>Entitlement Name</p></li><li class=3D"listitem">=
<p>Privilege Created By</p></li><li class=3D"listitem"><p>Privilege Modifie=
d By</p></li><li class=3D"listitem"><p>Privilege Creation Date</p></li><li =
class=3D"listitem"><p>Privilege Last Modification Date</p></li></ul></div><=
p>
       </p>
      </td><td>Variable Definitions</td></tr><tr><td>
       Single Level Permit/Deny Actions converted
       to Policy Rules
      </td><td>Rules</td></tr></tbody></table></div></div><br class=3D"tabl=
e-break"><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 c=
lass=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
    XACML obligation is not supported. Also, only one XACML match is define=
d for
    each privilege action, and only one XACML rule for each privilege actio=
n value.
   </p></div></div><div class=3D"section" id=3D"xacml-export"><div class=3D=
"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" href=3D"ht=
tps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#xacml-e=
xport">2.1.13.7.1.&nbsp;Exporting from OpenAM to XACML</a></h5></div></div>=
</div><p>
    OpenAM supports exporting policies into XACML 3.0 format.

    OpenAM only exports a policy set that contains policy definitions. No o=
ther
    types can be included in the policy set, such as sub-policy sets or rul=
es.
    The policy set mapping is as follows:
   </p><div class=3D"table" id=3D"xacml-export-mappings"><div class=3D"tabl=
e-title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/doc=
s/openam/13.5/dev-guide/index.html#xacml-export-mappings">Policy Set Mappin=
gs</a></div><div class=3D"table-contents"><table xmlns:ng=3D"http://docbook=
.org/docbook-ng" xmlns:db=3D"http://docbook.org/ns/docbook" xmlns:exsl=3D"h=
ttp://exslt.org/common" xmlns:exslt=3D"http://exslt.org/common" xmlns:doc=
=3D"http://nwalsh.com/xsl/documentation/1.0" xmlns:stbl=3D"http://nwalsh.co=
m/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwalsh.xalan.T=
able" xmlns:lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"http://nwals=
h.com/xslt/ext/xsltproc/python/Table" class=3D"table table-striped" summary=
=3D"Policy Set Mappings" border=3D"0"><colgroup><col width=3D"66%"><col wid=
th=3D"34%"></colgroup><thead><tr><th>OpenAM</th><th>XACML</th></tr></thead>=
<tbody><tr><td>Realm:&lt;timestamp&gt;(yyyy.MM.dd.HH.mm.ss.SSS)</td><td>Pol=
icySet ID</td></tr><tr><td>Current Time (yyyy.MM.dd.HH.mm.ss.SSS)</td><td>V=
ersion</td></tr><tr><td>Deny Overrides</td><td>Policy Combining Algorithm I=
D</td></tr><tr><td>No targets defined</td><td>Target</td></tr></tbody></tab=
le></div></div><br class=3D"table-break"><p>
    The export service is accessible at the <code class=3D"literal">/xacml/=
policies</code>
    endpoint using a HTTP GET request
    at the following endpoint for the root realm or a specific realm:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint nohighl=
ight">http://openam.example.com:8080/openam/xacml/policies
http://openam.example.com:8080/openam/xacml/{realm}/policies

where {realm} is the name of a specific realm
   </pre><p>
    You can filter your XACML exports using query search filters. Note the
    following points about the search filters:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p><span class=3D"bold"><strong=
>LDAP-based Searches</strong></span>.
     The search filters follow the standard
     guidelines for LDAP searches as they are applied to the
     entitlements index in the LDAP configuration backend, located at:
     <code class=3D"literal">ou=3Ddefault,ou=3DOrganizationalConfig,ou=3D1.=
0,ou=3DsunEntitlementIndexes,
      ou=3Dservices,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg</code>.
    </p></li><li class=3D"listitem"><p>
     <span class=3D"bold"><strong>Search Filter Format</strong></span>. You=
 can specify
     a single search filter or multiple filters in the HTTP URL parameters.
     The format for the search filter is as follows:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"codelisting prettyprint nohigh=
light">[attribute name][operator][attribute value]
    </pre><p>
     If you specify multiple search filters, they are logically ANDed: the
     search results meet the criteria specified in all the
     search filters.
    </p><div class=3D"table" id=3D"export-search-filter-format"><div class=
=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#export-search-filter-format">XAC=
ML Export Search Filter Format</a></div><div class=3D"table-contents"><tabl=
e xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.org=
/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http://e=
xslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" xmln=
s:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"=
xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xslt" =
xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table" class=3D"ta=
ble table-striped" summary=3D"XACML Export Search Filter Format" border=3D"=
0"><colgroup><col width=3D"33%"><col width=3D"67%"></colgroup><thead><tr><t=
h>Element</th><th>Description</th></tr></thead><tbody><tr><td>Attribute Nam=
e</td><td>
         <p>
          The name of the attribute to be searched for. The only permissibl=
e
          values are: <code class=3D"literal">application</code> (keyword f=
or policy set), <code class=3D"literal">createdby</code>,
          <code class=3D"literal">lastmodifiedby</code>, <code class=3D"lit=
eral">creationdate</code>,
          <code class=3D"literal">lastmodifieddate</code>, <code class=3D"l=
iteral">name</code>,
          <code class=3D"literal">description</code>.
         </p>
        </td></tr><tr><td>Operator</td><td>
         <p>The type of comparison operation to perform.</p>
         <div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"li=
st-style-type: circle; "><li class=3D"listitem"><p>=3D Equals (text)</p></l=
i><li class=3D"listitem"><p>&lt; Less Than or Equal To (numerical)</p></li>=
<li class=3D"listitem"><p>&gt; Greater Than or Equal To (numerical)</p></li=
></ul></div>
        </td></tr><tr><td>Attribute Value</td><td>
         <p>
          The matching value. Asterisk wildcards are supported.
         </p>
        </td></tr></tbody></table></div></div><br class=3D"table-break"></l=
i></ul></div><div class=3D"procedure" id=3D"export-policies"><div class=3D"=
procedure-inner"><div class=3D"procedure-title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#e=
xport-policies">To Export Policies</a></div><ul class=3D"procedure"><li cla=
ss=3D"step"><p>
     Use the <code class=3D"literal">/xacml/policies</code> endpoint to exp=
ort the OpenAM entitlement
     policies into XACML 3.0 format. The following curl command exports the=
 policies
     and returns the XACML response (truncated for display purposes).
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
  --request GET \
  --header "iPlanetDirectoryPro: AQIC5..." \
  http://openam.example.com:8080/openam/xacml/policies
  </strong>
  <em class=3D"computeroutput">
&lt;?xml version=3D"1.0" encoding=3D"UTF-8" standalone=3D"yes"?&gt;
&lt;PolicySet xmlns=3D"urn:oasis:names:tc:xacml:3.0:core:schema:wd-17"
 PolicyCombiningAlgId=3D"urn:oasis:names:tc:xacml:3.0:rule-combining-algori=
thm:deny-overrides"
 Version=3D"2014.10.08.21.59.39.231" PolicySetId=3D"/:2014.10.08.21.59.39.2=
31"&gt;
 &lt;Target/&gt;
 &lt;Policy RuleCombiningAlgId=3D"urn:oasis:names:tc:xacml:3.0:rule-combini=
ng-algorithm:deny-overrides"
  Version=3D"2014.10.08.18.01.03.626"
  PolicyId=3D"Rockshop_Checkout_https://forgerock-rockshop.openrock.org:443=
/wp-login.php*?*"&gt;
  ...</em></pre></li></ul></div></div><div class=3D"procedure" id=3D"export=
-policies-search-filter"><div class=3D"procedure-inner"><div class=3D"proce=
dure-title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/dev-guide/index.html#export-policies-search-filter">To Exp=
ort Policies with Search Filters</a></div><ol class=3D"procedure" type=3D"1=
"><li class=3D"step"><p>
     Use the <code class=3D"literal">/xacml/policies</code> endpoint to exp=
ort the policies
     into XACML 3.0 format with a search filter. This command only exports =
policies
     that were created by "amadmin".
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
  --request GET \
  --header "iPlanetDirectoryPro: AQIC5..." \
  http://openam.example.com:8080/openam/xacml/policies?filter=3Dcreatedby=
=3Damadmin
  </strong></pre></li><li class=3D"step"><p>
     You can also specify more than one search filter by logically ANDing t=
he filters
     as follows:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
  --request GET \
  --header "iPlanetDirectoryPro: AQIC5..." \
  http://openam.example.com:8080/openam/xacml/policies?filter=3Dcreatedby=
=3Damadmin&amp;
  filter=3Dcreationdate=3D135563832</strong></pre></li></ol></div></div></d=
iv><div class=3D"section" id=3D"xacml-import"><div class=3D"titlepage"><div=
><div><h5 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#xacml-import">2.1.13.7.=
2.&nbsp;Importing from XACML to OpenAM</a></h5></div></div></div><p>
    OpenAM supports the import of XACML 3.0-based policy sets into
    OpenAM policies using the REST <code class=3D"literal">/xacml/policies<=
/code>
    endpoint.
    To test an import, OpenAM provides a dry-run feature that runs an impor=
t
    without saving the changes to the database. The dry-run feature provide=
s a
    summary of the import so that you can troubleshoot any potential mismat=
ches
    prior to the actual import.
   </p><p>
    You can import a XACML policy using an HTTP POST request for the root r=
ealm
    or a specific realm at the following endpoints:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint nohighl=
ight">http://openam.example.com:8080/openam/xacml/policies
http://openam.example.com:8080/openam/xacml/{realm}/policies

where {realm} is the name of a specific realm
   </pre><div class=3D"procedure" id=3D"procedure-xacml-import"><div class=
=3D"procedure-inner"><div class=3D"procedure-title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#procedure-xacml-import">To Import a XACML 3.0 Policy</a></div><ol class=
=3D"procedure" type=3D"1"><li class=3D"step"><p>You can do a dry run using =
the <code class=3D"literal">dryrun=3Dtrue</code> query to
      test the import. The dry-run option outputs in JSON format and displa=
ys the status
      of each import policy, where "U" indicates "Updated"; "A" for "Added"=
. The
      dry-run does not actually update to the database. When you are ready =
for an
      actual import, you need to re-run the command
      without the <code class=3D"literal">dryrun=3Dtrue</code> query.
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">curl \
  --request POST \
  --header "Content-Type: application/xml" \
  --header "iPlanetDirectoryPro: AQIC5..." \
  --data @xacml-policy.xml \
  http://openam.example.com:8080/openam/xacml/policies?dryrun=3Dtrue</stron=
g>
<em class=3D"computeroutput">[
 {
   "status":"A",
   "name":"aNewPolicy"
 },
 {
   "status":"U",
   "name":"anExistingPolicy"
 },
 {
   "status":"U",
   "name":"anotherExistingPolicy"
 }
]</em></pre></li><li class=3D"step"><p>
Use the <code class=3D"literal">/xacml/policies</code> endpoint to import a=
 XACML policy:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">curl \
  --request POST \
  --header "Content-Type: application/xml" \
  --header "iPlanetDirectoryPro: AQIC5..." \
  --data @xacml-policy.xml \
  http://openam.example.com:8080/openam/xacml/policies</strong></pre></li><=
/ol></div></div><div class=3D"panel panel-success"><div class=3D"panel-head=
ing"><h3 class=3D"panel-title">Tip</h3></div><div class=3D"panel-body"><p>Y=
ou can import a XACML policy into a realm as follows:</p><div class=3D"zero=
-clipboard hidden-xs hidden-print" title=3D"Copy command to clipboard"><spa=
n class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></=
div><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=3D"useri=
nput">curl \
  --request POST \
  --header "Content-Type: application/xml" \
  --header "iPlanetDirectoryPro: AQIC5..." \
  --data @xacml-policy.xml \
  http://openam.example.com:8080/openam/xacml/{realm}/policies</strong></pr=
e></div></div></div></div><div class=3D"section" id=3D"rest-api-authz-condi=
tion-types"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#rest-api-authz-condition-types">2.1.13.8.&nbsp;Managing E=
nvironment Condition Types</a></h4></div></div></div><p>
   Environment condition types describe the JSON representation
   of environment conditions that you can use in policy definitions.
  </p><div class=3D"itemizedlist"><p>OpenAM provides the <code class=3D"lit=
eral">conditiontypes</code> REST endpoint
    for the following:</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-c=
ondition-types-query" title=3D"2.1.13.8.1.&nbsp;Querying Environment Condit=
ion Types">"Querying Environment Condition Types"</a></p></li><li class=3D"=
listitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#rest-api-authz-condition-types-read" titl=
e=3D"2.1.13.8.2.&nbsp;Reading a Specific Environment Condition Type">"Readi=
ng a Specific Environment Condition Type"</a></p></li></ul></div><p>
   Environment condition types are server-wide, and do not differ by realm.
   Hence the URI for the condition types API does not contain a realm compo=
nent,
   but is <code class=3D"literal">/json/conditiontypes</code>.
  </p><p>
   Environment condition types are represented in JSON and take the followi=
ng form.
   Environment condition types are built from standard JSON objects and val=
ues
   (strings, numbers, objects, arrays, <code class=3D"literal">true</code>,
   <code class=3D"literal">false</code>, and <code class=3D"literal">null</=
code>).
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint nohighli=
ght">{
    "title": "IPv4",
    "logical": false,
    "config": {
        "type": "object",
        "properties": {
            "startIp": {
                "type": "string"
            },
            "endIp": {
                "type": "string"
            },
            "dnsName": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        }
    }
}</pre><p>
    Notice that the environment condition type has a title, a "logical" fie=
ld
    that indicates whether the type is a logical operator or takes a predic=
ate,
    and a configuration specification.
    The configuration specification in this case indicates
    that an IPv4 environment condition has two properties, "startIp" and "e=
ndIp",
    that each take a single string value, and a third property, "dnsName," =
that
    takes an array of string values.
    In other words, a concrete IP environment condition specification
    without a DNS name constraint
    could be represented in a policy definition as in the following example=
:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
   <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">"=
IPv4"</span>,
   <span class=3D"hljs-string">"startIp"</span>: <span class=3D"hljs-string=
">"127.0.0.1"</span>,
   <span class=3D"hljs-string">"endIp"</span>: <span class=3D"hljs-string">=
"127.0.0.255"</span>
}</pre><p>
    The configuration is what differs the most across environment condition=
 types.
    The NOT condition, for example, takes a single condition object
    as the body of its configuration.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint nohighl=
ight">{
  "title" : "NOT",
  "logical" : true,
  "config" : {
    "type" : "object",
    "properties" : {
      "condition" : {
        "type" : "object",
        "properties" : {
        }
      }
    }
  }
}</pre><p>
    The concrete NOT condition therefore takes the following form.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"NOT"</span>,
    <span class=3D"hljs-string">"condition"</span>: {
        ...
    }
}</pre><p>
    The OR condition takes an array of conditions.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint nohighl=
ight">{
  "title" : "OR",
  "logical" : true,
  "config" : {
    "type" : "object",
    "properties" : {
      "conditions" : {
        "type" : "array",
        "items" : {
          "type" : "any"
        }
      }
    }
  }
}</pre><p>
    A corresponding concrete OR condition thus takes the following form.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"OR"</span>,
    <span class=3D"hljs-string">"conditions"</span>: [
        {
            ...
        },
        {
            ...
        },
        ...
    ]
}</pre><div class=3D"section" id=3D"rest-api-authz-condition-types-query"><=
div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link=
" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#rest-api-authz-condition-types-query">2.1.13.8.1.&nbsp;Querying Enviro=
nment Condition Types</a></h5></div></div></div><p>
    To list all environment condition types, perform an HTTP GET to the
    <code class=3D"literal">/json/conditiontypes</code> endpoint, with a
    <code class=3D"literal">_queryFilter</code> parameter set to <code clas=
s=3D"literal">true</code>.
   </p><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint json hljs"=
>$ curl \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span=
> \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/c=
onditiontypes?_queryFilter=3Dtrue</span>
 {
    <span class=3D"hljs-attr">"result"</span> : [
        {
            <span class=3D"hljs-attr">"title"</span>: <span class=3D"hljs-s=
tring">"IPv4"</span>,
            <span class=3D"hljs-attr">"logical"</span>: <span class=3D"hljs=
-literal">false</span>,
            <span class=3D"hljs-attr">"config"</span>: {
                <span class=3D"hljs-attr">"type"</span>: <span class=3D"hlj=
s-string">"object"</span>,
                <span class=3D"hljs-attr">"properties"</span>: {
                    <span class=3D"hljs-attr">"startIp"</span>: {
                        <span class=3D"hljs-attr">"type"</span>: <span clas=
s=3D"hljs-string">"string"</span>
                    },
                    <span class=3D"hljs-attr">"endIp"</span>: {
                        <span class=3D"hljs-attr">"type"</span>: <span clas=
s=3D"hljs-string">"string"</span>
                    },
                    <span class=3D"hljs-attr">"dnsName"</span>: {
                        <span class=3D"hljs-attr">"type"</span>: <span clas=
s=3D"hljs-string">"array"</span>,
                        <span class=3D"hljs-attr">"items"</span>: {
                            <span class=3D"hljs-attr">"type"</span>: <span =
class=3D"hljs-string">"string"</span>
                        }
                    }
                }
            }
        },
        {
            <span class=3D"hljs-attr">"title"</span>: <span class=3D"hljs-s=
tring">"NOT"</span>,
            <span class=3D"hljs-attr">"logical"</span>: <span class=3D"hljs=
-literal">true</span>,
            <span class=3D"hljs-attr">"config"</span>: {
                <span class=3D"hljs-attr">"type"</span>: <span class=3D"hlj=
s-string">"object"</span>,
                <span class=3D"hljs-attr">"properties"</span>: {
                    <span class=3D"hljs-attr">"condition"</span>: {
                        <span class=3D"hljs-attr">"type"</span>: <span clas=
s=3D"hljs-string">"object"</span>,
                        <span class=3D"hljs-attr">"properties"</span>: { }
                    }
                }
            }
        },
        {...},
        {...},
        {...}
    ],
    <span class=3D"hljs-attr">"resultCount"</span> : <span class=3D"hljs-nu=
mber">18</span>,
    <span class=3D"hljs-attr">"pagedResultsCookie"</span> : <span class=3D"=
hljs-literal">null</span>,
    <span class=3D"hljs-attr">"remainingPagedResults"</span> : <span class=
=3D"hljs-number">0</span>
}</pre><p>
    Additional query strings can be specified to alter the returned results=
.
    For more information,
    see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#rest-api-filter-sort-page" title=3D"2.1.7.&nbs=
p;Filtering, Sorting, and Paging Results">"Filtering, Sorting, and Paging R=
esults"</a>.
   </p></div><div class=3D"section" id=3D"rest-api-authz-condition-types-re=
ad"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self=
-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#rest-api-authz-condition-types-read">2.1.13.8.2.&nbsp;Reading a S=
pecific Environment Condition Type</a></h5></div></div></div><p>
    To read an individual environment condition type, perform an HTTP
    GET to the <code class=3D"literal">/json/conditiontypes</code> endpoint=
, and specify
    the environment condition type name in the URL.
   </p><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
 --header "iPlanetDirectoryPro: AQIC5..." \
 https://openam.example.com:8443/openam/json/conditiontypes/IPv4</strong>
<em class=3D"computeroutput">{
  "title" : "IPv4",
  "logical" : false,
  "config" : {
    "type" : "object",
    "properties" : {
      "startIp" : {
        "type" : "string"
      },
      "endIp" : {
        "type" : "string"
      },
      "dnsName" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        }
      }
    }
  }
}</em></pre></div></div><div class=3D"section" id=3D"rest-api-authz-subject=
-types"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"=
self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#rest-api-authz-subject-types">2.1.13.9.&nbsp;Managing Subject=
 Condition Types</a></h4></div></div></div><p>
   Subject condition types describe the JSON representation
   of subject conditions that you can use in policy definitions.
  </p><div class=3D"itemizedlist"><p>OpenAM provides the <code class=3D"lit=
eral">subjecttypes</code> REST endpoint
    for the following:</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-s=
ubject-types-query" title=3D"2.1.13.9.1.&nbsp;Querying Subject Condition Ty=
pes">"Querying Subject Condition Types"</a></p></li><li class=3D"listitem">=
<p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#rest-api-authz-subject-types-read" title=3D"2.1.13.=
9.2.&nbsp;Reading a Specific Subject Condition Type">"Reading a Specific Su=
bject Condition Type"</a></p></li></ul></div><p>
   Environment condition types are server-wide, and do not differ by realm.
   Hence the URI for the condition types API does not contain a realm compo=
nent,
   but is <code class=3D"literal">/json/subjecttypes</code>.
  </p><p>
   Subject condition types are represented in JSON and take the following f=
orm.
   Subject condition types are built from standard JSON objects and values
   (strings, numbers, objects, arrays, <code class=3D"literal">true</code>,
   <code class=3D"literal">false</code>, and <code class=3D"literal">null</=
code>).
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint nohighli=
ght">{
    "title" : "Identity",
    "logical" : false,
    "config" : {
        "type" : "object",
        "properties" : {
            "subjectValues" : {
                "type" : "array",
                "items" : {
                    "type" : "string"
                }
            }
        }
    }
}</pre><p>
    Notice that the subject type has a title, a "logical" field
    that indicates whether the type is a logical operator or takes a predic=
ate,
    and a configuration specification.
    The configuration specification in this case indicates
    that an Identity subject condition has one property,
    "subjectValues", which takes an array of string values.
    In other words, a concrete Identity subject condition specification
    is represented in a policy definition as in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint nohighl=
ight">{
   "type": "Identity",
   "subjectValues": [
       "uid=3Dscarter,ou=3DPeople,dc=3Dexample,dc=3Dcom"
   ]
}</pre><p>
    The configuration is what differs the most across subject condition typ=
es.
    The AND condition, for example, takes an array of subject condition obj=
ects
    as the body of its configuration.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint nohighl=
ight">{
    "title" : "AND",
    "logical" : true,
    "config" : {
        "type" : "object",
        "properties" : {
            "subjects" : {
                "type" : "array",
                "items" : {
                    "type" : "any"
                }
            }
        }
    }
}</pre><p>
    The concrete AND subject condition therefore takes the following form.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"type"</span>: <span class=3D"hljs-string">=
"AND"</span>,
    <span class=3D"hljs-string">"subject"</span>: [
      {...},
      {...},
      {...},
      {...}
    ]
}</pre><div class=3D"section" id=3D"rest-api-authz-subject-types-query"><di=
v class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#rest-api-authz-subject-types-query">2.1.13.9.1.&nbsp;Querying Subject Co=
ndition Types</a></h5></div></div></div><p>
    To list all environment condition types, perform an HTTP GET to the
    <code class=3D"literal">/json/subjecttypes</code> endpoint, with a
    <code class=3D"literal">_queryFilter</code> parameter set to <code clas=
s=3D"literal">true</code>.
   </p><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint json hljs"=
>$ curl \
  --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</spa=
n> \
  https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/=
subjecttypes?_queryFilter=3Dtrue</span>
  {
    <span class=3D"hljs-attr">"result"</span> : [
        {
            <span class=3D"hljs-attr">"title"</span>: <span class=3D"hljs-s=
tring">"JwtClaim"</span>,
            <span class=3D"hljs-attr">"logical"</span>: <span class=3D"hljs=
-literal">false</span>,
            <span class=3D"hljs-attr">"config"</span>: {
                <span class=3D"hljs-attr">"type"</span>: <span class=3D"hlj=
s-string">"object"</span>,
                <span class=3D"hljs-attr">"properties"</span>: {
                    <span class=3D"hljs-attr">"claimName"</span>: {
                        <span class=3D"hljs-attr">"type"</span>: <span clas=
s=3D"hljs-string">"string"</span>
                    },
                    <span class=3D"hljs-attr">"claimValue"</span>: {
                        <span class=3D"hljs-attr">"type"</span>: <span clas=
s=3D"hljs-string">"string"</span>
                    }
                }
            }
        },
        {
            <span class=3D"hljs-attr">"title"</span>: <span class=3D"hljs-s=
tring">"NOT"</span>,
            <span class=3D"hljs-attr">"logical"</span>: <span class=3D"hljs=
-literal">true</span>,
            <span class=3D"hljs-attr">"config"</span>: {
                <span class=3D"hljs-attr">"type"</span>: <span class=3D"hlj=
s-string">"object"</span>,
                <span class=3D"hljs-attr">"properties"</span>: {
                    <span class=3D"hljs-attr">"subject"</span>: {
                        <span class=3D"hljs-attr">"type"</span>: <span clas=
s=3D"hljs-string">"object"</span>,
                        <span class=3D"hljs-attr">"properties"</span>: { }
                    }
                }
            }
        },
        {...},
        {...},
        {...}
    ],
    <span class=3D"hljs-attr">"resultCount"</span> : <span class=3D"hljs-nu=
mber">5</span>,
    <span class=3D"hljs-attr">"pagedResultsCookie"</span> : <span class=3D"=
hljs-literal">null</span>,
    <span class=3D"hljs-attr">"remainingPagedResults"</span> : <span class=
=3D"hljs-number">0</span>
}</pre><p>
    Additional query strings can be specified to alter the returned results=
.
    For more information,
    see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#rest-api-filter-sort-page" title=3D"2.1.7.&nbs=
p;Filtering, Sorting, and Paging Results">"Filtering, Sorting, and Paging R=
esults"</a>.
   </p></div><div class=3D"section" id=3D"rest-api-authz-subject-types-read=
"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-l=
ink" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/ind=
ex.html#rest-api-authz-subject-types-read">2.1.13.9.2.&nbsp;Reading a Speci=
fic Subject Condition Type</a></h5></div></div></div><p>
    To read an individual subject condition type, perform an HTTP
    GET to the <code class=3D"literal">/json/subjecttypes</code> endpoint, =
and specify
    the subject condition type name in the URL.
   </p><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
 --header "iPlanetDirectoryPro: AQIC5..." \
 https://openam.example.com:8443/openam/json/subjecttypes/Identity</strong>
<em class=3D"computeroutput">{
    "title" : "Identity",
    "logical" : false,
    "config" : {
        "type" : "object",
        "properties" : {
            "subjectValues" : {
                "type" : "array",
                "items" : {
                    "type" : "string"
                }
            }
        }
    }
}</em></pre></div></div><div class=3D"section" id=3D"rest-api-authz-subject=
-attributes"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a clas=
s=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#rest-api-authz-subject-attributes">2.1.13.10.&nbsp;Manag=
ing Subject Attributes</a></h4></div></div></div><p>
   When you define a policy subject condition, the condition can depend on =
values
   of subject attributes stored in a user's profile. The list of possible s=
ubject
   attributes that you can use depends on the LDAP User Attributes configur=
ed for
   the Identity data store where OpenAM looks up the user's profile.
  </p><div class=3D"itemizedlist"><p>OpenAM provides the <code class=3D"lit=
eral">subjectattributes</code> REST endpoint
    for the following:</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-s=
ubject-attributes-query" title=3D"2.1.13.10.1.&nbsp;Querying Subject Attrib=
utes">"Querying Subject Attributes"</a></p></li></ul></div><p>
   Subject attributes derive from the list of LDAP user attributes configur=
ed
   for the Identity data store. For more information, see
   <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#config-data-store" class=3D"olink">"Configuring Data Stores"</a>=
 in the <em>Administration Guide</em>.

  </p><div class=3D"section" id=3D"rest-api-authz-subject-attributes-query"=
><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#rest-api-authz-subject-attributes-query">2.1.13.10.1.&nbsp;Querying =
Subject Attributes</a></h5></div></div></div><p>
    To list all subject attributes, perform an HTTP GET to the
    <code class=3D"literal">/json/subjectattributes</code> endpoint, with a
    <code class=3D"literal">_queryFilter</code> parameter set to <code clas=
s=3D"literal">true</code>.
   </p><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/subjectattributes/?_queryFilter=
=3Dtrue</strong>
<em class=3D"computeroutput">
{
    "result" : [
        "sunIdentityServerPPInformalName",
        "sunIdentityServerPPFacadeGreetSound",
        "uid",
        "manager",
        "sunIdentityServerPPCommonNameMN",
        "sunIdentityServerPPLegalIdentityGender",
        "preferredLocale",
        "...",
        "...",
        "..."
    ],
    "resultCount": 87,
    "pagedResultsCookie": null,
    "remainingPagedResults": 0
}</em></pre><p>
  Note that no pagination cookie is set and the subject attribute names are
  all returned as part of the "result" array.
  </p></div></div><div class=3D"section" id=3D"rest-api-authz-decision-comb=
iners"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"s=
elf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#rest-api-authz-decision-combiners">2.1.13.11.&nbsp;Managing De=
cision Combiners</a></h4></div></div></div><p>
   Decision combiners describe how to resolve policy decisions
   when multiple policies apply.
  </p><div class=3D"itemizedlist"><p>OpenAM provides the <code class=3D"lit=
eral">decisioncombiners</code> REST endpoint
    for the following:</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-authz-d=
ecision-combiner-query" title=3D"2.1.13.11.1.&nbsp;Querying Decision Combin=
ers">"Querying Decision Combiners"</a></p></li><li class=3D"listitem"><p><a=
 class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#rest-api-authz-decision-combiner-read" title=3D"2.1.13.1=
1.2.&nbsp;Reading a Specific Decision Combiner">"Reading a Specific Decisio=
n Combiner"</a></p></li></ul></div><p>
   Decision combiners are server-wide, and do not differ by realm.
   Hence the URI for the condition types API
   does not contain a realm component,
   but is <code class=3D"literal">/json/decisioncombiners</code>.
  </p><div class=3D"section" id=3D"rest-api-authz-decision-combiner-query">=
<div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-lin=
k" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index=
.html#rest-api-authz-decision-combiner-query">2.1.13.11.1.&nbsp;Querying De=
cision Combiners</a></h5></div></div></div><p>
    To list all decision combiners, perform an HTTP GET to the
    <code class=3D"literal">/json/decisioncombiners</code> endpoint, with a
    <code class=3D"literal">_queryFilter</code> parameter set to <code clas=
s=3D"literal">true</code>.
   </p><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
 --header "iPlanetDirectoryPro: AQIC5..." \
 https://openam.example.com:8443/openam/json/decisioncombiners?_queryFilter=
=3Dtrue</strong>
<em class=3D"computeroutput">{
    "result": [
        {
            "title": "DenyOverride"
        }
    ],
    "resultCount": 1,
    "pagedResultsCookie": null,
    "remainingPagedResults": 0
}</em></pre><p>
    Additional query strings can be specified to alter the returned results=
.
    For more information,
    see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#rest-api-filter-sort-page" title=3D"2.1.7.&nbs=
p;Filtering, Sorting, and Paging Results">"Filtering, Sorting, and Paging R=
esults"</a>.
   </p></div><div class=3D"section" id=3D"rest-api-authz-decision-combiner-=
read"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#rest-api-authz-decision-combiner-read">2.1.13.11.2.&nbsp;Readin=
g a Specific Decision Combiner</a></h5></div></div></div><p>
   To view an individual decision combiner, perform an HTTP GET on its reso=
urce.
  </p><p>
    To read an individual decision combiner, perform an HTTP
    GET to the <code class=3D"literal">/json/decisioncombiners</code> endpo=
int, and specify
    the decision combiner name in the URL.
  </p><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
 --header "iPlanetDirectoryPro: AQIC5..." \
 https://openam.example.com:8443/openam/json/decisioncombiners/DenyOverride=
</strong>
<em class=3D"computeroutput">{
  "title" : "DenyOverride"
}</em></pre></div></div></div><div class=3D"section" id=3D"sec-rest-oauth2-=
oidc"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#sec-rest-oauth2-oidc">2.1.14.&nbsp;RESTful OAuth 2.0, OpenID Co=
nnect 1.0 and UMA 1.0 Services</a></h3></div></div></div><a class=3D"indext=
erm" name=3D"d15472e6633"></a><p>
  This section shows how to use the OpenAM RESTful interfaces for
  OAuth 2.0, OpenID Connect 1.0, and UMA 1.0.
 </p><p>
  In this section, long URLs are wrapped to fit the printed page, as some
  of the output is formatted for easier reading.
 </p><div class=3D"section" id=3D"rest-api-oauth2"><div class=3D"titlepage"=
><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backs=
tage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-oauth2">2=
.1.14.1.&nbsp;OAuth 2.0</a></h4></div></div></div><a class=3D"indexterm" na=
me=3D"d15472e6643"></a><div class=3D"itemizedlist"><p>
    OpenAM exposes the following REST endpoints for different OAuth 2.0
    purposes:
   </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li cla=
ss=3D"listitem"><p>
     Endpoints for <a class=3D"link" href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#rest-api-oauth2-client-endpoints" t=
itle=3D"2.1.14.1.1.&nbsp;OAuth 2.0 Client and Resource Server Endpoints">OA=
uth
     2.0 clients and resource servers</a>, mostly defined in RFC 6749,
     <a class=3D"link" href=3D"http://tools.ietf.org/html/rfc6749" target=
=3D"_blank"><em class=3D"citetitle">The OAuth 2.0 Authorization Framework</=
em></a>, with
     additional <code class=3D"literal">tokeninfo</code> and <code class=3D=
"literal">introspect</code>
     endpoints useful to resource servers and clients.
    </p></li><li class=3D"listitem"><p>
     An endpoint for <a class=3D"link" href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#rest-api-oauth2-resourceset-endpo=
int" title=3D"2.1.14.1.3.&nbsp;OAuth 2.0 Resource Set Endpoint">reading OAu=
th 2.0 resource sets</a>. This is specific to OpenAM.
    </p></li><li class=3D"listitem"><p>
     An endpoint for
     <a class=3D"link" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#rest-api-oauth2-token-admin-endpoint" title=3D"2.=
1.14.1.4.&nbsp;OAuth 2.0 Token Administration Endpoint">OAuth 2.0 token adm=
inistration</a>.
     This is specific to OpenAM.</p></li><li class=3D"listitem"><p>An endpo=
int for <a class=3D"link" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#rest-api-oauth2-client-admin-endpoint" title=
=3D"2.1.14.1.5.&nbsp;OAuth 2.0 Client Administration Endpoint">OAuth 2.0 cl=
ient administration</a>. This is specific to OpenAM.</p></li></ul></div><p>
   When accessing the APIs, browser-based REST clients can rely on OpenAM
   to handle the session as usual. First authenticate with OpenAM. Then per=
form
   the operations in the browser session.
  </p><p>
   Clients not running in a browser can authenticate as described in
   <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#rest-api-auth" title=3D"2.1.5.&nbsp;Authentication =
and Logout">"Authentication and Logout"</a>, whereby OpenAM returns a
   <code class=3D"literal">token.id</code> value. Clients pass the
   <code class=3D"literal">token.id</code> value in a header named after th=
e
   authentication cookie, by default <code class=3D"literal">iplanetDirecto=
ryPro</code>.
  </p><div class=3D"section" id=3D"rest-api-oauth2-client-endpoints"><div c=
lass=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" hre=
f=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#=
rest-api-oauth2-client-endpoints">2.1.14.1.1.&nbsp;OAuth 2.0 Client and Res=
ource Server Endpoints</a></h5></div></div></div><p>
    OpenAM exposes REST endpoints for making calls to OpenAM acting as an
    authorization server, as described in
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide=
/index.html#chap-oauth2" class=3D"olink">"Managing OAuth 2.0 Authorization"=
</a> in the <em>Administration Guide</em>.
   </p><div class=3D"variablelist"><p>In addition to the standard authoriza=
tion and token endpoints
  described in RFC 6749, OpenAM also exposes a token information endpoint
  for resource servers to get information about access tokens so they can
  determine how to respond to requests for protected resources, and an
  introspection endpoint to retrieve metadata about a token, such as approv=
ed
  scopes and the context in which the token was issued. OpenAM as
  authorization server exposes the following endpoints for clients and
  resource servers.</p><dl class=3D"variablelist"><dt><span class=3D"term">=
<code class=3D"literal">/oauth2/authorize</code></span></dt><dd><p>Authoriz=
ation endpoint defined in RFC 6749, used to obtain an
   authorization grant from the resource owner.</p><p>
    The <code class=3D"literal">/oauth2/authorize</code> endpoint is protec=
ted by the
    policy you created after OAuth 2.0 authorization server configuration, =
which
    grants all authenticated users access.
   </p><p>The following is an example URL for obtaining consent:</p><p><cod=
e class=3D"literal">https://openam.example.com:8443/openam/oauth2/realms/ro=
ot/authorize\
    ?client_id=3DmyClient\
    &amp;response_type=3Dcode\
    &amp;scope=3Dprofile\
    &amp;redirect_uri=3Dhttps://www.example.com</code></p><p>After logging =
in, the URL above presents the OAuth 2.0 consent screen, similar to the fol=
lowing:</p><div class=3D"figure" id=3D"figure-oauth2-consent-screen-xui"><d=
iv class=3D"figure-title"><a class=3D"self-link" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#figure-oauth2-consent-s=
creen-xui">OAuth 2.0 Consent Screen</a></div><div class=3D"figure-contents"=
><div class=3D"mediaobject" align=3D"center"><a class=3D"fancybox cboxEleme=
nt" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/imag=
es/oauth2-authz-page-xui.png"><img class=3D"img-responsive center-block" da=
ta-toggle=3D"tooltip" src=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/images/thumb_oauth2-authz-page-xui.png" align=3D"middle" alt=
=3D"OAuth 2.0 consent screen." title=3D"" data-original-title=3D"The OAuth =
2.0 XUI consent screen requesting access to profile information."></a></div=
></div></div><br class=3D"figure-break"><p>If creating your own consent pag=
e, you can create a POST request to the endpoint
    with the following additional parameters:</p><div class=3D"variablelist=
"><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"litera=
l">decision</code></span></dt><dd><p>Whether the resource owner consents to=
 the requested access, or denies
      consent.</p><p>Valid values are <code class=3D"literal">allow</code> =
or <code class=3D"literal">deny</code>.</p></dd><dt><span class=3D"term"><c=
ode class=3D"literal">save_consent</code></span></dt><dd><p>Updates the res=
ource owner's profile to avoid having to prompt the resource owner
      to grant authorization when the client issues subsequent authorizatio=
n requests.</p><p>To save consent, set the <code class=3D"literal">save_con=
sent</code> property to
      <code class=3D"literal">on</code>.
     </p><p>You must provide the <span class=3D"emphasis"><em>Saved Consent=
 Attribute Name</em></span> property
      with a profile attribute in which to store the resource owner's conse=
nt decision.</p><p>For more information on setting this property in the OAu=
th2 Provider service, see
      <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/reference=
/index.html#oauth2-provider-configuration" class=3D"olink">"OAuth2 Provider=
"</a> in the <em>Reference</em>.</p></dd><dt><span class=3D"term"><code cla=
ss=3D"literal">csrf</code></span></dt><dd><p>Duplicates the contents of the=
 <code class=3D"literal">iPlanetDirectoryPro</code> cookie,
      which contains the SSO token of the resource owner giving consent.</p=
><p>Duplicating the cookie value helps prevent against Cross-Site Request F=
orgery
      (CSRF) attacks.
     </p></dd></dl></div><p>Example:</p><div class=3D"zero-clipboard hidden=
-xs hidden-print" title=3D"Copy command to clipboard"><span class=3D"btn-co=
py-cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D=
"cmdline prettyprint nohighlight">$ <strong class=3D"userinput">curl \
 --request POST \
 --header  "Content-Type: application/x-www-form-urlencoded" \
 --Cookie "iPlanetDirectoryPro=3DAQIC5w...*" \
 --data "redirect_uri=3Dhttp://www.example.net" \
 --data "scope=3Dprofile" \
 --data "response_type=3Dcode" \
 --data "client_id=3DmyClient" \
 --data "csrf=3DAQIC5w...*" \
 --data "decision=3Dallow" \
 --data "save_consent=3Don" \
 "https://openam.example.com:8443/openam/oauth2/authorize?response_type=3Dc=
ode&amp;client_id=3DmyClient"\
 "&amp;realm=3D/&amp;scope=3Dprofile&amp;redirect_uri=3Dhttp://www.example.=
net"</strong></pre><p>
    You must specify the realm if the OpenAM OAuth 2.0
    provider is configured for a subrealm rather than the top-level realm.
    For example, if the OAuth 2.0 provider is configured
    for the <code class=3D"literal">/customers</code> realm,
    then use <code class=3D"literal">/oauth2/customers/authorize</code>.
   </p><p>
    The <code class=3D"literal">/oauth2/authorize</code> endpoint can take =
additional parameters,
    such as:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      <code class=3D"literal">module</code> and <code class=3D"literal">ser=
vice</code>. Use
      either as described in
      <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-gui=
de/index.html#authn-from-browser" class=3D"olink">"Authenticating To OpenAM=
"</a> in the <em>Administration Guide</em>,
      where <code class=3D"literal">module</code> specifies
      the authentication module instance to use or <code class=3D"literal">=
service</code>
      specifies the authentication chain to use when authenticating the res=
ource
      owner.
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">response_mode=3Dform_post</code>. Use this pa=
rameter to return a
      self-submitting form that contains the code instead of redirecting to=
 the
      redirect URL with the code as a string parameter. For more informatio=
n,
      see the <a class=3D"link" href=3D"https://openid.net/specs/oauth-v2-f=
orm-post-response-mode-1_0.html" target=3D"_blank">
      OAuth 2.0 Form Post Response Mode</a> spec.
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">code_challenge</code>. Use this parameter whe=
n
      <em class=3D"firstterm">Proof Key for Code Exchange</em> (PKCE) suppo=
rt is enabled
      in the OAuth2 Provider service. To configure it, navigate  to
      Realms &gt; <em class=3D"replaceable">Realm Name</em> &gt; Services &=
gt;
      OAuth2 Provider &gt; Advanced and enable the Code Verifier Parameter
      Required property.
      For more information about the PKCE support, see
      <a class=3D"link" href=3D"https://tools.ietf.org/html/rfc7636" target=
=3D"_top">Proof Key for Code Exchange by OAuth Public Clients</a> -
      <em class=3D"citetitle">RFC 7636</em>.
     </p></li></ul></div></dd><dt><span class=3D"term"><code class=3D"liter=
al">/oauth2/access_token</code></span></dt><dd><p>Token endpoint defined in=
 RFC 6749, used to obtain an access token
   from the authorization server.</p><p>Example:
    <code class=3D"literal">https://openam.example.com:8443/openam/oauth2/a=
ccess_token</code></p><p>
    The <code class=3D"literal">/oauth2/access_token</code> endpoint can ta=
ke an additional
    parameter, <code class=3D"literal">auth_chain=3D<em class=3D"replaceabl=
e">authentication-chain</em></code>,
    which allows client to specify the authentication chain to use for Pass=
word Grant Type.
   </p><p>
    The following example shows how a client can specify the authentication
    chain, <code class=3D"literal">myAuthChain</code>:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--user "myClientID:password" \
--data "grant_type=3Dpassword&amp;username=3Damadmin&amp;password=3Dcangeti=
nam&amp;scope=3Dprofile&amp;auth_chain=3DmyAuthChain" \
https://openam.example.com:8443/openam/oauth2/access_token</strong></pre><p=
>
    The <code class=3D"literal">/oauth2/access_token</code> endpoint can ta=
ke additional
    parameters. In particular, you must specify the realm if the OpenAM
    OAuth 2.0 provider is configured for a subrealm rather than the top-lev=
el realm.
   </p><p>For example, if the OAuth 2.0 provider is configured
    for the <code class=3D"literal">/customers</code> realm,
    then use <code class=3D"literal">/oauth2/customers/access_token</code>.
   </p></dd><dt><span class=3D"term"><code class=3D"literal">/oauth2/device=
</code></span></dt><dd><p>Device flow endpoint as defined by the
    <a class=3D"link" href=3D"https://datatracker.ietf.org/doc/draft-dennis=
s-oauth-device-flow/" target=3D"_top">Internet-Draft OAuth 2.0 Device Flow<=
/a>, used by a client device to
    obtain a device code or an access token.</p><p>Example:
    <code class=3D"literal">https://openam.example.com:8443/openam/oauth2/d=
evice/code</code>
   </p><p>For more information, see <a href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#rest-api-oauth2-device-flow" clas=
s=3D"olink">"Using Endpoints for OAuth 2.0 Device Flow"</a>.</p></dd><dt><s=
pan class=3D"term"><code class=3D"literal">/oauth2/token/revoke</code></spa=
n></dt><dd><p>
    When a user logs out of an application, the application revokes any
    OAuth 2.0 tokens (access and refresh tokens) that are associated with t=
he user.
    The client can also revoke a token without the need of an <code class=
=3D"literal">SSOToken</code>
    by sending a request to the <code class=3D"literal">/oauth2/token/revok=
e</code> endpoint
    as follows:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
--request POST \
--data "token=3Dd06ab31e-9cdb-403e-855f-bd77652add84" \
--data "client_id=3DMyClientID" \
--data "client_secret=3Dpassword" \
https://openam.example.com:8443/openam/oauth2/token/revoke</strong></pre><p=
>
   </p><p>
    If you are revoking an access token, then that token will be revoked.
    If you are revoking a refresh token, then both the refresh token and an=
y other
    associated access tokens will also be revoked. <span class=3D"emphasis"=
><em>Associated access tokens</em></span>
    means that any other tokens that have come out of the same authorizatio=
n grant
    will also be revoked.=20
    For cases where a client has multiple access tokens for a single user t=
hat
    were obtained via different authorization grants, then the client will =
have
    to make multiple calls to the <code class=3D"literal">/oauth2/token/rev=
oke</code> endpoint
    to invalidate each token.
   </p></dd><dt><span class=3D"term"><code class=3D"literal">/oauth2/tokeni=
nfo</code></span></dt><dd><p>Endpoint <span class=3D"emphasis"><em>not</em>=
</span> defined in RFC 6749, used to validate tokens, and to
   retrieve information, such as scopes.</p><p>
    The <code class=3D"literal">/oauth2/tokeninfo</code> endpoint takes an =
HTTP GET
    on <code class=3D"literal">/oauth2/tokeninfo?access_token=3D<em class=
=3D"replaceable">token-id</em></code>,
    and returns information about the token.
   </p><p>
    Resource servers =E2=80=94 or any party having the token ID =E2=80=94 c=
an
    get token information through this endpoint without authenticating. Thi=
s
    means any application or user can validate the token without having to =
be
    registered with OpenAM.
   </p><p>Given an access token, a resource server can perform an HTTP GET =
on
    <code class=3D"literal">/oauth2/tokeninfo?access_token=3D<em class=3D"r=
eplaceable">token-id</em></code>
    to retrieve a JSON object indicating <code class=3D"literal">token_type=
</code>,
    <code class=3D"literal">expires_in</code>, <code class=3D"literal">scop=
e</code>, and the
    <code class=3D"literal">access_token</code> ID.</p><p>Example: <code cl=
ass=3D"literal">https://openam.example.com:8443/openam/oauth2/tokeninfo</co=
de></p><p>
    The following example shows OpenAM issuing an access token, and
    then returning token information:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--user "myClientID:password" \
--data "grant_type=3Dpassword&amp;username=3Ddemo&amp;password=3Dchangeit&a=
mp;scope=3Dcn%20mail" \
https://openam.example.com:8443/openam/oauth2/access_token</strong>
    <em class=3D"computeroutput">{
     "expires_in": 599,
     "token_type": "Bearer",
     "refresh_token": "f6dcf133-f00b-4943-a8d4-ee939fc1bf29",
     "access_token": "f9063e26-3a29-41ec-86de-1d0d68aa85e9"
     }</em>

$ <strong class=3D"userinput">curl https://openam.example.com:8443/openam/o=
auth2/tokeninfo\
  ?access_token=3Df9063e26-3a29-41ec-86de-1d0d68aa85e9</strong>
    <em class=3D"computeroutput">{
  "mail": "demo@example.com",
  "grant_type":"password",
  "scope": [
     "mail",
     "cn"
  ],
  "cn": "demo",
  "realm": "/",
  "cnf": {
     "jwk": {
        "alg": "RS512",
        "e": "AQAB",
        "n": "k7qLlj...G2oucQ",
        "kty": "RSA",
        "use": "sig",
        "kid": "myJWK"
     }
  }
  "token_type": "Bearer",
  "expires_in": 577,
  "client_id": "MyClientID",
  "access_token": "f9063e26-3a29-41ec-86de-1d0d68aa85e9"
}</em></pre><div class=3D"panel panel-info"><div class=3D"panel-heading"><h=
3 class=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
     Running a GET method to the <code class=3D"literal">/oauth2/tokeninfo<=
/code>
     endpoint as shown in the previous example writes the token ID to the a=
ccess log.
     To not expose the token ID in the logs, send the OAuth 2.0 access toke=
n as
     part of the authorization bearer header:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
--request GET \
--header "Authorization Bearer aec6b050-b0a4-4ece-a86f-bd131decbb9c" \
"https://openam.example.com:8443/openam/oauth2/tokeninfo"</strong></pre></d=
iv></div><p>
    The resource server making decisions about whether the token is valid
    can thus use the <code class=3D"literal">/oauth2/tokeninfo</code> endpo=
int to retrieve
    expiration information about the token. Depending on the scopes
    implementation, the JSON response about the token can also contain scop=
e
    information. As described in <a href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/admin-guide/index.html#oauth2-byo-client" class=3D"olink"=
>"Using Your Own Client and Resource Server"</a> in the <em>Administration =
Guide</em>,
    the default scopes implementation in OpenAM considers scopes to be name=
s of
    attributes in the resource owner's user profile. Notice that the JSON
    response contains the values for those attributes from the user's profi=
le,
    as in the preceding example, with scopes set to <code class=3D"literal"=
>mail</code> and
    <code class=3D"literal">cn</code>.
   </p></dd><dt><span class=3D"term"><code class=3D"literal">/oauth2/intros=
pect</code></span></dt><dd><p>Endpoint defined in
    <a class=3D"link" href=3D"http://tools.ietf.org/html/draft-ietf-oauth-i=
ntrospection-04" target=3D"_top">draft-ietf-oauth-introspection-04</a>, use=
d to retrieve
    metadata about a token, such as approved scopes and the context in whic=
h the
    token was issued.</p><p>Given an access token, a client can perform an =
HTTP POST on
    <code class=3D"literal">/oauth2/introspect?token=3D<em class=3D"replace=
able">access_token</em></code>
    to retrieve a JSON object indicating the following:
    </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span cl=
ass=3D"term"><code class=3D"literal">active</code></span></dt><dd><p>Is the=
 token active.</p></dd><dt><span class=3D"term"><code class=3D"literal">sco=
pe</code></span></dt><dd><p>A space-separated list of the scopes associated=
 with the token.</p></dd><dt><span class=3D"term"><code class=3D"literal">c=
lient_id</code></span></dt><dd><p>Client identifier of the client that requ=
ested the token.</p></dd><dt><span class=3D"term"><code class=3D"literal">u=
ser_id</code></span></dt><dd><p>The user who authorized the token.</p></dd>=
<dt><span class=3D"term"><code class=3D"literal">token_type</code></span></=
dt><dd><p>The type of token.</p></dd><dt><span class=3D"term"><code class=
=3D"literal">exp</code></span></dt><dd><p>When the token expires, in second=
s since January 1 1970 UTC.</p></dd><dt><span class=3D"term"><code class=3D=
"literal">sub</code></span></dt><dd><p>Subject of the token.</p></dd><dt><s=
pan class=3D"term"><code class=3D"literal">iss</code></span></dt><dd><p>Iss=
uer of the token.</p></dd></dl></div><p>The <code class=3D"literal">/oauth2=
/introspect</code> endpoint requires authentication,
    and supports basic authorization (a base64-encoded string of
    <code class=3D"literal"><em class=3D"replaceable">client_id</em>:<em cl=
ass=3D"replaceable">client_secret</em></code>),
    <code class=3D"literal"><em class=3D"replaceable">client_id</em></code>=
 and
    <code class=3D"literal"><em class=3D"replaceable">client_secret</em></c=
ode> passed as header
    values, or a JWT bearer token.</p><p>The following example demonstrates=
 the <code class=3D"literal">/oauth2/introspect</code>
    endpoint with basic authorization:</p><div class=3D"zero-clipboard hidd=
en-xs hidden-print" title=3D"Copy command to clipboard"><span class=3D"btn-=
copy-cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre class=
=3D"cmdline prettyprint nohighlight">$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Authorization: Basic ZGVtbzpjaGFuZ2VpdA=3D=3D" \
 https://openam.example.com:8443/openam/oauth2/introspect \
 ?token=3Df9063e26-3a29-41ec-86de-1d0d68aa85e9</strong>
 <em class=3D"computeroutput">{
  "active": true,
  "scope": "mail cn",
  "client_id": "myOAuth2Client",
  "user_id": "demo",
  "token_type": "Bearer",
  "exp": 1419356238,
  "sub": "https://resources.example.com/",
  "iss": "https://openam.example.com/"
  }</em></pre><div class=3D"panel panel-info"><div class=3D"panel-heading">=
<h3 class=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
     Running a POST method to the <code class=3D"literal">/oauth2/introspec=
t</code>
     endpoint as shown in the previous example writes the token ID to the a=
ccess log.
     To hide the token ID in the logs, send the OAuth 2.0 access token as
     part of the POST body:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \</strong>
--request POST \
--header "Authorization Basic ZGVtbzpjaGFuZ2VpdA=3D=3D" \
--data "token=3Df9063e26-3a29-41ec-86de-1d0d68aa85e9" \
"https://openam.example.com:8443/openam/oauth2/introspect"</pre></div></div=
></dd></dl></div></div><div class=3D"section" id=3D"rest-api-oauth2-device-=
flow"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#rest-api-oauth2-device-flow">2.1.14.1.2.&nbsp;Using Endpoints f=
or OAuth 2.0 Device Flow</a></h5></div></div></div><p>If a client device ha=
s a limited user interface, it can obtain
    an OAuth 2.0 device code and ask a user to authorize the client on
    a more full-featured user agent, such as an Internet browser.</p><p>Ope=
nAM provides the <code class=3D"literal">/oauth2/device/code</code>,
    <code class=3D"literal">/oauth2/device/user</code>, and <code class=3D"=
literal">/oauth2/access_token</code>
    endpoints to support the OAuth 2.0 Device Flow.</p><p>The following pro=
cedures show how to use the OAuth 2.0 device flow endpoints:</p><div class=
=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-style-type: disc=
; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#proc-device-flow-request=
-user-code" title=3D"To Request a User Code in the OAuth 2.0 Device Flow">"=
To Request a User Code in the OAuth 2.0 Device Flow"</a>.</p></li><li class=
=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/dev-guide/index.html#proc-device-flow-allow-access" title=
=3D"To Grant Consent in the OAuth 2.0 Device Flow">"To Grant Consent in the=
 OAuth 2.0 Device Flow"</a>.</p></li><li class=3D"listitem"><p><a class=3D"=
xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#proc-device-flow-poll-for-authz" title=3D"To Poll for Authorizatio=
n in the OAuth 2.0 Device Flow">"To Poll for Authorization in the OAuth 2.0=
 Device Flow"</a>.</p></li></ul></div><div class=3D"panel panel-info"><div =
class=3D"panel-heading"><h3 class=3D"panel-title">Note</h3></div><div class=
=3D"panel-body"><p>In the examples <code class=3D"literal">nonce</code> and
     <code class=3D"literal">state</code> OAuth 2.0 parameters are omitted,=
 but should be used in
     production.
    </p></div></div><div class=3D"procedure" id=3D"proc-device-flow-request=
-user-code"><div class=3D"procedure-inner"><div class=3D"procedure-title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#proc-device-flow-request-user-code">To Request a U=
ser Code in the OAuth 2.0 Device Flow</a></div><p>Devices can display a use=
r code and instructions to a user, which can be used
     on a separate client to provide consent, allowing the device to access=
 resources.</p><p>As user codes may be displayed on lower resolution device=
s, the list of possible
     characters used has been optimized to reduce ambiguity. User codes con=
sist of a random
     selection of eight of the following characters:</p><div class=3D"zero-=
clipboard hidden-xs hidden-print" title=3D"Copy command to clipboard"><span=
 class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></d=
iv><pre class=3D"cmdline prettyprint nohighlight">234567ABCDEFGHIJKLMNOPQRS=
TVWXYZabcdefghijkmnopqrstvwxyz</pre><p>To request a user code in the OAuth =
2.0 device flow:</p><ol class=3D"procedure" type=3D"1"><li class=3D"step"><=
p>Ensure that an OAuth 2.0/OpenID Connect client Agent
     profile is configured in OpenAM, as described in <a href=3D"https://ba=
ckstage.forgerock.com/docs/openam/13.5/admin-guide/index.html#configure-oau=
th2-client" class=3D"olink">"Configuring OAuth 2.0 and OpenID Connect 1.0 C=
lients"</a> in the <em>Administration Guide</em>.</p></li><li class=3D"step=
"><p>Create a POST request to the
      <code class=3D"literal">/oauth2/device/code</code> endpoint to acquir=
e a device
      code. The following URL parameters are required:</p><div class=3D"var=
iablelist"><dl class=3D"variablelist"><dt><span class=3D"term"><code class=
=3D"literal">response_type</code></span></dt><dd><p>Specifies the response =
type required by the request. Must be set
         to <code class=3D"literal">token</code>.</p></dd><dt><span class=
=3D"term"><code class=3D"literal">scope</code></span></dt><dd><p>Specifies =
the list of scopes requested by the client,
         separated by URL-encoded space characters.</p></dd><dt><span class=
=3D"term"><code class=3D"literal">client_id</code></span></dt><dd><p>Specif=
ies the name of the client agent profile in OpenAM.</p></dd></dl></div><div=
 class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to c=
lipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></=
span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ <strong =
class=3D"userinput">curl \
  --data response_type=3Dtoken \
  --data scope=3Dphone%20email%20profile%20address \
  --data client_id=3DmyDeviceAgentProfile \
  http://openam.example.com:8080/openam/oauth2/device/code
</strong><em class=3D"computeroutput">{
    "interval": 5,
    "device_code": "7a95a0a4-6f13-42e3-ac3e-d3d159c94c55",
    "verification_url": "http://openam.example.com:8080/openam/oauth2/devic=
e/user",
    "user_code": "VAL12e0v",
    "expires_in": 300
}</em></pre><p>On success, OpenAM returns a verification URL, and a user co=
de to enter
      at that URL. OpenAM also returns an interval, in
      seconds, that the client device must wait for in between requests for
      an access token.
     </p></li><li class=3D"step"><p>The client device should now provide in=
structions to the user to enter
     the user code and grant access to the OAuth 2.0 device. The client may=
 choose an appropriate
     method to convey the instructions, for example text instructions on sc=
reen, or a QR
     code. See <a class=3D"xref" href=3D"https://backstage.forgerock.com/do=
cs/openam/13.5/dev-guide/index.html#proc-device-flow-allow-access" title=3D=
"To Grant Consent in the OAuth 2.0 Device Flow">"To Grant Consent in the OA=
uth 2.0 Device Flow"</a>.</p></li><li class=3D"step"><p>The client device s=
hould also begin polling the authorization server for
     the access token, once consent has been given. See <a class=3D"xref" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#proc-device-flow-poll-for-authz" title=3D"To Poll for Authorization in th=
e OAuth 2.0 Device Flow">"To Poll for Authorization in the OAuth 2.0 Device=
 Flow"</a>.</p></li></ol></div></div><div class=3D"procedure" id=3D"proc-de=
vice-flow-allow-access"><div class=3D"procedure-inner"><div class=3D"proced=
ure-title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#proc-device-flow-allow-access">To Gran=
t Consent in the OAuth 2.0 Device Flow</a></div><p>OAuth 2.0 device flow re=
quires that the user grants consent to allow the client
     device to access resources.
    </p><ul class=3D"procedure"><li class=3D"step"><p>You can grant consent=
 in the OAuth 2.0 device flow using the OpenAM user
      interface, or by making calls to OpenAM endpoints.</p><ul class=3D"st=
epalternatives">
     <li class=3D"step"><p>To use the OpenAM user interface, the user shoul=
d visit the verification URL in a
       web browser and enter the user code:</p><div class=3D"figure" id=3D"=
figure-oauth2-user-code"><div class=3D"figure-title"><a class=3D"self-link"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#figure-oauth2-user-code">OAuth 2.0 User Code</a></div><div class=3D"fig=
ure-contents"><div class=3D"mediaobject" align=3D"center"><a class=3D"fancy=
box cboxElement" href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/images/oauth2-device-user-code.png"><img class=3D"img-responsive c=
enter-block" data-toggle=3D"tooltip" src=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/images/thumb_oauth2-device-user-code.png" align=
=3D"middle" height=3D"336" alt=3D"OAuth 2.0 user code." title=3D"" data-ori=
ginal-title=3D"Visit the verification URL to enter the user code."></a></di=
v></div></div><br class=3D"figure-break"><p>The user can then authorize the=
 device flow client by
       allowing the requested scopes:
      </p><div class=3D"figure" id=3D"figure-oauth2-device-flow-allow"><div=
 class=3D"figure-title"><a class=3D"self-link" href=3D"https://backstage.fo=
rgerock.com/docs/openam/13.5/dev-guide/index.html#figure-oauth2-device-flow=
-allow">OAuth 2.0 Consent Page</a></div><div class=3D"figure-contents"><div=
 class=3D"mediaobject" align=3D"center"><a class=3D"fancybox cboxElement" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/oa=
uth2-device-consent.png"><img class=3D"img-responsive center-block" data-to=
ggle=3D"tooltip" src=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/images/thumb_oauth2-device-consent.png" align=3D"middle" height=3D"=
635" alt=3D"OAuth 2.0 consent page." title=3D"" data-original-title=3D"Open=
AM lists the scopes requested by the client
          device, and their values."></a></div></div></div><br class=3D"fig=
ure-break"></li>
      <li class=3D"step"><p>To use endpoint calls, create a POST request to=
 the
        <code class=3D"literal">/oauth2/device/user</code> endpoint. The fo=
llowing URL parameter is
        required:</p><div class=3D"variablelist"><dl class=3D"variablelist"=
><dt><span class=3D"term"><code class=3D"literal">user_code</code></span></=
dt><dd><p>The user code as provided by the <code class=3D"literal">/oauth2/=
device/code</code>
           endpoint.</p></dd></dl></div><p>The form data should be in <code=
 class=3D"literal">x-www-form-urlencoded</code> format, and contain
 the following fields:</p><div class=3D"variablelist"><dl class=3D"variable=
list"><dt><span class=3D"term"><code class=3D"literal">user_code</code></sp=
an></dt><dd><p>The user code as provided by the <code class=3D"literal">/oa=
uth2/device/code</code>
           endpoint.</p></dd><dt><span class=3D"term"><code class=3D"litera=
l">scope</code></span></dt><dd><p>Specifies the list of scopes consented to=
 by the user,
           separated by URL-encoded space characters.</p></dd><dt><span cla=
ss=3D"term"><code class=3D"literal">client_id</code></span></dt><dd><p>Spec=
ifies the name of the client agent profile in OpenAM.</p></dd><dt><span cla=
ss=3D"term"><code class=3D"literal">response_type</code></span></dt><dd><p>=
Must be <code class=3D"literal">token</code>.</p></dd><dt><span class=3D"te=
rm"><code class=3D"literal">decision</code></span></dt><dd><p>To allow clie=
nt access, specify <code class=3D"literal">allow</code>. Any other value
          will deny consent.</p></dd><dt><span class=3D"term"><code class=
=3D"literal">csrf</code></span></dt><dd><p>Duplicates the contents of the <=
code class=3D"literal">iPlanetDirectoryPro</code> cookie,
           which contains the SSO token of the user granting access.</p><p>=
Duplicating the cookie value helps prevent against Cross-Site Request Forge=
ry
           (CSRF) attacks.
          </p></dd></dl></div><p>
        The <code class=3D"literal">iPlanetDirectoryPro</code> cookie is re=
quired and should
        contain the SSO token of the user granting access to the client.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighli=
ght">$ <strong class=3D"userinput">curl \
  -X POST \
  --header "Cookie: iPlanetDirectoryPro=3DAQIC5..." \
  --header "Content-Type: application/x-www-form-urlencoded" \
  --data scope=3Dphone%20email%20profile%20address \
  --data user_code=3DVAL12e0v \
  --data response_type=3Dtoken \
  --data client_id=3DmyDeviceAgentProfile \
  --data decision=3Dallow \
  --data csrf=3DAQIC5... \
  http://openam.example.com:8080/openam/oauth2/device/user?user_code=3DVAL1=
2e0v</strong></pre><p>OpenAM returns HTML containing a JavaScript fragment =
named
        <code class=3D"literal">pageData</code>, with details of the result=
.</p><p>Successfully allowing or denying access returns:</p><div class=3D"z=
ero-clipboard hidden-xs hidden-print" title=3D"Copy command to clipboard"><=
span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span=
></div><pre class=3D"cmdline prettyprint nohighlight"><em class=3D"computer=
output">pageData =3D {
    locale: "en-us",
    baseUrl : "http://openam.example.com:8080/openam/XUI",
    realm : "//XUI",
    done: true
};</em></pre><p>If the supplied user code has already been used, or is inco=
rrect, the
        following is returned:</p><div class=3D"zero-clipboard hidden-xs hi=
dden-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmd=
line"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdli=
ne prettyprint nohighlight"><em class=3D"computeroutput">pageData =3D {
    locale: "*",
    errorCode: "not_found",
    realm : "/",
    baseUrl : "http://openam.example.com:8080/openam/XUI"
};</em></pre></li>
    </ul><p>If the user gives consent, OpenAM adds the OAuth 2.0 client to =
the user's profile
      page in the <span class=3D"emphasis"><em>Authorized Apps</em></span> =
section. For more information, see <a href=3D"https://backstage.forgerock.c=
om/docs/openam/13.5/admin-guide/index.html#oauth2-user-consent" class=3D"ol=
ink">"User Consent Management"</a> in the <em>Administration Guide</em>.
     </p><div class=3D"panel panel-primary"><div class=3D"panel-heading"><h=
3 class=3D"panel-title">Important</h3></div><div class=3D"panel-body"><p>As=
 per <a class=3D"link" href=3D"https://tools.ietf.org/html/rfc6749#section-=
4.1.1" target=3D"_top">Section 4.1.1 of the OAuth
      2.0 authorization framework</a>, it is required that the authorizatio=
n server
      legitimately obtains an authorization decision from the resource owne=
r.</p><p>Any client using the endpoints to register consent is responsible =
for ensuring this
      requirement, OpenAM cannot assert that consent was given in these cas=
es.</p></div></div></li></ul></div></div><div class=3D"procedure" id=3D"pro=
c-device-flow-poll-for-authz"><div class=3D"procedure-inner"><div class=3D"=
procedure-title"><a class=3D"self-link" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#proc-device-flow-poll-for-authz"=
>To Poll for Authorization in the OAuth 2.0 Device Flow</a></div><ul class=
=3D"procedure"><li class=3D"step"><p>On the client device, create a POST re=
quest to poll the
     <code class=3D"literal">/oauth2/access_token</code> endpoint to reques=
t an access
     token. Include the client ID, client secret, and the device code as qu=
ery
     parameters in the request. You must also specify a
     <code class=3D"literal">grant_type</code> of
     <code class=3D"literal">http://oauth.net/grant_type/device/1.0</code>.=
</p><p>The client device must wait for the number of seconds previously
      provided as the value of <code class=3D"literal">interval</code> betw=
een polling
      OpenAM for an access token.</p><div class=3D"zero-clipboard hidden-xs=
 hidden-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-=
cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cm=
dline prettyprint nohighlight">$ <strong class=3D"userinput">curl \
  --data client_id=3DmyDeviceAgentProfile \
  --data client_secret=3Dpassword \
  --data grant_type=3Dhttp://oauth.net/grant_type/device/1.0 \
  --data code=3D7a95a0a4-6f13-42e3-ac3e-d3d159c94c55 \
  http://openam.example.com:8080/openam/oauth2/access_token</strong>
<em class=3D"computeroutput">{
    "scope": "phone email address profile",
    "code": "20c1fc0c-3153-4a11-8d1f-d815c1a522b5"
}</em></pre><p>If the user has authorized the client device, an HTTP 200 st=
atus
      code is returned, with an access token that can be used to request re=
sources.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"C=
opy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighl=
ight"><em class=3D"computeroutput">{
    "expires_in": 3599,
    "token_type": "Bearer",
    "access_token": "c1e9c8a4-6a6c-45b2-919c-335f2cec5a40"
}</em></pre><p>If the user has not yet authorized the client device, an HTT=
P
      403 status code is returned, with the following error message:</p><di=
v class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to =
clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"><=
/span></span></div><pre class=3D"cmdline prettyprint nohighlight"><em class=
=3D"computeroutput">{
    "error": "authorization_pending",
    "error_description": "The user has not yet completed authorization"
}</em></pre><p>If the client device is polling faster than the specified
      interval, an HTTP 400 status code is returned, with the following err=
or
      message:</p><div class=3D"zero-clipboard hidden-xs hidden-print" titl=
e=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span clas=
s=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint n=
ohighlight"><em class=3D"computeroutput">{
    "error": "slow_down",
    "error_description": "The polling interval has not elapsed since the la=
st request"
}</em></pre></li></ul></div></div></div><div class=3D"section" id=3D"rest-a=
pi-oauth2-resourceset-endpoint"><div class=3D"titlepage"><div><div><h5 clas=
s=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/dev-guide/index.html#rest-api-oauth2-resourceset-endpoint"=
>2.1.14.1.3.&nbsp;OAuth 2.0 Resource Set Endpoint</a></h5></div></div></div=
><p>
    OpenAM provides a read-only REST endpoint for viewing a resource set
    registered to a particular user. The endpoint is
    <code class=3D"literal">/json<em class=3D"replaceable">{/realm}</em>/us=
ers/<em class=3D"replaceable">user</em>/oauth2/resourcesets/<em class=3D"re=
placeable">resource_set_ID</em></code>,
    so for example
    <code class=3D"literal">https://openam.example.com:8443/openam/json/myr=
ealm/users/demo/oauth2/resourcesets/43225628-4c5b-4206-b7cc-5164da81decd0</=
code>.
   </p><p>
    To read a resource set, either the resource set owner or an
    administrator such as <code class=3D"literal">amadmin</code> must have =
logged in to
    OpenAM (the authorization server) and have been issued an SSO token.
   </p><div class=3D"procedure" id=3D"read-user-oauth2-resource-set"><div c=
lass=3D"procedure-inner"><div class=3D"procedure-title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#read-user-oauth2-resource-set">To Read an OAuth 2.0 Resource Set</a>=
</div><ul class=3D"procedure"><li class=3D"step"><p>
      Create a GET request to the <code class=3D"literal">resourcesets</cod=
e> endpoint,
      including the SSO token in a header based on the configured session c=
ookie
      name (for example: <code class=3D"literal">iPlanetDirectoryPro</code>=
), and with the
      resource set ID in the URL.
     </p><p>
      The following example uses an SSO token acquired by the
      <code class=3D"literal">amadmin</code> user to view a resource set, a=
nd related
      policy, belonging to the <code class=3D"literal">demo</code> user in =
the
      top level realm:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5wM2LY4Sfcxs...EwNDU2NjE0*" \
https://openam.example.com:8443/openam/json/users/demo\
/oauth2/resourcesets/43225628-4c5b-4206-b7cc-5164da81decd0</strong>
<em class=3D"computeroutput">{
    "scopes": [
         "http://photoz.example.com/dev/scopes/view",
         "http://photoz.example.com/dev/scopes/comment"
    ],
    "_id": "43225628-4c5b-4206-b7cc-5164da81decd0",
    "resourceServer": "UMA-Resource-Server",
    "name": "My Videos",
    "icon_uri": "http://www.example.com/icons/cinema.png",
    "policy": {
        "permissions": [
            {
                "subject": "user.1",
                "scopes": [
                    "http://photoz.example.com/dev/scopes/view"
                ]
            },
            {
                "subject": "user.2",
                "scopes": [
                    "http://photoz.example.com/dev/scopes/comment",
                    "http://photoz.example.com/dev/scopes/view"
                ]
            }
        ]
    },
    "type": "http://www.example.com/rsets/videos"
}</em></pre><div class=3D"panel panel-success"><div class=3D"panel-heading"=
><h3 class=3D"panel-title">Tip</h3></div><div class=3D"panel-body"><p>
       You can specify the fields that are returned with the
       <code class=3D"literal">_fields</code> query string filter. For exam=
ple
       <code class=3D"literal">?_fields=3Dscopes, resourceServer, name</cod=
e>
      </p></div></div><p>
      On success, an HTTP 200 OK status code is returned, with
      a JSON body representing the resource set. If a policy relating to th=
e
      resource set exists, a representation of the policy is also returned =
in the
      JSON.
     </p><p>
      If the specified resource set does not exist, an HTTP 404 Not Found
      status code is returned, as follows:

      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlig=
ht"><em class=3D"computeroutput">{
    "code": 404,
    "reason": "Not Found",
    "message": "No resource set with id, bad-id-3e28-4c19-8a2b-36fc24c899df=
0, found."
}</em></pre><p>If the SSO token used is not that of the resource set owner =
or an
    administrator, an HTTP 403 Forbidden status code is returned, as follow=
s:
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"><e=
m class=3D"computeroutput">{
    "code": 403,
    "reason": "Forbidden",
    "message": "User, user.1, not authorized."
}</em></pre><p>
     </p></li></ul></div></div></div><div class=3D"section" id=3D"rest-api-=
oauth2-token-admin-endpoint"><div class=3D"titlepage"><div><div><h5 class=
=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#rest-api-oauth2-token-admin-endpoint">=
2.1.14.1.4.&nbsp;OAuth 2.0 Token Administration Endpoint</a></h5></div></di=
v></div><p>
    The OpenAM-specific OAuth 2.0 token administration endpoint lets
    administrators read, list, and delete OAuth 2.0 tokens. OAuth 2.0 clien=
ts
    can also manage their own tokens.
   </p><p>
    OpenAM exposes the token administration endpoint at
    <code class=3D"literal">/frrest/oauth2/token</code>, such as
    <code class=3D"literal">https://openam.example.com:8443/openam/frrest/o=
auth2/token</code>.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>This endpoin=
t location is likely to change in the future.</p></div></div><p>
    To get a token, perform an HTTP GET on
    <code class=3D"literal">/frrest/oauth2/token/<em class=3D"replaceable">=
token-id</em></code>,
    as in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
 --request POST \
 --user <span class=3D"hljs-string">"myClientID:password"</span> \
 --data <span class=3D"hljs-string">"grant_type=3Dpassword&amp;username=3Dd=
emo&amp;password=3Dchangeit&amp;scope=3Dcn"</span> \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/oauth2=
/access_token</span>
 {
    <span class=3D"hljs-attr">"scope"</span>: <span class=3D"hljs-string">"=
cn"</span>,
    <span class=3D"hljs-attr">"expires_in"</span>: <span class=3D"hljs-numb=
er">60</span>,
    <span class=3D"hljs-attr">"token_type"</span>: <span class=3D"hljs-stri=
ng">"Bearer"</span>,
    <span class=3D"hljs-attr">"access_token"</span>: <span class=3D"hljs-st=
ring">"f5fb4833-ba3d-41c8-bba4-833b49c3fe2c"</span>
}

$ curl \
 --request GET \
 --header <span class=3D"hljs-string">"iplanetDirectoryPro: AQIC5wM2LY4Sfcx=
s...EwNDU2NjE0*"</span> \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/frrest=
/oauth2/token/f5fb4833-ba3d-41c8-bba4-833b49c3fe2c</span>
 {
    <span class=3D"hljs-attr">"expireTime"</span>: [
        <span class=3D"hljs-string">"1418818601396"</span>
    ],
    <span class=3D"hljs-attr">"tokenName"</span>: [
        <span class=3D"hljs-string">"access_token"</span>
    ],
    <span class=3D"hljs-attr">"scope"</span>: [
        <span class=3D"hljs-string">"cn"</span>
    ],
    <span class=3D"hljs-attr">"grant_type"</span>: [
        <span class=3D"hljs-string">"password"</span>
    ],
    <span class=3D"hljs-attr">"clientID"</span>: [
        <span class=3D"hljs-string">"myClientID"</span>
    ],
    <span class=3D"hljs-attr">"parent"</span>: [],
    <span class=3D"hljs-attr">"id"</span>: [
        <span class=3D"hljs-string">"f5fb4833-ba3d-41c8-bba4-833b49c3fe2c"<=
/span>
    ],
    <span class=3D"hljs-attr">"tokenType"</span>: [
        <span class=3D"hljs-string">"Bearer"</span>
    ],
    <span class=3D"hljs-attr">"redirectURI"</span>: [],
    <span class=3D"hljs-attr">"nonce"</span>: [],
    <span class=3D"hljs-attr">"realm"</span>: [
        <span class=3D"hljs-string">"/"</span>
    ],
    <span class=3D"hljs-attr">"userName"</span>: [
        <span class=3D"hljs-string">"demo"</span>
    ]
}</pre><p>
    To list tokens, perform an HTTP GET on
    <code class=3D"literal">/frrest/oauth2/token/?_queryId=3Daccess_token</=
code>
    to request the list of access tokens for the current user.
   </p><p>
    The following example shows a search for the demo user's access tokens:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
 --request GET \
 --header <span class=3D"hljs-string">"iplanetDirectoryPro: AQIC5wM2LY4Sfcw=
..."</span> \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/frrest=
/oauth2/token/?_queryId=3Daccess_token</span>
 {
    <span class=3D"hljs-attr">"_rev"</span>: <span class=3D"hljs-string">"1=
753454107"</span>,
    <span class=3D"hljs-attr">"tokenName"</span>: [
    <span class=3D"hljs-string">"access_token"</span>
    ],
    <span class=3D"hljs-attr">"expireTime"</span>: <span class=3D"hljs-stri=
ng">"Indefinitely"</span>,
    <span class=3D"hljs-attr">"scope"</span>: [
      <span class=3D"hljs-string">"openid"</span>
    ],
    <span class=3D"hljs-attr">"grant_type"</span>: [
      <span class=3D"hljs-string">"password"</span>
    ],
    <span class=3D"hljs-attr">"clientID"</span>: [
      <span class=3D"hljs-string">"myOAuth2Client"</span>
    ],
    <span class=3D"hljs-attr">"tokenType"</span>: [
      <span class=3D"hljs-string">"Bearer"</span>
    ],
    <span class=3D"hljs-attr">"redirectURI"</span>: [],
    <span class=3D"hljs-attr">"nonce"</span>: [],
    <span class=3D"hljs-attr">"realm"</span>: [
      <span class=3D"hljs-string">"/test"</span>
    ],
    <span class=3D"hljs-attr">"userName"</span>: [
      <span class=3D"hljs-string">"user.4"</span>
    ],
    <span class=3D"hljs-attr">"display_name"</span>: <span class=3D"hljs-st=
ring">""</span>,
    <span class=3D"hljs-attr">"scopes"</span>: <span class=3D"hljs-string">=
"openid"</span>
    },
    {
    <span class=3D"hljs-attr">"_rev"</span>: <span class=3D"hljs-string">"1=
753454107"</span>,
    <span class=3D"hljs-attr">"tokenName"</span>: [
      <span class=3D"hljs-string">"access_token"</span>
    ],
    <span class=3D"hljs-attr">"expireTime"</span>: <span class=3D"hljs-stri=
ng">"Indefinitely"</span>,
    <span class=3D"hljs-attr">"scope"</span>: [
      <span class=3D"hljs-string">"openid"</span>
    ],
    <span class=3D"hljs-attr">"grant_type"</span>: [
      <span class=3D"hljs-string">"password"</span>
    ],
    <span class=3D"hljs-attr">"clientID"</span>: [
      <span class=3D"hljs-string">"myOAuth2Client"</span>
    ],
    <span class=3D"hljs-attr">"tokenType"</span>: [
      <span class=3D"hljs-string">"Bearer"</span>
    ],
    <span class=3D"hljs-attr">"redirectURI"</span>: [],
    <span class=3D"hljs-attr">"nonce"</span>: [],
    <span class=3D"hljs-attr">"realm"</span>: [
      <span class=3D"hljs-string">"/test"</span>
    ],
    <span class=3D"hljs-attr">"userName"</span>: [
      <span class=3D"hljs-string">"user.4"</span>
    ],
    <span class=3D"hljs-attr">"display_name"</span>: <span class=3D"hljs-st=
ring">""</span>,
    <span class=3D"hljs-attr">"scopes"</span>: <span class=3D"hljs-string">=
"openid"</span>
    }
    ],
    <span class=3D"hljs-string">"resultCount"</span>: <span class=3D"hljs-n=
umber">2</span>,
    <span class=3D"hljs-string">"pagedResultsCookie"</span>: <span class=3D=
"hljs-literal">null</span>,
    <span class=3D"hljs-string">"totalPagedResultsPolicy"</span>: <span cla=
ss=3D"hljs-string">"NONE"</span>,
    <span class=3D"hljs-string">"totalPagedResults"</span>: <span class=3D"=
hljs-number">-1</span>,
    <span class=3D"hljs-string">"remainingPagedResults"</span>: <span class=
=3D"hljs-number">-1</span>
}</pre><p>
    To list a specific user's tokens, perform an HTTP GET on
    <code class=3D"literal">/ffrest/oauth2/token/?_queryId=3DuserName=3D<em=
 class=3D"replaceable">string</em></code>,
    where <em class=3D"replaceable">string</em> is the user, such as <code =
class=3D"literal">user.4</code>.
    You must use an <code class=3D"literal">amadmin</code> token with this =
GET method. Delegated
    admins are not supported here.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request GET \
--header "iplanetDirectoryPro: AQIC5wM2LY4Sfcxs...EwNDU2NjE0*" \
https://openam.example.com:8443/openam/frrest/oauth2/token/?_queryId=3Duser=
Name=3Duser.4</strong>
{
    "result": [
    {
    "_id": "2aaddde8-586b-4cb7-b431-eb86af57aabc",
    "_rev": "-549186065",
    "tokenName": [
      "access_token"
    ],
    "expireTime": "Indefinitely",
    "scope": [
      "openid"
    ],
    "grant_type": [
      "password"
    ],
    "authGrantId": [
      "50e9f80b-d193-4aeb-93e9-e383ea2cabd3"
    ],
    "clientID": [
      "myOAuth2Client"
    ],
    "parent": [],
    "refreshToken": [
      "5e1423a2-d2cd-40d5-8f54-5b695836cd44"
    ],
    "id": [
      "2aaddde8-586b-4cb7-b431-eb86af57aabc"
    ],
    "tokenType": [
      "Bearer"
    ],
    "auditTrackingId": [
      "6ac90d13-9cac-444b-bfbc-c7aca16713de-777"
    ],
    "redirectURI": [],
    "nonce": [],
    "realm": [
      "/test"
    ],
    "userName": [
      "user.4"
    ],
    "display_name": "",
    "scopes": "openid"
    },
    {
    "_id": "5e1423a2-d2cd-40d5-8f54-5b695836cd44",
    "_rev": "1171292923",
    "tokenName": [
      "refresh_token"
    ],
    "expireTime": "Oct 18, 2016 10:51 AM",
    "scope": [
      "openid"
    ],
    "grant_type": [
      "password"
    ],
    "authGrantId": [
      "50e9f80b-d193-4aeb-93e9-e383ea2cabd3"
    ],
    "clientID": [
      "myOAuth2Client"
    ],
    "authModules": [],
    "id": [
      "5e1423a2-d2cd-40d5-8f54-5b695836cd44"
    ],
    "tokenType": [
      "Bearer"
    ],
    "auditTrackingId": [
      "6ac90d13-9cac-444b-bfbc-c7aca16713de-776"
    ],
    "redirectURI": [],
    "realm": [
      "/test"
    ],
    "userName": [
      "user.4"
    ],
    "acr": [],
    "display_name": "",
    "scopes": "openid"
    },
    ],
    "resultCount": 2,
    "pagedResultsCookie": null,
    "totalPagedResultsPolicy": "NONE",
    "totalPagedResults": -1,
    "remainingPagedResults": -1
}</pre><p>
    To delete a token, perform an HTTP DELETE on
    <code class=3D"literal">/frrest/oauth2/token/<em class=3D"replaceable">=
token-id</em></code>,
    as in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request POST \
 --data "grant_type=3Dclient_credentials&amp;username=3Ddemo&amp;password=
=3Dchangeit\
&amp;client_id=3DmyClientID&amp;client_secret=3Dpassword&amp;scope=3Dcn%20m=
ail" \
 https://openam.example.com:8443/openam/oauth2/access_token</strong>
<em class=3D"computeroutput">{
    "expires_in": 599,
    "token_type": "Bearer",
    "access_token": "867aaab2-61d7-4b78-9b80-4f9098034540"
}</em>

$ <strong class=3D"userinput">curl \
 --request DELETE \
 --header "iplanetDirectoryPro: AQIC5wM2LY4Sfcxs...EwNDU2NjE0*" \
 https://openam.example.com:8443/openam/frrest/oauth2/token/867aaab2..09803=
4540</strong>
<em class=3D"computeroutput">{
    "success": "true"
}</em></pre></div><div class=3D"section" id=3D"rest-api-oauth2-client-admin=
-endpoint"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#rest-api-oauth2-client-admin-endpoint">2.1.14.1.5.&nbsp;O=
Auth 2.0 Client Administration Endpoint</a></h5></div></div></div><p>
    The OAuth 2.0 administration endpoint lets OpenAM administrators and
    agent administrators create (that is, register) and delete OAuth 2.0
    clients.
   </p><p>
    OpenAM exposes this endpoint at <code class=3D"literal">/frrest/oauth2/=
client</code>,
    such as
    <code class=3D"literal">https://openam.example.com:8443/openam/frrest/o=
auth2/client</code>.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>This endpoin=
t location is likely to change in the future.</p></div></div><p>
    To create an OAuth 2.0 client, perform an HTTP POST to
    <code class=3D"literal">/frrest/oauth2/client/?_action=3Dcreate</code>
    with a JSON object fully specifying the client, as in the following
    example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "iplanetDirectoryPro: AQIC5wM...3MTYxOA..*" \
 --data \
 '{"client_id":["testClient"],
   "realm":["/"],
   "userpassword":["secret12"],
   "com.forgerock.openam.oauth2provider.clientType":["Confidential"],
   "com.forgerock.openam.oauth2provider.redirectionURIs":
     ["www.client.com","www.example.com"],
   "com.forgerock.openam.oauth2provider.scopes":["cn","sn"],
   "com.forgerock.openam.oauth2provider.defaultScopes":["cn"],
   "com.forgerock.openam.oauth2provider.name":["My Test Client"],
   "com.forgerock.openam.oauth2provider.description":["OAuth 2.0 Client"]
  }' \
 https://openam.example.com:8443/openam/frrest/oauth2/client/?_action=3Dcre=
ate</strong>
<em class=3D"computeroutput">{"success":"true"}</em></pre><div class=3D"var=
iablelist"><p>
     When creating an OAuth 2.0 client, use the following fields in your
     JSON object:
    </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"=
literal">client_id</code></span></dt><dd><p>
       (Required) This field takes an array containing the client
       identifier as defined in RFC 6749.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">realm</code=
></span></dt><dd><p>
       (Required) This field takes an array containing the OpenAM realm
       in which to create the client as defined in RFC 6749.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">userpasswor=
d</code></span></dt><dd><p>
       (Required) This field takes an array containing the client
       secret as defined in RFC 6749.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">com.forgero=
ck.openam.oauth2provider.clientType</code></span></dt><dd><p>
       (Required) This field takes an array containing the client
       type, either <code class=3D"literal">"Confidential"</code> or
       <code class=3D"literal">"Public"</code> as defined in RFC 6749.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">com.forgero=
ck.openam.oauth2provider.redirectionURIs</code></span></dt><dd><p>
       (Optional for confidential clients) This field takes an array of
       client redirection endpoints as defined in RFC 6749.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">com.forgero=
ck.openam.oauth2provider.scopes</code></span></dt><dd><p>
       (Optional) This field takes an array of scopes as defined in RFC
       6749. The default scopes implementation takes scopes to be names of
       attributes in the resource owner profile.
      </p><p>
       Specify <em class=3D"replaceable">locale</em> scopes in <code class=
=3D"literal"><em class=3D"replaceable">scope</em>|<em class=3D"replaceable"=
>locale</em>|<em class=3D"replaceable">localized description</em></code> fo=
rmat.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">com.forgero=
ck.openam.oauth2provider.defaultScopes</code></span></dt><dd><p>
       (Optional) This field takes an array of default scopes set
       automatically when tokens are issued.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">com.forgero=
ck.openam.oauth2provider.name</code></span></dt><dd><p>
       (Optional) This field takes an array containing the client name to
       display to the resource owner when the resource owner must authorize
       client access to protected resources.
      </p><p>
       Specify localized names in <code class=3D"literal"><em class=3D"repl=
aceable">locale</em>|<em class=3D"replaceable">localized name</em></code>
       format.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">com.forgero=
ck.openam.oauth2provider.description</code></span></dt><dd><p>
       (Optional) This field takes an array containing the description to
       display to the resource owner when the resource owner must authorize
       client access to protected resources.
      </p><p>
       Specify localized descriptions in <code class=3D"literal"><em class=
=3D"replaceable">locale</em>|<em class=3D"replaceable">localized descriptio=
n</em></code>
       format.
      </p></dd></dl></div><p>
    To delete an OAuth 2.0 client, perform an HTTP DELETE on
    <code class=3D"literal">/frrest/oauth2/client/<em class=3D"replaceable"=
>client-id</em></code>,
    as in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request DELETE \
 --header "iplanetDirectoryPro: AQIC5wM...3MTYxOA..*" \
 https://openam.example.com:8443/openam/frrest/oauth2/client/myClient</stro=
ng>
<em class=3D"computeroutput">{"success":"true"}</em></pre><div class=3D"pan=
el panel-success"><div class=3D"panel-heading"><h3 class=3D"panel-title">Ti=
p</h3></div><div class=3D"panel-body"><p>To delete an OAuth 2.0 client from=
 a subrealm, add the name of the
    subrealm in a query parameter named <code class=3D"literal">realm</code=
>, as
    in the following example:</p><div class=3D"zero-clipboard hidden-xs hid=
den-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdl=
ine"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdlin=
e prettyprint nohighlight">$ <strong class=3D"userinput">curl \
 --request DELETE \
 --header "iplanetDirectoryPro: AQIC5wM...3MTYxOA..*" \
 https://openam.example.com:8443/openam/frrest/oauth2/client/myClient?realm=
=3DmyRealm</strong>
<em class=3D"computeroutput">{"success":"true"}</em></pre></div></div></div=
></div><div class=3D"section" id=3D"rest-api-openid-connect"><div class=3D"=
titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"htt=
ps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api=
-openid-connect">2.1.14.2.&nbsp;OpenID Connect 1.0</a></h4></div></div></di=
v><a class=3D"indexterm" name=3D"d15472e7790"></a><p>
   OpenID Connect 1.0 extends OAuth 2.0 so the client can verify claims
   about the identity of the end user, get profile information about the en=
d
   user, and log the user out at the end of the OpenAM session.
  </p><div class=3D"itemizedlist"><p>
    OpenAM exposes the following endpoints for <a class=3D"link" href=3D"ht=
tp://openid.net/connect/" target=3D"_blank">OpenID Connect 1.0</a>
    purposes:
   </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li cla=
ss=3D"listitem"><p>
     Endpoints for <a class=3D"link" href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#rest-api-openid-connect-discovery" =
title=3D"2.1.14.2.1.&nbsp;Endpoints for Discovering OpenID Connect 1.0 Conf=
iguration">discovering information</a>.
    </p></li><li class=3D"listitem"><p>
     An endpoint for <a class=3D"link" href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#rest-api-openid-connect-dynamic-r=
egistration" title=3D"2.1.14.2.2.&nbsp;Endpoints for Registering OpenID Con=
nect 1.0 Clients">registering client applications</a>.
    </p></li><li class=3D"listitem"><p>
     Endpoints for <a class=3D"link" href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#rest-api-openid-connect-authorizati=
on" title=3D"2.1.14.2.3.&nbsp;Endpoints for Performing OpenID Connect 1.0 C=
lient Authorization">client authorization</a>.
    </p></li><li class=3D"listitem"><p>
     Endpoints for <a class=3D"link" href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#rest-api-openid-connect-session" ti=
tle=3D"2.1.14.2.4.&nbsp;Endpoints for Managing OpenID Connect 1.0 Sessions"=
>session management</a>.
    </p></li><li class=3D"listitem"><p>
     Endpoint for <a class=3D"link" href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#rest-api-oidc-idtoken-validation" ti=
tle=3D"2.1.14.2.5.&nbsp;Endpoint for Validating OpenID Connect 1.0 ID Token=
s">validating OpenID
     Connect 1.0 ID Tokens</a>
    </p></li></ul></div><div class=3D"section" id=3D"rest-api-openid-connec=
t-discovery"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a clas=
s=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#rest-api-openid-connect-discovery">2.1.14.2.1.&nbsp;Endp=
oints for Discovering OpenID Connect 1.0 Configuration</a></h5></div></div>=
</div><p>
    OpenAM exposes endpoints for discovering information about the provider
    configuration, and about the provider for a given end user:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      <code class=3D"literal">/oauth2/.well-known/openid-configuration</cod=
e> allows clients
      to retrieve OpenID Provider configuration by HTTP GET as specified by
      OpenID Connect Discovery 1.0.
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">/oauth2/.well-known/webfinger</code> allows c=
lients to retrieve
      the provider URL for an end user by HTTP GET as specified by OpenID C=
onnect
      Discovery 1.0.
     </p></li></ul></div><p>
    For examples, see <a href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/admin-guide/index.html#configure-openid-connect-discovery" class=3D"=
link"><em class=3D"citetitle">Configuring
    OpenAM For OpenID Connect Discovery</em></a> in the <em>Administration =
Guide</em>.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
     OpenAM supports a provider service that allows the realm to have a
     configured option for obtaining the base URL (including protocol) for
     components that need to return a URL to the client. This service is us=
ed
     to provide the URL base that is used in the <code class=3D"literal">.w=
ell-known</code>
     endpoints used in OpenID Connect 1.0 and UMA.
    </p><p>
     For more information, see
     <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guid=
e/index.html#configure-base-url-source" class=3D"olink">"Configuring the Ba=
se URL Source Service"</a> in the <em>Administration Guide</em>.
    </p></div></div></div><div class=3D"section" id=3D"rest-api-openid-conn=
ect-dynamic-registration"><div class=3D"titlepage"><div><div><h5 class=3D"t=
itle"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#rest-api-openid-connect-dynamic-registratio=
n">2.1.14.2.2.&nbsp;Endpoints for Registering OpenID Connect 1.0 Clients</a=
></h5></div></div></div><p>
    OpenAM allows both static and dynamic registration of OpenID Connect
    client applications. For dynamic registration according to the OpenID C=
onnect
    Dynamic Client Registration 1.0 specification, the endpoint is
    <code class=3D"literal">/oauth2/connect/register</code>. See <a href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/index.html#re=
gister-openid-connect-client-dynamic" class=3D"olink">"To Register a Relyin=
g Party Dynamically"</a> in the <em>Administration Guide</em>
    for details.
   </p></div><div class=3D"section" id=3D"rest-api-openid-connect-authoriza=
tion"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#rest-api-openid-connect-authorization">2.1.14.2.3.&nbsp;Endpoin=
ts for Performing OpenID Connect 1.0 Client Authorization</a></h5></div></d=
iv></div><p>Registered clients can request authorization through OpenAM.</p=
><p>
    OpenID Connect 1.0 supports both a Basic Client Profile using the
    OAuth 2.0 authorization code grant, and an Implicit Client Profile usin=
g the
    OAuth 2.0 implicit grant. These client profiles rely on the OAuth 2.0
    endpoints for authorization. Those endpoints are described in
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-oauth2-client-endpoints" title=3D"2.1.14.=
1.1.&nbsp;OAuth 2.0 Client and Resource Server Endpoints">"OAuth 2.0 Client=
 and Resource Server Endpoints"</a>.
   </p><p>
    In addition, authorized clients can access end user information through
    the OpenID Connect 1.0 specific endpoint
    <code class=3D"literal">/oauth2/userinfo</code>.
   </p><p>
    For examples, see <a href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/admin-guide/index.html#openid-connect-examples" class=3D"olink">"Rel=
ying Party Examples"</a> in the <em>Administration Guide</em>.
   </p></div><div class=3D"section" id=3D"rest-api-openid-connect-session">=
<div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-lin=
k" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index=
.html#rest-api-openid-connect-session">2.1.14.2.4.&nbsp;Endpoints for Manag=
ing OpenID Connect 1.0 Sessions</a></h5></div></div></div><p>
    Registered clients can use OpenID Connect Session Management 1.0 to
    handle end user logout actions.
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      <code class=3D"literal">/oauth2/connect/checkSession</code> allows cl=
ients
      to retrieve session status notifications.
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">/oauth2/connect/endSession</code> allows clie=
nts to
      terminate end user sessions.
     </p></li></ul></div><p>
    For an example, see
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide=
/index.html#manage-sessions-openid-connect" class=3D"olink">"Managing OpenI=
D Connect User Sessions"</a> in the <em>Administration Guide</em>.
   </p></div><div class=3D"section" id=3D"rest-api-oidc-idtoken-validation"=
><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#rest-api-oidc-idtoken-validation">2.1.14.2.5.&nbsp;Endpoint for Vali=
dating OpenID Connect 1.0 ID Tokens</a></h5></div></div></div><p>
    Clients can use an OpenID Connect 1.0 endpoint on OpenAM to quickly val=
idate
    a <span class=3D"emphasis"><em>stateless</em></span> OIDC ID token and =
optionally retrieve any
    claims within the token. The endpoint is used globally and not within a=
 realm.
    For information on configuring stateless OIDC tokens, see
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-oidc-stateless" title=3D"2.1.14.2.6.&nbsp=
;Configuring Stateless OpenID Connect 1.0 Tokens">"Configuring Stateless Op=
enID Connect 1.0 Tokens"</a>.
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      <code class=3D"literal">/openam/oauth2/idtokeninfo</code>
     </p></li></ul></div><div class=3D"panel panel-info"><div class=3D"pane=
l-heading"><h3 class=3D"panel-title">Note</h3></div><div class=3D"panel-bod=
y"><p>
     The endpoint does not support the validation of encrypted OIDC ID toke=
ns.
    </p></div></div><p>
    The endpoint validates an OIDC ID token based on rules 1-10 in section =
3.1.3.7
    of the <a class=3D"link" href=3D"http://openid.net/specs/openid-connect=
-core-1_0.html#IDTokenValidation" target=3D"_blank">OpenID Connect Core</a>=
 and runs the
    following steps:

    </p><div class=3D"orderedlist"><ol class=3D"orderedlist" type=3D"1"><li=
 class=3D"listitem"><p>
      Extracts the first <code class=3D"literal">aud</code> (audience) clai=
m from the ID token.
      The <code class=3D"literal">client_id</code>, which is passed in as a=
uthentication of
      the request, will be used as the client and validated against
      the <code class=3D"literal">aud</code> claim.</p></li><li class=3D"li=
stitem"><p>Extracts the <code class=3D"literal">realm</code> claim, if pres=
ent, default to the
      root realm if the token was not issued by OpenAM.</p></li><li class=
=3D"listitem"><p>Looks up the client in the given realm, producing an error=
 if it does
      not exist.</p></li><li class=3D"listitem"><p>Verifies the signature o=
f the ID token, according to the settings for the
      client (ID token signed response algorithm, public key selector).</p>=
</li><li class=3D"listitem"><p>Verifies the <code class=3D"literal">issuer<=
/code>, <code class=3D"literal">audience</code>,
      <code class=3D"literal">expiry</code>, <code class=3D"literal">not-be=
fore</code>, and
      <code class=3D"literal">issued-at</code> claims as per the specificat=
ion.</p></li></ol></div><p>
   </p><p>
    To invoke the endpoint, the client sends an HTTP POST request to
    <code class=3D"literal">/openam/oauth2/idtokeninfo</code> using the fol=
lowing parameters
    in the POST body in application/x-www-form-url-encoded format or as que=
ry
    parameters:

    </p><table border=3D"0" summary=3D"Simple list" class=3D"simplelist"><t=
body><tr><td>=E2=80=A2 <code class=3D"literal">id_token</code> - OIDC ID to=
ken to validate (required)</td></tr><tr><td>=E2=80=A2 <code class=3D"litera=
l">claims</code> - optional comma-separated list of claims to
      return from the ID token</td></tr></tbody></table><p>
   </p><p>
    For example, you can run the following command:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>curl -X POST -d "id_token=3D$IDTOKEN" http://openam.example.com:8080/opena=
m/oauth2/idtokeninfo
   </pre><p>
    where $IDTOKEN is an OIDC ID token
   </p><p>
    If the ID token validates successfully, the endpoint unpacks the claims=
 from
    the ID token and returns them as JSON. You can also use an optional <co=
de class=3D"literal">claims</code>
    parameter in the request to return those specific claims.
    If a claim is requested that does not exist, no error occurs; it
    will simply not be present in the response.
   </p><p>
    For example, you can run the following command to retrieve the claims
    in an OIDC ID token:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>curl -i -X POST -d "id_token=3D$IDTOKEN" \
'http://openam.example.com:8080/openam/oauth2/idtokeninfo?claims=3Dsub,exp,=
realm'
HTTP/1.1 200 OK
Date: Wed, 01 Jun 2016 07:31:39 GMT
Accept-Ranges: bytes
Server: Restlet-Framework/2.3.4
Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept
Content-Type: application/json;charset=3DUTF-8
Content-Length: 50
{
    "sub": "demo",
    "exp": 1461065147,
    "realm": "/"
}</pre><p>
    For invalid requests, the endpoint returns a 400 HTTP code with a JSON
    error response:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>curl -i -X POST 'http://openam.example.com:8080/openam/oauth2/idtokeninfo?=
claims=3Dsub,exp,realm'
HTTP/1.1 400 Bad Request
Date: Wed, 01 Jun 2016 08:32:43 GMT
Accept-Ranges: bytes
Server: Restlet-Framework/2.3.4
Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept
Content-Type: application/json
Transfer-Encoding: chunked
Connection: close
{
    "error":"bad_request",
    "error_description":"no id_token in request"
}</pre></div><div class=3D"section" id=3D"rest-api-oidc-stateless"><div cla=
ss=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-oidc-stateless">2.1.14.2.6.&nbsp;Configuring Stateless OpenID Conne=
ct 1.0 Tokens</a></h5></div></div></div><p>
    OpenAM supports <span class=3D"emphasis"><em>stateless</em></span> acce=
ss, refresh, and ID tokens for
    OpenID Connect 1.0 (OIDC). Stateless tokens allow clients to directly v=
alidate the
    tokens by storing session information within the token itself and bypas=
sing
    storage in an external CTS data store.
    This feature also allows any OpenAM instance in the issuing cluster
    to validate an OIDC tokens without cross-talk.
   </p><p>
    For configuration procedures, see
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide=
/index.html#stateless-oidc" class=3D"olink">"Stateless OpenID Connect 1.0 A=
ccess and Refresh Tokens"</a> in the <em>Administration Guide</em>.
   </p></div></div><div class=3D"section" id=3D"sec-rest-uma"><div class=3D=
"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"ht=
tps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-res=
t-uma">2.1.14.3.&nbsp;User-Managed Access (UMA)</a></h4></div></div></div><=
a class=3D"indexterm" name=3D"d15472e8043"></a><p>User-Managed Access (UMA)=
 is a profile of OAuth 2.0 that lets resource
  owners control access to protected resources on any number of resource
  servers from arbitrary requesting parties.</p><p>OpenAM acts as the centr=
alized authorization server and governs
  access using policies created by resource owners.</p><div class=3D"itemiz=
edlist"><p>OpenAM exposes the following REST endpoints for <a class=3D"link=
" href=3D"https://kantarainitiative.org/confluence/display/uma/Home" target=
=3D"_blank">User-Managed Access</a> purposes:</p><ul class=3D"itemizedlist"=
 style=3D"list-style-type: disc; "><li class=3D"listitem"><p>An endpoint fo=
r <a class=3D"link" href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#rest-api-uma-well-known" title=3D"2.1.14.3.1.&nbsp;D=
iscovering UMA Configuration">automatic configuration and registration of t=
he Authorization Server</a>.
    </p></li><li class=3D"listitem"><p>An endpoint for <a class=3D"link" hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#rest-api-uma-resource-set-registration" title=3D"2.1.14.3.2.&nbsp;Managing=
 UMA Resource Sets">registering sets of resources</a>.
    </p></li><li class=3D"listitem"><p>An endpoint for <a class=3D"link" hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#rest-api-uma-policies" title=3D"2.1.14.3.3.&nbsp;Managing UMA Policies">ma=
naging UMA policies</a>.
    </p></li><li class=3D"listitem"><p>Endpoints for <a class=3D"link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-uma-access-protected-resources" title=3D"2.1.14.3.4.&nbsp;Accessing=
 UMA Protected Resources">requesting and granting authorization for access =
to resources</a>.
    </p></li></ul></div><div class=3D"section" id=3D"rest-api-uma-well-know=
n"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-=
link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#rest-api-uma-well-known">2.1.14.3.1.&nbsp;Discovering UMA Configur=
ation</a></h5></div></div></div><p>OpenAM exposes an endpoint for discoveri=
ng
    information about the UMA provider configuration.</p><p>A resource serv=
er or client can perform an HTTP GET on
   <code class=3D"literal">/uma<em class=3D"replaceable">{/realm}</em>/.wel=
l-known/uma-configuration</code> to
    retrieve a JSON object indicating the UMA configuration.</p><p>For an e=
xample, see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/adm=
in-guide/index.html#configure-uma-discovery" class=3D"link">Configuring Ope=
nAM For UMA Discovery</a> in the <em>Administration Guide</em>.</p></div><d=
iv class=3D"section" id=3D"rest-api-uma-resource-set-registration"><div cla=
ss=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-uma-resource-set-registration">2.1.14.3.2.&nbsp;Managing UMA Resour=
ce Sets</a></h5></div></div></div><p>UMA uses the <a class=3D"link" href=3D=
"https://docs.kantarainitiative.org/uma/draft-oauth-resource-reg-v1_0_1.htm=
l" target=3D"_blank"><em class=3D"citetitle">OAuth 2.0 Resource Set Registr=
ation standard</em></a>
   for registration and management of resources. The endpoint is
   <code class=3D"literal">/oauth2/resource_set/</code>. For details, see
   <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#managing-uma-resource-sets" class=3D"olink">"Managing UMA Resour=
ce Sets"</a> in the <em>Administration Guide</em>.</p><p>OpenAM also provid=
es a read-only endpoint for viewing a user's resource
    sets, and if available policy definitions. For more information, see
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-oauth2-resourceset-endpoint" title=3D"2.1=
.14.1.3.&nbsp;OAuth 2.0 Resource Set Endpoint">"OAuth 2.0 Resource Set Endp=
oint"</a>.</p></div><div class=3D"section" id=3D"rest-api-uma-policies"><di=
v class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#rest-api-uma-policies">2.1.14.3.3.&nbsp;Managing UMA Policies</a></h5></=
div></div></div><p>OpenAM exposes the following endpoint for managing UMA p=
olicies:</p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><spa=
n class=3D"term">
     <code class=3D"literal">/json/users/<em class=3D"replaceable">username=
</em>/uma/policies</code>
    </span></dt><dd><p>For managing UMA policies.  For details, see <a href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/index.html=
#sec-uma-policies" class=3D"olink">"Managing UMA Policies"</a> in the <em>A=
dministration Guide</em>.</p></dd></dl></div></div><div class=3D"section" i=
d=3D"rest-api-uma-access-protected-resources"><div class=3D"titlepage"><div=
><div><h5 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-uma-access-pro=
tected-resources">2.1.14.3.4.&nbsp;Accessing UMA Protected Resources</a></h=
5></div></div></div><p>OpenAM exposes the following endpoints for managing =
UMA workflow and
   accessing protected resources:</p><div class=3D"variablelist"><dl class=
=3D"variablelist"><dt><span class=3D"term">
     <code class=3D"literal">/uma/permission_request</code>
    </span></dt><dd><p>For registering permission requests. For more inform=
ation, see
      <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-gui=
de/index.html#to-register-an-uma-permission-request" class=3D"olink">"To Re=
gister an UMA Permission Request"</a> in the <em>Administration Guide</em>.=
</p></dd><dt><span class=3D"term"><code class=3D"literal">/uma/authz_reques=
t</code></span></dt><dd><p>For acquiring requesting party tokens. For more =
information, see
      <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-gui=
de/index.html#uma-acquire-rpt" class=3D"olink">"To Acquire a Requesting Par=
ty Token"</a> in the <em>Administration Guide</em>.</p></dd></dl></div></di=
v></div></div><div class=3D"section" id=3D"sec-rest-user-services"><div cla=
ss=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
ec-rest-user-services">2.1.15.&nbsp;RESTful User Self-Service</a></h3></div=
></div></div><a class=3D"indexterm" name=3D"d15472e8168"></a><p>This sectio=
n shows how to use the OpenAM RESTful interfaces for user
   self-service functionality: user self-registration, forgotten password r=
eset,
   forgotten username retrieval, dashboard configuration, and device profil=
e reset.
  </p><p>The steps to perform user self-service via the REST APIs varies de=
pending
  on the configured user self-service process flow. For more information, s=
ee <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#user-self-service-flows" class=3D"olink">"User Self-Service Proc=
ess Flows"</a> in the <em>Administration Guide</em>.</p><p>When performing =
user self-service functions, you can enable one or more
  security methods, such as email validation, Google reCAPTCHA, knowledge-b=
ased
  authentication, or custom plugins. Each configured security method requir=
es
  requests to be sent from OpenAM to the client, and completed responses re=
turned
  to OpenAM to verify.
 </p><div class=3D"panel panel-primary"><div class=3D"panel-heading"><h3 cl=
ass=3D"panel-title">Important</h3></div><div class=3D"panel-body"><p>At lea=
st one security method should be enabled for each self-service feature.</p>=
</div></div><p>A unique token is provided in the second request to the clie=
nt that must
  be used in any subsequent responses, so that OpenAM can maintain the stat=
e of
  the self-service process.</p><p>In this section, long URLs are wrapped to=
 fit the printed page, and some
   of the output is formatted for easier reading.</p><div class=3D"section"=
 id=3D"common-self-registration"><div class=3D"titlepage"><div><div><h4 cla=
ss=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#common-self-registration">2.1.15.1.&=
nbsp;Registering Users</a></h4></div></div></div><p>
   This section explains how to use the REST APIs for registering a user in
   OpenAM.
  </p><p>
   From OpenAM 13.5.1, the user self-registration flow validates the email =
address
   after the user has provided their details. This section provides procedu=
res
   for OpenAM 13.5 and OpenAM 13.5.1 and later:
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     For information about how to
     register a user with the REST APIs in
     OpenAM 13.5.1 or later, see <a class=3D"xref" href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#user-self-registratio=
n-13.5.1" title=3D"To Register a User with the REST APIs (13.5.1 or later)"=
>"To Register a User with the REST APIs (13.5.1 or later)"</a>.
    </p></li><li class=3D"listitem"><p>For information about how to registe=
r a user with the REST APIs
     in OpenAM 13.5, see <a class=3D"xref" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#user-self-registration-13.5" =
title=3D"To Register a User with the REST APIs (13.5)">"To Register a User =
with the REST APIs (13.5)"</a>. </p></li></ul></div><div class=3D"procedure=
" id=3D"user-self-registration-13.5.1"><div class=3D"procedure-inner"><div =
class=3D"procedure-title"><a class=3D"self-link" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#user-self-registration-=
13.5.1">To Register a User with the REST APIs (13.5.1 or later)</a></div><o=
l class=3D"procedure" type=3D"1"><li class=3D"step"><p>
     Create a GET request to the <code class=3D"literal">/selfservice/userR=
egistration</code>
     endpoint. Notice that the request does not require any form of authent=
ication.
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
https://openam.example.com:8443/openam/json/selfservice/userRegistration</s=
trong>
<em class=3D"computeroutput">{
 "requirements": {
   "$schema": "http://json-schema.org/draft-04/schema#",
   "description": "New user details",
   "properties": {
     "user": {
       "description": "User details",
       "type": "object"
     }
   },
   "required": [
     "user"
   ],
   "type": "object"
 },
 "tag": "initial",
 "type": "userDetails"
}</em></pre><p>
     OpenAM sends a request to complete the user details. The
     <code class=3D"literal">required</code> array defines the data that mu=
st be
     returned to OpenAM to progress past this step of the registration. In
     the example, the required type is a <code class=3D"literal">user</code=
> object that
     contains the user details.
    </p></li><li class=3D"step"><p>
     Create a POST response back to the <code class=3D"literal">/selfservic=
e/userRegistration</code>
     endpoint with a query string containing <code class=3D"literal">_actio=
n=3DsubmitRequirements</code>.
     In the POST data, include an <code class=3D"literal">input</code> elem=
ent in the JSON
     structure, which should contain values for each element in the
     <code class=3D"literal">required</code> array of the request.
    </p><p>
     In this example, OpenAM requests an object named <code class=3D"litera=
l">user</code>.
     Ths object should contain values for the <code class=3D"literal">usern=
ame</code>,
     <code class=3D"literal">givenName</code>, <code class=3D"literal">sn</=
code>, <code class=3D"literal">mail</code>,
     <code class=3D"literal">userPassword</code>, and <code class=3D"litera=
l">inetUserStatus</code> properties.
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--data \
'{
  "input": {
    "user": {
      "username": "DEMO",
      "givenName": "Demo User",
      "sn": "User",
      "mail": "demo@example.com",
      "userPassword": "forgerock",
      "inetUserStatus": "Active"
    }
  }
}' \ https://openam.example.com:8443/openam/json/selfservice/userRegistrati=
on?_action=3DsubmitRequirements</strong>
<em class=3D"computeroutput">{
  "requirements": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Verify emailed code",
    "properties": {
      "code": {
        "description": "Enter code emailed",
        "type": "string"
      }
    },
    "required": [
      "code"
    ],
    "type": "object"
  },
  "tag": "validateCode",
  "token": "eyJ0eXAiOiJKV.....QiLCJjmqrlqUfQ",
  "type": "emailValidation"
}</em></pre><p>
     If the response is accepted, OpenAM continues with the registration
     process and sends the next request for information.
    </p><p>
     The value of the <code class=3D"literal">token</code> element should b=
e included
     in this and any subsequent responses to OpenAM for this registration;
     OpenAM uses this information to track which stage of the
     registration process is being completed.
    </p><p>
     Note that the request for information is of the type
     <code class=3D"literal">emailValidation</code>. Other possible types i=
nclude:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
       <code class=3D"literal">captcha</code>, if the Google reCAPTCHA plug=
in is
       enabled
      </p></li><li class=3D"listitem"><p>
       <code class=3D"literal">kbaSecurityAnswerDefinitionStage</code>, if
       knowledge-based security questions are required
      </p></li></ul></div><p>
     For an example of Google reCAPTCHA validation,
     see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#common-forgotten-username" title=3D"2.1.15.2.=
&nbsp;Retrieving Forgotten Usernames">"Retrieving Forgotten Usernames"</a>.
    </p></li><li class=3D"step"><p>
     Return the information required by the next step of the registration, =
along
     with the <code class=3D"literal">token</code> element.
    </p><p>
     In this example, the user information was accepted and a code was emai=
led
     to the email address. OpenAM requires this code in the response
     in an element named <code class=3D"literal">code</code> before continu=
ing:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--data \
'{
  "input": {
    "code": "cf53fcb6-3bf2-44eb-a437-885296899699"
  },
  "token": "eyJ0eXAiOiJKV.....QiLCJjmqrlqUfQ"
}' https://openam.example.com:8443/openam/json/selfservice/userRegistration=
\
?_action=3DsubmitRequirements</strong>
<em class=3D"computeroutput">{
  "type": "selfRegistration",
  "tag": "end",
  "status": {
    "success": true
  },
  "additions": {

  }
}</em></pre><p>
     When the process is complete, the response from OpenAM has a
     <code class=3D"literal">tag</code> property with value of <code class=
=3D"literal">end</code>.
     If the <code class=3D"literal">success</code> property in the <code cl=
ass=3D"literal">status</code>
     object has a value of <code class=3D"literal">true</code>,
     then self-registration is complete and the user account was created.
    </p><p>
     In the example, OpenAM only required email verification to register a
     new user. In flows containing Google reCAPTCHA validation or knowledge=
-based
     security questions, you would continue returning POST data to OpenAM
     containing the requested information until the process is complete.
    </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cl=
ass=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
            The User Self-Service feature provides options to set the user'=
s destination after a successful
            self-registration. These options include redirecting the user t=
o a 'successful registration' page, to the login page,
            or automaticatically logging the user into the system.
            Use the <code class=3D"literal">Destination After Successful Se=
lf-Registration</code> property to set the option
            (on the console: <em class=3D"replaceable">Realm Name</em> &gt;=
 Services &gt; User Self-Service &gt; User Registration).
            When you select <code class=3D"literal">User sent to 'successfu=
l registration' page</code> or
            <code class=3D"literal">User sent to login page</code>, the JSO=
N
            response after a successful registration is as follows:
        </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"C=
opy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighl=
ight"><em class=3D"computeroutput">{
 "type": "selfRegistration",
 "tag": "end",
 "status": {
     "success": true
 },
 "additions": {}
}</em></pre><p>
               If you select <span class=3D"command"><strong>User is automa=
tically logged in</strong></span>, the JSON response is:
           </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=
=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint no=
highlight"><em class=3D"computeroutput">{
 "type": "autoLoginStage",
 "tag": "end",
 "status": {
     "success": true
 },
 "additions": {
     "tokenId": "AQIC5...MQAA*",
     "successUrl": "/openam/console"
 }
}</em></pre></div></div></li></ol></div></div><div class=3D"procedure" id=
=3D"user-self-registration-13.5"><div class=3D"procedure-inner"><div class=
=3D"procedure-title"><a class=3D"self-link" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#user-self-registration-13.5"=
>To Register a User with the REST APIs (13.5)</a></div><ol class=3D"procedu=
re" type=3D"1"><li class=3D"step"><p>Create a GET request to the <code clas=
s=3D"literal">/selfservice/userRegistration</code>
     endpoint. Notice that the request does not require any form of authent=
ication.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"C=
opy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighl=
ight">$ <strong class=3D"userinput">curl \
https://openam.example.com:8443/openam/json/selfservice/userRegistration</s=
trong>
<em class=3D"computeroutput">{
    "type": "emailValidation",
    "tag": "initial",
    "requirements": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "description": "Verify your email address",
        "type": "object",
        "required": [
            "mail"
        ],
        "properties": {
            "mail": {
                "description": "Email address",
                "type": "string"
            }
        }
    }
}</em></pre><p>OpenAM sends the first request for security information. In =
this example,
     the first request is of type <code class=3D"literal">emailValidation</=
code>, but other
     types include <code class=3D"literal">captcha</code> if the Google reC=
APTCHA plugin is
     enabled, and <code class=3D"literal">kbaSecurityAnswerDefinitionStage<=
/code> if knowledge-based
     authentication is required.</p><p>The <code class=3D"literal">required=
</code> array defines the data that must be
     returned to OpenAM to progress past this step of the registration.</p>=
<p>The <code class=3D"literal">properties</code> element contains additiona=
l information
     about the required response, such as a description of the required fie=
ld,
     or the site key required to generate a reCAPTCHA challenge.</p></li><l=
i class=3D"step"><p>
     Create a POST response back to the <code class=3D"literal">/selfservic=
e/userRegistration</code>
     endpoint with a query string containing <code class=3D"literal">_actio=
n=3DsubmitRequirements</code>.
     In the POST data, include an <code class=3D"literal">input</code> elem=
ent in the JSON
     structure, which should contain values for each element in the
     <code class=3D"literal">required</code> array of the request.
    </p><p>In this example, a <code class=3D"literal">mail</code> value was=
 requested.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span clas=
s=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettypri=
nt json hljs">$ curl \
--request POST \
--header <span class=3D"hljs-string">"Content-Type: application/json"</span=
> \
--data \
'{
    <span class=3D"hljs-attr">"input"</span>: {
        <span class=3D"hljs-attr">"mail"</span>: <span class=3D"hljs-string=
">"demo.user@example.com"</span>
    }
}' \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/se=
lfservice/userRegistration\</span>
 ?_action=3DsubmitRequirements
{
    <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string">"e=
mailValidation"</span>,
    <span class=3D"hljs-attr">"tag"</span>: <span class=3D"hljs-string">"va=
lidateCode"</span>,
    <span class=3D"hljs-attr">"requirements"</span>: {
        <span class=3D"hljs-attr">"$schema"</span>: <span class=3D"hljs-str=
ing">"http://json-schema.org/draft-04/schema#"</span>,
        <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs=
-string">"Verify emailed code"</span>,
        <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string=
">"object"</span>,
        <span class=3D"hljs-attr">"required"</span>: [
            <span class=3D"hljs-string">"code"</span>
        ],
        <span class=3D"hljs-attr">"properties"</span>: {
            <span class=3D"hljs-attr">"code"</span>: {
                <span class=3D"hljs-attr">"description"</span>: <span class=
=3D"hljs-string">"Enter code emailed"</span>,
                <span class=3D"hljs-attr">"type"</span>: <span class=3D"hlj=
s-string">"string"</span>
            }
        }
    },
    <span class=3D"hljs-attr">"token"</span>: <span class=3D"hljs-string">"=
eyAicHis...PIF-lN4s"</span>
}</pre><p>If the response was accepted, OpenAM continues with the registrat=
ion
     process and sends the next request for information. In this example, t=
he
     email address was accepted and a code was emailed to the address, whic=
h OpenAM
     requires in the response in an element named <code class=3D"literal">c=
ode</code> before
     continuing.
    </p><p>The value of the <code class=3D"literal">token</code> element sh=
ould be included
     in this and any subsequent responses to OpenAM for this registration.<=
/p></li><li class=3D"step"><p>Continue returning POST data to OpenAM contai=
ning the requested
    information, in the format specified in the request. Also return the
    <code class=3D"literal">token</code> value in the POST data, so that Op=
enAM can track which
    stage of the registration process is being completed.</p><div class=3D"=
zero-clipboard hidden-xs hidden-print" title=3D"Copy code to clipboard"><sp=
an class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></sp=
an></div><pre class=3D"codelisting prettyprint json hljs">$ curl \
--request POST \
--header <span class=3D"hljs-string">"Content-Type: application/json"</span=
> \
--data \
'{
    <span class=3D"hljs-attr">"input"</span>: {
        <span class=3D"hljs-attr">"code"</span>: <span class=3D"hljs-string=
">"cf53fcb6-3bf2-44eb-a437-885296899699"</span>
    },
    <span class=3D"hljs-attr">"token"</span>: <span class=3D"hljs-string">"=
eyAicHis...PIF-lN4s"</span>
}' \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/se=
lfservice/userRegistration\</span>
 ?_action=3DsubmitRequirements
{
   <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string">"us=
erDetails"</span>,
   <span class=3D"hljs-attr">"tag"</span>: <span class=3D"hljs-string">"ini=
tial"</span>,
   <span class=3D"hljs-attr">"requirements"</span>: {
       <span class=3D"hljs-attr">"$schema"</span>: <span class=3D"hljs-stri=
ng">"http://json-schema.org/draft-04/schema#"</span>,
       <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-=
string">"New user details"</span>,
       <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string"=
>"object"</span>,
       <span class=3D"hljs-attr">"required"</span>: [
           <span class=3D"hljs-string">"user"</span>
       ],
       <span class=3D"hljs-attr">"properties"</span>: {
           <span class=3D"hljs-attr">"user"</span>: {
               <span class=3D"hljs-attr">"description"</span>: <span class=
=3D"hljs-string">"User details"</span>,
               <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs=
-string">"object"</span>
           }
       }
   },
   <span class=3D"hljs-attr">"token"</span>: <span class=3D"hljs-string">"e=
yAicHis...PIF-lN4s"</span>
}</pre></li><li class=3D"step"><p>When requested=E2=80=94when the <code cla=
ss=3D"literal">type</code> value in
    the request is <code class=3D"literal">userDetails</code>=E2=80=94suppl=
y the details of
    the new user as an object in the POST data.</p><div class=3D"zero-clipb=
oard hidden-xs hidden-print" title=3D"Copy code to clipboard"><span class=
=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></span></div=
><pre class=3D"codelisting prettyprint json hljs">$ curl \
--request POST \
--header <span class=3D"hljs-string">"Content-Type: application/json"</span=
> \
--data \
'{
    <span class=3D"hljs-attr">"input"</span>: {
        <span class=3D"hljs-attr">"user"</span>: {
            <span class=3D"hljs-attr">"username"</span>: <span class=3D"hlj=
s-string">"demo"</span>,
            <span class=3D"hljs-attr">"givenName"</span>: <span class=3D"hl=
js-string">"Demo User"</span>,
            <span class=3D"hljs-attr">"sn"</span>: <span class=3D"hljs-stri=
ng">"User"</span>,
            <span class=3D"hljs-attr">"userPassword"</span>: <span class=3D=
"hljs-string">"d3m0"</span>,
            <span class=3D"hljs-attr">"inetUserStatus"</span>: <span class=
=3D"hljs-string">"Active"</span>
        }
    },
    <span class=3D"hljs-attr">"token"</span>: <span class=3D"hljs-string">"=
eyAicHis...PIF-lN4s"</span>
}' \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/se=
lfservice/userRegistration\</span>
     ?_action=3DsubmitRequirements
{
    <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string">"s=
elfRegistration"</span>,
    <span class=3D"hljs-attr">"tag"</span>: <span class=3D"hljs-string">"en=
d"</span>,
    <span class=3D"hljs-attr">"status"</span>: {
        <span class=3D"hljs-attr">"success"</span>: <span class=3D"hljs-lit=
eral">true</span>
    },
    <span class=3D"hljs-attr">"additions"</span>: {}
    }
</pre><p>When the process is complete, the <code class=3D"literal">tag</cod=
e> element has a
     value of <code class=3D"literal">end</code>. If the <code class=3D"lit=
eral">success</code> element
     in the <code class=3D"literal">status</code> element has a value of <c=
ode class=3D"literal">true</code>,
     then self-registration is complete and the user account was created.</=
p></li></ol></div></div></div><div class=3D"section" id=3D"common-forgotten=
-username"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#common-forgotten-username">2.1.15.2.&nbsp;Retrieving Forg=
otten Usernames</a></h4></div></div></div><p>
   This section explains how to use the REST APIs to retrieve a forgotten u=
sername.
  </p><div class=3D"procedure" id=3D"d15472e8484"><div class=3D"procedure-i=
nner"><div class=3D"procedure-title"><a class=3D"self-link" href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#d15472e8484"=
>To Retrieve a Forgotten Username with the REST APIs</a></div><ol class=3D"=
procedure" type=3D"1"><li class=3D"step"><p>Create a GET request to the <co=
de class=3D"literal">/selfservice/forgottenUsername</code>
     endpoint. Notice that the request does not require any form of authent=
ication.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"C=
opy code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"=
fa fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint js=
on hljs">$ curl \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/se=
lfservice/forgottenUsername</span>
{
  <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string">"cap=
tcha"</span>,
  <span class=3D"hljs-attr">"tag"</span>: <span class=3D"hljs-string">"init=
ial"</span>,
  <span class=3D"hljs-attr">"requirements"</span>: {
    <span class=3D"hljs-attr">"$schema"</span>: <span class=3D"hljs-string"=
>"http://json-schema.org/draft-04/schema#"</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"Captcha stage"</span>,
    <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string">"o=
bject"</span>,
    <span class=3D"hljs-attr">"required"</span>: [
      <span class=3D"hljs-string">"response"</span>
    ],
    <span class=3D"hljs-attr">"properties"</span>: {
      <span class=3D"hljs-attr">"response"</span>: {
        <span class=3D"hljs-attr">"recaptchaSiteKey"</span>: <span class=3D=
"hljs-string">"6Lfr1...cIqbd"</span>,
        <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs=
-string">"Captcha response"</span>,
        <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string=
">"string"</span>
      }
    }
  }
}</pre><p>In this example, the Google reCAPTCHA plugin is enabled, so the f=
irst
     request is of the <code class=3D"literal">captcha</code> type.</p></li=
><li class=3D"step"><p>
     Create a POST response back to the <code class=3D"literal">/selfservic=
e/forgottenUsername</code>
     endpoint with a query string containing <code class=3D"literal">_actio=
n=3DsubmitRequirements</code>.
     In the POST data, include an <code class=3D"literal">input</code> elem=
ent in the JSON
     structure, which should contain values for each element in the
     <code class=3D"literal">required</code> array of the request.
    </p><p>In this example, a <code class=3D"literal">response</code> value=
 was requested,
     which should be the user input as provided after completing the Google
     reCAPTCHA challenge.</p><div class=3D"zero-clipboard hidden-xs hidden-=
print" title=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting=
"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisti=
ng prettyprint json hljs">$ curl \
--request POST \
--header <span class=3D"hljs-string">"Content-Type: application/json"</span=
> \
--data \
'{
    <span class=3D"hljs-attr">"input"</span>: {
        <span class=3D"hljs-attr">"response"</span>: <span class=3D"hljs-st=
ring">"03AHJ...qiE1x4"</span>
    }
}' \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/se=
lfservice/forgottenUsername\</span>
 ?_action=3DsubmitRequirements
{
    <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string">"u=
serQuery"</span>,
    <span class=3D"hljs-attr">"tag"</span>: <span class=3D"hljs-string">"in=
itial"</span>,
    <span class=3D"hljs-attr">"requirements"</span>: {
        <span class=3D"hljs-attr">"$schema"</span>: <span class=3D"hljs-str=
ing">"http://json-schema.org/draft-04/schema#"</span>,
        <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs=
-string">"Find your account"</span>,
        <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string=
">"object"</span>,
        <span class=3D"hljs-attr">"required"</span>: [
            <span class=3D"hljs-string">"queryFilter"</span>
        ],
        <span class=3D"hljs-attr">"properties"</span>: {
            <span class=3D"hljs-attr">"queryFilter"</span>: {
                <span class=3D"hljs-attr">"description"</span>: <span class=
=3D"hljs-string">"filter string to find account"</span>,
                <span class=3D"hljs-attr">"type"</span>: <span class=3D"hlj=
s-string">"string"</span>
            }
        }
    },
    <span class=3D"hljs-attr">"token"</span>: <span class=3D"hljs-string">"=
eyAicHis...PIF-lN4s"</span>
}</pre><p>If the response was accepted, OpenAM continues with the username =
retrieval
     process and sends the next request for information. In this example, t=
he
     Google reCAPTCHA was verified and OpenAM is requesting details about t=
he
     account name to retrieve, which must be provided in a
     <code class=3D"literal">queryFilter</code> element.</p><p>The value of=
 the <code class=3D"literal">token</code> element should be included in
     this and all subsequent responses to OpenAM for this retrieval process=
.</p></li><li class=3D"step"><p>Create a POST response to OpenAM with a <co=
de class=3D"literal">queryFilter</code>
    value in the POST data containing the user's email address associated
    with their account.</p><p>For more information on query filters, see
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#rest-api-filter-sort-page" title=3D"2.1.7.&nbsp;F=
iltering, Sorting, and Paging Results">"Filtering, Sorting, and Paging Resu=
lts"</a>.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"=
Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D=
"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint j=
son hljs">$ curl \
--request POST \
--header <span class=3D"hljs-string">"Content-Type: application/json"</span=
> \
--data \
'{
    <span class=3D"hljs-attr">"input"</span>: {
        <span class=3D"hljs-attr">"queryFilter"</span>: <span class=3D"hljs=
-string">"mail eq \"demo.user@example.com\""</span>
    },
    <span class=3D"hljs-attr">"token"</span>: <span class=3D"hljs-string">"=
eyAicHis...PIF-lN4s"</span>
}' \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/se=
lfservice/forgottenUsername\</span>
 ?_action=3DsubmitRequirements
{
  <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string">"kba=
SecurityAnswerVerificationStage"</span>,
  <span class=3D"hljs-attr">"tag"</span>: <span class=3D"hljs-string">"init=
ial"</span>,
  <span class=3D"hljs-attr">"requirements"</span>: {
    <span class=3D"hljs-attr">"$schema"</span>: <span class=3D"hljs-string"=
>"http://json-schema.org/draft-04/schema#"</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"Answer security questions"</span>,
    <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string">"o=
bject"</span>,
    <span class=3D"hljs-attr">"required"</span>: [
      <span class=3D"hljs-string">"answer1"</span>
    ],
    <span class=3D"hljs-attr">"properties"</span>: {
      <span class=3D"hljs-attr">"answer1"</span>: {
        <span class=3D"hljs-attr">"systemQuestion"</span>: {
          <span class=3D"hljs-attr">"en"</span>: <span class=3D"hljs-string=
">"What was the model of your first car?"</span>
        },
        <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string=
">"string"</span>
      }
    }
  },
  <span class=3D"hljs-attr">"token"</span>: <span class=3D"hljs-string">"ey=
AicHis...PIF-lN4s"</span>
}</pre><p>If a single subject is located that matches the provided query
     filter, the retrieval process continues.</p><p>If KBA is enabled, Open=
AM requests answers to the configured number of
     KBA questions, as in this example.</p><p>If a subject is not found, an=
 HTTP 400 Bad Request status is returned,
     and an error message in the JSON data:</p><div class=3D"zero-clipboard=
 hidden-xs hidden-print" title=3D"Copy command to clipboard"><span class=3D=
"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre c=
lass=3D"cmdline prettyprint nohighlight">{
    "code": 400,
    "reason": "Bad Request",
    "message": "Unable to find account"
}</pre></li><li class=3D"step"><p>Return a POST response with the answers a=
s values
    of the elements specified in the <code class=3D"literal">required</code=
> array, in this
    example <code class=3D"literal">answer1</code>. Ensure the same <code c=
lass=3D"literal">token</code>
    value is sent with each response.</p><div class=3D"zero-clipboard hidde=
n-xs hidden-print" title=3D"Copy code to clipboard"><span class=3D"btn-copy=
-codelisting"><span class=3D"fa fa-files-o"></span></span></div><pre class=
=3D"codelisting prettyprint json hljs">$ curl \
--request POST \
--header <span class=3D"hljs-string">"Content-Type: application/json"</span=
> \
--data \
'{
    <span class=3D"hljs-attr">"input"</span>: {
        <span class=3D"hljs-attr">"answer1"</span>: <span class=3D"hljs-str=
ing">"Mustang"</span>
    },
    <span class=3D"hljs-attr">"token"</span>: <span class=3D"hljs-string">"=
eyAicHis...PIF-lN4s"</span>
}' \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/se=
lfservice/forgottenUsername\</span>
 ?_action=3DsubmitRequirements
{
    <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string">"r=
etrieveUsername"</span>,
    <span class=3D"hljs-attr">"tag"</span>: <span class=3D"hljs-string">"en=
d"</span>,
    <span class=3D"hljs-attr">"status"</span>: {
        <span class=3D"hljs-attr">"success"</span>: <span class=3D"hljs-lit=
eral">true</span>
    },
    <span class=3D"hljs-attr">"additions"</span>: {
        <span class=3D"hljs-attr">"userName"</span>: <span class=3D"hljs-st=
ring">"demo"</span>
    }
}</pre><p>When the process is complete, the <code class=3D"literal">tag</co=
de> element has a
     value of <code class=3D"literal">end</code>. If the <code class=3D"lit=
eral">success</code> element
     in the <code class=3D"literal">status</code> element has a value of <c=
ode class=3D"literal">true</code>,
     then username retrieval is complete and the username is emailed to the
     registered address.</p><p>If the Show Username option is enabled for u=
sername
     retrieval, the username retrieved is also returned in the JSON respons=
e as
     the value of the <code class=3D"literal">userName</code> element, as i=
n the example
     above.</p></li></ol></div></div></div><div class=3D"section" id=3D"com=
mon-forgotten-password"><div class=3D"titlepage"><div><div><h4 class=3D"tit=
le"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#common-forgotten-password">2.1.15.3.&nbsp;Rep=
lacing Forgotten Passwords</a></h4></div></div></div><p>
   This section explains how to use the REST APIs to replace a forgotten pa=
ssword.
  </p><div class=3D"procedure" id=3D"d15472e8597"><div class=3D"procedure-i=
nner"><div class=3D"procedure-title"><a class=3D"self-link" href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#d15472e8597"=
>To Replace a Forgotten Password with the REST APIs</a></div><ol class=3D"p=
rocedure" type=3D"1"><li class=3D"step"><p>Create a GET request to the <cod=
e class=3D"literal">/selfservice/forgottenPassword</code>
     endpoint. Notice that the request does not require any form of authent=
ication.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"C=
opy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighl=
ight">$ <strong class=3D"userinput">curl \
https://openam.example.com:8443/openam/json/selfservice/forgottenPassword</=
strong>
<em class=3D"computeroutput">{
  "type": "captcha",
  "tag": "initial",
  "requirements": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Captcha stage",
    "type": "object",
    "required": [
      "response"
    ],
    "properties": {
      "response": {
        "recaptchaSiteKey": "6Lfr1...cIqbd",
        "description": "Captcha response",
        "type": "string"
      }
    }
  }
}</em></pre><p>In this example the Google reCAPTCHA plugin is enabled, so t=
he first
     request is of the <code class=3D"literal">captcha</code> type.</p></li=
><li class=3D"step"><p>
     Create a POST response back to the <code class=3D"literal">/selfservic=
e/forgottenPassword</code>
     endpoint with a query string containing <code class=3D"literal">_actio=
n=3DsubmitRequirements</code>.
     In the POST data, include an <code class=3D"literal">input</code> elem=
ent in the JSON
     structure, which should contain values for each element in the
     <code class=3D"literal">required</code> array of the request.
    </p><p>In this example, a <code class=3D"literal">response</code> value=
 was requested,
     which should be the user input as provided after completing the Google
     reCAPTCHA challenge.</p><div class=3D"zero-clipboard hidden-xs hidden-=
print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"=
><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline pr=
ettyprint nohighlight">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--data \
'{
    "input": {
        "response": "03AHJ...qiE1x4"
    }
}' \
https://openam.example.com:8443/openam/json/selfservice/forgottenPassword\
 ?_action=3DsubmitRequirements</strong>
<em class=3D"computeroutput">{
    "type": "userQuery",
    "tag": "initial",
    "requirements": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "description": "Find your account",
        "type": "object",
        "required": [
            "queryFilter"
        ],
        "properties": {
            "queryFilter": {
                "description": "filter string to find account",
                "type": "string"
            }
        }
    },
    "token": "eyAicHis...PIF-lN4s"
}</em></pre><p>If the response was accepted, OpenAM continues with the pass=
word reset
     process and sends the next request for information. In this example, t=
he
     Google reCAPTCHA was verified and OpenAM is requesting details about t=
he
     account with the password to replace, which must be provided in a
     <code class=3D"literal">queryFilter</code> element.</p><p>The value of=
 the <code class=3D"literal">token</code> element should be included in
     this and all subsequent responses to OpenAM for this reset process.</p=
></li><li class=3D"step"><p>Create a POST response to OpenAM with a <code c=
lass=3D"literal">queryFilter</code>
    value in the POST data containing the username of the subject with the
    password to replace.</p><p>For more information on query filters, see
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#rest-api-filter-sort-page" title=3D"2.1.7.&nbsp;F=
iltering, Sorting, and Paging Results">"Filtering, Sorting, and Paging Resu=
lts"</a>.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"=
Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"=
fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohigh=
light">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--data \
'{
    "input": {
        "queryFilter": "uid eq \"demo\""
    },
    "token": "eyAicHis...PIF-lN4s"
}' \
https://openam.example.com:8443/openam/json/selfservice/forgottenPassword\
 ?_action=3DsubmitRequirements</strong>
<em class=3D"computeroutput">{
  "type": "kbaSecurityAnswerVerificationStage",
  "tag": "initial",
  "requirements": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Answer security questions",
    "type": "object",
    "required": [
      "answer1"
    ],
    "properties": {
      "answer1": {
        "systemQuestion": {
          "en": "What was the model of your first car?"
        },
        "type": "string"
      }
    }
  },
  "token": "eyAicHis...PIF-lN4s"
}</em></pre><p>If a single subject is located that matches the provided que=
ry
     filter, the password reset process continues.</p><p>If a subject is no=
t found, an HTTP 400 Bad Request status is returned,
     and an error message in the JSON data:</p><div class=3D"zero-clipboard=
 hidden-xs hidden-print" title=3D"Copy command to clipboard"><span class=3D=
"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre c=
lass=3D"cmdline prettyprint nohighlight">{
     "code": 400,
     "reason": "Bad Request",
     "message": "Unable to find account"
     }</pre></li><li class=3D"step"><p>Continue returning POST data to Open=
AM containing the requested
    information, in the format specified in the request. Also return the
    <code class=3D"literal">token</code> value in the POST data, so that Op=
enAM can track which
    stage of the password reset process is being completed.</p><div class=
=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to clipboa=
rd"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span><=
/span></div><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=
=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--data \
'{
    "input": {
        "answer1": "Mustang"
    },
    "token": "eyAicHis...PIF-lN4s"
}' \
https://openam.example.com:8443/openam/json/selfservice/forgottenPassword\
 ?_action=3DsubmitRequirements</strong>
<em class=3D"computeroutput">{
  "type": "resetStage",
  "tag": "initial",
  "requirements": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "description": "Reset password",
      "type": "object",
      "required": [
           "password"
      ],
      "properties": {
          "password": {
              "description": "Password",
              "type": "string"
          }
      }
  },
   "token": "eyAicHis...PIF-lN4s"
}</em></pre></li><li class=3D"step"><p>When requested=E2=80=94when the <cod=
e class=3D"literal">type</code> value in
    the request is <code class=3D"literal">resetStage</code>=E2=80=94supply=
 the new password
    in the POST data.</p><div class=3D"zero-clipboard hidden-xs hidden-prin=
t" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><sp=
an class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline pretty=
print nohighlight">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--data \
'{
    "input": {
        "password": "User1234"
    },
    "token": "eyAicHis...PIF-lN4s"
}' \
https://openam.example.com:8443/openam/json/selfservice/forgottenPassword\
     ?_action=3DsubmitRequirements</strong>
<em class=3D"computeroutput">{
    "type": "resetStage",
    "tag": "end",
    "status": {
        "success": true
    },
    "additions": {}
}</em></pre><p>When the process is complete, the <code class=3D"literal">ta=
g</code> element has a
     value of <code class=3D"literal">end</code>. If the <code class=3D"lit=
eral">success</code> element
     in the <code class=3D"literal">status</code> element has a value of <c=
ode class=3D"literal">true</code>,
     then password reset is complete and the new password is now active.</p=
><p>If the password is not accepted, an HTTP 400 Bad Request status is retu=
rned,
     and an error message in the JSON data:</p><div class=3D"zero-clipboard=
 hidden-xs hidden-print" title=3D"Copy command to clipboard"><span class=3D=
"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre c=
lass=3D"cmdline prettyprint nohighlight">{
    "code": 400,
    "reason": "Bad Request",
    "message": "Minimum password length is 8."
}</pre></li></ol></div></div></div><div class=3D"section" id=3D"rest-dashbo=
ard"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"sel=
f-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/=
index.html#rest-dashboard">2.1.15.4.&nbsp;Displaying Dashboard Applications=
</a></h4></div></div></div><a class=3D"indexterm" name=3D"d15472e8737"></a>=
<p>OpenAM lets administrators configure online applications to display
    applications on user Dashboards. You can used exposed REST API to displ=
ay
    information about the online applications.</p><div class=3D"variablelis=
t"><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"liter=
al">/dashboard/assigned</code></span></dt><dd><p>This endpoint retrieves th=
e list of applications assigned to the=20
       authenticated user.</p><div class=3D"zero-clipboard hidden-xs hidden=
-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline=
"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline p=
rettyprint nohighlight">$ <strong class=3D"userinput">curl \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/dashboard/assigned</strong>
<em class=3D"computeroutput">{
  "google": {
      "dashboardIcon": [
          "Google.gif"
      ],
      "dashboardName": [
          "Google"
      ],
      "dashboardLogin": [
          "http://www.google.com"
      ],
      "ICFIdentifier": [
          ""
      ],
      "dashboardDisplayName": [
          "Google"
      ],
      "dashboardClassName": [
          "SAML2ApplicationClass"
      ]
   }
}</em></pre></dd><dt><span class=3D"term"><code class=3D"literal">/dashboar=
d/available</code></span></dt><dd><p>This endpoint retrieves the list of ap=
plications available in the
       authenticated user's realm. The example is based on two of the defau=
lt=20
       Dashboard applications: Google and Salesforce.</p><div class=3D"zero=
-clipboard hidden-xs hidden-print" title=3D"Copy command to clipboard"><spa=
n class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></=
div><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=3D"useri=
nput">curl \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/dashboard/available</strong>
<em class=3D"computeroutput">{
  "google": {
      "dashboardIcon": [
          "Google.gif"
      ],
      "dashboardName": [
          "Google"
      ],
      "dashboardLogin": [
          "http://www.google.com"
      ],
      "ICFIdentifier": [
          ""
      ],
      "dashboardDisplayName": [
          "Google"
      ],
      "dashboardClassName": [
          "SAML2ApplicationClass"
      ]
  }
  "salesforce": {
      "dashboardIcon": [
          "salesforce.gif"
      ],
      "dashboardName": [
          "Salesforce"
      ],
      "dashboardLogin": [
          "http://salesforce.com"
      ],
      "ICFIdentifier": [
          ""
      ],
      "dashboardDisplayName": [
          "Salesforce"
      ],
      "dashboardClassName": [
          "SAML2ApplicationClass"
      ]
  }
}</em></pre></dd><dt><span class=3D"term"><code class=3D"literal">/dashboar=
d/defined</code></span></dt><dd><p>This endpoint retrieves the list of all =
applications available defined
       for the OpenAM Dashboard service. The example is based on the three =
default=20
       Dashboard applications: Google, Salesforce, and Zendesk.</p><div cla=
ss=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to clipboar=
d"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></spa=
n></span></div><pre class=3D"codelisting prettyprint json hljs">$ curl \
 --header <span class=3D"hljs-string">"iplanetDirectoryPro: AQIC5w...2NzEz*=
"</span> \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/d=
ashboard/defined</span>
 {
    <span class=3D"hljs-attr">"google"</span>: {
        <span class=3D"hljs-attr">"dashboardIcon"</span>: [
            <span class=3D"hljs-string">"Google.gif"</span>
        ],
        <span class=3D"hljs-attr">"dashboardName"</span>: [
            <span class=3D"hljs-string">"Google"</span>
        ],
        <span class=3D"hljs-attr">"dashboardLogin"</span>: [
            <span class=3D"hljs-string">"http://www.google.com"</span>
        ],
        <span class=3D"hljs-attr">"ICFIdentifier"</span>: [
            <span class=3D"hljs-string">"idm magic 34"</span>
        ],
        <span class=3D"hljs-attr">"dashboardDisplayName"</span>: [
            <span class=3D"hljs-string">"Google"</span>
        ],
        <span class=3D"hljs-attr">"dashboardClassName"</span>: [
            <span class=3D"hljs-string">"SAML2ApplicationClass"</span>
        ]
    },
    <span class=3D"hljs-attr">"salesforce"</span>: {
        <span class=3D"hljs-attr">"dashboardIcon"</span>: [
            <span class=3D"hljs-string">"salesforce.gif"</span>
        ],
        <span class=3D"hljs-attr">"dashboardName"</span>: [
            <span class=3D"hljs-string">"SalesForce"</span>
        ],
        <span class=3D"hljs-attr">"dashboardLogin"</span>: [
            <span class=3D"hljs-string">"http://www.salesforce.com"</span>
        ],
        <span class=3D"hljs-attr">"ICFIdentifier"</span>: [
            <span class=3D"hljs-string">"idm magic 12"</span>
        ],
        <span class=3D"hljs-attr">"dashboardDisplayName"</span>: [
            <span class=3D"hljs-string">"Salesforce"</span>
        ],
        <span class=3D"hljs-attr">"dashboardClassName"</span>: [
            <span class=3D"hljs-string">"SAML2ApplicationClass"</span>
        ]
    },
    <span class=3D"hljs-attr">"zendesk"</span>: {
        <span class=3D"hljs-attr">"dashboardIcon"</span>: [
            <span class=3D"hljs-string">"ZenDesk.gif"</span>
        ],
        <span class=3D"hljs-attr">"dashboardName"</span>: [
            <span class=3D"hljs-string">"ZenDesk"</span>
        ],
        <span class=3D"hljs-attr">"dashboardLogin"</span>: [
            <span class=3D"hljs-string">"http://www.ZenDesk.com"</span>
        ],
        <span class=3D"hljs-attr">"ICFIdentifier"</span>: [
            <span class=3D"hljs-string">"idm magic 56"</span>
        ],
        <span class=3D"hljs-attr">"dashboardDisplayName"</span>: [
            <span class=3D"hljs-string">"ZenDesk"</span>
        ],
        <span class=3D"hljs-attr">"dashboardClassName"</span>: [
            <span class=3D"hljs-string">"SAML2ApplicationClass"</span>
        ]
    }
}</pre></dd></dl></div><p>If your application runs in a user-agent such as =
a browser, you can
    rely on OpenAM to handle authentication.</p></div><div class=3D"section=
" id=3D"rest-api-device-profile-reset"><div class=3D"titlepage"><div><div><=
h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgero=
ck.com/docs/openam/13.5/dev-guide/index.html#rest-api-device-profile-reset"=
>2.1.15.5.&nbsp;Resetting Device Profiles</a></h4></div></div></div><a clas=
s=3D"indexterm" name=3D"d15472e8786"></a><p>
   The OpenAM REST API provides an action that lets a user reset their own
   profile for a registered device running an authenticator app used for
   two-step verification. Administrators can also use this REST API to rese=
t a
   user's registered device profile.
  </p><p>
   Resetting a device profile deletes information about a user's registered
   device from OpenAM.
  </p><p>
   Resetting a device profile is useful when:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      A user loses a registered device=E2=80=94for example, a mobile
      phone=E2=80=94but had not saved the device recovery codes available i=
n the
      OpenAM dashboard.
     </p></li><li class=3D"listitem"><p>
      A user loses a registered device and has no device recovery codes
      remaining.
     </p></li></ul></div><p>
  </p><p>
   An administrator or a user can perform an HTTP POST on
   <code class=3D"literal">/json/<em class=3D"replaceable">subrealm</em>/us=
ers/<em class=3D"replaceable">user</em>/devices/2fa/oath?_action=3Dreset</c=
ode>
   to reset the user's device profile:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 --data '{}' \
 https://openam.example.com:8443/openam/json/<em><strong class=3D"replaceab=
le">mySubrealm</strong></em>/users/<em><strong class=3D"replaceable">myUser=
</strong></em>/devices/2fa/oath?_action=3Dreset</strong>
<em class=3D"computeroutput">{"result":true}</em></pre><p>
   For more information about device registration, see
   <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#sec-mfa-devices" class=3D"olink">"Managing Devices for Multi-Fac=
tor Authentication"</a> in the <em>Administration Guide</em>.
  </p></div></div><div class=3D"section" id=3D"sec-rest-identity-realm-mgmt=
"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-l=
ink" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/ind=
ex.html#sec-rest-identity-realm-mgmt">2.1.16.&nbsp;RESTful Identity and Rea=
lm Management Services</a></h3></div></div></div><a class=3D"indexterm" nam=
e=3D"d15472e8838"></a><p>
  This section shows how to use the OpenAM RESTful interfaces for identity
  and realm management.
 </p><p>
  In this section, long URLs are wrapped to fit the printed page, as some
  of the output is formatted for easier reading.
 </p><p>
  Before making a REST API call to manage a realm or an identity, make sure
  that you have:

  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     Authenticated successfully to OpenAM as a user with sufficient privile=
ges
     to make the REST API call
    </p></li><li class=3D"listitem"><p>
     Obtained the session token returned after successful authentication
    </p></li></ul></div><p>

  When making the REST API call, pass the session token in the HTTP header.
  For more information about the OpenAM session token and its use in REST A=
PI
  calls, see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#rest-api-ssotoken" title=3D"2.1.6.&nbsp;U=
sing the Session Token After Authentication">"Using the Session Token After=
 Authentication"</a>.
 </p><div class=3D"section" id=3D"rest-api-crud-identity"><div class=3D"tit=
lepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-cr=
ud-identity">2.1.16.1.&nbsp;Identity Management</a></h4></div></div></div><=
a class=3D"indexterm" name=3D"d15472e8860"></a><p>
   This section shows how to create, read, update, delete, and list
   identities using the RESTful APIs.
  </p><div class=3D"panel panel-primary"><div class=3D"panel-heading"><h3 c=
lass=3D"panel-title">Important</h3></div><div class=3D"panel-body"><p>
    OpenAM is not primarily an identity data store, nor is it provisioning
    software. For storing identity data, consider <a class=3D"link" href=3D=
"http://forgerock.com/what-we-offer/open-identity-stack/opendj/" target=3D"=
_blank">OpenDJ</a>.
    For provisioning, consider <a class=3D"link" href=3D"http://forgerock.c=
om/what-we-offer/open-identity-stack/openidm/" target=3D"_blank">OpenIDM</a=
>.
    Both of these products provide REST APIs as well.
   </p></div></div><div class=3D"itemizedlist"><p>OpenAM has two REST APIs =
for managing identities:</p><ul class=3D"itemizedlist" style=3D"list-style-=
type: disc; "><li class=3D"listitem"><p>
     Under the <code class=3D"literal">/json/agents</code>,
     <code class=3D"literal">/json/groups</code>, and <code class=3D"litera=
l">/json/users</code>,
     you find the newer JSON-based APIs. The newer APIs follow the ForgeRoc=
k
     common REST pattern creating, reading, updating, deleting, and queryin=
g
     resources.
    </p><p>
     Examples in this section do not repeat the authentication shown
     in <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#rest-api-auth" class=3D"link">Authorization and Policy Manage=
ment</a>.

     For browser-based clients, you
     can rely on OpenAM cookies rather than construct the header in your
     application. Managing agent profiles, groups, realms, and users with
     these APIs of course require authorization. The examples shown in this
     section were performed with the token ID gained after authenticating
     as OpenAM administrator.
    </p><p>
     Although the examples here show user management, you can use
     <code class=3D"literal">/json/agents</code>, <code class=3D"literal">/=
json/groups</code>,
     <code class=3D"literal">/json/realms</code> in similar fashion. See
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#rest-api-crud-realm" title=3D"2.1.16.2.&nbsp;Real=
m Management">"Realm Management"</a> for examples related to realms.
    </p><div class=3D"itemizedlist"><p>The following sections cover this JS=
ON-based API:</p><ul class=3D"itemizedlist" style=3D"list-style-type: circl=
e; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-create-identit=
y" title=3D"2.1.16.1.1.&nbsp;Creating Identities">"Creating Identities"</a>=
</p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-read-ident=
ity" title=3D"2.1.16.1.2.&nbsp;Reading Identities">"Reading Identities"</a>=
</p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-update-ide=
ntity" title=3D"2.1.16.1.3.&nbsp;Updating Identities">"Updating Identities"=
</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://ba=
ckstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-delete=
-identity" title=3D"2.1.16.1.4.&nbsp;Deleting Identities">"Deleting Identit=
ies"</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-qu=
ery-identity" title=3D"2.1.16.1.5.&nbsp;Listing Identities">"Listing Identi=
ties"</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https=
://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-c=
hange-password" title=3D"2.1.16.1.7.&nbsp;Changing Passwords">"Changing Pas=
swords"</a></p></li></ul></div></li></ul></div><div class=3D"section" id=3D=
"rest-api-create-identity"><div class=3D"titlepage"><div><div><h5 class=3D"=
title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#rest-api-create-identity">2.1.16.1.1.&nbsp=
;Creating Identities</a></h5></div></div></div><p>
    OpenAM lets administrators create a user profile by making
    an HTTP POST of the JSON representation of the profile to
    <code class=3D"literal">/json/<em class=3D"replaceable">subrealm</em>/u=
sers/?_action=3Dcreate</code>.
    To add a user to the Top Level Realm, you do not need to specify the re=
alm.</p><p>
    The following example shows an administrator creating a new user. The
    only required fields are <code class=3D"literal">username</code> and
    <code class=3D"literal">userpassword</code>. If no other name is provid=
ed, the entry
    you make for <code class=3D"literal">username</code> defaults to both t=
he user id and the
    user's last name:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
 --request POST \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --header <span class=3D"hljs-string">"iplanetDirectoryPro: AQIC5w...2NzEz*=
"</span> \
 --data \
 '{
   <span class=3D"hljs-attr">"username"</span>: <span class=3D"hljs-string"=
>"bjensen"</span>,
   <span class=3D"hljs-attr">"userpassword"</span>: <span class=3D"hljs-str=
ing">"secret12"</span>,
   <span class=3D"hljs-attr">"mail"</span>: <span class=3D"hljs-string">"bj=
ensen@example.com"</span>
 }' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/u=
sers/?_action=3Dcreate</span>
 {
    <span class=3D"hljs-attr">"username"</span>: <span class=3D"hljs-string=
">"bjensen"</span>,
    <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string">"=
/"</span>,
    <span class=3D"hljs-attr">"uid"</span>: [
        <span class=3D"hljs-string">"bjensen"</span>
    ],
    <span class=3D"hljs-attr">"mail"</span>: [
        <span class=3D"hljs-string">"bjensen@example.com"</span>
    ],
    <span class=3D"hljs-attr">"sn"</span>: [
        <span class=3D"hljs-string">"bjensen"</span>
    ],
    <span class=3D"hljs-attr">"cn"</span>: [
        <span class=3D"hljs-string">"bjensen"</span>
    ],
    <span class=3D"hljs-attr">"inetuserstatus"</span>: [
        <span class=3D"hljs-string">"Active"</span>
    ],
    <span class=3D"hljs-attr">"dn"</span>: [
        <span class=3D"hljs-string">"uid=3Dbjensen,ou=3Dpeople,dc=3Dopenam,=
dc=3Dforgerock,dc=3Dorg"</span>
    ],
    <span class=3D"hljs-attr">"objectclass"</span>: [
        <span class=3D"hljs-string">"person"</span>,
        <span class=3D"hljs-string">"sunIdentityServerLibertyPPService"</sp=
an>,
        <span class=3D"hljs-string">"sunFederationManagerDataStore"</span>,
        <span class=3D"hljs-string">"inetorgperson"</span>,
        <span class=3D"hljs-string">"iPlanetPreferences"</span>,
        <span class=3D"hljs-string">"iplanet-am-auth-configuration-service"=
</span>,
        <span class=3D"hljs-string">"organizationalperson"</span>,
        <span class=3D"hljs-string">"sunFMSAML2NameIdentifier"</span>,
        <span class=3D"hljs-string">"inetuser"</span>,
        <span class=3D"hljs-string">"iplanet-am-managed-person"</span>,
        <span class=3D"hljs-string">"sunAMAuthAccountLockout"</span>,
        <span class=3D"hljs-string">"iplanet-am-user-service"</span>,
        <span class=3D"hljs-string">"top"</span>
    ],
    <span class=3D"hljs-attr">"universalid"</span>: [
        <span class=3D"hljs-string">"id=3Dbjensen,ou=3Duser,dc=3Dopenam,dc=
=3Dforgerock,dc=3Dorg"</span>
    ]
}</pre><p>
    Alternatively, administrators can create user profiles with specific
    user IDs by doing an HTTP PUT of the JSON representation of the changes=
 to
    <code class=3D"literal">/json/users/<em class=3D"replaceable">user-id</=
em></code>, as
    shown in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
 --request PUT \
 --header <span class=3D"hljs-string">"iplanetDirectoryPro: AQIC5w...2NzEz*=
"</span> \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --header <span class=3D"hljs-string">"If-None-Match: *"</span> \
 --data \
 '{
   <span class=3D"hljs-attr">"username"</span>: <span class=3D"hljs-string"=
>"janedoe"</span>,
   <span class=3D"hljs-attr">"userpassword"</span>: <span class=3D"hljs-str=
ing">"secret12"</span>,
   <span class=3D"hljs-attr">"mail"</span>: <span class=3D"hljs-string">"ja=
nedoe@example.com"</span>
 }' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/u=
sers/janedoe</span>
 {
    <span class=3D"hljs-attr">"username"</span>: <span class=3D"hljs-string=
">"janedoe"</span>,
    <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string">"=
/"</span>,
    <span class=3D"hljs-attr">"uid"</span>: [
        <span class=3D"hljs-string">"janedoe"</span>
    ],
    <span class=3D"hljs-attr">"mail"</span>: [
        <span class=3D"hljs-string">"janedoe@example.com"</span>
    ],
    <span class=3D"hljs-attr">"sn"</span>: [
        <span class=3D"hljs-string">"janedoe"</span>
    ],
    <span class=3D"hljs-attr">"cn"</span>: [
        <span class=3D"hljs-string">"janedoe"</span>
    ],
    <span class=3D"hljs-attr">"inetuserstatus"</span>: [
        <span class=3D"hljs-string">"Active"</span>
    ],
    <span class=3D"hljs-attr">"dn"</span>: [
        <span class=3D"hljs-string">"uid=3Djanedoe,ou=3Dpeople,dc=3Dopenam,=
dc=3Dforgerock,dc=3Dorg"</span>
    ],
    <span class=3D"hljs-attr">"objectclass"</span>: [
        <span class=3D"hljs-string">"devicePrintProfilesContainer"</span>,
        <span class=3D"hljs-string">"person"</span>,
        <span class=3D"hljs-string">"sunIdentityServerLibertyPPService"</sp=
an>,
        <span class=3D"hljs-string">"inetorgperson"</span>,
        <span class=3D"hljs-string">"sunFederationManagerDataStore"</span>,
        <span class=3D"hljs-string">"iPlanetPreferences"</span>,
        <span class=3D"hljs-string">"iplanet-am-auth-configuration-service"=
</span>,
        <span class=3D"hljs-string">"organizationalperson"</span>,
        <span class=3D"hljs-string">"sunFMSAML2NameIdentifier"</span>,
        <span class=3D"hljs-string">"inetuser"</span>,
        <span class=3D"hljs-string">"forgerock-am-dashboard-service"</span>=
,
        <span class=3D"hljs-string">"iplanet-am-managed-person"</span>,
        <span class=3D"hljs-string">"iplanet-am-user-service"</span>,
        <span class=3D"hljs-string">"sunAMAuthAccountLockout"</span>,
        <span class=3D"hljs-string">"top"</span>
    ],
    <span class=3D"hljs-attr">"universalid"</span>: [
        <span class=3D"hljs-string">"id=3Djanedoe,ou=3Duser,dc=3Dopenam,dc=
=3Dforgerock,dc=3Dorg"</span>
    ]
}</pre><p>
    As shown in the examples, OpenAM returns the JSON representation of
    the profile on successful creation. On failure, OpenAM returns a JSON
    representation of the error including the
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>. For example,
    version 2.0 of the CREST <code class=3D"literal">/json/users</code>,
    <code class=3D"literal">/json/groups</code>,
    and <code class=3D"literal">/json/agents</code> endpoints return 403 if=
 the user making
    the request is not authorized to do so.
   </p><p>
    The same HTTP POST and PUT mechanisms also work for other objects
    such as policy agent profiles and groups:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
 --request POST \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --header <span class=3D"hljs-string">"iplanetDirectoryPro: AQIC5w...2NzEz*=
"</span> \
 --data \
 '{
    <span class=3D"hljs-attr">"username"</span>:<span class=3D"hljs-string"=
>"myAgent"</span>,
    <span class=3D"hljs-attr">"com.sun.identity.agents.config.fqdn.default"=
</span>:
      [<span class=3D"hljs-string">"www.example.com"</span>],
    <span class=3D"hljs-attr">"com.sun.identity.agents.config.repository.lo=
cation"</span>:
      [<span class=3D"hljs-string">"centralized"</span>],
    <span class=3D"hljs-attr">"agenttype"</span>:[<span class=3D"hljs-strin=
g">"WebAgent"</span>],
    <span class=3D"hljs-attr">"serverurl"</span>:[<span class=3D"hljs-strin=
g">"https://openam.example.com:8443/openam/"</span>],
    <span class=3D"hljs-attr">"agenturl"</span>:[<span class=3D"hljs-string=
">"http://www.example.com:80/"</span>],
    <span class=3D"hljs-attr">"userpassword"</span>:[<span class=3D"hljs-st=
ring">"password"</span>],
    <span class=3D"hljs-attr">"com.sun.identity.agents.config.login.url"</s=
pan>:
      [<span class=3D"hljs-string">"[0]=3Dhttps://openam.example.com:8443/o=
penam/UI/Login"</span>],
    <span class=3D"hljs-attr">"com.sun.identity.agents.config.logout.url"</=
span>:
      [<span class=3D"hljs-string">"[0]=3Dhttps://openam.example.com:8443/o=
penam/UI/Logout"</span>],
    <span class=3D"hljs-attr">"sunidentityserverdevicestatus"</span>:[<span=
 class=3D"hljs-string">"Active"</span>]
 }' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/a=
gents/?_action=3Dcreate</span>
 {
    <span class=3D"hljs-attr">"username"</span>: <span class=3D"hljs-string=
">"myAgent"</span>,
    <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string">"=
/"</span>,
    <span class=3D"hljs-attr">"com.sun.identity.agents.config.fqdn.default"=
</span>: [
        <span class=3D"hljs-string">"www.example.com"</span>
    ],
    <span class=3D"hljs-attr">"com.sun.identity.agents.config.repository.lo=
cation"</span>: [
        <span class=3D"hljs-string">"centralized"</span>
    ],
    <span class=3D"hljs-attr">"AgentType"</span>: [
        <span class=3D"hljs-string">"WebAgent"</span>
    ],
    <span class=3D"hljs-attr">"com.sun.identity.agents.config.login.url"</s=
pan>: [
        <span class=3D"hljs-string">"[0]=3Dhttps://openam.example.com:8443/=
openam/UI/Login"</span>
    ],
    <span class=3D"hljs-attr">"com.sun.identity.agents.config.login.url"</s=
pan>:
        [<span class=3D"hljs-string">"[0]=3Dhttps://openam.example.com:8443=
/openam/UI/Login"</span>
    ],
    <span class=3D"hljs-attr">"com.sun.identity.agents.config.logout.url"</=
span>:
        [<span class=3D"hljs-string">"[0]=3Dhttps://openam.example.com:8443=
/openam/UI/Logout"</span>
    ],
    <span class=3D"hljs-attr">"sunIdentityServerDeviceStatus"</span>: [
        <span class=3D"hljs-string">"Active"</span>
    ]
}</pre><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
     The command output above has been truncated to be more
     readable. When you create a policy agent profile, OpenAM returns the f=
ull
     profile in JSON format.
    </p></div></div><div class=3D"zero-clipboard hidden-xs hidden-print" ti=
tle=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span c=
lass=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting pretty=
print nohighlight">$ curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 --data '{
   "username":"newGroup",
   "uniquemember":["uid=3Ddemo,ou=3Dpeople,dc=3Dopenam,dc=3Dforgerock,dc=3D=
org"]
 }' \
 https://openam.example.com:8443/openam/json/groups?_action=3Dcreate
 {
    "username": "newGroup",
    "realm": "/",
    "uniqueMember": [
        "uid=3Ddemo,ou=3Dpeople,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ],
    "cn": [
        "newGroup"
    ],
    "dn": [
        "cn=3DnewGroup,ou=3Dgroups,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ],
    "objectclass": [
        "groupofuniquenames",
        "top"
    ],
    "universalid": [
        "id=3DnewGroup,ou=3Dgroup,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ]
}

$ curl \
 --request PUT \
 --header "If-None-Match: *" \
 --header "iPlanetDirectoryPro: AQIC5w...2NzEz*" \
 --header "Content-Type: application/json" \
 --data '{
   "username":"anotherGroup",
   "uniquemember":["uid=3Ddemo,ou=3Dpeople,dc=3Dopenam,dc=3Dforgerock,dc=3D=
org"]
 }' \
 https://openam.example.com:8443/openam/json/groups/anotherGroup
 {
    "username": "anotherGroup",
    "realm": "/",
    "uniqueMember": [
        "uid=3Ddemo,ou=3Dpeople,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ],
    "cn": [
        "anotherGroup"
    ],
    "dn": [
        "cn=3DanotherGroup,ou=3Dgroups,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ],
    "objectclass": [
        "groupofuniquenames",
        "top"
    ],
    "universalid": [
        "id=3DanotherGroup,ou=3Dgroup,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ]
}</pre></div><div class=3D"section" id=3D"rest-api-read-identity"><div clas=
s=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-read-identity">2.1.16.1.2.&nbsp;Reading Identities</a></h5></div></=
div></div><p>
    OpenAM lets users and administrators read profiles by requesting an HTT=
P
    GET on <code class=3D"literal">/json/<em class=3D"replaceable">subrealm=
</em>/users/<em class=3D"replaceable">user-id</em></code>.
    This allows users and administrators to verify user data, status, and d=
irectory.
    If users or administrators see missing or incorrect information, they c=
an write
    down the correct information and add it using
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-update-identity" title=3D"2.1.16.1.3.&nbs=
p;Updating Identities">"Updating Identities"</a>.
    To read a profile on the Top Level Realm, you do not need to specify th=
e realm.
   </p><p>
    Users can review the data associated with their own accounts, and
    administrators can also read other user's profiles.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
     If an administrator user is reading their own profile,
     an additional <code class=3D"literal">roles</code> element, with a val=
ue of
     <code class=3D"literal">ui-admin</code> is returned in the JSON respon=
se.
     The XUI verifies this element to grant or deny access to the OpenAM
     Console.
    </p></div></div><p>
    The following example shows an administrator
    accessing user data belonging to <code class=3D"literal">demo</code>:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/users/demo</strong>
<em class=3D"computeroutput">{
    "username": "demo",
    "realm": "dc=3Dopenam,dc=3Dforgerock,dc=3Dorg",
    "uid": [
        "demo"
    ],
    "sn": [
        "demo"
    ],
    "cn": [
        "demo"
    ],
    "inetuserstatus": [
        "Active"
    ],
    "dn": [
        "uid=3Ddemo,ou=3Dpeople,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ],
    "objectclass": [
        "devicePrintProfilesContainer",
        "person",
        "sunIdentityServerLibertyPPService",
        "inetorgperson",
        "sunFederationManagerDataStore",
        "iPlanetPreferences",
        "iplanet-am-auth-configuration-service",
        "organizationalperson",
        "sunFMSAML2NameIdentifier",
        "inetuser",
        "forgerock-am-dashboard-service",
        "iplanet-am-managed-person",
        "iplanet-am-user-service",
        "sunAMAuthAccountLockout",
        "top"
    ],
    "universalid": [
        "id=3Ddemo,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ]
}</em></pre><p>
    Use the <code class=3D"literal">_fields</code> query string parameter t=
o restrict
    the list of attributes returned. This parameter takes a comma-separated=
 list
    of JSON object fields to include in the result:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --header "iPlanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/users/demo?_fields=3Dusername,=
uid</strong>
<em class=3D"computeroutput">{"username":"demo","uid":["demo"]}</em></pre><=
p>
    As shown in the examples, OpenAM returns the JSON representation of the
    profile on success. On failure, OpenAM returns a JSON representation of=
 the
    error including the
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>.
   </p><p>
    Using HTTP GET to read also works for other objects such as agent
    profiles and groups:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/agents/myAgent</strong>
<em class=3D"computeroutput">{
    "username": "myAgent",
    "realm": "/",
    "com.sun.identity.agents.config.fqdn.default": [
        "www.example.com"
    ],
    "com.sun.identity.agents.config.repository.location": [
        "centralized"
    ],
    "AgentType": [
        "WebAgent"
    ],
    "com.sun.identity.agents.config.login.url": [
        "[0]=3Dhttps://openam.example.com:8443/openam/UI/Login"
    ],
    "com.sun.identity.agents.config.login.url":
    [
        "[0]=3Dhttps://openam.example.com:8443/openam/UI/Login"
    ],
    "com.sun.identity.agents.config.logout.url":
    [
        "[0]=3Dhttps://openam.example.com:8443/openam/UI/Logout"
    ],
    "sunIdentityServerDeviceStatus": [
        "Active"
    ]
}</em></pre><div class=3D"panel panel-info"><div class=3D"panel-heading"><h=
3 class=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
     The command output above has been truncated to be more
     readable. When you read a policy agent profile, OpenAM returns the ful=
l
     profile in JSON format.
    </p></div></div><p>
    The <code class=3D"literal">_prettyPrint</code> query string parameter =
can make
    the resulting JSON easier to read when you are viewing the resulting JS=
ON
    directly:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --header "iPlanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/groups/newGroup?_prettyPrint=
=3Dtrue</strong>
<em class=3D"computeroutput">{
    "username": "newGroup",
    "realm": "dc=3Dopenam,dc=3Dforgerock,dc=3Dorg",
    "uniquemember": [
        "uid=3Ddemo,ou=3Dpeople,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ],
    "cn": [
        "newGroup"
    ],
    "dn": [
        "cn=3DnewGroup,ou=3Dgroups,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ],
    "objectclass": [
        "groupofuniquenames",
        "top"
    ],
    "universalid": [
        "id=3DnewGroup,ou=3Dgroup,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ]
}</em></pre></div><div class=3D"section" id=3D"rest-api-update-identity"><d=
iv class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#rest-api-update-identity">2.1.16.1.3.&nbsp;Updating Identities</a></h5>=
</div></div></div><p>
    OpenAM lets users update their own profiles, and lets administrators
    update other users' profiles. To update an identity do an HTTP PUT of t=
he JSON
    representation of the changes to <code class=3D"literal">/json/<em clas=
s=3D"replaceable">subrealm</em>/users/<em class=3D"replaceable">user-id</em=
></code>.
    To update a profile on the Top Level Realm, you do not need to specify =
the realm.
   </p><p>
    The following example shows how users can update their own
    profiles:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
 --request PUT \
 --header <span class=3D"hljs-string">"iplanetDirectoryPro: AQIC5...Y3MTAx*=
"</span> \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --data '{ <span class=3D"hljs-attr">"mail"</span>: <span class=3D"hljs-str=
ing">"demo@example.com"</span> }' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/u=
sers/demo</span>
 {
    <span class=3D"hljs-attr">"username"</span>: <span class=3D"hljs-string=
">"demo"</span>,
    <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string">"=
/"</span>,
    <span class=3D"hljs-attr">"uid"</span>: [
        <span class=3D"hljs-string">"demo"</span>
    ],
    <span class=3D"hljs-attr">"mail"</span>: [
        <span class=3D"hljs-string">"demo@example.com"</span>
    ],
    <span class=3D"hljs-attr">"sn"</span>: [
        <span class=3D"hljs-string">"demo"</span>
    ],
    <span class=3D"hljs-attr">"cn"</span>: [
        <span class=3D"hljs-string">"demo"</span>
    ],
    <span class=3D"hljs-attr">"inetuserstatus"</span>: [
        <span class=3D"hljs-string">"Active"</span>
    ],
    <span class=3D"hljs-attr">"dn"</span>: [
        <span class=3D"hljs-string">"uid=3Ddemo,ou=3Dpeople,dc=3Dopenam,dc=
=3Dforgerock,dc=3Dorg"</span>
    ],
    <span class=3D"hljs-attr">"objectclass"</span>: [
        <span class=3D"hljs-string">"person"</span>,
        <span class=3D"hljs-string">"sunIdentityServerLibertyPPService"</sp=
an>,
        <span class=3D"hljs-string">"sunFederationManagerDataStore"</span>,
        <span class=3D"hljs-string">"inetorgperson"</span>,
        <span class=3D"hljs-string">"iPlanetPreferences"</span>,
        <span class=3D"hljs-string">"iplanet-am-auth-configuration-service"=
</span>,
        <span class=3D"hljs-string">"organizationalperson"</span>,
        <span class=3D"hljs-string">"sunFMSAML2NameIdentifier"</span>,
        <span class=3D"hljs-string">"inetuser"</span>,
        <span class=3D"hljs-string">"iplanet-am-managed-person"</span>,
        <span class=3D"hljs-string">"sunAMAuthAccountLockout"</span>,
        <span class=3D"hljs-string">"iplanet-am-user-service"</span>,
        <span class=3D"hljs-string">"top"</span>
    ],
    <span class=3D"hljs-attr">"universalid"</span>: [
        <span class=3D"hljs-string">"id=3Ddemo,ou=3Duser,dc=3Dopenam,dc=3Df=
orgerock,dc=3Dorg"</span>
    ]
}</pre><p>
    As shown in the example, OpenAM returns the JSON representation of the
    profile on success. On failure, OpenAM returns a JSON representation of=
 the
    error including the
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>.
   </p><p>
    You can use HTTP PUT to update other objects as well,
    such as policy agent profiles and groups.
   </p><p>
    The following example updates a web policy agent profile:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
 --request PUT \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5...Y3MTAx*=
"</span> \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --data '{
      <span class=3D"hljs-attr">"sunIdentityServerDeviceStatus"</span> : [ =
<span class=3D"hljs-string">"Inactive"</span> ]
 }' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/a=
gents/myAgent?_prettyPrint=3Dtrue</span>
 {
     <span class=3D"hljs-attr">"username"</span>: <span class=3D"hljs-strin=
g">"myAgent"</span>,
     <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string">=
"/"</span>,
     <span class=3D"hljs-attr">"com.sun.identity.agents.config.fqdn.default=
"</span>: [
         <span class=3D"hljs-string">"www.example.com"</span>
     ],
     <span class=3D"hljs-attr">"com.sun.identity.agents.config.repository.l=
ocation"</span>: [
         <span class=3D"hljs-string">"centralized"</span>
     ],
     <span class=3D"hljs-attr">"AgentType"</span>: [
         <span class=3D"hljs-string">"WebAgent"</span>
     ],
     <span class=3D"hljs-attr">"com.sun.identity.agents.config.login.url"</=
span>: [
         <span class=3D"hljs-string">"[0]=3Dhttps://openam.example.com:8443=
/openam/UI/Login"</span>
     ],
     <span class=3D"hljs-attr">"com.sun.identity.agents.config.login.url"</=
span>:
     [
         <span class=3D"hljs-string">"[0]=3Dhttps://openam.example.com:8443=
/openam/UI/Login"</span>
     ],
     <span class=3D"hljs-attr">"com.sun.identity.agents.config.logout.url"<=
/span>:
     [
         <span class=3D"hljs-string">"[0]=3Dhttps://openam.example.com:8443=
/openam/UI/Logout"</span>
     ],
     <span class=3D"hljs-attr">"sunIdentityServerDeviceStatus"</span>: [
         <span class=3D"hljs-string">"Inactive"</span>
     ]
 }</pre><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cl=
ass=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
     The command output above has been truncated to be more
     readable. When you update a policy agent profile, OpenAM returns the f=
ull profile
     in JSON format.
    </p></div></div><p>
    Notice in the following example that updates <code class=3D"literal">ne=
wGroup</code>
    the object class value is not included in the JSON sent to OpenAM:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
 --request PUT \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5...Y3MTAx*=
"</span> \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --data '{
    <span class=3D"hljs-attr">"uniquemember"</span>:[
        <span class=3D"hljs-string">"uid=3DnewUser,ou=3Dpeople,dc=3Dopenam,=
dc=3Dforgerock,dc=3Dorg"</span>,
        <span class=3D"hljs-string">"uid=3Ddemo,ou=3Dpeople,dc=3Dopenam,dc=
=3Dforgerock,dc=3Dorg"</span>
    ]
 }' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/g=
roups/newGroup</span>
{
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"n=
ewGroup"</span>,
    <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string">"=
/"</span>,
    <span class=3D"hljs-attr">"uniqueMember"</span>: [
        <span class=3D"hljs-string">"uid=3DnewUser,ou=3Dpeople,dc=3Dopenam,=
dc=3Dforgerock,dc=3Dorg"</span>,
        <span class=3D"hljs-string">"uid=3Ddemo,ou=3Dpeople,dc=3Dopenam,dc=
=3Dforgerock,dc=3Dorg"</span>
    ],
    <span class=3D"hljs-attr">"cn"</span>: [
        <span class=3D"hljs-string">"newGroup"</span>
    ],
    <span class=3D"hljs-attr">"dn"</span>: [
        <span class=3D"hljs-string">"cn=3DnewGroup,ou=3Dgroups,dc=3Dopenam,=
dc=3Dforgerock,dc=3Dorg"</span>
    ],
    <span class=3D"hljs-attr">"objectclass"</span>: [
        <span class=3D"hljs-string">"groupofuniquenames"</span>,
        <span class=3D"hljs-string">"top"</span>
    ],
    <span class=3D"hljs-attr">"universalid"</span>: [
        <span class=3D"hljs-string">"id=3DnewGroup,ou=3Dgroup,dc=3Dopenam,d=
c=3Dforgerock,dc=3Dorg"</span>
    ]
}</pre></div><div class=3D"section" id=3D"rest-api-delete-identity"><div cl=
ass=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-delete-identity">2.1.16.1.4.&nbsp;Deleting Identities</a></h5></div=
></div></div><p>
    OpenAM lets administrators delete a user profile by making an HTTP DELE=
TE
    call to
    <code class=3D"literal">/json/<em class=3D"replaceable">subrealm</em>/u=
sers/<em class=3D"replaceable">user-id</em></code>.
    To delete a user from the Top Level Realm, you do not need to specify t=
he realm.
   </p><p>
    The following example removes a user from the top level
    realm. Only administrators should delete users. The user id is the only
    field required to delete a user:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request DELETE \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/users/bjensen</strong>
<em class=3D"computeroutput">{"success":"true"}</em></pre><p>
    On success, OpenAM returns a JSON object indicating success. On
    failure, OpenAM returns a JSON representation of the error including th=
e
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>.
   </p><p>
    You can use this same logic for other resources such as performing an
    HTTP DELETE of an agent profile or of a group:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request DELETE \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/agents/myOAuth2ClientAgent</st=
rong>
<em class=3D"computeroutput">{"success":"true"}</em></pre><div class=3D"zer=
o-clipboard hidden-xs hidden-print" title=3D"Copy command to clipboard"><sp=
an class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span><=
/div><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=3D"user=
input">curl \
 --request DELETE \
 --header "iPlanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/groups/newGroup</strong>
<em class=3D"computeroutput">{"success":"true"}</em></pre><div class=3D"pan=
el panel-info"><div class=3D"panel-heading"><h3 class=3D"panel-title">Note<=
/h3></div><div class=3D"panel-body"><p>
     Deleting a user does not automatically remove any of the user's sessio=
ns.
     If you are using stateful sessions, you can remove a user's sessions b=
y
     checking for any sessions for the user and then removing them using th=
e
     console's Sessions tab. If you are using stateless sessions, you canno=
t
     remove users' sessions; you must wait for the sessions to expire.
    </p></div></div></div><div class=3D"section" id=3D"rest-api-query-ident=
ity"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"sel=
f-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/=
index.html#rest-api-query-identity">2.1.16.1.5.&nbsp;Listing Identities</a>=
</h5></div></div></div><p>
    OpenAM lets administrators list identities by making an HTTP GET
    call to
    <code class=3D"literal">/json/<em class=3D"replaceable">subrealm</em>/u=
sers/?_queryId=3D*</code>. To query the Top Level Realm, you do not need
    to specify the realm:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
--header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5w...2NzEz*"=
</span> \
<span class=3D"hljs-string">"https://openam.example.com:8443/openam/json/us=
ers?_queryId=3D*"</span>
{
  <span class=3D"hljs-attr">"result"</span>: [
    {
      <span class=3D"hljs-attr">"username"</span>: <span class=3D"hljs-stri=
ng">"amAdmin"</span>,
      <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string"=
>"dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
      <span class=3D"hljs-attr">"sunIdentityMSISDNNumber"</span>: [],
      <span class=3D"hljs-attr">"mail"</span>: [],
      <span class=3D"hljs-attr">"sn"</span>: [
        <span class=3D"hljs-string">"amAdmin"</span>
      ],
      <span class=3D"hljs-attr">"givenName"</span>: [
        <span class=3D"hljs-string">"amAdmin"</span>
      ],
      <span class=3D"hljs-attr">"universalid"</span>: [
        <span class=3D"hljs-string">"id=3DamAdmin,ou=3Duser,dc=3Dopenam,dc=
=3Dforgerock,dc=3Dorg"</span>
      ],
      <span class=3D"hljs-attr">"cn"</span>: [
        <span class=3D"hljs-string">"amAdmin"</span>
      ],
      <span class=3D"hljs-attr">"iplanet-am-user-success-url"</span>: [],
      <span class=3D"hljs-attr">"telephoneNumber"</span>: [],
      <span class=3D"hljs-attr">"roles"</span>: [
        <span class=3D"hljs-string">"ui-global-admin"</span>,
        <span class=3D"hljs-string">"ui-realm-admin"</span>
      ],
      <span class=3D"hljs-attr">"iplanet-am-user-failure-url"</span>: [],
      <span class=3D"hljs-attr">"inetuserstatus"</span>: [
        <span class=3D"hljs-string">"Active"</span>
      ],
      <span class=3D"hljs-attr">"postalAddress"</span>: [],
      <span class=3D"hljs-attr">"dn"</span>: [
        <span class=3D"hljs-string">"uid=3DamAdmin,ou=3Dpeople,dc=3Dopenam,=
dc=3Dforgerock,dc=3Dorg"</span>
      ],
      <span class=3D"hljs-attr">"employeeNumber"</span>: [],
      <span class=3D"hljs-attr">"iplanet-am-user-alias-list"</span>: []
    },
    {
      <span class=3D"hljs-attr">"username"</span>: <span class=3D"hljs-stri=
ng">"demo"</span>,
      <span class=3D"hljs-attr">"realm"</span>: <span class=3D"hljs-string"=
>"dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
      <span class=3D"hljs-attr">"uid"</span>: [
        <span class=3D"hljs-string">"demo"</span>
      ],
      <span class=3D"hljs-attr">"createTimestamp"</span>: [
        <span class=3D"hljs-string">"20160108155628Z"</span>
      ],
      <span class=3D"hljs-attr">"inetUserStatus"</span>: [
        <span class=3D"hljs-string">"Active"</span>
      ],
      <span class=3D"hljs-attr">"mail"</span>: [
        <span class=3D"hljs-string">"demo.user@example.com"</span>
      ],
      <span class=3D"hljs-attr">"sn"</span>: [
        <span class=3D"hljs-string">"demo"</span>
      ],
      <span class=3D"hljs-attr">"cn"</span>: [
        <span class=3D"hljs-string">"demo"</span>
      ],
      <span class=3D"hljs-attr">"objectClass"</span>: [
        <span class=3D"hljs-string">"devicePrintProfilesContainer"</span>,
        <span class=3D"hljs-string">"person"</span>,
        <span class=3D"hljs-string">"sunIdentityServerLibertyPPService"</sp=
an>,
        <span class=3D"hljs-string">"sunFederationManagerDataStore"</span>,
        <span class=3D"hljs-string">"inetorgperson"</span>,
        <span class=3D"hljs-string">"oathDeviceProfilesContainer"</span>,
        <span class=3D"hljs-string">"iPlanetPreferences"</span>,
        <span class=3D"hljs-string">"iplanet-am-auth-configuration-service"=
</span>,
        <span class=3D"hljs-string">"sunFMSAML2NameIdentifier"</span>,
        <span class=3D"hljs-string">"organizationalperson"</span>,
        <span class=3D"hljs-string">"inetuser"</span>,
        <span class=3D"hljs-string">"kbaInfoContainer"</span>,
        <span class=3D"hljs-string">"forgerock-am-dashboard-service"</span>=
,
        <span class=3D"hljs-string">"iplanet-am-managed-person"</span>,
        <span class=3D"hljs-string">"iplanet-am-user-service"</span>,
        <span class=3D"hljs-string">"sunAMAuthAccountLockout"</span>,
        <span class=3D"hljs-string">"top"</span>
      ],
      <span class=3D"hljs-attr">"kbaInfo"</span>: [
        {
          <span class=3D"hljs-attr">"questionId"</span>: <span class=3D"hlj=
s-string">"2"</span>,
          <span class=3D"hljs-attr">"answer"</span>: {
            <span class=3D"hljs-attr">"$crypto"</span>: {
              <span class=3D"hljs-attr">"value"</span>: {
                <span class=3D"hljs-attr">"algorithm"</span>: <span class=
=3D"hljs-string">"SHA-256"</span>,
                <span class=3D"hljs-attr">"data"</span>: <span class=3D"hlj=
s-string">"VXGtsnjJMC...MQJ/goU5hkfF"</span>
              },
              <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-=
string">"salted-hash"</span>
            }
          }
        },
        {
          <span class=3D"hljs-attr">"questionId"</span>: <span class=3D"hlj=
s-string">"1"</span>,
          <span class=3D"hljs-attr">"answer"</span>: {
            <span class=3D"hljs-attr">"$crypto"</span>: {
              <span class=3D"hljs-attr">"value"</span>: {
                <span class=3D"hljs-attr">"algorithm"</span>: <span class=
=3D"hljs-string">"SHA-256"</span>,
                <span class=3D"hljs-attr">"data"</span>: <span class=3D"hlj=
s-string">"cfYYzi9U...rVfFl0Tdw0iX"</span>
              },
              <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-=
string">"salted-hash"</span>
            }
          }
        }
      ],
      <span class=3D"hljs-attr">"dn"</span>: [
        <span class=3D"hljs-string">"uid=3Ddemo,ou=3Dpeople,dc=3Dopenam,dc=
=3Dforgerock,dc=3Dorg"</span>
      ],
      <span class=3D"hljs-attr">"universalid"</span>: [
        <span class=3D"hljs-string">"id=3Ddemo,ou=3Duser,dc=3Dopenam,dc=3Df=
orgerock,dc=3Dorg"</span>
      ],
      <span class=3D"hljs-attr">"modifyTimestamp"</span>: [
        <span class=3D"hljs-string">"20160113010610Z"</span>
      ]
    }
  ],
  <span class=3D"hljs-attr">"resultCount"</span>: <span class=3D"hljs-numbe=
r">2</span>,
  <span class=3D"hljs-attr">"pagedResultsCookie"</span>: <span class=3D"hlj=
s-literal">null</span>,
  <span class=3D"hljs-attr">"totalPagedResultsPolicy"</span>: <span class=
=3D"hljs-string">"NONE"</span>,
  <span class=3D"hljs-attr">"totalPagedResults"</span>: <span class=3D"hljs=
-number">-1</span>,
  <span class=3D"hljs-attr">"remainingPagedResults"</span>: <span class=3D"=
hljs-number">-1</span>
}</pre><p>
    The <code class=3D"literal">users</code> endpoint also supports the <co=
de class=3D"literal">_queryFilter</code>
    parameter to alter the returned results.
    For more information, see <a class=3D"xref" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-filter-sort-pag=
e" title=3D"2.1.7.&nbsp;Filtering, Sorting, and Paging Results">"Filtering,=
 Sorting, and Paging Results"</a>.
   </p><p>
    The <code class=3D"literal">_queryId=3D*</code> parameter also works fo=
r other types of
    objects, such as agent profiles and groups:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --header "iPlanetDirectoryPro: AQIC5w...2NzEz*" \
 "https://openam.example.com:8443/openam/json/agents?_queryId=3D*"</strong>
<em class=3D"computeroutput">{
  "result" : [ "wsp", "wsc", "agentAuth", "SecurityTokenService" ],
  "resultCount" : 4,
  "pagedResultsCookie" : null,
  "remainingPagedResults" : -1
}</em></pre><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"C=
opy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighl=
ight">$ <strong class=3D"userinput">curl \
 --header "iPlanetDirectoryPro: AQIC5w...2NzEz*" \
 "https://openam.example.com:8443/openam/json/groups?_queryId=3D*"</strong>
<em class=3D"computeroutput">{
  "result" : [ "newGroup", "anotherGroup" ],
  "resultCount" : 2,
  "pagedResultsCookie" : null,
  "remainingPagedResults" : -1
}</em></pre><p>
    As the result lists include all objects, this capability to list
    identity names is mainly useful in testing.
   </p><p>
    As shown in the examples, OpenAM returns the JSON representation of
    the resource list if successful. On failure, OpenAM returns a JSON
    representation of the error including the
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>.
   </p></div><div class=3D"section" id=3D"rest-api-retrieve-identity-using-=
session-cookie"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a c=
lass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#rest-api-retrieve-identity-using-session-cookie">2.1.=
16.1.6.&nbsp;Retrieving Identities Using the Session Cookie</a></h5></div><=
/div></div><p>
    If you only have access to the <code class=3D"literal">iPlanetDirectory=
Pro</code>
    session cookie, you can retrieve the user ID by performing an HTTP POST
    operation on the <code class=3D"literal">/json/users</code>
    endpoint using the <code class=3D"literal">idFromSession</code> action:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --verbose \
 --request POST \
 --header "Content-Type: application/json" \
 --header "iplanetDirectoryPro: AQIC5wM2LY4SfczUFNs-TJwFrCVAKgR0NulIAyNaIkQ=
mjis.*AAJTSQACMDEA
 AlNLABQtNTQ3NDE2Njc5ODk4MjYzMzA2MQ..*" \
 http://openam.example.com:8080/openam/json/users?_action=3DidFromSession</=
strong>
<em class=3D"computeroutput">
{
  "id":"demo",
  "realm":"/",
  "dn":"id=3Ddemo,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg",
  "successURL":"/openam/console",
  "fullLoginURL":null
}</em></pre></div><div class=3D"section" id=3D"rest-api-change-password"><d=
iv class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#rest-api-change-password">2.1.16.1.7.&nbsp;Changing Passwords</a></h5><=
/div></div></div><a class=3D"indexterm" name=3D"d15472e9231"></a><a class=
=3D"indexterm" name=3D"d15472e9236"></a><p>
    <span class=3D"emphasis"><em>Users</em></span> other than the top-level=
 administrator
    can change their own passwords with an HTTP POST to
    <code class=3D"literal">/json/<em class=3D"replaceable">subrealm</em>/u=
sers/<em class=3D"replaceable">username</em>?_action=3DchangePassword</code=
>
    including the new password as the value of <code class=3D"literal">user=
password</code>
    in the request data.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
     Changing the top-level administrator's password requires a more comple=
x
     procedure. See <a href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/admin-guide/index.html#amadmin-changes" class=3D"olink">"Administering=
 the amadmin Account"</a> in the <em>Administration Guide</em>
     for more information.
    </p></div></div><p>
    Users must provide the current password, which is set in the request
    as the value of the <code class=3D"literal">currentpassword</code>.
   </p><p>
    For cases where users have forgotten their password, see
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#common-forgotten-username" title=3D"2.1.15.2.&nbsp=
;Retrieving Forgotten Usernames">"Retrieving Forgotten Usernames"</a> inste=
ad.
   </p><p>
    The following example shows a successful request to change the
    <code class=3D"literal">demo</code> user's password to <code class=3D"l=
iteral">password</code>:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "iPlanetDirectoryPro: AQIC5w...NTcy*" \
 --data '{
     "currentpassword":"changeit",
     "userpassword":"password"
 }' \
 https://openam.example.com:8443/openam/json/users/demo?_action=3DchangePas=
sword</strong>
<em class=3D"computeroutput">{}</em></pre><p>
    On success, the response is an empty JSON object {} as shown in the
    example.
   </p><p>
    On failure, OpenAM returns a JSON representation of the error including=
 the
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>. See also <a class=3D"xre=
f" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index=
.html#rest-api-status-codes" title=3D"2.1.12.&nbsp;REST Status Codes">"REST=
 Status Codes"</a>
    for more information.
   </p><p>
    <span class=3D"emphasis"><em>Administrators</em></span> can change non-=
administrative users'
    passwords with an HTTP PUT to
    <code class=3D"literal">/json/<em class=3D"replaceable">subrealm</em>/u=
sers/<em class=3D"replaceable">username</em></code>
    including the new password as the value of <code class=3D"literal">user=
password</code>
    in the request data.
   </p><p>
    Unlike users, administrators do not provide users' current passwords
    when changing passwords.
   </p><p>
    The following example shows a successful request by an administrator to
    change the <code class=3D"literal">demo</code> user's password to <code=
 class=3D"literal">cangetin</code>:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
 --request PUT \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5w...NTcy*"=
</span> \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --data '{
     <span class=3D"hljs-attr">"userpassword"</span>:<span class=3D"hljs-st=
ring">"cangetin"</span>
 }' \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/u=
sers/demo</span>
 {
    <span class=3D"hljs-attr">"username"</span>:<span class=3D"hljs-string"=
>"demo"</span>,
    <span class=3D"hljs-attr">"realm"</span>:<span class=3D"hljs-string">"/=
"</span>,
    <span class=3D"hljs-attr">"uid"</span>:[
        <span class=3D"hljs-string">"demo"</span>
    ],
    <span class=3D"hljs-attr">"universalid"</span>:[
        <span class=3D"hljs-string">"id=3Ddemo,ou=3Duser,dc=3Dexample,dc=3D=
com"</span>
    ],
    <span class=3D"hljs-attr">"objectClass"</span>:[
        <span class=3D"hljs-string">"iplanet-am-managed-person"</span>,
        <span class=3D"hljs-string">"inetuser"</span>,<span class=3D"hljs-s=
tring">"sunFederationManagerDataStore"</span>,
        <span class=3D"hljs-string">"sunFMSAML2NameIdentifier"</span>,
        <span class=3D"hljs-string">"devicePrintProfilesContainer"</span>,
        <span class=3D"hljs-string">"inetorgperson"</span>,
        <span class=3D"hljs-string">"sunIdentityServerLibertyPPService"</sp=
an>,
        <span class=3D"hljs-string">"iPlanetPreferences"</span>,
        <span class=3D"hljs-string">"iplanet-am-user-service"</span>,
        <span class=3D"hljs-string">"forgerock-am-dashboard-service"</span>=
,
        <span class=3D"hljs-string">"organizationalperson"</span>,
        <span class=3D"hljs-string">"top"</span>,
        <span class=3D"hljs-string">"sunAMAuthAccountLockout"</span>,
        <span class=3D"hljs-string">"person"</span>,
        <span class=3D"hljs-string">"oathDeviceProfilesContainer"</span>,
        <span class=3D"hljs-string">"iplanet-am-auth-configuration-service"=
</span>
    ],
    <span class=3D"hljs-attr">"inetUserStatus"</span>:[
        <span class=3D"hljs-string">"Active"</span>
    ],
    <span class=3D"hljs-attr">"dn"</span>:[
        <span class=3D"hljs-string">"uid=3Ddemo,ou=3Dpeople,dc=3Dexample,dc=
=3Dcom"</span>
    ],
    <span class=3D"hljs-attr">"sn"</span>:[
        <span class=3D"hljs-string">"demo"</span>
    ],
    <span class=3D"hljs-attr">"cn"</span>:[
        <span class=3D"hljs-string">"demo"</span>
    ],
    <span class=3D"hljs-attr">"modifyTimestamp"</span>:[
        <span class=3D"hljs-string">"20151006213634Z"</span>
    ],
    <span class=3D"hljs-attr">"createTimestamp"</span>:[
        <span class=3D"hljs-string">"20151005134244Z"</span>
    ]
}</pre><p>
    As shown in the example, OpenAM returns the JSON representation of the
    profile on success. On failure, OpenAM returns a JSON representation of=
 the
    error including the
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>. See also <a class=3D"xre=
f" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index=
.html#rest-api-status-codes" title=3D"2.1.12.&nbsp;REST Status Codes">"REST=
 Status Codes"</a>
    for more information.
   </p></div></div><div class=3D"section" id=3D"rest-api-crud-realm"><div c=
lass=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" hre=
f=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#=
rest-api-crud-realm">2.1.16.2.&nbsp;Realm Management</a></h4></div></div></=
div><a class=3D"indexterm" name=3D"d15472e9335"></a><p>
   This section shows how to create, read, update, and delete realms
   using the RESTful APIs:
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     Under the <code class=3D"literal">/json/realms</code> endpoint, you fi=
nd the
     newer JSON-based API:
    </p><div class=3D"itemizedlist"><p>The following sections cover this JS=
ON-based API.</p><ul class=3D"itemizedlist" style=3D"list-style-type: circl=
e; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-parameters-rea=
lm" title=3D"2.1.16.2.1.&nbsp;Default Parameters for Realms">"Default Param=
eters for Realms"</a></p></li><li class=3D"listitem"><p><a class=3D"xref" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#rest-api-create-realm" title=3D"2.1.16.2.2.&nbsp;Creating Realms">"Creati=
ng Realms"</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"=
https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-=
api-read-realm" title=3D"2.1.16.2.3.&nbsp;Reading Realms">"Reading Realms"<=
/a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-list-re=
alm" title=3D"2.1.16.2.4.&nbsp;Listing Realms">"Listing Realms"</a></p></li=
><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forg=
erock.com/docs/openam/13.5/dev-guide/index.html#rest-api-update-realm" titl=
e=3D"2.1.16.2.5.&nbsp;Updating Realms">"Updating Realms"</a></p></li><li cl=
ass=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.c=
om/docs/openam/13.5/dev-guide/index.html#rest-api-delete-realm" title=3D"2.=
1.16.2.6.&nbsp;Deleting Realms">"Deleting Realms"</a></p></li></ul></div></=
li></ul></div><div class=3D"section" id=3D"rest-api-parameters-realm"><div =
class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#rest-api-parameters-realm">2.1.16.2.1.&nbsp;Default Parameters for Realms<=
/a></h5></div></div></div><p>
    Realms have a number of fields entered with the default loading.
    The following table provides information on what the default realm sett=
ings are,
    and whether they can be updated, added, or deleted when updating
    a realm.
   </p><div class=3D"table" id=3D"realm-parameter"><div class=3D"table-titl=
e"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#realm-parameter">Realm Parameters for JSON-bas=
ed API</a></div><div class=3D"table-contents"><table xmlns:ng=3D"http://doc=
book.org/docbook-ng" xmlns:db=3D"http://docbook.org/ns/docbook" xmlns:exsl=
=3D"http://exslt.org/common" xmlns:exslt=3D"http://exslt.org/common" xmlns:=
doc=3D"http://nwalsh.com/xsl/documentation/1.0" xmlns:stbl=3D"http://nwalsh=
.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwalsh.xala=
n.Table" xmlns:lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"http://nw=
alsh.com/xslt/ext/xsltproc/python/Table" class=3D"table table-striped" summ=
ary=3D"Realm Parameters for JSON-based API" width=3D"100%" border=3D"0"><co=
lgroup><col width=3D"28%"><col width=3D"43%"><col width=3D"29%"></colgroup>=
<thead><tr><th>Realm Parameter</th><th>Default</th><th>Purpose</th></tr></t=
head><tbody><tr><td>realm</td><td>None - the only required field to add a r=
ealm</td><td><p>The name of the realm</p>
         <p>Example: <code class=3D"literal">myRealm</code></p></td></tr><t=
r><td>sunOrganizationStatus</td><td>Active</td><td><p>The status of the rea=
lm</p>
         <p><code class=3D"literal">Active</code> or <code class=3D"literal=
">Inactive</code></p></td></tr><tr><td>sunOrganizationAliases</td><td>None<=
/td><td>
         <p>
          Any applicable aliases associated with the realm. Be aware that
          an alias can only be used once. Entering an alias used by another=
 realm
          will remove the alias from that realm and you will lose configura=
tion.
         </p>

         <p>Example: <code class=3D"literal">opensso.example.com</code></p>=
</td></tr><tr><td>serviceNames</td><td><code class=3D"literal">sunAMAuthHOT=
PService</code>
        <code class=3D"literal">iPlanetAMAuthConfiguration</code>       =20
        <code class=3D"literal">sunAMAuthFederationService</code>
        <code class=3D"literal">sunIdentityRepositoryService</code>
        <code class=3D"literal">iPlanetAMPolicyConfigService</code>
        <code class=3D"literal">iPlanetAMAuthService</code>
        <code class=3D"literal">iPlanetAMAuthLDAPService</code>
        <code class=3D"literal">sunAMAuthDataStoreService</code>
        <code class=3D"literal">sunAMAuthSAEService</code>
        <code class=3D"literal">sunAMDelegationService</code>
        <code class=3D"literal">sunAMAuthWSSAuthModuleService</code>
        <code class=3D"literal">iPlanetAMAuthOATHService</code>
        </td><td>Services needed for the realm, including authentication mo=
dules</td></tr></tbody></table></div></div><br class=3D"table-break"></div>=
<div class=3D"section" id=3D"rest-api-create-realm"><div class=3D"titlepage=
"><div><div><h5 class=3D"title"><a class=3D"self-link" href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-create-r=
ealm">2.1.16.2.2.&nbsp;Creating Realms</a></h5></div></div></div><p>
    OpenAM lets administrators create a realm by making
    an HTTP POST of the JSON representation of the profile to
    <code class=3D"literal">/json/realms/?_action=3Dcreate</code>.
   </p><p>
    You can create realms using an HTTP POST of the JSON representation
    of the profile to <code class=3D"literal">/json/realms/?_action=3Dcreat=
e</code>, as shown in=20
    the following example. The only required data field is <code class=3D"l=
iteral">realm</code>:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 --data '{ "realm": "myRealm" }' \
 https://openam.example.com:8443/openam/json/realms/?_action=3Dcreate</stro=
ng>
<em class=3D"computeroutput">{"realmCreated":"/myRealm"}</em></pre><div cla=
ss=3D"panel panel-info"><div class=3D"panel-heading"><h3 class=3D"panel-tit=
le">Note</h3></div><div class=3D"panel-body"><p>
     Do not use the names of OpenAM REST endpoints as the name of a realm.
     The OpenAM REST endpoint names that should not be used includes: users=
,
     groups, realms, policies and applications.
    </p></div></div><p>
    You can also set the <code class=3D"literal">sunOrganizationAliases</co=
de> parameter,
    but it can only be assigned to one realm (usually the top level realm).=
 Before
    setting this parameter, make sure it is not already assigned elsewhere.=
 If you=20
    remove it from another realm, you will lose your configuration.
   </p><p>
    Alternatively, administrators can create realms by the specific realm
    name using the HTTP PUT of the JSON representation of the changes to=20
    <code class=3D"literal">/json/realms/<em class=3D"replaceable">realm-id=
</em></code>, as
    shown in the following example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request PUT \
 --header "If-None-Match: *" \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 --header "Content-Type: application/json" \
 --data '{ }' \
 https://openam.example.com:8443/openam/json/realms/myRealm</strong>
<em class=3D"computeroutput">
 {
  "realmCreated": "/myRealm"
 }
</em></pre><p>
    OpenAM returns an HTTP 201 Created status code, and the JSON representa=
tion
    of the realm on success. On failure, OpenAM returns a JSON representati=
on
    of the error including the
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>. For example, if the
     <code class=3D"literal">If-None-Match</code> header with a value of <c=
ode class=3D"literal">*</code>
     is absent, an HTTP 404 Not Found status code is returned.
   </p></div><div class=3D"section" id=3D"rest-api-read-realm"><div class=
=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest=
-api-read-realm">2.1.16.2.3.&nbsp;Reading Realms</a></h5></div></div></div>=
<p>
    OpenAM lets administrators read realms by requesting an HTTP GET on
    <code class=3D"literal">/json/realms/<em class=3D"replaceable">realm-id=
</em></code>. This
    allows administrators to review all active realm services for the realm=
,
    like policy configuration and modules. If users or administrators see m=
issing
    information (such as Active status) or incorrect information, they can =
write
    down the correct information and add it using
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-update-realm" title=3D"2.1.16.2.5.&nbsp;U=
pdating Realms">"Updating Realms"</a>.
   </p><p>
    The following example shows an administrator receiving information abou=
t
    a realm called <code class=3D"literal">myRealm</code>:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/realms/myRealm</strong>
<em class=3D"computeroutput">{
    "serviceNames":[
      "sunAMAuthHOTPService",
      "iPlanetAMAuthConfiguration",
      "sunAMAuthFederationService",
      "sunIdentityRepositoryService",
      "iPlanetAMPolicyConfigService",
      "iPlanetAMAuthService",
      "iPlanetAMAuthLDAPService",
      "sunAMAuthDataStoreService",
      "sunAMAuthSAEService",
      "sunAMDelegationService",
      "sunAMAuthWSSAuthModuleService",
      "iPlanetAMAuthOATHService"
    ]
}</em></pre><p>
    As shown in the example, OpenAM returns the JSON representation of the
    profile on success. On failure, OpenAM returns a JSON representation of=
 the
    error including the
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>.
   </p><p>
    To read the top-level realm,
    use <code class=3D"literal">toplevelrealm</code> with the
    <code class=3D"literal">realms</code> endpoint:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/realms/toplevelrealm</strong>
<em class=3D"computeroutput">{
      "serviceNames" : [
       "sunAMAuthFederationService",
       "sunEntitlementIndexes",
       "iPlanetAMAuthService",
       "sunAMAuthDataStoreService",
       "sunAMAuthWSSAuthModuleService",
       "sunAMDelegationService",
       "iPlanetAMAuthOATHService",
       "iPlanetAMAuthConfiguration",
       "sunAMAuthHOTPService",
       "sunIdentityRepositoryService",
       "iPlanetAMPolicyConfigService",
       "iPlanetAMAuthLDAPService",
       "sunEntitlementService",
       "iPlanetAMPolicyService",
       "sunAMAuthSAEService",
       "AgentService" ]
}</em></pre><p>
    If the realm you want to read is not an immediate subrealm of the top-l=
evel
    realm, specify its parent realm to the left of <code class=3D"literal">=
realms</code>
    in the URL, and specify the realm's final qualifier to the right of
    <code class=3D"literal">realms</code>. For example, to read the
    <code class=3D"literal">/myRealm/myRealmsChildRealm</code> realm:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/myRealm/realms/myRealmsChildRe=
alm</strong>
<em class=3D"computeroutput">{
      "serviceNames" : [
       "sunAMAuthHOTPService",
       "iPlanetAMAuthConfiguration",
       "sunAMAuthFederationService",
       "sunIdentityRepositoryService",
       "iPlanetAMPolicyConfigService",
       "iPlanetAMAuthService",
       "iPlanetAMAuthLDAPService",
       "sunAMAuthDataStoreService",
       "sunAMAuthSAEService",
       "sunAMDelegationService",
       "sunAMAuthWSSAuthModuleService",
       "iPlanetAMAuthOATHService"
      ]
}</em></pre></div><div class=3D"section" id=3D"rest-api-list-realm"><div cl=
ass=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#r=
est-api-list-realm">2.1.16.2.4.&nbsp;Listing Realms</a></h5></div></div></d=
iv><p>
    To list a realm and its subrealms, perform an HTTP GET on the endpoint,
    set the <code class=3D"literal">_queryFilter</code> query string parame=
ter
    as in the following example, which lists the top-level realm and all of
    its subrealms:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
> $ <strong class=3D"userinput">curl \
 --header "iPlanetDirectoryPro: AQIC5..." \
 https://openam.example.com:8443/openam/json/realms?_queryFilter=3Dtrue</st=
rong>
 <em class=3D"computeroutput">{
     "result" : [ "/", "/myRealm", "/myRealm/myRealmsChildRealm" ],
     "resultCount" : 3,
     "pagedResultsCookie" : null,
     "remainingPagedResults" : -1
 }</em></pre><p>
    You can start listing realms from below the top-level realm by placing =
the
    starting realm name in the URL. The following example lists the realm
    <code class=3D"literal">myRealm</code> and all of its subrealms:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --header "iPlanetDirectoryPro: AQIC5..." \
 https://openam.example.com:8443/openam/json/myRealm/realms?_queryFilter=3D=
true</strong>
 <em class=3D"computeroutput">{
     "result" : [ "/myRealm", "/myRealm/myRealmsChildRealm" ],
     "resultCount" : 2,
     "pagedResultsCookie" : null,
     "remainingPagedResults" : -1
 }</em></pre></div><div class=3D"section" id=3D"rest-api-update-realm"><div=
 class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#rest-api-update-realm">2.1.16.2.5.&nbsp;Updating Realms</a></h5></div></d=
iv></div><p>
    OpenAM lets administrators update realms. To update a realm, do an HTTP=
 PUT
    of the JSON representation of the changes to
    <code class=3D"literal">/json/realms/<em class=3D"replaceable">realm-id=
</em></code>.
   </p><p>
    The following example shows how to update a realm called
    <code class=3D"literal">myRealm</code>. The example command sets the re=
alm's
    status to Inactive:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request PUT \
 --header "iplanetDirectoryPro: AQIC5...Y3MTAx*" \
 --header "Content-Type: application/json" \
 --data '{ "sunOrganizationStatus": "Inactive" }' \
 https://openam.example.com:8443/openam/json/realms/myRealm</strong></pre><=
p>
    OpenAM returns the JSON representation of the
    profile on success. On failure, OpenAM returns a JSON representation of=
 the
    error including the
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>.
   </p></div><div class=3D"section" id=3D"rest-api-delete-realm"><div class=
=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest=
-api-delete-realm">2.1.16.2.6.&nbsp;Deleting Realms</a></h5></div></div></d=
iv><p>
    OpenAM lets administrators delete a realm by making an HTTP DELETE call=
 to
    <code class=3D"literal">/json/realms/<em class=3D"replaceable">realm-id=
</em></code>.
   </p><p>
    The following example deletes a realm called <code class=3D"literal">my=
Realm</code>.
    The top level realm cannot be deleted. Only administrators
    should delete realms. The name of the realm is the only field required =
to
    delete the realm.
   </p><p>
    Make sure that you do not have any information you need within a realm
    before deleting it. Once a realm is deleted, the only way to restore it=
 is=20
    to return to a backed up deployment of OpenAM:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request DELETE \
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/realms/myRealm</strong>
<em class=3D"computeroutput">{"success":"true"}</em></pre><p>
    On success, OpenAM returns a JSON object indicating success. On
    failure, OpenAM returns a JSON representation of the error including th=
e
    <a class=3D"link" href=3D"http://www.w3.org/Protocols/rfc2616/rfc2616-s=
ec10.html" target=3D"_blank">HTTP status code</a>.
   </p><p>
    If the realm you want to delete is not an immediate subrealm
    of the top-level realm,
    specify its parent realm to the left
    of <code class=3D"literal">realms</code> in the URL, and specify
    the realm's final qualifier to the
    right of <code class=3D"literal">realms</code>. For example,
    to delete the <code class=3D"literal">/myRealm/myRealmsChildRealm</code=
> realm:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
> $ <strong class=3D"userinput">curl \
 --request DELETE
 --header "iplanetDirectoryPro: AQIC5w...2NzEz*" \
 https://openam.example.com:8443/openam/json/myRealm/realms/myRealmsChildRe=
alm</strong>
 <em class=3D"computeroutput">{ "success":"true" }</em></pre></div></div></=
div><div class=3D"section" id=3D"sec-manage-scripts-rest"><div class=3D"tit=
lepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-manage-=
scripts-rest">2.1.17.&nbsp;RESTful Script Management</a></h3></div></div></=
div><a class=3D"indexterm" name=3D"d15472e9706"></a><p>This section shows y=
ou how to manage scripts used for client-side and
  server-side scripted authentication, custom policy conditions, and handli=
ng
  OpenID Connect claims by using the REST API.</p><p>For information on man=
aging scripts by using the OpenAM
  console, see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
admin-guide/index.html#chap-manage-scripts" class=3D"olink">"Managing Scrip=
ts"</a> in the <em>Administration Guide</em>. For information on configurin=
g script
    settings, see <a href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/reference/index.html#scripting-configuration" class=3D"olink">"Scripting=
"</a> in the <em>Reference</em>.</p><div class=3D"itemizedlist"><p>OpenAM p=
rovides the <code class=3D"literal">scripts</code> REST endpoint
    for the following:</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-scripts=
-query" title=3D"2.1.17.1.&nbsp;Querying Scripts">"Querying Scripts"</a></p=
></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage=
.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-scripts-read"=
 title=3D"2.1.17.2.&nbsp;Reading a Script">"Reading a Script"</a></p></li><=
li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#rest-api-scripts-validate" ti=
tle=3D"2.1.17.3.&nbsp;Validating a Script">"Validating a Script"</a></p></l=
i><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.for=
gerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-scripts-create" t=
itle=3D"2.1.17.4.&nbsp;Creating a Script">"Creating a Script"</a></p></li><=
li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#rest-api-scripts-update" titl=
e=3D"2.1.17.5.&nbsp;Updating a Script">"Updating a Script"</a></p></li><li =
class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#rest-api-scripts-delete" title=
=3D"2.1.17.6.&nbsp;Deleting a Script">"Deleting a Script"</a></p></li></ul>=
</div><p>
   User-created scripts are realm-specific, hence the URI for the scripts' =
API
   can contain a realm component, such as
   <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/scr=
ipts</code>.
   If the realm is not specified in the URI, the top level realm is
   used.</p><div class=3D"panel panel-success"><div class=3D"panel-heading"=
><h3 class=3D"panel-title">Tip</h3></div><div class=3D"panel-body"><p>OpenA=
M includes some global example scripts that can be
 used in any realm.</p></div></div><p>
   Scripts are represented in JSON and take the following form.
   Scripts are built from standard JSON objects and values
   (strings, numbers, objects, sets, arrays, <code class=3D"literal">true</=
code>,
   <code class=3D"literal">false</code>, and <code class=3D"literal">null</=
code>). Each script
   has a system-generated <em class=3D"firstterm">universally unique
   identifier</em> (UUID), which must be used when modifying
   existing scripts. Renaming a script will not affect the UUID:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint json hlj=
s">{
    <span class=3D"hljs-attr">"_id"</span>: <span class=3D"hljs-string">"7e=
3d7067-d50f-4674-8c76-a3e13a810c33"</span>,
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"S=
cripted Module - Server Side"</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"Default global script for server side Scripted Authentication Module"=
</span>,
    <span class=3D"hljs-attr">"script"</span>: <span class=3D"hljs-string">=
"dmFyIFNUQVJUX1RJ..."</span>,
    <span class=3D"hljs-attr">"language"</span>: <span class=3D"hljs-string=
">"JAVASCRIPT"</span>,
    <span class=3D"hljs-attr">"context"</span>: <span class=3D"hljs-string"=
>"AUTHENTICATION_SERVER_SIDE"</span>,
    <span class=3D"hljs-attr">"createdBy"</span>: <span class=3D"hljs-strin=
g">"id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</span>,
    <span class=3D"hljs-attr">"creationDate"</span>: <span class=3D"hljs-nu=
mber">1433147666269</span>,
    <span class=3D"hljs-attr">"lastModifiedBy"</span>: <span class=3D"hljs-=
string">"id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"</spa=
n>,
    <span class=3D"hljs-attr">"lastModifiedDate"</span>: <span class=3D"hlj=
s-number">1433147666269</span>
}</pre><div class=3D"variablelist"><p>
    The values for the fields shown in the example above are explained belo=
w:
   </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"l=
iteral">_id</code></span></dt><dd><p>
      The UUID that OpenAM generates for the script.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">name</code><=
/span></dt><dd><p>
      The name provided for the script.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">description<=
/code></span></dt><dd><p>
      An optional text string to help identify the script.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">script</code=
></span></dt><dd><p>
      The source code of the script. The source code is in UTF-8 format
      and encoded into Base64.
     </p><p>For example, a script such as the following:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint JavaS=
cript hljs"><span class=3D"hljs-keyword">var</span> a =3D <span class=3D"hl=
js-number">123</span>;
<span class=3D"hljs-keyword">var</span> b =3D <span class=3D"hljs-number">4=
56</span>;</pre><p>When encoded into Base64 becomes:</p><div class=3D"zero-=
clipboard hidden-xs hidden-print" title=3D"Copy code to clipboard"><span cl=
ass=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></span></=
div><pre class=3D"codelisting prettyprint JavaScript hljs">dmFyIGEgPSAxMjM7=
IA0KdmFyIGIgPSA0NTY7</pre></dd><dt><span class=3D"term"><code class=3D"lite=
ral">language</code></span></dt><dd><p>
          The language the script is written in - <code class=3D"literal">J=
AVASCRIPT</code>
          or <code class=3D"literal">GROOVY</code>.
         </p><div class=3D"table" id=3D"d15472e9825"><div class=3D"table-ti=
tle"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#d15472e9825">Language Support per Context</a=
></div><div class=3D"table-contents"><table xmlns:ng=3D"http://docbook.org/=
docbook-ng" xmlns:db=3D"http://docbook.org/ns/docbook" xmlns:exsl=3D"http:/=
/exslt.org/common" xmlns:exslt=3D"http://exslt.org/common" xmlns:doc=3D"htt=
p://nwalsh.com/xsl/documentation/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/=
ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwalsh.xalan.Table" x=
mlns:lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/x=
slt/ext/xsltproc/python/Table" class=3D"table table-striped" summary=3D"Lan=
guage Support per Context" border=3D"0"><colgroup><col class=3D"c1" width=
=3D"50%"><col class=3D"c2" width=3D"50%"></colgroup><thead><tr><th>Script C=
ontext</th><th>Supported Languages</th></tr></thead><tbody><tr><td><code cl=
ass=3D"literal">POLICY_CONDITION</code></td><td><code class=3D"literal">JAV=
ASCRIPT</code>, <code class=3D"literal">GROOVY</code></td></tr><tr><td><cod=
e class=3D"literal">AUTHENTICATION_SERVER_SIDE</code></td><td><code class=
=3D"literal">JAVASCRIPT</code>, <code class=3D"literal">GROOVY</code></td><=
/tr><tr><td><code class=3D"literal">AUTHENTICATION_CLIENT_SIDE</code></td><=
td><code class=3D"literal">JAVASCRIPT</code></td></tr><tr><td><code class=
=3D"literal">OIDC_CLAIMS</code></td><td><code class=3D"literal">JAVASCRIPT<=
/code>, <code class=3D"literal">GROOVY</code></td></tr></tbody></table></di=
v></div><br class=3D"table-break"></dd><dt><span class=3D"term"><code class=
=3D"literal">context</code></span></dt><dd><p>
      The context type of the script.
     </p><p>Supported values are:</p><div class=3D"variablelist"><dl class=
=3D"variablelist"><dt><span class=3D"term"><code class=3D"literal">POLICY_C=
ONDITION</code></span></dt><dd><p>Policy Condition</p></dd><dt><span class=
=3D"term"><code class=3D"literal">AUTHENTICATION_SERVER_SIDE</code></span><=
/dt><dd><p>Server-side Authentication</p></dd><dt><span class=3D"term"><cod=
e class=3D"literal">AUTHENTICATION_CLIENT_SIDE</code></span></dt><dd><p>Cli=
ent-side Authentication</p><div class=3D"panel panel-info"><div class=3D"pa=
nel-heading"><h3 class=3D"panel-title">Note</h3></div><div class=3D"panel-b=
ody"><p>Client-side scripts must be written in JavaScript.</p></div></div><=
/dd><dt><span class=3D"term"><code class=3D"literal">OIDC_CLAIMS</code></sp=
an></dt><dd><p>OIDC Claims</p></dd></dl></div></dd><dt><span class=3D"term"=
><code class=3D"literal">createdBy</code></span></dt><dd><p>
      A string containing the universal identifier DN of the subject that
      created the script.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">creationDate=
</code></span></dt><dd><p>
      An integer containing the creation date and time, in ISO 8601 format.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">lastModified=
By</code></span></dt><dd><p>
      A string containing the universal identifier DN of the subject that
      most recently updated the resource type.
     </p><p>If the script has not been modified since it was
      created, this property will have the same value as
      <code class=3D"literal">createdBy</code>.</p></dd><dt><span class=3D"=
term"><code class=3D"literal">lastModifiedDate</code></span></dt><dd><p>
      A string containing the last modified date and time, in ISO 8601 form=
at.
     </p><p>If the script has not been modified since it was
      created, this property will have the same value as <code class=3D"lit=
eral">creationDate</code>.
     </p></dd></dl></div><div class=3D"section" id=3D"rest-api-scripts-quer=
y"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-=
link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#rest-api-scripts-query">2.1.17.1.&nbsp;Querying Scripts</a></h4></=
div></div></div><p>
    To list all the scripts in a realm, as well as any global scripts, perf=
orm
    an HTTP GET to the <code class=3D"literal">/json{<em class=3D"replaceab=
le">/realm</em>}/scripts</code>
    endpoint with a <code class=3D"literal">_queryFilter</code> parameter
    set to <code class=3D"literal">true</code>.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM returns
    scripts in the top level realm, as well as any global scripts.</p></div=
></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/myrealm/scripts?_queryFilter=3D=
true</strong>
<em class=3D"computeroutput">{
  "result": [
    {
      "_id": "9de3eb62-f131-4fac-a294-7bd170fd4acb",
      "name": "Scripted Policy Condition",
      "description": "Default global script for Scripted Policy Conditions"=
,
      "script": "LyoqCiAqIFRoaXMg...",
      "language": "JAVASCRIPT",
      "context": "POLICY_CONDITION",
      "createdBy": "id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=
=3Dorg",
      "creationDate": 1433147666269,
      "lastModifiedBy": "id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgeroc=
k,dc=3Dorg",
      "lastModifiedDate": 1433147666269
    },
    {
      "_id": "7e3d7067-d50f-4674-8c76-a3e13a810c33",
      "name": "Scripted Module - Server Side",
      "description": "Default global script for server side Scripted Authen=
tication Module",
      "script": "dmFyIFNUQVJUX1RJ...",
      "language": "JAVASCRIPT",
      "context": "AUTHENTICATION_SERVER_SIDE",
      "createdBy": "id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=
=3Dorg",
      "creationDate": 1433147666269,
      "lastModifiedBy": "id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgeroc=
k,dc=3Dorg",
      "lastModifiedDate": 1433147666269
    }
  ],
  "resultCount": 2,
  "pagedResultsCookie": null,
  "remainingPagedResults": -1
}</em></pre><p>
    Additional query strings can be specified to alter the returned results=
.
    For more information, see <a class=3D"xref" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-filter-sort-pag=
e" title=3D"2.1.7.&nbsp;Filtering, Sorting, and Paging Results">"Filtering,=
 Sorting, and Paging Results"</a>.
   </p><div class=3D"table" id=3D"d15472e9995"><div class=3D"table-title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#d15472e9995">Supported _queryFilter Fields and
     Operators</a></div><div class=3D"table-contents"><table xmlns:ng=3D"ht=
tp://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.org/ns/docbook" xml=
ns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http://exslt.org/common"=
 xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" xmlns:stbl=3D"http:/=
/nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwal=
sh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"ht=
tp://nwalsh.com/xslt/ext/xsltproc/python/Table" class=3D"table table-stripe=
d" summary=3D"Supported _queryFilter Fields and
     Operators" border=3D"0"><colgroup><col width=3D"50%"><col width=3D"50%=
"></colgroup><thead><tr><th>Field</th><th>Supported Operators</th></tr></th=
ead><tbody><tr><td><code class=3D"literal">_id</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr><tr><td><code class=3D"literal">name</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr><tr><td><code class=3D"literal">description</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr><tr><td><code class=3D"literal">script</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr><tr><td><code class=3D"literal">language</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr><tr><td><code class=3D"literal">context</code></td><td>
       Equals (<code class=3D"literal">eq</code>),
       Contains (<code class=3D"literal">co</code>),
       Starts with (<code class=3D"literal">sw</code>)
      </td></tr></tbody></table></div></div><br class=3D"table-break"></div=
><div class=3D"section" id=3D"rest-api-scripts-read"><div class=3D"titlepag=
e"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-scripts=
-read">2.1.17.2.&nbsp;Reading a Script</a></h4></div></div></div><p>
    To read an individual script in a realm, perform an HTTP
    GET using the <code class=3D"literal">/json{<em class=3D"replaceable">/=
realm</em>}/scripts</code>
    endpoint, specifying the UUID in the URL.
   </p><div class=3D"panel panel-success"><div class=3D"panel-heading"><h3 =
class=3D"panel-title">Tip</h3></div><div class=3D"panel-body"><p>To read a =
script in the top-level realm, or to read a built-in
    global script, do not specify a realm in the URL.</p></div></div><p lan=
g=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/myrealm/scripts/9de3eb62-f131-4=
fac-a294-7bd170fd4acb</strong>
<em class=3D"computeroutput">{
    "_id": "9de3eb62-f131-4fac-a294-7bd170fd4acb",
    "name": "Scripted Policy Condition",
    "description": "Default global script for Scripted Policy Conditions",
    "script": "LyoqCiAqIFRoaXMg...",
    "language": "JAVASCRIPT",
    "context": "POLICY_CONDITION",
    "createdBy": "id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3D=
org",
    "creationDate": 1433147666269,
    "lastModifiedBy": "id=3Ddsameuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,=
dc=3Dorg",
    "lastModifiedDate": 1433147666269
}</em></pre></div><div class=3D"section" id=3D"rest-api-scripts-validate"><=
div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link=
" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#rest-api-scripts-validate">2.1.17.3.&nbsp;Validating a Script</a></h4>=
</div></div></div><p>
    To validate a script, perform an HTTP POST using the
    <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/sc=
ripts</code>
    endpoint, with an <code class=3D"literal">_action</code> parameter
    set to <code class=3D"literal">validate</code>. Include a JSON represen=
tation of the
    script and the script language, <code class=3D"literal">JAVASCRIPT</cod=
e> or
    <code class=3D"literal">GROOVY</code>, in the POST data.
   </p><p>The value for <code class=3D"literal">script</code> must be in UT=
F-8 format and
    then encoded into Base64.</p><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iPlanetDirectoryPro: AQIC5..." \
--data '{
    "script": "dmFyIGEgPSAxMjM7dmFyIGIgPSA0NTY7Cg=3D=3D",
    "language": "JAVASCRIPT"
}' \
https://openam.example.com:8443/openam/json/myrealm/scripts/?_action=3Dvali=
date</strong>
<em class=3D"computeroutput">{
  "success": true
}</em></pre><p>If the script is valid the JSON response contains a
     <code class=3D"literal">success</code> key with a value of
     <code class=3D"literal">true</code>.</p><p>If the script is invalid th=
e JSON response contains a
     <code class=3D"literal">success</code> key with a value of
     <code class=3D"literal">false</code>, and an indication of the problem=
 and where it
     occurs, as shown below:</p><div class=3D"zero-clipboard hidden-xs hidd=
en-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdli=
ne"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline=
 prettyprint nohighlight">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iPlanetDirectoryPro: AQIC5..." \
--data '{
    "script": "dmFyIGEgPSAxMjM7dmFyIGIgPSA0NTY7ID1WQUxJREFUSU9OIFNIT1VMRCBG=
QUlMPQo=3D",
    "language": "JAVASCRIPT"
}' \
https://openam.example.com:8443/openam/json/myrealm/scripts/?_action=3Dvali=
date</strong>
<em class=3D"computeroutput">{
    "success": false,
    "errors": [
        {
            "line": 1,
            "column": 27,
            "message": "syntax error"
        }
    ]
}</em></pre></div><div class=3D"section" id=3D"rest-api-scripts-create"><di=
v class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#rest-api-scripts-create">2.1.17.4.&nbsp;Creating a Script</a></h4></div>=
</div></div><p>
    To create a script in a realm, perform an HTTP POST using the
    <code class=3D"literal">/json{<em class=3D"replaceable">/realm</em>}/sc=
ripts</code>
    endpoint, with an <code class=3D"literal">_action</code> parameter
    set to <code class=3D"literal">create</code>. Include a JSON representa=
tion of the
    script in the POST data.
   </p><p>The value for <code class=3D"literal">script</code> must be in UT=
F-8 format and
    then encoded into Base64.</p><div class=3D"panel panel-info"><div class=
=3D"panel-heading"><h3 class=3D"panel-title">Note</h3></div><div class=3D"p=
anel-body"><p>If the realm is not specified in the URL, OpenAM creates the
    script in the top level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iPlanetDirectoryPro: AQIC5..." \
--data '{
    "name": "MyJavaScript",
    "script": "dmFyIGEgPSAxMjM7CnZhciBiID0gNDU2Ow=3D=3D",
    "language": "JAVASCRIPT",
    "context": "POLICY_CONDITION",
    "description": "An example script"
}' \
https://openam.example.com:8443/openam/json/myrealm/scripts/?_action=3Dcrea=
te</strong>
<em class=3D"computeroutput">{
    "_id": "0168d494-015a-420f-ae5a-6a2a5c1126af",
    "name": "MyJavaScript",
    "description": "An example script",
    "script": "dmFyIGEgPSAxMjM7CnZhciBiID0gNDU2Ow=3D=3D",
    "language": "JAVASCRIPT",
    "context": "POLICY_CONDITION",
    "createdBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dor=
g",
    "creationDate": 1436807766258,
    "lastModifiedBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=
=3Dorg",
    "lastModifiedDate": 1436807766258
}</em></pre></div><div class=3D"section" id=3D"rest-api-scripts-update"><di=
v class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#rest-api-scripts-update">2.1.17.5.&nbsp;Updating a Script</a></h4></div>=
</div></div><p>
    To update an individual script in a realm, perform an HTTP
    PUT using the <code class=3D"literal">/json{<em class=3D"replaceable">/=
realm</em>}/scripts
   </code> endpoint, specifying the UUID in both the URL and the PUT body.
    Include a JSON representation of the updated script in the PUT
    data, alongside the UUID.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--header "iPlanetDirectoryPro: AQIC5..." \
--header "Content-Type: application/json" \
--request PUT \
--data '{
    "name": "MyUpdatedJavaScript",
    "script": "dmFyIGEgPSAxMjM7CnZhciBiID0gNDU2Ow=3D=3D",
    "language": "JAVASCRIPT",
    "context": "POLICY_CONDITION",
    "description": "An updated example script configuration"
}' \
https://openam.example.com:8443/openam/json/myrealm/scripts/0168d494-015a-4=
20f-ae5a-6a2a5c1126af</strong>
<em class=3D"computeroutput">{
    "_id": "0168d494-015a-420f-ae5a-6a2a5c1126af",
    "name": "MyUpdatedJavaScript",
    "description": "An updated example script configuration",
    "script": "dmFyIGEgPSAxMjM7CnZhciBiID0gNDU2Ow=3D=3D",
    "language": "JAVASCRIPT",
    "context": "POLICY_CONDITION",
    "createdBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dor=
g",
    "creationDate": 1436807766258,
    "lastModifiedBy": "id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=
=3Dorg",
    "lastModifiedDate": 1436808364681
}</em></pre></div><div class=3D"section" id=3D"rest-api-scripts-delete"><di=
v class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#rest-api-scripts-delete">2.1.17.6.&nbsp;Deleting a Script</a></h4></div>=
</div></div><p>
    To delete an individual script in a realm, perform an HTTP
    DELETE using the <code class=3D"literal">/json{<em class=3D"replaceable=
">/realm</em>}/scripts</code>
    endpoint, specifying the UUID in the URL.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>If the realm=
 is not specified in the URL, OpenAM uses the top
    level realm.</p></div></div><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">curl \
--request DELETE \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/myrealm/scripts/0168d494-015a-4=
20f-ae5a-6a2a5c1126af</strong>
<em class=3D"computeroutput">{}</em></pre></div></div><div lang=3D"en" clas=
s=3D"section" id=3D"sec-rest-api-recording"><div class=3D"titlepage"><div><=
div><h3 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.fo=
rgerock.com/docs/openam/13.5/dev-guide/index.html#sec-rest-api-recording">2=
.1.18.&nbsp;RESTful Troubleshooting Information Recording</a></h3></div></d=
iv></div><a class=3D"indexterm" name=3D"d15472e10305"></a><p>
   This section shows you how to start, stop, and get the
   status of a troubleshooting recording event using the REST API.
  </p><div class=3D"itemizedlist"><p>
    OpenAM provides the <code class=3D"literal">/json/records</code> REST e=
ndpoint
    for the following:
   </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li cla=
ss=3D"listitem"><p>
     <span class=3D"bold"><strong>Starting a recording event.</strong></spa=
n>
     See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#rest-api-records-start" title=3D"2.1.18.1.&nb=
sp;Starting a Recording Event">"Starting a Recording Event"</a>.
    </p></li><li class=3D"listitem"><p>
     <span class=3D"bold"><strong>Getting the status of a recording event.<=
/strong></span>
     See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#rest-api-records-get-status" title=3D"2.1.18.=
2.&nbsp;Getting the Status of a Recording Event">"Getting the Status of a R=
ecording Event"</a>.
    </p></li><li class=3D"listitem"><p>
     <span class=3D"bold"><strong>Stopping a recording event.</strong></spa=
n>
     See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#rest-api-records-stop" title=3D"2.1.18.3.&nbs=
p;Stopping a Recording Event">"Stopping a Recording Event"</a>.
    </p></li></ul></div><p>
   You must authenticate to OpenAM as an administrative user to obtain an S=
SO
   token prior to calling the <code class=3D"literal">/json/records</code> =
REST endpoint.
   You then pass the SSO token in the <code class=3D"literal">iPlanetDirect=
oryPro</code>
   header as proof of authentication.
  </p><p>
   You can also record troubleshooting information by using the
   <span class=3D"command"><strong>ssoadm</strong></span> command. For more=
 information, see
   <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#recording" class=3D"olink">"Recording Troubleshooting Informatio=
n"</a> in the <em>Administration Guide</em>.
  </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 clas=
s=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
    The <span class=3D"command"><strong>curl</strong></span> command output=
 in the examples in this section
    is indented for ease of reading. The actual output is
    <span class=3D"emphasis"><em>not</em></span> indented, and the actions =
available from the
    <code class=3D"literal">/json/records</code> endpoint do not support th=
e
    <code class=3D"literal">_prettyPrint</code> parameter.
   </p></div></div><div class=3D"section" id=3D"rest-api-records-start"><di=
v class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#rest-api-records-start">2.1.18.1.&nbsp;Starting a Recording Event</a></h=
4></div></div></div><p>
    To start a recording event, perform an HTTP POST using the
    <code class=3D"literal">/json/records</code> endpoint, specifying the
    <code class=3D"literal">_action=3Dstart</code> parameter in the URL. Sp=
ecify a JSON
    payload identical in format to the input file for the
    <span class=3D"command"><strong>ssoadm start-recording</strong></span> =
command, as described in
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide=
/index.html#recording-json" class=3D"olink">"The Recording Control File"</a=
> in the <em>Administration Guide</em>:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint json hl=
js">$ curl \
--request POST \
--header <span class=3D"hljs-string">"Content-Type: application/json"</span=
> \
--header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span>=
 \
--data ' {
  <span class=3D"hljs-attr">"issueID"</span>: <span class=3D"hljs-number">1=
03572</span>,
  <span class=3D"hljs-attr">"referenceID"</span>: <span class=3D"hljs-strin=
g">"policyEvalFails"</span>,
  <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-strin=
g">"Troubleshooting artifacts in support of case 103572"</span>,
  <span class=3D"hljs-attr">"zipEnable"</span>: <span class=3D"hljs-literal=
">true</span>,
  <span class=3D"hljs-attr">"configExport"</span>: {
   <span class=3D"hljs-attr">"enable"</span>: <span class=3D"hljs-literal">=
true</span>,
   <span class=3D"hljs-attr">"password"</span>: <span class=3D"hljs-string"=
>"5x2RR70"</span>,
   <span class=3D"hljs-attr">"sharePassword"</span>: <span class=3D"hljs-li=
teral">false</span>
  },
  <span class=3D"hljs-attr">"debugLogs"</span>: {
   <span class=3D"hljs-attr">"debugLevel"</span>: <span class=3D"hljs-strin=
g">"MESSAGE"</span>,
   <span class=3D"hljs-attr">"autoStop"</span>: {
    <span class=3D"hljs-attr">"time"</span>:  {
     <span class=3D"hljs-attr">"timeUnit"</span>: <span class=3D"hljs-strin=
g">"SECONDS"</span>,
     <span class=3D"hljs-attr">"value"</span>: <span class=3D"hljs-number">=
15</span>
    },
    <span class=3D"hljs-attr">"fileSize"</span>: {
     <span class=3D"hljs-attr">"sizeUnit"</span>: <span class=3D"hljs-strin=
g">"GB"</span>,
     <span class=3D"hljs-attr">"value"</span>: <span class=3D"hljs-number">=
1</span>
    }
   }
  },
  <span class=3D"hljs-attr">"threadDump"</span> : {
   <span class=3D"hljs-attr">"enable"</span>: <span class=3D"hljs-literal">=
true</span>,
   <span class=3D"hljs-attr">"delay"</span> :  {
    <span class=3D"hljs-attr">"timeUnit"</span>: <span class=3D"hljs-string=
">"SECONDS"</span>,
    <span class=3D"hljs-attr">"value"</span>: <span class=3D"hljs-number">5=
</span>
   }
  }
 }' \
https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/re=
cords?_action=3Dstart</span>
{
 <span class=3D"hljs-attr">"recording"</span>:<span class=3D"hljs-literal">=
true</span>,
 <span class=3D"hljs-attr">"record"</span>:{
  <span class=3D"hljs-attr">"issueID"</span>:<span class=3D"hljs-number">10=
3572</span>,
  <span class=3D"hljs-attr">"referenceID"</span>:<span class=3D"hljs-string=
">"policyEvalFails"</span>,
  <span class=3D"hljs-attr">"description"</span>:<span class=3D"hljs-string=
">"Troubleshooting artifacts in support of case 103572"</span>,
  <span class=3D"hljs-attr">"zipEnable"</span>:<span class=3D"hljs-literal"=
>true</span>,
  <span class=3D"hljs-attr">"threadDump"</span>:{
   <span class=3D"hljs-attr">"enable"</span>:<span class=3D"hljs-literal">t=
rue</span>,
   <span class=3D"hljs-attr">"delay"</span>:{
    <span class=3D"hljs-attr">"timeUnit"</span>:<span class=3D"hljs-string"=
>"SECONDS"</span>,
    <span class=3D"hljs-attr">"value"</span>:<span class=3D"hljs-number">5<=
/span>
   }
  },
  <span class=3D"hljs-attr">"configExport"</span>:{
   <span class=3D"hljs-attr">"enable"</span>:<span class=3D"hljs-literal">t=
rue</span>,
   <span class=3D"hljs-attr">"password"</span>:<span class=3D"hljs-string">=
"xxxxxx"</span>,
   <span class=3D"hljs-attr">"sharePassword"</span>:<span class=3D"hljs-lit=
eral">false</span>
  },
  <span class=3D"hljs-attr">"debugLogs"</span>:{
   <span class=3D"hljs-attr">"debugLevel"</span>:<span class=3D"hljs-string=
">"message"</span>,
   <span class=3D"hljs-attr">"autoStop"</span>:{
    <span class=3D"hljs-attr">"time"</span>:{
     <span class=3D"hljs-attr">"timeUnit"</span>:<span class=3D"hljs-string=
">"MILLISECONDS"</span>,
     <span class=3D"hljs-attr">"value"</span>:<span class=3D"hljs-number">1=
5000</span>
    },
    <span class=3D"hljs-attr">"fileSize"</span>:{
     <span class=3D"hljs-attr">"sizeUnit"</span>:<span class=3D"hljs-string=
">"KB"</span>,
     <span class=3D"hljs-attr">"value"</span>:<span class=3D"hljs-number">1=
048576</span>
    }
   }
  },
  <span class=3D"hljs-attr">"status"</span>:<span class=3D"hljs-string">"RU=
NNING"</span>,
  <span class=3D"hljs-attr">"folder"</span>:<span class=3D"hljs-string">"/o=
pt/demo/openam/config/openam/debug/record/103572/policyEvalFails/"</span>
 }
}</pre></div><div class=3D"section" id=3D"rest-api-records-get-status"><div=
 class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#rest-api-records-get-status">2.1.18.2.&nbsp;Getting the Status of a Recor=
ding Event</a></h4></div></div></div><p>
    To get the status of a recording event, perform an HTTP POST using the
    <code class=3D"literal">/json/records</code> endpoint, specifying the
    <code class=3D"literal">_action=3Dstatus</code> parameter in the URL:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/records?_action=3Dstatus</stron=
g></pre><p>
    If there is no active recording event, the following output appears:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
><em class=3D"computeroutput">{
  "recording":false
}</em></pre><p>
    If there is an active recording event, output similar to the following
    appears:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
><em class=3D"computeroutput">{
 "recording":true,
 "record":{
  "issueID":103572,
  "referenceID":"policyEvalFails",
  "description":"Troubleshooting artifacts in support of case 103572",
  "zipEnable":true,
  "threadDump":{
   "enable":true,
   "delay":{
    "timeUnit":"SECONDS",
    "value":5
   }
  },
  "configExport":{
   "enable":true,
   "password":"xxxxxx",
   "sharePassword":false
  },
  "debugLogs":{
   "debugLevel":"message",
   "autoStop":{
    "time":{
     "timeUnit":"MILLISECONDS",
     "value":15000
    },
    "fileSize":{
     "sizeUnit":"KB",
     "value":1048576
    }
   }
  },
  "status":"RUNNING",
  "folder":"/opt/demo/openam/config/openam/debug/record/103572/policyEvalFa=
ils/"
 }
}</em></pre></div><div class=3D"section" id=3D"rest-api-records-stop"><div =
class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#rest-api-records-stop">2.1.18.3.&nbsp;Stopping a Recording Event</a></h4><=
/div></div></div><p>
    To stop a recording event, perform an HTTP POST using the
    <code class=3D"literal">/json/records</code> endpoint, specifying the
    <code class=3D"literal">_action=3Dstop</code> parameter in the URL:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
--request POST \
--header "iPlanetDirectoryPro: AQIC5..." \
https://openam.example.com:8443/openam/json/records?_action=3Dstop</strong>=
</pre><p>
    If there is no active recording event, OpenAM returns a 400 error code.
   </p><p>
    If there is an active recording event, output similar to the following
    appears:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
><em class=3D"computeroutput">{
 "recording":false,
 "record":{
  "issueID":103572,
  "referenceID":"policyEvalFails",
  "description":"Troubleshooting artifacts in support of case 103572",
  "zipEnable":true,
  "threadDump":{
   "enable":true,
   "delay":{
    "timeUnit":"SECONDS",
    "value":5
   }
  },
  "configExport":{
   "enable":true,
   "password":"xxxxxx",
   "sharePassword":false
  },
  "debugLogs":{
   "debugLevel":"message",
   "autoStop":{
    "time":{
     "timeUnit":"MILLISECONDS",
     "value":15000
    },
    "fileSize":{
     "sizeUnit":"KB",
     "value":1048576
    }
   }
  },
  "status":"STOPPED",
  "folder":"/opt/demo/openam/config/openam/debug/record/103572/policyEvalFa=
ils/"
 }
}</em></pre></div></div></div><div class=3D"section" id=3D"sec-sdk"><div cl=
ass=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a cl=
ass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#sec-sdk">2.2.&nbsp;Using the OpenAM Java SDK</a></h2><=
/div></div></div><p>This section introduces OpenAM Java SDK. OpenAM Java SD=
K is delivered
  with the full version of OpenAM,
  <code class=3D"filename">OpenAM-13.5.2.zip</code>.</p><div class=3D"secti=
on" id=3D"install-sdk-samples"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#install-sdk-samples">2.2.1.&nbsp;Insta=
lling OpenAM Client SDK Samples</a></h3></div></div></div><a class=3D"index=
term" name=3D"d15472e10452"></a><p>The full OpenAM download,
   <code class=3D"filename">OpenAM-13.5.2.zip</code>, contains the Java Cli=
ent
   SDK library, <code class=3D"filename">ClientSDK-13.5.2.jar</code>, as we=
ll as
   samples for use on the command line in
   <code class=3D"filename">ExampleClientSDK-CLI-13.5.2.zip</code>, and sam=
ples in a
   web application, <code class=3D"filename">ExampleClientSDK-WAR-13.5.2.wa=
r</code>.
   The <a class=3D"link" href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/apidocs" target=3D"_blank"><em class=3D"citetitle">OpenAM Java
    SDK API Specification</em></a> provides a reference to the public
   APIs.</p><div class=3D"procedure" id=3D"deploy-client-sdk-war"><div clas=
s=3D"procedure-inner"><div class=3D"procedure-title"><a class=3D"self-link"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#deploy-client-sdk-war">To Deploy the Sample Web Application</a></div><p=
>The sample web application deploys in your container to show you
    the client SDK samples in action.</p><ol class=3D"procedure" type=3D"1"=
><li class=3D"step"><p>Deploy the .war in your Java web application contain=
er such as
     Apache Tomcat or JBoss.</p><div class=3D"zero-clipboard hidden-xs hidd=
en-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdli=
ne"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline=
 prettyprint nohighlight">$ <strong class=3D"userinput">cp ExampleClientSDK=
-WAR-13.5.2.war /path/to/tomcat/webapps/client.war</strong></pre></li><li c=
lass=3D"step"><p>
     If you have run this procedure before, make sure to deploy a fresh
     copy of the .war file to a different location, such as
     <code class=3D"filename">/path/to/tomcat/webapps/client1.war</code>
    </p></li><li class=3D"step"><p>Browse to the location where you deploye=
d the client, and configure
     the application to access OpenAM using the application user name,
     <code class=3D"literal">UrlAccessAgent</code>, and password configured=
 when you set up
     OpenAM.</p><div class=3D"mediaobject" align=3D"center" id=3D"figure-co=
nfig-client-sdk-war"><a class=3D"fancybox cboxElement" href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/images/config-client-sdk-war=
.png"><img class=3D"img-responsive center-block" data-toggle=3D"tooltip" sr=
c=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thum=
b_config-client-sdk-war.png" align=3D"middle" height=3D"311" alt=3D"Sample =
web app configuration screen" title=3D"" data-original-title=3D"The sample =
web application configuration screen lets you
      configure access to OpenAM."></a></div><div class=3D"variablelist"><p=
>Use the following hints to complete the configuration.</p><dl class=3D"var=
iablelist"><dt><span class=3D"term">Server Protocol</span></dt><dd><p>Proto=
col to access OpenAM (<code class=3D"literal">http</code> or
        <code class=3D"literal">https</code>)</p></dd><dt><span class=3D"te=
rm">Server Host</span></dt><dd><p>Fully qualified domain name for OpenAM, s=
uch as
        <code class=3D"literal">openam.example.com</code></p></dd><dt><span=
 class=3D"term">Server Port</span></dt><dd><p>OpenAM port number such as 80=
80 or 8443</p></dd><dt><span class=3D"term">Server Deployment URI</span></d=
t><dd><p>URI entry point to OpenAM such as <code class=3D"literal">/openam<=
/code></p></dd><dt><span class=3D"term">Debug directory</span></dt><dd><p>W=
here to write the debug messages for the client samples</p></dd><dt><span c=
lass=3D"term">Application user name</span></dt><dd><p>An user agent configu=
red to access OpenAM, such as
        <code class=3D"literal">UrlAccessAgent</code> set up when OpenAM wa=
s installed</p></dd><dt><span class=3D"term">Application user password</spa=
n></dt><dd><p>The user agent password</p></dd></dl></div><p>The sample clie=
nt writes configuration information under
     <code class=3D"filename">$HOME/OpenAMClient/</code>, where $HOME is th=
at of the user
     running the web application container.</p></li><li class=3D"step"><p>V=
erify that you have properly configured the sample web application.</p><ol =
type=3D"a" class=3D"substeps"><li class=3D"step"><p>In another browser tab =
page of the same browser instance, login to
       OpenAM as the OpenAM Administrator, <code class=3D"literal">amadmin<=
/code>.</p><p>This signs you into OpenAM, storing the cookie in your browse=
r.</p></li><li class=3D"step"><p>On the Samples tab page, click the link un=
der Single Sign On Token
       Verification Servlet.</p><p>If the sample web application is properl=
y configured, you should
       see something like the following text in your browser.</p><div class=
=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to clipboard"=
><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span>=
</span></div><pre class=3D"codelisting prettyprint none hljs yaml"><span cl=
ass=3D"hljs-attr">SSOToken host name:</span> <span class=3D"hljs-number">12=
7.0</span><span class=3D"hljs-number">.0</span><span class=3D"hljs-number">=
.1</span>
<span class=3D"hljs-attr">SSOToken Principal name:</span> <span class=3D"hl=
js-string">id=3Damadmin,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg</span=
>
<span class=3D"hljs-attr">Authentication type used:</span> <span class=3D"h=
ljs-string">DataStore</span>
<span class=3D"hljs-attr">IPAddress of the host:</span> <span class=3D"hljs=
-number">127.0</span><span class=3D"hljs-number">.0</span><span class=3D"hl=
js-number">.1</span>
<span class=3D"hljs-string">SSO</span> <span class=3D"hljs-string">Token</s=
pan> <span class=3D"hljs-string">validation</span> <span class=3D"hljs-stri=
ng">test</span> <span class=3D"hljs-string">succeeded</span>
<span class=3D"hljs-string">The</span> <span class=3D"hljs-string">token</s=
pan> <span class=3D"hljs-string">id</span> <span class=3D"hljs-string">is</=
span> <span class=3D"hljs-string">AQIC5...CMDEAAlNLABQtODY0Mjc5MDUwNDQzOTA2=
MzYxNg..*</span>
<span class=3D"hljs-string">...</span>
<span class=3D"hljs-attr">User Attributes:</span> <span class=3D"hljs-strin=
g">{...</span> <span class=3D"hljs-string">givenName=3D[amAdmin],</span> <s=
pan class=3D"hljs-string">...roles=3D[Top-level</span> <span class=3D"hljs-=
string">Admin</span> <span class=3D"hljs-string">Role],</span> <span class=
=3D"hljs-string">...}</span></pre></li></ol></li></ol></div></div><div clas=
s=3D"procedure" id=3D"build-cli-samples"><div class=3D"procedure-inner"><di=
v class=3D"procedure-title"><a class=3D"self-link" href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#build-cli-samples">To=
 Build the Command-Line Sample Applications</a></div><p>Follow these steps =
to set up the command-line examples.</p><ol class=3D"procedure" type=3D"1">=
<li class=3D"step"><p>Unpack the sample applications and related libraries.=
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">mkdir sdk &amp;&amp; cd sdk</strong>
$ <strong class=3D"userinput">unzip ~/Downloads/ExampleClientSDK-CLI-13.5.2=
.zip</strong></pre></li><li class=3D"step"><p>Configure the samples to acce=
ss OpenAM.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D=
"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D=
"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohig=
hlight">$ <strong class=3D"userinput">sh scripts/setup.sh</strong>
<em class=3D"computeroutput">Debug directory (make sure this directory exis=
ts):</em> <strong class=3D"userinput">/Users/me/openam/openam/debug</strong=
>
<em class=3D"computeroutput">Application user (e.g. URLAccessAgent) passwor=
d:</em> <strong class=3D"userinput">secret12</strong>
<em class=3D"computeroutput">Protocol of the server:</em> <strong class=3D"=
userinput">http</strong>
<em class=3D"computeroutput">Host name of the server:</em> <strong class=3D=
"userinput">openam.example.com</strong>
<em class=3D"computeroutput">Port of the server:</em> <strong class=3D"user=
input">8080</strong>
<em class=3D"computeroutput">Server's deployment URI:</em> <strong class=3D=
"userinput">openam</strong>
<em class=3D"computeroutput">Naming URL (hit enter to accept default value,
      http://openam.example.com:8080/openam/namingservice):</em>
$</pre></li><li class=3D"step"><p>Verify that you have properly configured =
the samples.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=
=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint no=
highlight">$ <strong class=3D"userinput">sh scripts/Login.sh</strong>
<em class=3D"computeroutput">Realm (e.g. /):</em> <strong class=3D"userinpu=
t">/</strong>
<em class=3D"computeroutput">Login module name (e.g. DataStore or LDAP):</e=
m> <strong class=3D"userinput">DataStore</strong>
<em class=3D"computeroutput">Login locale (e.g. en_US or fr_FR):</em> <stro=
ng class=3D"userinput">fr_FR</strong>
<em class=3D"computeroutput">DataStore: Obtained login context</em>
<em class=3D"computeroutput">Nom d'utilisateur :</em><strong class=3D"useri=
nput">demo</strong>
<em class=3D"computeroutput">Mot de passe :</em><strong class=3D"userinput"=
>changeit</strong>
<em class=3D"computeroutput">Login succeeded.
Logged Out!!</em></pre></li></ol></div></div></div><div class=3D"section" i=
d=3D"about-sdk"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a c=
lass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#about-sdk">2.2.2.&nbsp;About the OpenAM Java SDK</a><=
/h3></div></div></div><div class=3D"itemizedlist"><p>After installing the J=
ava SDK command line samples, you see the
    following content.</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><code class=3D"filename">lib/</code>:=
 SDK and other libraries</p></li><li class=3D"listitem"><p><code class=3D"f=
ilename">resources/</code>: properties configuration files for
     the SDK and samples</p></li><li class=3D"listitem"><p><code class=3D"f=
ilename">scripts/</code>: scripts to run the samples</p></li><li class=3D"l=
istitem"><p><code class=3D"filename">source/</code>: sample code</p></li></=
ul></div><p>After deploying the Java SDK web application archive, you find =
the
   following content where the .war file was unpacked.</p><div class=3D"ite=
mizedlist"><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li=
 class=3D"listitem"><p><code class=3D"filename">META-INF/</code>: build inf=
ormation</p></li><li class=3D"listitem"><p><code class=3D"filename">WEB-INF=
/</code>: sample classes and libraries</p></li><li class=3D"listitem"><p><c=
ode class=3D"filename">console/</code>: images for sample UI</p></li><li cl=
ass=3D"listitem"><p><code class=3D"filename">index.html</code>: sample home=
 page</p></li><li class=3D"listitem"><p><code class=3D"filename">keystore.j=
ks</code>: OpenAM test certificate, alias:
     <code class=3D"literal">test</code>, keystore password: <code class=3D=
"literal">changeit</code></p></li><li class=3D"listitem"><p><code class=3D"=
filename">policy/</code>: Policy Evaluator Client Sample page</p></li><li c=
lass=3D"listitem"><p><code class=3D"filename">saml2/</code>: Secure Attribu=
te Exchange example</p></li><li class=3D"listitem"><p><code class=3D"filena=
me">sample.css</code>: sample styles</p></li><li class=3D"listitem"><p><cod=
e class=3D"filename">sm/</code>: Service Configuration sample</p></li><li c=
lass=3D"listitem"><p><code class=3D"filename">um/</code>: User Profile samp=
le</p></li></ul></div><div class=3D"itemizedlist" id=3D"sdk-shutdown-hooks"=
><div class=3D"itemizedlist-title">Registering Your Java SDK Client to Shut=
 Down Gracefully</div><p>When writing a client using the OpenAM Java SDK, m=
ake sure you register
    hooks to make sure the application can be shut down gracefully. How you
    register for shutdown depends on the type of application.</p><ul class=
=3D"itemizedlist" style=3D"list-style-type: disc; "><li class=3D"listitem">=
<p>For Java EE applications, make sure the OpenAM client SDK shuts down
     successfully by including the following context listener in your
     application's <code class=3D"filename">web.xml</code> file.</p><div cl=
ass=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to clipboa=
rd"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></sp=
an></span></div><pre class=3D"codelisting prettyprint xml hljs"><span class=
=3D"hljs-tag">&lt;<span class=3D"hljs-name">listener</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">listener-class</sp=
an>&gt;</span>
     com.sun.identity.common.ShutdownServletContextListener
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">listener-class</s=
pan>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">listener</span>&gt;=
</span></pre></li><li class=3D"listitem"><p>For standalone applications, se=
t the following JVM property.</p><pre class=3D"literallayout">-Dopenam.runt=
ime.shutdown.hook.enabled=3Dtrue</pre></li></ul></div></div><div class=3D"s=
ection" id=3D"sec-authentication"><div class=3D"titlepage"><div><div><h3 cl=
ass=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#sec-authentication">2.2.3.&nbsp;Aut=
henticating Using OpenAM Java SDK</a></h3></div></div></div><a class=3D"ind=
exterm" name=3D"d15472e10804"></a><p>This section looks at authentication w=
ith the OpenAM Java SDK and at the
 sample client, <code class=3D"filename">Login.java</code>, which demonstra=
tes
 authenticating to OpenAM from a client application, provided a realm, user
 name, and password. This is the sample you ran to test installation of the
 command-line SDK samples. The class shown in this section is
 <code class=3D"literal">com.sun.identity.samples.authentication.Login</cod=
e>.</p><p>Before you continue, make sure that the packages described in
  <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#install-sdk-samples" title=3D"2.2.1.&nbsp;Installing=
 OpenAM Client SDK Samples">"Installing OpenAM Client SDK Samples"</a> are =
installed.</p><div class=3D"orderedlist"><p>With OpenAM, your client applic=
ation performs the following steps
  to handle authentication.</p><ol class=3D"orderedlist" type=3D"1"><li cla=
ss=3D"listitem"><p>Sets up an <code class=3D"literal">AuthContext</code>, b=
ased on the realm in
   which the user authenticates.</p></li><li class=3D"listitem"><p>Starts t=
he login process by calling the <code class=3D"literal">AuthContext</code>
   <code class=3D"literal">login()</code> method.</p></li><li class=3D"list=
item"><p>Handling authentication callbacks to retrieve credentials from the
   user who is authenticating.</p><p>Your application loops through the aut=
hentication callbacks by using
   the <code class=3D"literal">AuthContext</code> <code class=3D"literal">g=
etRequirements()</code> and
   <code class=3D"literal">hasMoreRequirements()</code> methods. Each time =
it finishes
   populating a callback with the credentials retrieved, your application c=
alls
   <code class=3D"literal">submitRequirements()</code> to send the credenti=
als to
   OpenAM's Authentication Service.</p></li><li class=3D"listitem"><p>After=
 handling all authentication callbacks, your application
   calls the <code class=3D"literal">AuthContext</code> <code class=3D"lite=
ral">getStatus()</code>
   method.</p><p>On login success, OpenAM sets up an SSO token that
   holds information about the authentication, and also about the user's
   environment and session.</p></li><li class=3D"listitem"><p>When the user=
 logs out, your application can end the session by
   calling the <code class=3D"literal">AuthContext</code> <code class=3D"li=
teral">logout()</code>
   method.</p></li></ol></div><p>The <code class=3D"literal">AuthContext</c=
ode> class is provided by the
 <code class=3D"literal">com.sun.identity.authentication</code> package, pa=
rt of the
 OpenAM client API. Callback classes are provided by the
 <code class=3D"literal">javax.security.auth.callback</code> package, which=
 provides
 callbacks for choices, confirmations, locales, names, passwords, text inpu=
t,
 and text output.</p><p>See the <a class=3D"link" href=3D"https://backstage=
.forgerock.com/docs/openam/13.5/apidocs" target=3D"_blank"><em class=3D"cit=
etitle">OpenAM Public API JavaDoc</em></a> for
 reference.</p><p>As the sample client gets the realm (called organization =
in the sample),
 locale, and authentication module to set up the authentication context,
 there is not need for a language callback to get the local afterwards. The
 <code class=3D"filename">Login.java</code> example does, however, show sim=
ple ways of
 handling callbacks for the command-line context. The implementation of
 the sample client follows.</p><div class=3D"zero-clipboard hidden-xs hidde=
n-print" title=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisti=
ng"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"codelis=
ting prettyprint java hljs"><span class=3D"hljs-keyword">package</span> com=
.sun.identity.samples.authentication;
<span class=3D"hljs-keyword">import</span> java.io.BufferedReader;
<span class=3D"hljs-keyword">import</span> java.io.InputStreamReader;
<span class=3D"hljs-keyword">import</span> java.io.IOException;
<span class=3D"hljs-keyword">import</span> javax.security.auth.callback.Cal=
lback;
<span class=3D"hljs-keyword">import</span> javax.security.auth.callback.Cho=
iceCallback;
<span class=3D"hljs-keyword">import</span> javax.security.auth.callback.Nam=
eCallback;
<span class=3D"hljs-keyword">import</span> javax.security.auth.callback.Pas=
swordCallback;
<span class=3D"hljs-keyword">import</span> javax.security.auth.callback.Tex=
tInputCallback;
<span class=3D"hljs-keyword">import</span> javax.security.auth.callback.Tex=
tOutputCallback;
<span class=3D"hljs-keyword">import</span> javax.security.auth.callback.Uns=
upportedCallbackException;
<span class=3D"hljs-keyword">import</span> com.sun.identity.authentication.=
AuthContext;
<span class=3D"hljs-keyword">import</span> com.sun.identity.authentication.=
spi.AuthLoginException;
<span class=3D"hljs-keyword">import</span> com.sun.identity.shared.debug.De=
bug;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-class"><span=
 class=3D"hljs-keyword">class</span> <span class=3D"hljs-title">Login</span=
> </span>{
    <span class=3D"hljs-keyword">private</span> String loginIndexName;
    <span class=3D"hljs-keyword">private</span> String orgName;
    <span class=3D"hljs-keyword">private</span> String locale;
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-title">Login</span><span class=3D"hljs-params">(Stri=
ng loginIndexName, String orgName)</span> </span>{
        <span class=3D"hljs-keyword">this</span>.loginIndexName =3D loginIn=
dexName;
        <span class=3D"hljs-keyword">this</span>.orgName =3D orgName;
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-title">Login</span><span class=3D"hljs-params">(Stri=
ng loginIndexName, String orgName, String locale)</span> </span>{
        <span class=3D"hljs-keyword">this</span>.loginIndexName =3D loginIn=
dexName;
        <span class=3D"hljs-keyword">this</span>.orgName =3D orgName;
        <span class=3D"hljs-keyword">this</span>.locale =3D locale;
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">protected</s=
pan> AuthContext <span class=3D"hljs-title">getAuthContext</span><span clas=
s=3D"hljs-params">()</span>
        <span class=3D"hljs-keyword">throws</span> AuthLoginException </spa=
n>{
        AuthContext lc =3D <span class=3D"hljs-keyword">new</span> AuthCont=
ext(orgName);
        AuthContext.IndexType indexType =3D AuthContext.IndexType.MODULE_IN=
STANCE;
        <span class=3D"hljs-keyword">if</span> (locale =3D=3D <span class=
=3D"hljs-keyword">null</span> || locale.length() =3D=3D <span class=3D"hljs=
-number">0</span>) {
            lc.login(indexType, loginIndexName);
        } <span class=3D"hljs-keyword">else</span> {
            lc.login(indexType, loginIndexName, locale);
        }
        debugMessage(loginIndexName + <span class=3D"hljs-string">": Obtain=
ed login context"</span>);
        <span class=3D"hljs-keyword">return</span> lc;
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">addL=
oginCallbackMessage</span><span class=3D"hljs-params">(Callback[] callbacks=
)</span>
    <span class=3D"hljs-keyword">throws</span> UnsupportedCallbackException=
 </span>{
        <span class=3D"hljs-keyword">int</span> i =3D <span class=3D"hljs-n=
umber">0</span>;
        <span class=3D"hljs-keyword">try</span> {
            <span class=3D"hljs-keyword">for</span> (i =3D <span class=3D"h=
ljs-number">0</span>; i &lt; callbacks.length; i++) {
                <span class=3D"hljs-keyword">if</span> (callbacks[i] <span =
class=3D"hljs-keyword">instanceof</span> TextOutputCallback) {
                    handleTextOutputCallback((TextOutputCallback)callbacks[=
i]);
                } <span class=3D"hljs-keyword">else</span> <span class=3D"h=
ljs-keyword">if</span> (callbacks[i] <span class=3D"hljs-keyword">instanceo=
f</span> NameCallback) {
                    handleNameCallback((NameCallback)callbacks[i]);
                } <span class=3D"hljs-keyword">else</span> <span class=3D"h=
ljs-keyword">if</span> (callbacks[i] <span class=3D"hljs-keyword">instanceo=
f</span> PasswordCallback) {
                    handlePasswordCallback((PasswordCallback)callbacks[i]);
                } <span class=3D"hljs-keyword">else</span> <span class=3D"h=
ljs-keyword">if</span> (callbacks[i] <span class=3D"hljs-keyword">instanceo=
f</span> TextInputCallback) {
                    handleTextInputCallback((TextInputCallback)callbacks[i]=
);
                } <span class=3D"hljs-keyword">else</span> <span class=3D"h=
ljs-keyword">if</span> (callbacks[i] <span class=3D"hljs-keyword">instanceo=
f</span> ChoiceCallback) {
                    handleChoiceCallback((ChoiceCallback)callbacks[i]);
                }
            }
        } <span class=3D"hljs-keyword">catch</span> (IOException e) {
            e.printStackTrace();
            <span class=3D"hljs-keyword">throw</span> <span class=3D"hljs-k=
eyword">new</span> UnsupportedCallbackException(callbacks[i],e.getMessage()=
);
        }
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">hand=
leTextOutputCallback</span><span class=3D"hljs-params">(TextOutputCallback =
toc)</span> </span>{
        debugMessage(<span class=3D"hljs-string">"Got TextOutputCallback"</=
span>);
        <span class=3D"hljs-comment">// display the message according to th=
e specified type</span>
       =20
        <span class=3D"hljs-keyword">switch</span> (toc.getMessageType()) {
            <span class=3D"hljs-keyword">case</span> TextOutputCallback.INF=
ORMATION:
                debugMessage(toc.getMessage());
                <span class=3D"hljs-keyword">break</span>;
            <span class=3D"hljs-keyword">case</span> TextOutputCallback.ERR=
OR:
                debugMessage(<span class=3D"hljs-string">"ERROR: "</span> +=
 toc.getMessage());
                <span class=3D"hljs-keyword">break</span>;
            <span class=3D"hljs-keyword">case</span> TextOutputCallback.WAR=
NING:
                debugMessage(<span class=3D"hljs-string">"WARNING: "</span>=
 + toc.getMessage());
                <span class=3D"hljs-keyword">break</span>;
            <span class=3D"hljs-keyword">default</span>:
                debugMessage(<span class=3D"hljs-string">"Unsupported messa=
ge type: "</span> +
                    toc.getMessageType());
        }
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">hand=
leNameCallback</span><span class=3D"hljs-params">(NameCallback nc)</span>
        <span class=3D"hljs-keyword">throws</span> IOException </span>{
        <span class=3D"hljs-comment">// prompt the user for a username</spa=
n>
        System.out.print(nc.getPrompt());
        System.out.flush();
        nc.setName((<span class=3D"hljs-keyword">new</span> BufferedReader
            (<span class=3D"hljs-keyword">new</span> InputStreamReader(Syst=
em.in))).readLine());
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">hand=
leTextInputCallback</span><span class=3D"hljs-params">(TextInputCallback ti=
c)</span>
        <span class=3D"hljs-keyword">throws</span> IOException </span>{
        <span class=3D"hljs-comment">// prompt for text input</span>
        System.out.print(tic.getPrompt());
        System.out.flush();
        tic.setText((<span class=3D"hljs-keyword">new</span> BufferedReader
            (<span class=3D"hljs-keyword">new</span> InputStreamReader(Syst=
em.in))).readLine());
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">hand=
lePasswordCallback</span><span class=3D"hljs-params">(PasswordCallback pc)<=
/span>
        <span class=3D"hljs-keyword">throws</span> IOException </span>{
        <span class=3D"hljs-comment">// prompt the user for sensitive infor=
mation</span>
        System.out.print(pc.getPrompt());
        System.out.flush();
        String passwd =3D (<span class=3D"hljs-keyword">new</span> Buffered=
Reader(<span class=3D"hljs-keyword">new</span> InputStreamReader(System.in)=
)).
            readLine();
        pc.setPassword(passwd.toCharArray());
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">hand=
leChoiceCallback</span><span class=3D"hljs-params">(ChoiceCallback cc)</spa=
n>
        <span class=3D"hljs-keyword">throws</span> IOException </span>{
        <span class=3D"hljs-comment">// ignore the provided defaultValue</s=
pan>
        System.out.print(cc.getPrompt());
       =20
        String[] strChoices =3D cc.getChoices();
        <span class=3D"hljs-keyword">for</span> (<span class=3D"hljs-keywor=
d">int</span> j =3D <span class=3D"hljs-number">0</span>; j &lt; strChoices=
.length; j++) {
            System.out.print(<span class=3D"hljs-string">"choice["</span> +=
 j + <span class=3D"hljs-string">"] : "</span> + strChoices[j]);
        }
        System.out.flush();
        cc.setSelectedIndex(Integer.parseInt((<span class=3D"hljs-keyword">=
new</span> BufferedReader
            (<span class=3D"hljs-keyword">new</span> InputStreamReader(Syst=
em.in))).readLine()));
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">protected</s=
pan> <span class=3D"hljs-keyword">boolean</span> <span class=3D"hljs-title"=
>login</span><span class=3D"hljs-params">(AuthContext lc)</span>
        <span class=3D"hljs-keyword">throws</span> UnsupportedCallbackExcep=
tion </span>{
        <span class=3D"hljs-keyword">boolean</span> succeed =3D <span class=
=3D"hljs-keyword">false</span>;
        Callback[] callbacks =3D <span class=3D"hljs-keyword">null</span>;
       =20
        <span class=3D"hljs-comment">// get information requested from modu=
le</span>
        <span class=3D"hljs-keyword">while</span> (lc.hasMoreRequirements()=
) {
            callbacks =3D lc.getRequirements();
            <span class=3D"hljs-keyword">if</span> (callbacks !=3D <span cl=
ass=3D"hljs-keyword">null</span>) {
                addLoginCallbackMessage(callbacks);
                lc.submitRequirements(callbacks);
            }
        }
       =20
        <span class=3D"hljs-keyword">if</span> (lc.getStatus() =3D=3D AuthC=
ontext.Status.SUCCESS) {
            System.out.println(<span class=3D"hljs-string">"Login succeeded=
."</span>);
            succeed =3D <span class=3D"hljs-keyword">true</span>;
        } <span class=3D"hljs-keyword">else</span> <span class=3D"hljs-keyw=
ord">if</span> (lc.getStatus() =3D=3D AuthContext.Status.FAILED) {
            System.out.println(<span class=3D"hljs-string">"Login failed."<=
/span>);
        } <span class=3D"hljs-keyword">else</span> {
            System.out.println(<span class=3D"hljs-string">"Unknown status:=
 "</span> + lc.getStatus());
        }
       =20
        <span class=3D"hljs-keyword">return</span> succeed;
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">protected</s=
pan> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">lo=
gout</span><span class=3D"hljs-params">(AuthContext lc)</span>
        <span class=3D"hljs-keyword">throws</span> AuthLoginException </spa=
n>{
        lc.logout();
        System.out.println(<span class=3D"hljs-string">"Logged Out!!"</span=
>);
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">static</span=
> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">debug=
Message</span><span class=3D"hljs-params">(String msg)</span> </span>{
        System.out.println(msg);
    }
   =20
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">static</span> <span class=3D"hljs-keyword">v=
oid</span> <span class=3D"hljs-title">main</span><span class=3D"hljs-params=
">(String[] args)</span> </span>{
        <span class=3D"hljs-keyword">try</span> {
            System.out.print(<span class=3D"hljs-string">"Realm (e.g. /): "=
</span>);
            String orgName =3D (<span class=3D"hljs-keyword">new</span> Buf=
feredReader(
                <span class=3D"hljs-keyword">new</span> InputStreamReader(S=
ystem.in))).readLine();

            System.out.print(<span class=3D"hljs-string">"Login module name=
 (e.g. DataStore or LDAP): "</span>);
            String moduleName =3D (<span class=3D"hljs-keyword">new</span> =
BufferedReader(
                <span class=3D"hljs-keyword">new</span> InputStreamReader(S=
ystem.in))).readLine();
           =20
            System.out.print(<span class=3D"hljs-string">"Login locale (e.g=
. en_US or fr_FR): "</span>);
            String locale =3D (<span class=3D"hljs-keyword">new</span> Buff=
eredReader(
                <span class=3D"hljs-keyword">new</span> InputStreamReader(S=
ystem.in))).readLine();
           =20
            Login login =3D <span class=3D"hljs-keyword">new</span> Login(m=
oduleName, orgName, locale);
            AuthContext lc =3D login.getAuthContext();
            <span class=3D"hljs-keyword">if</span> (login.login(lc)) {
                login.logout(lc);
            }
        } <span class=3D"hljs-keyword">catch</span> (IOException e) {
            e.printStackTrace();
        } <span class=3D"hljs-keyword">catch</span> (AuthLoginException e) =
{
            e.printStackTrace();
        } <span class=3D"hljs-keyword">catch</span> (UnsupportedCallbackExc=
eption e) {
            e.printStackTrace();
        }
        System.exit(<span class=3D"hljs-number">0</span>);
    }
}</pre><div class=3D"section" id=3D"encoding-pwds"><div class=3D"titlepage"=
><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backs=
tage.forgerock.com/docs/openam/13.5/dev-guide/index.html#encoding-pwds">2.2=
.3.1.&nbsp;Encoding Passwords and Password Reset Questions and Answers</a><=
/h4></div></div></div><p>
   OpenAM uses symmetric encryption algorithms to encrypt and decrypt store=
d
   passwords, so that
   they can be retrieved or modified at later date if necessary.
   The OpenAM Java SDK provides the capability to encode passwords
   using the <code class=3D"literal">EncodeAction</code>
   class in standalone applications. For example, you can encrypt and decry=
pt a
   password as follows:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint java hlj=
s">String plainText =3D <span class=3D"hljs-string">"helloworld"</span>;
String encrypted =3D AccessController.doPrivileged(<span class=3D"hljs-keyw=
ord">new</span> EncodeAction(plainText));
String decrypted =3D AccessController.doPrivileged(<span class=3D"hljs-keyw=
ord">new</span> DecodeAction(encrypted));
Assert plainText.equals(decrypted);</pre><p>
   To use this class,
   you must ensure that the symmetric encryption
   key has the same value as configured in the server instances.
   You can
   run <code class=3D"literal">ssoadm</code> to retrieve the
   password encryption key as follows:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
ssoadm am.encryption.pwd</pre><p>
   Next, in your application's <code class=3D"literal">AMConfig.properties<=
/code> file, replace
   the <code class=3D"literal">@ENCRYPTION_KEY@</code> with the value of th=
e password
   encryption key.
   The property ensures that OpenAM can decrypt the
   password.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
am.encryption.pwd=3D@ENCRYPTION_KEY@</pre><p>
   OpenAM's password reset question and answer also uses symmetric key encr=
yption
   in its configuration.
   You can use
   the <code class=3D"literal">encodeAction</code> class to encrypt a passw=
ord reset question
   and answer:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint nohighli=
ght">String encrypted =3D AccessController.doPrivileged(new EncodeAction(qu=
estion + "\t" + \
   answer "+" "1"));
  </pre><p>The last number in the previous example indicates whether the qu=
estion/answer is
   enabled or disabled:</p><div class=3D"itemizedlist"><ul class=3D"itemize=
dlist" style=3D"list-style-type: disc; "><li class=3D"listitem"><p>0 =3D de=
fault question/answer that is disabled</p></li><li class=3D"listitem"><p>1 =
=3D default question/answer that is enabled</p></li><li class=3D"listitem">=
<p>2 =3D personal question/answer that is disabled</p></li><li class=3D"lis=
titem"><p>3 =3D personal question/answer that is enabled</p></li></ul></div=
><p>
   To encrypt or decrypt the password reset question and answer, you must
   retrieve the password encryption key using <code class=3D"literal">ssoad=
m am.encryption.key</code>,
   and then set
   the <code class=3D"literal">am.encryption.key</code> property with the v=
alue of
   the password encryption key
   in the <code class=3D"literal">AMConfig.properties</code> file.
  </p><p>
   For additional information,
   see <a class=3D"link" href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/apidocs/index.html?com/sun/identity/security/EncodeAction.html" targ=
et=3D"_blank"><em class=3D"citetitle">EncodeAction</em></a>.
  </p></div></div><div class=3D"section" id=3D"sec-session"><div class=3D"t=
itlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-sessi=
on">2.2.4.&nbsp;Handling Single Sign-On Using OpenAM Java SDK</a></h3></div=
></div></div><a class=3D"indexterm" name=3D"d15472e10974"></a><p>This secti=
on looks at handling session tokens with the OpenAM Java SDK.
 The class shown in this section is
 <code class=3D"literal">com.sun.identity.samples.sso.SSOTokenSample</code>=
.</p><p>When a user authenticates successfully, OpenAM sets up a single sig=
n-on
 (SSO) session for the user. The session is associated with an SSO token th=
at
 holds information about the authentication, and also about the user's
 environment and session. OpenAM deletes the session when the authenticatio=
n
 context <code class=3D"literal">logout()</code> method is called, or when =
a session timeout
 is reached. At that point the SSO token is no longer valid.</p><p>Before y=
ou continue, make sure that the packages described in the
   <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#install-sdk-samples" title=3D"2.2.1.&nbsp;Installin=
g OpenAM Client SDK Samples">"Installing OpenAM Client SDK Samples"</a>
   chapter are installed.</p><p>When your application has an <code class=3D=
"literal">AuthContext</code> after
 successful authentication, you can retrieve the SSO token from the context=
.
 You also can get the token as shown in the sample client by passing an SSO
 token ID from OpenAM to an <code class=3D"literal">SSOTokenManager</code>.=
</p><p>If your application needs to be notified of changes, you can registe=
r
 an <code class=3D"literal">SSOTokenListener</code> on the token by using t=
he token's
 <code class=3D"literal">addSSOTokenListener()</code> method. OpenAM then c=
alls your
 <code class=3D"literal">SSOTokenListener</code> <code class=3D"literal">ss=
oTokenChanged()</code>
 method when the session times out, is disposed of, or has a property that
 changes. Applications can receive notifications about changes to
 <span class=3D"emphasis"><em>stateful sessions only</em></span>. Adding an
 <code class=3D"literal">SSOTokenListener</code> for a stateless session to=
ken does
 <span class=3D"emphasis"><em>not</em></span> generate notifications.
 </p><p>The sample client takes an SSO token ID to get the token from OpenA=
M,
 and then displays some information from the SSO token. The implementation =
of
 the sample client follows.</p><div class=3D"zero-clipboard hidden-xs hidde=
n-print" title=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisti=
ng"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"codelis=
ting prettyprint java hljs"><span class=3D"hljs-keyword">package</span> com=
.sun.identity.samples.sso;

<span class=3D"hljs-keyword">import</span> java.io.BufferedReader;
<span class=3D"hljs-keyword">import</span> java.io.InputStreamReader;
<span class=3D"hljs-keyword">import</span> java.io.IOException;
<span class=3D"hljs-keyword">import</span> java.net.InetAddress;
<span class=3D"hljs-keyword">import</span> com.iplanet.sso.SSOException;
<span class=3D"hljs-keyword">import</span> com.iplanet.sso.SSOToken;
<span class=3D"hljs-keyword">import</span> com.iplanet.sso.SSOTokenID;
<span class=3D"hljs-keyword">import</span> com.iplanet.sso.SSOTokenManager;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-class"><span=
 class=3D"hljs-keyword">class</span> <span class=3D"hljs-title">SSOTokenSam=
ple</span> </span>{
    <span class=3D"hljs-keyword">private</span> SSOTokenManager manager;
    <span class=3D"hljs-keyword">private</span> SSOToken token;

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-title">SSOTokenSample</span><span class=3D"hljs-para=
ms">(String tokenID)</span>
        <span class=3D"hljs-keyword">throws</span> SSOException
    </span>{
        <span class=3D"hljs-keyword">if</span> (validateToken(tokenID)) {
            setGetProperties(token);
        }
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">boolean</span> <span class=3D"hljs-title">v=
alidateToken</span><span class=3D"hljs-params">(String tokenID)</span>
        <span class=3D"hljs-keyword">throws</span> SSOException
    </span>{
        <span class=3D"hljs-keyword">boolean</span> validated =3D <span cla=
ss=3D"hljs-keyword">false</span>;
        manager =3D SSOTokenManager.getInstance();
        token =3D manager.createSSOToken(tokenID);

        <span class=3D"hljs-comment">// isValid method returns true for val=
id token.</span>
        <span class=3D"hljs-keyword">if</span> (manager.isValidToken(token)=
) {
                <span class=3D"hljs-comment">// let us get all the values f=
rom the token</span>
            String host =3D token.getHostName();
            java.security.Principal principal =3D token.getPrincipal();
            String authType =3D token.getAuthType();
            <span class=3D"hljs-keyword">int</span> level =3D token.getAuth=
Level();
            InetAddress ipAddress =3D token.getIPAddress();
            <span class=3D"hljs-keyword">long</span> maxTime =3D token.getM=
axSessionTime();
            <span class=3D"hljs-keyword">long</span> idleTime =3D token.get=
IdleTime();
            <span class=3D"hljs-keyword">long</span> maxIdleTime =3D token.=
getMaxIdleTime();
               =20
            System.out.println(<span class=3D"hljs-string">"SSOToken host n=
ame: "</span> + host);
            System.out.println(<span class=3D"hljs-string">"SSOToken Princi=
pal name: "</span> +
                principal.getName());
            System.out.println(<span class=3D"hljs-string">"Authentication =
type used: "</span> + authType);
            System.out.println(<span class=3D"hljs-string">"IPAddress of th=
e host: "</span> +
                ipAddress.getHostAddress());
            validated =3D <span class=3D"hljs-keyword">true</span>;
        }

        <span class=3D"hljs-keyword">return</span> validated;
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">setG=
etProperties</span><span class=3D"hljs-params">(SSOToken token)</span>
        <span class=3D"hljs-keyword">throws</span> SSOException
    </span>{
        <span class=3D"hljs-comment">/*
         * Validate the token again, with another method
         * if token is invalid, this method throws an exception
         */</span>
        manager.validateToken(token);
        System.out.println(<span class=3D"hljs-string">"SSO Token validatio=
n test Succeeded."</span>);
           =20
        <span class=3D"hljs-comment">// Get the SSOTokenID associated with =
the token and print it.</span>
        SSOTokenID id =3D token.getTokenID();
        String tokenId =3D id.toString();
        System.out.println(<span class=3D"hljs-string">"Token ID: "</span> =
+ tokenId);

        <span class=3D"hljs-comment">// Set and get properties in the token=
.</span>
        token.setProperty(<span class=3D"hljs-string">"TimeZone"</span>, <s=
pan class=3D"hljs-string">"PST"</span>);
        token.setProperty(<span class=3D"hljs-string">"County"</span>, <spa=
n class=3D"hljs-string">"SantaClara"</span>);
        String tZone =3D token.getProperty(<span class=3D"hljs-string">"Tim=
eZone"</span>);
        String county =3D token.getProperty(<span class=3D"hljs-string">"Co=
unty"</span>);

        System.out.println(<span class=3D"hljs-string">"Property: TimeZone:=
 "</span> + tZone);=20
        System.out.println(<span class=3D"hljs-string">"Property: County: "=
</span> + county);=20
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">static</span> <span class=3D"hljs-keyword">v=
oid</span> <span class=3D"hljs-title">main</span><span class=3D"hljs-params=
">(String[] args)</span> </span>{
        <span class=3D"hljs-keyword">try</span> {
            System.out.print(<span class=3D"hljs-string">"Enter SSOToken ID=
: "</span>);
            String ssoTokenID =3D (<span class=3D"hljs-keyword">new</span> =
BufferedReader(
                <span class=3D"hljs-keyword">new</span> InputStreamReader(S=
ystem.in))).readLine();
            <span class=3D"hljs-keyword">new</span> SSOTokenSample(ssoToken=
ID.trim());
        } <span class=3D"hljs-keyword">catch</span> (SSOException e) {
            e.printStackTrace();
        } <span class=3D"hljs-keyword">catch</span> (IOException e) {
            e.printStackTrace();
        }
        System.exit(<span class=3D"hljs-number">0</span>);
    }

}</pre><p>Before you run the script that calls the sample, authenticate to =
OpenAM
 in order to have OpenAM generate the SSO token ID. To see the SSO token ID=
,
 use the RESTful <code class=3D"literal">authenticate</code> command as sho=
wn in the
 following example, or alternatively run the
 <code class=3D"literal">SSOTokenSampleServlet</code> web-based sample.</p>=
<div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command =
to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o=
"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ <str=
ong class=3D"userinput">curl \
 --request POST \
 --data "username=3Ddemo&amp;password=3Dchangeit" \
 http://openam.example.com:8080/openam/identity/authenticate</strong>
<em class=3D"computeroutput">token.id=3DAQIC5wM2LY4Sfcyy10grl...AlNLABQtNjI=
4OTkyNTUxNTc4MDQ3NzEzOQ..*</em>
$ <strong class=3D"userinput">sh scripts/SSOTokenSample.sh</strong>
<em class=3D"computeroutput">Enter SSOToken ID:</em> <strong class=3D"useri=
nput">AQIC5wM2LY4Sfcyy10grl...AlNLABQtNjI4OTkyNTUxNTc4MDQ3NzEzOQ..*</strong=
>
<em class=3D"computeroutput">SSOToken host name: 172.16.203.239
SSOToken Principal name: id=3Ddemo,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=
=3Dorg
Authentication type used: DataStore
IPAddress of the host: 172.16.203.239
SSO Token validation test Succeeded.
Token ID: AQIC5wM2LY4Sfcyy10grl...AlNLABQtNjI4OTkyNTUxNTc4MDQ3NzEzOQ..*
Property: TimeZone: PST
Property: County: SantaClara</em></pre><p>Notice both the properties popula=
ted by OpenAM, and also the two
 properties, <code class=3D"literal">TimeZone</code> and <code class=3D"lit=
eral">County</code>, that
 are set by the sample client.</p><div class=3D"section" id=3D"session-rece=
iving-notifications"><div class=3D"titlepage"><div><div><h4 class=3D"title"=
><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#session-receiving-notifications">2.2.4.1.&nbsp;R=
eceiving Notifications</a></h4></div></div></div><p>If your application imp=
lements a listener for change notification, such
  as a <code class=3D"literal">SessionListener</code> to handle notificatio=
n when a stateful
  session is invalidated, then you must configure the following settings in=
 the
  <code class=3D"filename">AMConfig.properties</code> configuration file fo=
r your
  application.</p><div class=3D"variablelist"><dl class=3D"variablelist"><d=
t><span class=3D"term">com.iplanet.am.notification.url</span></dt><dd><p>Se=
t this parameter to
     <code class=3D"literal">http://<em class=3D"replaceable">host</em>:<em=
 class=3D"replaceable">port</em>/<em class=3D"replaceable">context</em>/not=
ificationservice</code>.</p></dd><dt><span class=3D"term">com.iplanet.am.sd=
k.caching.enabled</span></dt><dd><p>Set this parameter to <code class=3D"li=
teral">true</code>.</p></dd><dt><span class=3D"term">com.iplanet.am.serverM=
ode</span></dt><dd><p>Set this parameter to <code class=3D"literal">false</=
code>.</p></dd><dt><span class=3D"term">com.sun.identity.client.notificatio=
n.url</span></dt><dd><p>Set this parameter to
     <code class=3D"literal">http://<em class=3D"replaceable">host</em>:<em=
 class=3D"replaceable">port</em>/<em class=3D"replaceable">context</em>/not=
ificationservice</code>.</p></dd><dt><span class=3D"term">com.sun.identity.=
idm.cache.enabled</span></dt><dd><p>Set this parameter to <code class=3D"li=
teral">true</code>.</p></dd><dt><span class=3D"term">com.sun.identity.idm.r=
emote.notification.enabled</span></dt><dd><p>Set this parameter to <code cl=
ass=3D"literal">true</code>.</p></dd><dt><span class=3D"term">com.sun.ident=
ity.sm.cache.enabled</span></dt><dd><p>Set this parameter to <code class=3D=
"literal">true</code>.</p></dd><dt><span class=3D"term">com.sun.identity.sm=
.enableDataStoreNotification</span></dt><dd><p>Set this parameter to <code =
class=3D"literal">true</code>.</p></dd></dl></div><p>The above configuratio=
n to access the notification service also applies
  for other types of listeners, such as <code class=3D"literal">ServiceList=
ener</code>, and
  <code class=3D"literal">IdEventListener</code> implementations. See the <=
a class=3D"link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/a=
pidocs" target=3D"_blank"><em class=3D"citetitle">OpenAM Java SDK API
  Specification</em></a> for details on the available listener
  interfaces.</p></div></div><div class=3D"section" id=3D"sec-policy-decisi=
ons"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"sel=
f-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/=
index.html#sec-policy-decisions">2.2.5.&nbsp;Requesting Policy Decisions Us=
ing OpenAM Java SDK</a></h3></div></div></div><a class=3D"indexterm" name=
=3D"d15472e11182"></a><p>This section shows how to request policy decision =
by using OpenAM Java
 SDK. The chapter focuses on the sample client,
 <code class=3D"filename">source/samples/policy/PolicyEvaluationSample.java=
</code>, which
 demonstrates making a request to OpenAM for a policy decision about access=
 to
 a web resource.</p><p>Before you continue, make sure that the packages des=
cribed in
   <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#install-sdk-samples" title=3D"2.2.1.&nbsp;Installin=
g OpenAM Client SDK Samples">"Installing OpenAM Client SDK Samples"</a>
   are installed.</p><p>OpenAM centralizes policy administration, policy ev=
aluation, and policy
 decision making so that your applications do not have to do so. In many
 deployments, OpenAM policy agents and the Open Identity gateway can handle
 policy enforcement independently from your application code.</p><p>If your=
 application does need to request a policy decision from OpenAM,
 then your application can retrieve a <code class=3D"literal">PolicyEvaluat=
or</code> from
 a client-side <code class=3D"literal">PolicyEvaluatorFactory</code>, and t=
hen call the
 <code class=3D"literal">PolicyEvaluator</code> <code class=3D"literal">get=
PolicyDecision()</code>
 method. For boolean decisions such as allow or deny, your application can =
also
 call the <code class=3D"literal">isAllowed()</code> method.</p><p>To make =
a policy decision, OpenAM needs an SSO token,
 the resource to access, the action the user wants to perform on the resour=
ce
 such as HTTP <code class=3D"literal">GET</code> or <code class=3D"literal"=
>POST</code>, and a
 <code class=3D"literal">Map</code> of environment settings you can use to =
specify
 conditions and attributes in the session or can pass back as an empty
 <code class=3D"literal">Map</code> if your policy does not include conditi=
ons and
 response attributes.</p><p>The <code class=3D"literal">PolicyEvaluationSam=
ple</code> class takes as its
 configuration the user credentials, service name, resource, and action tha=
t
 you provide in a Java properties file. It then authenticates the user to g=
et
 an SSO token using the <code class=3D"filename">TokenUtils.java</code>
 helper methods. At that point it has sufficient information to request a
 policy decision.</p><p>The implementation of the sample client follows.</p=
><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to=
 clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files=
-o"></span></span></div><pre class=3D"codelisting prettyprint java hljs"><s=
pan class=3D"hljs-keyword">package</span> samples.policy;

<span class=3D"hljs-keyword">import</span> com.iplanet.sso.SSOToken;
<span class=3D"hljs-keyword">import</span> com.iplanet.sso.SSOTokenManager;

<span class=3D"hljs-keyword">import</span> com.sun.identity.policy.PolicyDe=
cision;
<span class=3D"hljs-keyword">import</span> com.sun.identity.policy.client.P=
olicyEvaluator;
<span class=3D"hljs-keyword">import</span> com.sun.identity.policy.client.P=
olicyEvaluatorFactory;

<span class=3D"hljs-keyword">import</span> samples.policy.TokenUtils;

<span class=3D"hljs-keyword">import</span> java.util.Enumeration;
<span class=3D"hljs-keyword">import</span> java.util.HashMap;
<span class=3D"hljs-keyword">import</span> java.util.Map;
<span class=3D"hljs-keyword">import</span> java.util.HashSet;
<span class=3D"hljs-keyword">import</span> java.util.Properties;
<span class=3D"hljs-keyword">import</span> java.util.MissingResourceExcepti=
on;
<span class=3D"hljs-keyword">import</span> java.util.ResourceBundle;
<span class=3D"hljs-keyword">import</span> java.util.Set;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-class"><span=
 class=3D"hljs-keyword">class</span> <span class=3D"hljs-title">PolicyEvalu=
ationSample</span> </span>{


    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-title">PolicyEvaluationSample</span><span class=3D"hl=
js-params">()</span> </span>{
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">static</span> <span class=3D"hljs-keyword">v=
oid</span> <span class=3D"hljs-title">main</span><span class=3D"hljs-params=
">(String[] args)</span> <span class=3D"hljs-keyword">throws</span> Excepti=
on </span>{
        PolicyEvaluationSample clientSample =3D <span class=3D"hljs-keyword=
">new</span> PolicyEvaluationSample();
        clientSample.runSample(args);
        System.exit(<span class=3D"hljs-number">0</span>);
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">runSa=
mple</span><span class=3D"hljs-params">(String[] args)</span> <span class=
=3D"hljs-keyword">throws</span> Exception </span>{
        <span class=3D"hljs-keyword">if</span> (args.length =3D=3D <span cl=
ass=3D"hljs-number">0</span> || args.length &gt; <span class=3D"hljs-number=
">1</span>) {
            System.out.println(<span class=3D"hljs-string">"Missing argumen=
t:"</span>
                    + <span class=3D"hljs-string">"properties file name not=
 specified"</span>);
        } <span class=3D"hljs-keyword">else</span> {
            System.out.println(<span class=3D"hljs-string">"Using propertie=
s file:"</span> + args[<span class=3D"hljs-number">0</span>]);
            Properties sampleProperties =3D getProperties(args[<span class=
=3D"hljs-number">0</span>]);
            SSOToken ssoToken =3D getSSOToken(
                (String)sampleProperties.get(<span class=3D"hljs-string">"u=
ser.name"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"u=
ser.password"</span>)
            );
            getPolicyDecision(
                ssoToken,
                (String)sampleProperties.get(<span class=3D"hljs-string">"s=
ervice.name"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"r=
esource.name"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"a=
ction.name"</span>)
            );
        }
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> SSOToken <span class=3D"hljs-title">getSSOToken</span><span class=3D"hlj=
s-params">(
            String userName, String password)</span> <span class=3D"hljs-ke=
yword">throws</span> Exception </span>{
        System.out.println(<span class=3D"hljs-string">"Entering getSSOToke=
n():"</span>
                + <span class=3D"hljs-string">"userName=3D"</span> + userNa=
me + <span class=3D"hljs-string">","</span>
                + <span class=3D"hljs-string">"password=3D"</span> + passwo=
rd);
        SSOToken ssoToken =3D TokenUtils.getSessionToken(<span class=3D"hlj=
s-string">"/"</span>,
                userName, password);
        System.out.println(<span class=3D"hljs-string">"TokenID:"</span> + =
ssoToken.getTokenID().toString());
        System.out.println(<span class=3D"hljs-string">"returning from getS=
SOToken()"</span>);
        <span class=3D"hljs-keyword">return</span> ssoToken;
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">getP=
olicyDecision</span><span class=3D"hljs-params">(
            SSOToken ssoToken,
            String serviceName,
            String resourceName,
            String actionName)</span>
            <span class=3D"hljs-keyword">throws</span> Exception </span>{

        System.out.println(<span class=3D"hljs-string">"Entering getPolicyD=
ecision():"</span>
                + <span class=3D"hljs-string">"resourceName=3D"</span> + re=
sourceName + <span class=3D"hljs-string">","</span>
                + <span class=3D"hljs-string">"serviceName=3D"</span> + ser=
viceName + <span class=3D"hljs-string">","</span>
                + <span class=3D"hljs-string">"actionName=3D"</span> + acti=
onName);
        PolicyEvaluator pe =3D PolicyEvaluatorFactory.getInstance().
                    getPolicyEvaluator(serviceName);

        Map env =3D <span class=3D"hljs-keyword">new</span> HashMap();
        Set attrSet =3D <span class=3D"hljs-keyword">new</span> HashSet();
        Set actions =3D <span class=3D"hljs-keyword">new</span> HashSet();
        actions.add(actionName);
        PolicyDecision pd =3D pe.getPolicyDecision(ssoToken, resourceName,
                actions, env);
        System.out.println(<span class=3D"hljs-string">"policyDecision:"</s=
pan> + pd.toXML());

        System.out.println(<span class=3D"hljs-string">"returning from getP=
olicyDecision()"</span>);
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> Properties <span class=3D"hljs-title">getProperties</span><span class=3D=
"hljs-params">(String file)</span>
      <span class=3D"hljs-keyword">throws</span> MissingResourceException <=
/span>{
        Properties properties =3D <span class=3D"hljs-keyword">new</span> P=
roperties();
        ResourceBundle bundle =3D ResourceBundle.getBundle(file);
        Enumeration e =3D bundle.getKeys();
        System.out.println(<span class=3D"hljs-string">"sample properties:"=
</span>);
        <span class=3D"hljs-keyword">while</span> (e.hasMoreElements()) {
            String key =3D (String) e.nextElement();
            String value =3D bundle.getString(key);
            properties.put(key, value);
            System.out.println(key + <span class=3D"hljs-string">":"</span>=
 + value);
        }
        <span class=3D"hljs-keyword">return</span> properties;
    }
}</pre><p>Before you run the script that calls the sample, edit the propert=
ies
 file, <code class=3D"filename">resources/policyEvaluationSample.properties=
</code>, to
 indicate the user credentials, resource to access, and HTTP method to
 use. You can use a resource that might not exist for the purposes of this
 example, but you will need to set up a policy for that resource to get
 meaningful results.</p><div class=3D"zero-clipboard hidden-xs hidden-print=
" title=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><sp=
an class=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting pr=
ettyprint java hljs">user.name=3Ddemo
user.password=3Dchangeit
service.name=3DiPlanetAMWebAgentService
resource.name=3Dhttp:<span class=3D"hljs-comment">//www.example.com:80/bann=
er.html</span>
action.name=3DGET</pre><p>Also, set up a policy in OpenAM that corresponds =
to the resource in
 question. You can set up the policy in OpenAM console under Realms
 &gt; <em class=3D"replaceable">Realm Name</em> &gt; Authorization. Concern=
ing the
 <em class=3D"replaceable">Realm Name</em>, notice that unless you change t=
he code,
 the sample uses the top-level realm, <code class=3D"literal">/</code> to a=
uthenticate the
 user.</p><p>With the properties configured and policy in place, get the de=
cision
 from OpenAM using the script,
 <code class=3D"filename">scripts/run-policy-evaluation-sample.sh</code>.</=
p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comman=
d to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files=
-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ <s=
trong class=3D"userinput">sh scripts/run-policy-evaluation-sample.sh</stron=
g>
<em class=3D"computeroutput">Using properties file:policyEvaluationSample
sample properties:
user.password:changeit
service.name:iPlanetAMWebAgentService
user.name:demo
resource.name:http://www.example.com:80/banner.html
action.name:GET
---------------------------------------------------------------------------=
---:
Entering getSSOToken():userName=3Ddemo,password=3Dchangeit
TokenID:AQIC5wM2LY4Sfcx3aQGFRKu5-r1a-Vfyjb...5ODM4NDY0MzE0ODYzODQ1*
returning from getSSOToken()
Entering getPolicyDecision():resourceName=3Dhttp://www.example.com:80/banne=
r.html,
 serviceName=3DiPlanetAMWebAgentService,actionName=3DGET
policyDecision:&lt;PolicyDecision&gt;
&lt;ResponseAttributes&gt;
&lt;/ResponseAttributes&gt;
&lt;ActionDecision timeToLive=3D"9223372036854775807"&gt;
&lt;AttributeValuePair&gt;
&lt;Attribute name=3D"GET"/&gt;
&lt;Value&gt;allow&lt;/Value&gt;
&lt;/AttributeValuePair&gt;
&lt;Advices&gt;
&lt;/Advices&gt;
&lt;/ActionDecision&gt;
&lt;/PolicyDecision&gt;

returning from getPolicyDecision()</em></pre><p>As you see, the policy deci=
sion response is formatted here as an XML
 document.<a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-g=
uide/index.html#ftn.d15472e11275" class=3D"footnote"><sup class=3D"footnote=
" id=3D"d15472e11275">[1]</sup></a> Notice here the line showing that
 OpenAM has allowed access to the resource.</p><pre class=3D"literallayout"=
>&lt;Value&gt;allow&lt;/Value&gt;</pre></div><div class=3D"section" id=3D"s=
ec-xacml"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#sec-xacml">2.2.6.&nbsp;Requesting a XACML Policy Decision=
 Using OpenAM Java SDK</a></h3></div></div></div><p>This section shows how =
to request a XACML policy decision with OpenAM
 Java SDK, using the sample client,
 <code class=3D"filename">source/samples/xacml/XACMLClientSample.java</code=
>.
 The sample client relies on an OpenAM server acting as a policy decision p=
oint
 and another OpenAM server acting as a policy enforcement point.</p><p>Befo=
re you continue, make sure that the packages described in the
   <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#install-sdk-samples" title=3D"2.2.1.&nbsp;Installin=
g OpenAM Client SDK Samples">"Installing OpenAM Client SDK Samples"</a>
   chapter are installed.</p><p>The sample client uses the XACML <code clas=
s=3D"literal">ContextFactory</code> to
 create the XACML request. It then uses the
 <code class=3D"literal">XACMLRequestProcessor</code> to get a decision as =
XACML
 <code class=3D"literal">Response</code> from OpenAM. Most of the work in t=
he sample
 is done setting up the request.</p><p>The implementation of the <code clas=
s=3D"literal">XACMLClientSample</code> class
 follows.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"=
Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D=
"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint j=
ava hljs"><span class=3D"hljs-keyword">package</span> samples.xacml;

<span class=3D"hljs-keyword">import</span> com.sun.identity.saml2.common.SA=
ML2Exception;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.client.XA=
CMLRequestProcessor;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.common.XA=
CMLConstants;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.common.XA=
CMLException;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.context.C=
ontextFactory;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.context.A=
ction;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.context.A=
ttribute;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.context.E=
nvironment;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.context.R=
equest;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.context.R=
esource;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.context.R=
esponse;
<span class=3D"hljs-keyword">import</span> com.sun.identity.xacml.context.S=
ubject;
<span class=3D"hljs-keyword">import</span> java.net.URI;
<span class=3D"hljs-keyword">import</span> java.net.URISyntaxException;
<span class=3D"hljs-keyword">import</span> java.io.PrintWriter;
<span class=3D"hljs-keyword">import</span> java.util.ArrayList;
<span class=3D"hljs-keyword">import</span> java.util.Enumeration;
<span class=3D"hljs-keyword">import</span> java.util.List;
<span class=3D"hljs-keyword">import</span> java.util.MissingResourceExcepti=
on;
<span class=3D"hljs-keyword">import</span> java.util.Properties;
<span class=3D"hljs-keyword">import</span> java.util.ResourceBundle;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-class"><span=
 class=3D"hljs-keyword">class</span> <span class=3D"hljs-title">XACMLClient=
Sample</span> </span>{

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-title">XACMLClientSample</span><span class=3D"hljs-pa=
rams">()</span> </span>{
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">static</span> <span class=3D"hljs-keyword">v=
oid</span> <span class=3D"hljs-title">main</span><span class=3D"hljs-params=
">(String[] args)</span> <span class=3D"hljs-keyword">throws</span> Excepti=
on </span>{
        XACMLClientSample clientSample =3D <span class=3D"hljs-keyword">new=
</span> XACMLClientSample();
        clientSample.runSample(args);
        System.exit(<span class=3D"hljs-number">0</span>);
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">runSa=
mple</span><span class=3D"hljs-params">(String[] args)</span> <span class=
=3D"hljs-keyword">throws</span> Exception </span>{
        <span class=3D"hljs-keyword">if</span> (args.length =3D=3D <span cl=
ass=3D"hljs-number">0</span> || args.length &gt; <span class=3D"hljs-number=
">1</span>) {
            System.out.println(<span class=3D"hljs-string">"Missing argumen=
t:"</span>
                    + <span class=3D"hljs-string">"properties file name not=
 specified"</span>);
        } <span class=3D"hljs-keyword">else</span> {
            System.out.println(<span class=3D"hljs-string">"Using propertie=
s file:"</span> + args[<span class=3D"hljs-number">0</span>]);
            Properties sampleProperties =3D getProperties(args[<span class=
=3D"hljs-number">0</span>]);
            testProcessRequest(
                (String)sampleProperties.get(<span class=3D"hljs-string">"p=
dp.entityId"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"p=
ep.entityId"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"s=
ubject.id"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"s=
ubject.id.datatype"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"s=
ubject.category"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"r=
esource.id"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"r=
esource.id.datatype"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"r=
esource.servicename"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"r=
esource.servicename.datatype"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"a=
ction.id"</span>),
                (String)sampleProperties.get(<span class=3D"hljs-string">"a=
ction.id.datatype"</span>)
            );
        }
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">test=
ProcessRequest</span><span class=3D"hljs-params">(
            String pdpEntityId, String pepEntityId,
            String subjectId, String subjectIdType,
            String subjectCategory,
            String resourceId, String resourceIdType,
            String serviceName, String serviceNameType,
            String actionId, String actionIdType)</span>=20
            <span class=3D"hljs-keyword">throws</span> XACMLException, SAML=
2Exception,=20
            URISyntaxException, Exception </span>{

        Request xacmlRequest =3D createSampleXacmlRequest(
            subjectId, subjectIdType,
            subjectCategory,
            resourceId, resourceIdType,
            serviceName, serviceNameType,
            actionId, actionIdType);=20

        System.out.println(<span class=3D"hljs-string">"\ntestProcessReques=
t():xacmlRequest:\n"</span>=20
                + xacmlRequest.toXMLString(<span class=3D"hljs-keyword">tru=
e</span>, <span class=3D"hljs-keyword">true</span>));

        Response xacmlResponse =3D XACMLRequestProcessor.getInstance()
                .processRequest(xacmlRequest, pdpEntityId, pepEntityId);

        System.out.println(<span class=3D"hljs-string">"testProcessRequest(=
):xacmlResponse:\n"</span>
                + xacmlResponse.toXMLString(<span class=3D"hljs-keyword">tr=
ue</span>, <span class=3D"hljs-keyword">true</span>));
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> Request <span class=3D"hljs-title">createSampleXacmlRequest</span><span =
class=3D"hljs-params">(
            String subjectId, String subjectIdType,
            String subjectCategory,
            String resourceId, String resourceIdType,
            String serviceName, String serviceNameType,
            String actionId, String actionIdType)</span>=20
            <span class=3D"hljs-keyword">throws</span> XACMLException, URIS=
yntaxException </span>{

        Request request =3D ContextFactory.getInstance().createRequest();

        <span class=3D"hljs-comment">//Subject</span>
        Subject subject =3D ContextFactory.getInstance().createSubject();
        subject.setSubjectCategory(<span class=3D"hljs-keyword">new</span> =
URI(subjectCategory));

        <span class=3D"hljs-comment">//set subject id</span>
        Attribute attribute =3D ContextFactory.getInstance().createAttribut=
e();
        attribute.setAttributeId(<span class=3D"hljs-keyword">new</span> UR=
I(XACMLConstants.SUBJECT_ID));
        attribute.setDataType(<span class=3D"hljs-keyword">new</span> URI(s=
ubjectIdType));
        List valueList =3D <span class=3D"hljs-keyword">new</span> ArrayLis=
t();
        valueList.add(subjectId);=20
        attribute.setAttributeStringValues(valueList);
        List attributeList =3D <span class=3D"hljs-keyword">new</span> Arra=
yList();
        attributeList.add(attribute);
        subject.setAttributes(attributeList);

        <span class=3D"hljs-comment">//set Subject in Request</span>
        List subjectList =3D <span class=3D"hljs-keyword">new</span> ArrayL=
ist();
        subjectList.add(subject);
        request.setSubjects(subjectList);

        <span class=3D"hljs-comment">//Resource</span>
        Resource resource =3D ContextFactory.getInstance().createResource()=
;

        <span class=3D"hljs-comment">//set resource id</span>
        attribute =3D ContextFactory.getInstance().createAttribute();
        attribute.setAttributeId(<span class=3D"hljs-keyword">new</span> UR=
I(XACMLConstants.RESOURCE_ID));
        attribute.setDataType( <span class=3D"hljs-keyword">new</span> URI(=
resourceIdType));
        valueList =3D <span class=3D"hljs-keyword">new</span> ArrayList();
        valueList.add(resourceId);
        attribute.setAttributeStringValues(valueList);
        attributeList =3D <span class=3D"hljs-keyword">new</span> ArrayList=
();
        attributeList.add(attribute);

        <span class=3D"hljs-comment">//set serviceName</span>
        attribute =3D ContextFactory.getInstance().createAttribute();
        attribute.setAttributeId(<span class=3D"hljs-keyword">new</span> UR=
I(XACMLConstants.TARGET_SERVICE));
        attribute.setDataType(<span class=3D"hljs-keyword">new</span> URI(s=
erviceNameType));
        valueList =3D <span class=3D"hljs-keyword">new</span> ArrayList();
        valueList.add(serviceName);
        attribute.setAttributeStringValues(valueList);
        attributeList.add(attribute);
        resource.setAttributes(attributeList);

        <span class=3D"hljs-comment">//set Resource in Request</span>
        List resourceList =3D <span class=3D"hljs-keyword">new</span> Array=
List();
        resourceList.add(resource);
        request.setResources(resourceList);

        <span class=3D"hljs-comment">//Action</span>
        Action action =3D ContextFactory.getInstance().createAction();
        attribute =3D ContextFactory.getInstance().createAttribute();
        attribute.setAttributeId(<span class=3D"hljs-keyword">new</span> UR=
I(XACMLConstants.ACTION_ID));
        attribute.setDataType(<span class=3D"hljs-keyword">new</span> URI(a=
ctionIdType));

        <span class=3D"hljs-comment">//set actionId</span>
        valueList =3D <span class=3D"hljs-keyword">new</span> ArrayList();
        valueList.add(actionId);
        attribute.setAttributeStringValues(valueList);
        attributeList =3D <span class=3D"hljs-keyword">new</span> ArrayList=
();
        attributeList.add(attribute);
        action.setAttributes(attributeList);

        <span class=3D"hljs-comment">//set Action in Request</span>
        request.setAction(action);

        <span class=3D"hljs-comment">//Environment, our PDP does not use en=
vironment now</span>
        Environment environment =3D ContextFactory.getInstance()
            .createEnvironment();
        request.setEnvironment(environment);
        <span class=3D"hljs-keyword">return</span> request;
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> Properties <span class=3D"hljs-title">getProperties</span><span class=3D=
"hljs-params">(String file)</span>
        <span class=3D"hljs-keyword">throws</span> MissingResourceException=
 </span>{
        Properties properties =3D <span class=3D"hljs-keyword">new</span> P=
roperties();
        ResourceBundle bundle =3D ResourceBundle.getBundle(file);
        Enumeration e =3D bundle.getKeys();
        System.out.println(<span class=3D"hljs-string">"sample properties:"=
</span>);
        <span class=3D"hljs-keyword">while</span> (e.hasMoreElements()) {
            String key =3D (String) e.nextElement();
            String value =3D bundle.getString(key);
            properties.put(key, value);
            System.out.println(key + <span class=3D"hljs-string">":"</span>=
 + value);
        }
        <span class=3D"hljs-keyword">return</span> properties;
    }
}</pre><p>Before running the sample client, you must set up the configurati=
on as
 described in the comments at the outset of the
 <code class=3D"filename">scripts/run-xacml-client-sample.sh</code> script.=
</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-st=
yle-type: disc; "><li class=3D"listitem"><p>
    Check <code class=3D"filename">resources/AMConfig.properties</code>
    to see which OpenAM server the SDK is configured to use.
   </p><p>
    The relevant settings from <code class=3D"filename">resources/AMConfig.=
properties</code>
    specify the server protocol, host, port and deployment URI.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint ini hlj=
s"><span class=3D"hljs-attr">com.iplanet.am.server.protocol</span>=3Dhttp
<span class=3D"hljs-attr">com.iplanet.am.server.host</span>=3Dopenam.exampl=
e.com
<span class=3D"hljs-attr">com.iplanet.am.server.port</span>=3D<span class=
=3D"hljs-number">8080</span>
<span class=3D"hljs-attr">com.iplanet.am.services.deploymentDescriptor</spa=
n>=3Dopenam</pre><p>
    For the purpose of this example, the XACML policy decision point (PDP)
    and the XACML policy enforcement point (PEP) are configured on this ser=
ver.
   </p></li><li class=3D"listitem"><p>Edit <code class=3D"filename">resourc=
es/xacmlClientSample.properties</code>
   and <code class=3D"filename">resources/policyEvaluationSample.properties=
</code>
   to set up the configuration for the sample client.</p><p>The relevant se=
ttings from
   <code class=3D"filename">resources/xacmlClientSample.properties</code> a=
re the
   following.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span clas=
s=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettypri=
nt ini hljs"><span class=3D"hljs-attr">pdp.entityId</span>=3DxacmlPdpEntity
<span class=3D"hljs-attr">pep.entityId</span>=3DxacmlPepEntity
<span class=3D"hljs-attr">subject.id</span>=3Did=3Ddemo,ou=3Duser,dc=3Dopen=
am,dc=3Dforgerock,dc=3Dorg
<span class=3D"hljs-attr">subject.id.datatype</span>=3Durn:oasis:names:tc:x=
acml:<span class=3D"hljs-number">1.0</span>:data-type:x500Name
<span class=3D"hljs-attr">subject.category</span>=3Durn:oasis:names:tc:xacm=
l:<span class=3D"hljs-number">1.0</span>:subject-category:access-subject
<span class=3D"hljs-attr">resource.id</span>=3Dhttp://www.example.com:<span=
 class=3D"hljs-number">80</span>/banner.html
<span class=3D"hljs-attr">resource.id.datatype</span>=3Dhttp://www.w3.org/<=
span class=3D"hljs-number">2001</span>/XMLSchema<span class=3D"hljs-comment=
">#string</span>
<span class=3D"hljs-attr">resource.servicename</span>=3DiPlanetAMWebAgentSe=
rvice
<span class=3D"hljs-attr">resource.servicename.datatype</span>=3Dhttp://www=
.w3.org/<span class=3D"hljs-number">2001</span>/XMLSchema<span class=3D"hlj=
s-comment">#string</span>
<span class=3D"hljs-attr">action.id</span>=3DGET
<span class=3D"hljs-attr">action.id.datatype</span>=3Dhttp://www.w3.org/<sp=
an class=3D"hljs-number">2001</span>/XMLSchema<span class=3D"hljs-comment">=
#string</span></pre><p>The relevant settings from
   <code class=3D"filename">resources/policyEvaluationSample.properties</co=
de> are the
   following.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span clas=
s=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettypri=
nt ini hljs"><span class=3D"hljs-attr">user.name</span>=3Ddemo
<span class=3D"hljs-attr">user.password</span>=3Dchangeit
<span class=3D"hljs-attr">service.name</span>=3DiPlanetAMWebAgentService
<span class=3D"hljs-attr">resource.name</span>=3Dhttp://www.example.com:<sp=
an class=3D"hljs-number">80</span>/banner.html
<span class=3D"hljs-attr">action.name</span>=3DGET</pre><p>
    These settings use the default <code class=3D"literal">demo</code> user=
 as the subject,
    who has ID <code class=3D"literal">id=3Ddemo,ou=3Duser,dc=3Dopenam,dc=
=3Dforgerock,dc=3Dorg</code>,
    and password <code class=3D"literal">changeit</code>.
    If you choose a different subject, then change
    the <code class=3D"literal">subject.id</code> value
    in <code class=3D"filename">resources/xacmlClientSample.properties</cod=
e>,
    and the <code class=3D"literal">user.name</code> and <code class=3D"lit=
eral">user.password</code> values
    in <code class=3D"filename">resources/policyEvaluationSample.properties=
</code>.
   </p></li><li class=3D"listitem"><p>The client accesses an OpenAM server =
acting as the policy enforcement
    point, configured in a circle of trust with the OpenAM server acting as=
 the
    policy decision point. When you set up the sample clients, you pointed =
them
    to an OpenAM server. For this example, configure that server to functio=
n
    as a policy enforcement point and also as a policy decision point.</p><=
div class=3D"orderedlist"><ol class=3D"orderedlist" type=3D"1"><li class=3D=
"listitem"><p>In OpenAM console, browse to Configure &gt; Global Services, =
click SAMLv2
      SOAP Binding, and then configure a new request handler with Key
      <code class=3D"literal">/xacmlPdpEntity</code> and Class
      <code class=3D"literal">com.sun.identity.xacml.plugins.XACMLAuthzDeci=
sionQueryHandler</code>.</p></li><li class=3D"listitem"><p>Set up the circl=
e of trust, and then create and import the metadata
      for the policy enforcement point and the policy decision point. In th=
e
      following simplified example, both the policy enforcement point and p=
olicy
      decision point are hosted on the same OpenAM server. You could also s=
et
      up the policy enforcement point and policy decision point on separate
      servers, as long as the circles of trust on both servers each include=
 both
      the policy enforcement point and the policy decision point. You can
      set up the trust relationship between the two entities either by usin=
g
      the <span class=3D"command"><strong>ssoadm</strong></span> command as=
 shown below, or by using the
      <code class=3D"literal">ssoadm.jsp</code> page, which you can activat=
e as described in
      <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-gui=
de/index.html#openam-ssoadm-jsp-overview" class=3D"olink">"OpenAM ssoadm.js=
p"</a> in the <em>Administration Guide</em>.</p><div class=3D"zero-clipboar=
d hidden-xs hidden-print" title=3D"Copy code to clipboard"><span class=3D"b=
tn-copy-codelisting"><span class=3D"fa fa-files-o"></span></span></div><pre=
 class=3D"codelisting prettyprint nohighlight">$ ssoadm \
 create-cot \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --cot cot

Circle of trust, cot was created.

$ ssoadm \
 create-metadata-templ \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --entityid xacmlPepEntity \
 --xacmlpep /xacmlPepEntity \
 --meta-data-file xacmlPep.xml \
 --extended-data-file xacmlPep-extended.xml

Hosted entity configuration was written to xacmlPep-extended.xml.
Hosted entity descriptor was written to xacmlPep.xml.

$ ssoadm \
 import-entity \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --cot cot \
 --meta-data-file xacmlPep.xml \
 --extended-data-file xacmlPep-extended.xml

Import file, xacmlPep.xml.
Import file, xacmlPep-extended.xml.

$ ssoadm \
 create-metadata-templ \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --entityid xacmlPdpEntity \
 --xacmlpdp /xacmlPdpEntity \
 --meta-data-file xacmlPdp.xml \
 --extended-data-file xacmlPdp-extended.xml

Hosted entity configuration was written to xacmlPdp-extended.xml.
Hosted entity descriptor was written to xacmlPdp.xml.

$ ssoadm \
 import-entity \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --cot cot \
 --meta-data-file xacmlPdp.xml \
 --extended-data-file xacmlPdp-extended.xml

Import file, xacmlPdp.xml.
Import file, xacmlPdp-extended.xml.</pre></li></ol></div></li><li class=3D"=
listitem"><p>Create a policy that allows
   authenticated users to perform an HTTP <code class=3D"literal">GET</code=
> on the sample
   <code class=3D"literal">resource.id</code> URL you configured, such as
   <code class=3D"literal">http://www.example.com:80/banner.html</code>.</p=
><p>See <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-g=
uide/index.html#chap-authz-policy" class=3D"olink">"Defining Authorization =
Policies"</a> in the <em>Administration Guide</em> for details.</p></li></u=
l></div><p>After you have configured OpenAM and the properties files, run t=
he
 sample client script, and observe the XACML request and response.</p><div =
class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to clipb=
oard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></=
span></span></div><pre class=3D"codelisting prettyprint nohighlight">$ sh s=
cripts/run-xacml-client-sample.sh

Using properties file:xacmlClientSample
sample properties:
subject.id.datatype:urn:oasis:names:tc:xacml:1.0:data-type:x500Name
pdp.entityId:xacmlPdpEntity
resource.servicename.datatype:http://www.w3.org/2001/XMLSchema#string
resource.id:http://www.example.com:80/banner.html
resource.servicename:iPlanetAMWebAgentService
action.id.datatype:http://www.w3.org/2001/XMLSchema#string
resource.id.datatype:http://www.w3.org/2001/XMLSchema#string
action.id:GET
subject.category:urn:oasis:names:tc:xacml:1.0:subject-category:access-subje=
ct
pep.entityId:xacmlPepEntity
subject.id:id=3Ddemo,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg

testProcessRequest():xacmlRequest:

&lt;xacml-context:Request
 xmlns:xacml-context=3D"urn:oasis:names:tc:xacml:2.0:context:schema:os"
 xmlns:xsi=3D"http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation=3D"urn:oasis:names:tc:xacml:2.0:context:schema:os
  http://docs.oasis-open.org/xacml/access_control-xacml-2.0-context-schema-=
os.xsd"&gt;
&lt;Subject SubjectCategory=3D
 "urn:oasis:names:tc:xacml:1.0:subject-category:access-subject"&gt;
&lt;Attribute
 AttributeId=3D"urn:oasis:names:tc:xacml:1.0:subject:subject-id"
 DataType=3D"urn:oasis:names:tc:xacml:1.0:data-type:x500Name" &gt;
&lt;AttributeValue
 &gt;id=3Ddemo,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg&lt;/AttributeV=
alue&gt;
&lt;/Attribute&gt;
&lt;/Subject&gt;
&lt;xacml-context:Resource&gt;
&lt;Attribute
 AttributeId=3D"ResourceId"
 DataType=3D"http://www.w3.org/2001/XMLSchema#string" &gt;
&lt;AttributeValue&gt;http://www.example.com:80/banner.html&lt;/AttributeVa=
lue&gt;
&lt;/Attribute&gt;
&lt;Attribute
  AttributeId=3D"urn:sun:names:xacml:2.0:resource:target-service"
  DataType=3D"http://www.w3.org/2001/XMLSchema#string" &gt;
&lt;AttributeValue&gt;iPlanetAMWebAgentService&lt;/AttributeValue&gt;
&lt;/Attribute&gt;
&lt;/xacml-context:Resource&gt;
&lt;xacml-context:Action&gt;
&lt;Attribute
 AttributeId=3D"urn:oasis:names:tc:xacml:1.0:action:action-id"
 DataType=3D"http://www.w3.org/2001/XMLSchema#string" &gt;
&lt;AttributeValue&gt;GET&lt;/AttributeValue&gt;
&lt;/Attribute&gt;
&lt;/xacml-context:Action&gt;
&lt;xacml-context:Environment&gt;&lt;/xacml-context:Environment&gt;
&lt;/xacml-context:Request&gt;

testProcessRequest():xacmlResponse:
&lt;xacml-context:Response
 xmlns:xacml-context=3D"urn:oasis:names:tc:xacml:2.0:context:schema:os" &gt=
;
&lt;xacml-context:Result ResourceId=3D"http://www.example.com:80/banner.htm=
l"&gt;
&lt;xacml-context:Decision&gt;Permit&lt;/xacml-context:Decision&gt;
&lt;xacml-context:Status&gt;
&lt;xacml-context:StatusCode
 Value=3D"urn:oasis:names:tc:xacml:1.0:status:ok"&gt;
&lt;/xacml-context:StatusCode&gt;
&lt;xacml-context:StatusMessage&gt;ok&lt;/xacml-context:StatusMessage&gt;
&lt;xacml-context:StatusDetail
 xmlns:xacml-context=3D"urn:oasis:names:tc:xacml:2.0:context:schema:cd:04"&=
gt;
&lt;xacml-context:StatusDetail/&gt;&lt;/xacml-context:StatusDetail&gt;
&lt;/xacml-context:Status&gt;
&lt;/xacml-context:Result&gt;
&lt;/xacml-context:Response&gt;</pre></div></div><div class=3D"section" id=
=3D"sec-csdk"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=
=3D"clear: both"><a class=3D"self-link" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#sec-csdk">2.3.&nbsp;Using the Op=
enAM C SDK</a></h2></div></div></div><a class=3D"indexterm" name=3D"d15472e=
11446"></a><p>This section introduces OpenAM C SDK, which is available for
 selected platforms.
 Contact <a class=3D"link" href=3D"mailto:info@forgerock.com" target=3D"_to=
p">info@forgerock.com</a>
 if you need OpenAM C SDK support.</p><p>To prepare to install OpenAM C SDK=
, first download the version for your
 platform and unpack the archive as in the following example.</p><div class=
=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to clipboa=
rd"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span><=
/span></div><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=
=3D"userinput">mkdir -p /path/to/openam-client</strong>
$ <strong class=3D"userinput">cd /path/to/openam-client</strong>
$ <strong class=3D"userinput">unzip ~/Downloads/common_3_0_Linux_64bit.zip<=
/strong></pre><p>All C SDK deliveries are .zip files, and the filenames are=
 self-explanatory.
 The <code class=3D"filename">SunOS</code> in some of the .zip files refer =
to the Solaris
 OS.</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p><code class=3D"filename">co=
mmon_3_0_Linux.zip</code></p></li><li class=3D"listitem"><p><code class=3D"=
filename">common_3_0_Linux_64bit.zip</code></p></li><li class=3D"listitem">=
<p><code class=3D"filename">common_3_0_windows.zip</code></p></li><li class=
=3D"listitem"><p><code class=3D"filename">common_3_0_windows_64bit.zip</cod=
e></p></li><li class=3D"listitem"><p><code class=3D"filename">common_3_0_Su=
nOS_x86.zip</code></p></li><li class=3D"listitem"><p><code class=3D"filenam=
e">common_3_0_SunOS_64bit.zip</code></p></li><li class=3D"listitem"><p><cod=
e class=3D"filename">common_3_0_SunOS_sparc.zip</code></p></li><li class=3D=
"listitem"><p><code class=3D"filename">common_3_0_SunOS_sparc_64bit.zip</co=
de></p></li></ul></div><div class=3D"variablelist"><p>Once unpacked, you ha=
ve several directories that include
  the SDK, and also sample client applications.</p><dl class=3D"variablelis=
t"><dt><span class=3D"term"><code class=3D"filename">bin/</code></span></dt=
><dd><p>The <span class=3D"command"><strong>crypt_util</strong></span> or <=
span class=3D"command"><strong>cryptit.exe</strong></span>
    command for encrypting passwords</p></dd><dt><span class=3D"term"><code=
 class=3D"filename">config/</code></span></dt><dd><p>Configuration data for=
 the SDK</p></dd><dt><span class=3D"term"><code class=3D"filename">include/=
</code></span></dt><dd><p>Header files for the SDK</p></dd><dt><span class=
=3D"term"><code class=3D"filename">lib/</code></span></dt><dd><p>SDK and ot=
her required libraries</p></dd><dt><span class=3D"term"><code class=3D"file=
name">samples/</code></span></dt><dd><p>Sample code</p></dd></dl></div><div=
 class=3D"procedure" id=3D"build-openam-csdk-client"><div class=3D"procedur=
e-inner"><div class=3D"procedure-title"><a class=3D"self-link" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#build-ope=
nam-csdk-client">To Build OpenAM C SDK Samples</a></div><ol class=3D"proced=
ure" type=3D"1"><li class=3D"step"><p>Review the <code class=3D"filename">s=
amples/README.TXT</code> file to complete
   any specific instructions required for your platform. The two commands
   shown here confirm that the specified system is a 64-bit Linux OS. Make
   sure it matches the C SDK package that you have downloaded.</p><div clas=
s=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to clipbo=
ard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span>=
</span></div><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=
=3D"userinput">uname -s</strong>
<em class=3D"computeroutput">Linux</em>
$ <strong class=3D"userinput">uname -m</strong>
<em class=3D"computeroutput">x86_64</em></pre></li><li class=3D"step"><p>Se=
t up <code class=3D"filename">OpenSSOAgentBootstrap.properties</code>
   and <code class=3D"filename">OpenSSOAgentConfiguration.properties</code>=
 as appropriate
   for your environment.</p><p>Base your work on the template files in the
   <code class=3D"filename">config/</code> directory. You can find the Pass=
word Encryption
   Key in the OpenAM console under Deployment &gt; Servers &gt;
   <em class=3D"replaceable">Server Name</em> &gt; Security.</p></li><li cl=
ass=3D"step"><p>Try one of the samples you built to test your build.</p><di=
v class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to =
clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"><=
/span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ <strong=
 class=3D"userinput">LD_LIBRARY_PATH=3D../lib \
 ./am_auth_test \
 -f ../config/OpenSSOAgentBootstrap.properties \
 -u demo \
 -p changeit \
 -o /</strong>
<em class=3D"computeroutput">   Login  1 Succeeded!
      SSOToken =3D AQIC5wM2LY4SfcxZfk4EzC9Y46P9cXG9ogwf2ixnYOeZ0K0.*AAJTSQA=
CMDE.*
      Organization =3D /
      Module Instance Name [0] =3D SAE
      Module Instance Name [1] =3D LDAP
      Module Instance Name [2] =3D WSSAuthModule
      Module Instance Name [3] =3D Federation
      Module Instance Name [4] =3D HOTP
      Module Instance Name [5] =3D DataStore
   Logout 1 Succeeded!</em></pre></li></ol></div></div></div><div class=3D"=
footnotes"><br><hr class=3D"footnote-hr"><div id=3D"ftn.d15472e11275" class=
=3D"footnote"><p><a href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#d15472e11275" class=3D"para"><sup class=3D"para">[1]=
 </sup></a>The <code class=3D"literal">PolicyDecision</code> element is
 defined in
 <code class=3D"filename"><em class=3D"replaceable">openam</em>/WEB-INF/rem=
oteInterface.dtd</code>
 where <em class=3D"replaceable">openam</em> is the location where the Open=
AM web
 application is deployed.</p></div></div></div><div lang=3D"" class=3D"chap=
ter" id=3D"chap-customizing"><div class=3D"titlepage"><div><div><h1 class=
=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#chap-customizing">Chapter&nbsp;3.&nbsp=
;Customizing OpenAM</a></h1></div></div></div><p>Service provider interface=
s (SPI's) provide a framework to customize all
  OpenAM service modules such as adding custom authentication modules,
  federation plugins, and policy conditions.</p><p>This part of the guide c=
overs customizing OpenAM functionality.</p><div class=3D"section" id=3D"sec=
-custom-attr"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=
=3D"clear: both"><a class=3D"self-link" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#sec-custom-attr">3.1.&nbsp;Custo=
mizing Profile Attributes</a></h2></div></div></div><a class=3D"indexterm" =
name=3D"d15472e11615"></a><p>You can extend user profiles by adding custom =
attributes. This section
 demonstrates how to add a custom attribute to a user profile when storing
 user profiles in the embedded LDAP directory.</p><p>Adding a custom attrib=
ute involves both updating the
 <code class=3D"literal">iPlanetAMUserService</code>, and also updating the=
 identity
 repository schema to hold the new attribute. Furthermore, to allow users
 to update the attribute in their own profiles, you must also update the
 OpenAM policy configuration stored in the configuration directory.</p><div=
 class=3D"panel panel-primary"><div class=3D"panel-heading"><h3 class=3D"pa=
nel-title">Important</h3></div><div class=3D"panel-body"><p>
   In OpenAM 13.5.2-15, the ability to edit custom profile
   attributes is limited to the classic UI. Custom profile attributes do no=
t
   appear in the user profile when users log in to OpenAM using the XUI.
  </p></div></div><div class=3D"itemizedlist"><p>This section includes the =
following procedures.</p><ul class=3D"itemizedlist" style=3D"list-style-typ=
e: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/index.html#add-attr-to-servi=
ce-description" title=3D"To Update the AMUser Service For the New Attribute=
">"To Update the AMUser Service For the New Attribute"</a></p></li><li clas=
s=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#add-attr-to-identity-repository" tit=
le=3D"To Update the Identity Repository For the New Attribute">"To Update t=
he Identity Repository For the New Attribute"</a></p></li><li class=3D"list=
item"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#allow-users-to-update-attr" title=3D"To Allow=
 Users To Update the New Attribute">"To Allow Users To Update the New Attri=
bute"</a></p></li></ul></div><div class=3D"procedure" id=3D"add-attr-to-ser=
vice-description"><div class=3D"procedure-inner"><div class=3D"procedure-ti=
tle"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#add-attr-to-service-description">To Update t=
he AMUser Service For the New Attribute</a></div><p>Follow the steps below =
to create a custom attribute in OpenAM.</p><ol class=3D"procedure" type=3D"=
1"><li class=3D"step"><p>Create a backup copy of the configuration file for=
 the
   <code class=3D"literal">iPlanetAMUserService</code>.</p><div class=3D"ze=
ro-clipboard hidden-xs hidden-print" title=3D"Copy command to clipboard"><s=
pan class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span>=
</div><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=3D"use=
rinput">cp ~/openam/config/xml/amUser.xml ~/openam/config/xml/amUser.xml.or=
ig</strong></pre></li><li class=3D"step"><p>Edit the file to add your attri=
bute as one of the list of
   <code class=3D"literal">&lt;User&gt;</code> attributes.</p><div class=3D=
"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to clipboard"><s=
pan class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></s=
pan></div><pre class=3D"codelisting prettyprint xml hljs"><span class=3D"hl=
js-tag">&lt;<span class=3D"hljs-name">AttributeSchema</span> <span class=3D=
"hljs-attr">name</span>=3D<span class=3D"hljs-string">"customAttribute"</sp=
an>
    <span class=3D"hljs-attr">type</span>=3D<span class=3D"hljs-string">"si=
ngle"</span>
    <span class=3D"hljs-attr">syntax</span>=3D<span class=3D"hljs-string">"=
string"</span>
    <span class=3D"hljs-attr">any</span>=3D<span class=3D"hljs-string">"dis=
play"</span>
    <span class=3D"hljs-attr">i18nKey</span>=3D<span class=3D"hljs-string">=
"Custom Attribute"</span>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">AttributeSchema</sp=
an>&gt;</span></pre><p>Here, the name refers to the attribute type name use=
d in LDAP. The
   <code class=3D"literal">i18nKey</code> holds either the reference, or in=
 this case the
   content, of the text that appears in the user interface.</p></li><li cla=
ss=3D"step"><p>Delete <code class=3D"literal">iPlanetAMUserService</code>, =
and then create it
   from your updated configuration file.</p><div class=3D"zero-clipboard hi=
dden-xs hidden-print" title=3D"Copy command to clipboard"><span class=3D"bt=
n-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre clas=
s=3D"cmdline prettyprint nohighlight">$ <strong class=3D"userinput">cd /pat=
h/to/tools/openam/bin/</strong>
$ <strong class=3D"userinput">ssoadm \
 delete-svc \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --servicename iPlanetAMUserService</strong>

<em class=3D"computeroutput">Service was deleted.</em>
$ <strong class=3D"userinput">ssoadm \
 create-svc \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --xmlfile $HOME/openam/config/xml/amUser.xml</strong>

<em class=3D"computeroutput">Service was added.</em></pre></li></ol></div><=
/div><div class=3D"procedure" id=3D"add-attr-to-identity-repository"><div c=
lass=3D"procedure-inner"><div class=3D"procedure-title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#add-attr-to-identity-repository">To Update the Identity Repository F=
or the New Attribute</a></div><p>Follow the steps below to update the ident=
ity repository LDAP schema
  for the custom attribute, and then update OpenAM to use the custom attrib=
ute
  and object class.</p><p>If you are adding an existing attribute that is a=
lready allowed on
  user profile entries, you can skip this procedure.</p><div class=3D"panel=
 panel-success"><div class=3D"panel-heading"><h3 class=3D"panel-title">Tip<=
/h3></div><div class=3D"panel-body"><p>If you are using OpenDJ as the ident=
ity repository, you can update the
   schema through OpenDJ Control Panel &gt; Schema &gt; Manage Schema, as
   described in the <a class=3D"link" href=3D"https://backstage.forgerock.c=
om/docs/opendj/3.5/admin-guide/#update-schema" target=3D"_blank">OpenDJ doc=
umentation</a>.</p></div></div><ol class=3D"procedure" type=3D"1"><li class=
=3D"step"><p>Prepare the attribute type object class definitions in LDIF
   format.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D=
"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D=
"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohig=
hlight">$ <strong class=3D"userinput">cat custom-attr.ldif</strong>
<em class=3D"computeroutput">dn: cn=3Dschema
changetype: modify
add: attributeTypes
attributeTypes: ( temp-custom-attr-oid NAME 'customAttribute' EQUALITY case
 IgnoreMatch ORDERING caseIgnoreOrderingMatch SUBSTR caseIgnoreSubstrings
 Match SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 USAGE userApplications )
-
add: objectClasses
objectClasses: ( temp-custom-oc-oid NAME 'customObjectclass' SUP top AUXILI=
ARY
  MAY customAttribute )</em></pre></li><li class=3D"step"><p>Add the schema=
 definitions to the directory.</p><div class=3D"zero-clipboard hidden-xs hi=
dden-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmd=
line"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdli=
ne prettyprint nohighlight">$ <strong class=3D"userinput">/path/to/opendj/b=
in/ldapmodify \
 --port 1389 \
 --hostname openam.example.com \
 --bindDN "cn=3DDirectory Manager" \
 --bindPassword password \
 --filename custom-attr.ldif</strong>
<em class=3D"computeroutput">Processing MODIFY request for cn=3Dschema
MODIFY operation successful for DN cn=3Dschema</em></pre></li><li class=3D"=
step"><p>In OpenAM console, browse to Realms &gt; <em class=3D"replaceable"=
>Realm
   Name</em> &gt; Data Stores &gt; <em class=3D"replaceable">Data Store
   Name</em>.</p></li><li class=3D"step"><p>Add the object class, here <cod=
e class=3D"literal">customObjectclass</code>, to
   the LDAP User Object Class list.</p></li><li class=3D"step"><p>Add the a=
ttribute type, here <code class=3D"literal">customAttribute</code>, to
   the LDAP User Attributes list.</p></li><li class=3D"step"><p>Save your w=
ork.</p></li></ol></div></div><div class=3D"procedure" id=3D"allow-users-to=
-update-attr"><div class=3D"procedure-inner"><div class=3D"procedure-title"=
><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#allow-users-to-update-attr">To Allow Users To Up=
date the New Attribute</a></div><p>Follow these steps to make the new attri=
bute editable by users. The
  steps imply use of the embedded configuration directory. If you use a
  different directory server to store the configuration, then adapt them fo=
r
  your tools.</p><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>L=
ogin to the control panel for the embedded configuration
   directory.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=
=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint no=
highlight">$ <strong class=3D"userinput">./openam/opends/bin/control-panel =
&amp;</strong></pre><p>Connect using bind DN <code class=3D"literal">cn=3DD=
irectory Manager</code> and the
   the password for <code class=3D"literal">amadmin</code>.</p></li><li cla=
ss=3D"step"><p>Select Manage Entries to open the LDAP browser.</p></li><li =
class=3D"step"><p>Search with <code class=3D"literal">LDAP Filter:</code> s=
et to
   <code class=3D"literal">ou=3DSelfWriteAttributes</code>, and then expand=
 the tree views
   to see the two entries found.</p></li><li class=3D"step"><p>In the entry=
 under <code class=3D"literal">iPlanetAMPolicyService</code>, edit
   the <code class=3D"literal">sunKeyValue</code> attribute to add your cus=
tom attribute to
   the list of self-writable attributes, as in
   <code class=3D"literal">&lt;Value&gt;customAttribute&lt;/Value&gt;</code=
>.</p></li><li class=3D"step"><p>
    In the entry under <code class=3D"literal">sunEntitlementIndexes</code>=
, edit
    the <code class=3D"literal">sunKeyValue</code> attribute by adding your=
 custom attribute
    to the <code class=3D"literal">attributes</code> JSON array.
   </p></li><li class=3D"step"><p>Restart OpenAM or the web container where=
 it runs. The following example applies to Tomcat.</p><div class=3D"zero-cl=
ipboard hidden-xs hidden-print" title=3D"Copy command to clipboard"><span c=
lass=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></div=
><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=3D"userinpu=
t">/path/to/tomcat/bin/shutdown.sh</strong>
$ <strong class=3D"userinput">/path/to/tomcat/bin/startup.sh</strong></pre>=
</li><li class=3D"step"><p>Login to OpenAM console as a user to check that =
a user can save a
   value for your new, custom attribute.</p><div class=3D"mediaobject" alig=
n=3D"center" id=3D"figure-bjensen-with-custom-attribute"><a class=3D"fancyb=
ox cboxElement" href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/images/bjensen-with-custom-attribute.png"><img class=3D"img-respons=
ive center-block" data-toggle=3D"tooltip" src=3D"https://backstage.forgeroc=
k.com/docs/openam/13.5/dev-guide/images/thumb_bjensen-with-custom-attribute=
.png" align=3D"middle" height=3D"274" alt=3D"Saving Babs Jensen's profile w=
ith a custom attribute" title=3D"" data-original-title=3D"If all goes well,=
 you can save the new custom attribute to the
     user profile."></a></div></li></ol></div></div></div><div class=3D"sec=
tion" id=3D"sec-oauth2-scopes"><div class=3D"titlepage"><div><div><h2 class=
=3D"title" style=3D"clear: both"><a class=3D"self-link" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-oauth2-scope=
s">3.2.&nbsp;Customizing OAuth 2.0 Scope Handling</a></h2></div></div></div=
><a class=3D"indexterm" name=3D"d15472e11837"></a><p>
  RFC 6749, <a class=3D"link" href=3D"http://tools.ietf.org/html/rfc6749" t=
arget=3D"_blank"><em class=3D"citetitle">The OAuth 2.0 Authorization Framew=
ork</em></a>,
  describes access token scopes as a set of case-sensitive strings
  defined by the authorization server.
  Clients can request scopes, and resource owners can authorize them.
 </p><p>
  The default scopes implementation in OpenAM treats scopes
  as profile attributes for the resource owner.
  When a resource server or other entity uses the access token
  to get token information from OpenAM,
  OpenAM populates the scopes with profile attribute values.
  For example, if one of the scopes is <code class=3D"literal">mail</code>,
  OpenAM sets <code class=3D"literal">mail</code> to the resource owner's e=
mail address
  in the token information returned.
 </p><p>
  You can change this behavior by writing your own scope validator plugin.
  This section shows how to write a custom OAuth 2.0 scope validator plugin
  for use in an OAuth 2.0 provider (authorization server) configuration.
 </p><div class=3D"section" id=3D"design-oauth2-scopes-plugin"><div class=
=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#desi=
gn-oauth2-scopes-plugin">3.2.1.&nbsp;Designing an OAuth 2.0 Scope Validator=
 Plugin</a></h3></div></div></div><p>
   A scope validator plugin implements the
   <code class=3D"literal">org.forgerock.oauth2.core.ScopeValidator</code> =
interface.
   As described in the API specification, the
   <a class=3D"link" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/apidocs/index.html?org/forgerock/oauth2/core/ScopeValidator.html" target=
=3D"_blank"><code class=3D"literal">ScopeValidator</code> interface</a>
   has several methods that your plugin overrides.
  </p><p>
   The following example plugin sets whether
   <code class=3D"literal">read</code> and <code class=3D"literal">write</c=
ode> permissions were granted.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint java hlj=
s"><span class=3D"hljs-keyword">package</span> org.forgerock.openam.example=
s;

<span class=3D"hljs-keyword">import</span> org.forgerock.oauth2.core.Access=
Token;
<span class=3D"hljs-keyword">import</span> org.forgerock.oauth2.core.Client=
Registration;
<span class=3D"hljs-keyword">import</span> org.forgerock.oauth2.core.OAuth2=
Request;
<span class=3D"hljs-keyword">import</span> org.forgerock.oauth2.core.ScopeV=
alidator;
<span class=3D"hljs-keyword">import</span> org.forgerock.oauth2.core.Token;
<span class=3D"hljs-keyword">import</span> org.forgerock.oauth2.core.UserIn=
foClaims;
<span class=3D"hljs-keyword">import</span> org.forgerock.oauth2.core.except=
ions.InvalidClientException;
<span class=3D"hljs-keyword">import</span> org.forgerock.oauth2.core.except=
ions.NotFoundException;
<span class=3D"hljs-keyword">import</span> org.forgerock.oauth2.core.except=
ions.ServerException;
<span class=3D"hljs-keyword">import</span> org.forgerock.oauth2.core.except=
ions.UnauthorizedClientException;

<span class=3D"hljs-keyword">import</span> java.util.HashMap;
<span class=3D"hljs-keyword">import</span> java.util.HashSet;
<span class=3D"hljs-keyword">import</span> java.util.Map;
<span class=3D"hljs-keyword">import</span> java.util.Set;

<span class=3D"hljs-comment">/**
 * Custom scope validators implement the
 * {<span class=3D"hljs-doctag">@link</span> org.forgerock.oauth2.core.Scop=
eValidator} interface.
 *
 * &lt;p&gt;
 * This example sets read and write permissions according to the scopes set=
.
 * &lt;/p&gt;
 *
 * &lt;ul&gt;
 *
 * &lt;li&gt;
 * The {<span class=3D"hljs-doctag">@code</span> validateAuthorizationScope=
} method
 * adds default scopes, or any allowed scopes provided.
 * &lt;/li&gt;
 *
 * &lt;li&gt;
 * The {<span class=3D"hljs-doctag">@code</span> validateAccessTokenScope} =
method
 * adds default scopes, or any allowed scopes provided.
 * &lt;/li&gt;
 *
 * &lt;li&gt;
 * The {<span class=3D"hljs-doctag">@code</span> validateRefreshTokenScope}=
 method
 * adds the scopes from the access token,
 * or any requested scopes provided that are also in the access token scope=
s.
 * &lt;/li&gt;
 *
 * &lt;li&gt;
 * The {<span class=3D"hljs-doctag">@code</span> getUserInfo} method
 * populates scope values and sets the resource owner ID to return.
 * &lt;/li&gt;
 *
 * &lt;li&gt;
 * The {<span class=3D"hljs-doctag">@code</span> evaluateScope} method
 * populates scope values to return.
 * &lt;/li&gt;
 *
 * &lt;li&gt;
 * The {<span class=3D"hljs-doctag">@code</span> additionalDataToReturnFrom=
AuthorizeEndpoint} method
 * returns no additional data (an empty Map).
 * &lt;/li&gt;
 *
 * &lt;li&gt;
 * The {<span class=3D"hljs-doctag">@code</span> additionalDataToReturnFrom=
TokenEndpoint} method
 * adds no additional data.
 * &lt;/li&gt;
 *
 * &lt;/ul&gt;
 */</span>
<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-class"><span=
 class=3D"hljs-keyword">class</span> <span class=3D"hljs-title">CustomScope=
Validator</span> <span class=3D"hljs-keyword">implements</span> <span class=
=3D"hljs-title">ScopeValidator</span> </span>{
    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> Set&lt;String&gt; <span class=3D"hljs-title">validateAuthorizationScope</=
span><span class=3D"hljs-params">(
            ClientRegistration clientRegistration,
            Set&lt;String&gt; scope,
            OAuth2Request request)</span> </span>{
        <span class=3D"hljs-keyword">if</span> (scope =3D=3D <span class=3D=
"hljs-keyword">null</span> || scope.isEmpty()) {
            <span class=3D"hljs-keyword">return</span> clientRegistration.g=
etDefaultScopes();
        }

        Set&lt;String&gt; scopes =3D <span class=3D"hljs-keyword">new</span=
> HashSet&lt;String&gt;(
                clientRegistration.getAllowedScopes());
        scopes.retainAll(scope);
        <span class=3D"hljs-keyword">return</span> scopes;
    }

    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> Set&lt;String&gt; <span class=3D"hljs-title">validateAccessTokenScope</sp=
an><span class=3D"hljs-params">(
            ClientRegistration clientRegistration,
            Set&lt;String&gt; scope,
            OAuth2Request request)</span> </span>{
        <span class=3D"hljs-keyword">if</span> (scope =3D=3D <span class=3D=
"hljs-keyword">null</span> || scope.isEmpty()) {
            <span class=3D"hljs-keyword">return</span> clientRegistration.g=
etDefaultScopes();
        }

        Set&lt;String&gt; scopes =3D <span class=3D"hljs-keyword">new</span=
> HashSet&lt;String&gt;(
                clientRegistration.getAllowedScopes());
        scopes.retainAll(scope);
        <span class=3D"hljs-keyword">return</span> scopes;
    }

    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> Set&lt;String&gt; <span class=3D"hljs-title">validateRefreshTokenScope</s=
pan><span class=3D"hljs-params">(
            ClientRegistration clientRegistration,
            Set&lt;String&gt; requestedScope,
            Set&lt;String&gt; tokenScope,
            OAuth2Request request)</span> </span>{
        <span class=3D"hljs-keyword">if</span> (requestedScope =3D=3D <span=
 class=3D"hljs-keyword">null</span> || requestedScope.isEmpty()) {
            <span class=3D"hljs-keyword">return</span> tokenScope;
        }

        Set&lt;String&gt; scopes =3D <span class=3D"hljs-keyword">new</span=
> HashSet&lt;String&gt;(tokenScope);
        scopes.retainAll(requestedScope);
        <span class=3D"hljs-keyword">return</span> scopes;
    }

   <span class=3D"hljs-meta">@Override</span>
   <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span>=
 UserInfoClaims <span class=3D"hljs-title">getUserInfo</span><span class=3D=
"hljs-params">(
           AccessToken token,
           OAuth2Request request)</span>
           <span class=3D"hljs-keyword">throws</span> UnauthorizedClientExc=
eption, NotFoundException </span>{
       Map&lt;String, Object&gt; response =3D mapScopes(token);
       response.put(<span class=3D"hljs-string">"sub"</span>, token.getReso=
urceOwnerId());
       UserInfoClaims claims =3D <span class=3D"hljs-keyword">new</span> Us=
erInfoClaims(response, <span class=3D"hljs-keyword">null</span>);
       <span class=3D"hljs-keyword">return</span> claims;
   }

    <span class=3D"hljs-comment">/**
     * Set read and write permissions according to scope.
     *
     * <span class=3D"hljs-doctag">@param</span> token The access token pre=
sented for validation.
     * <span class=3D"hljs-doctag">@return</span> The map of read and write=
 permissions,
     *         with permissions set to {<span class=3D"hljs-doctag">@code</=
span> true} or {<span class=3D"hljs-doctag">@code</span> false},
     *         as appropriate.
     */</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> Map&lt;String,Object&gt; <span class=3D"hljs-title">mapScopes</span><spa=
n class=3D"hljs-params">(AccessToken token)</span> </span>{
        Set&lt;String&gt; scopes =3D token.getScope();
        Map&lt;String, Object&gt; map =3D <span class=3D"hljs-keyword">new<=
/span> HashMap&lt;String, Object&gt;();
        <span class=3D"hljs-keyword">final</span> String[] permissions =3D =
{<span class=3D"hljs-string">"read"</span>, <span class=3D"hljs-string">"wr=
ite"</span>};

        <span class=3D"hljs-keyword">for</span> (String scope : permissions=
) {
            <span class=3D"hljs-keyword">if</span> (scopes.contains(scope))=
 {
                map.put(scope, <span class=3D"hljs-keyword">true</span>);
            } <span class=3D"hljs-keyword">else</span> {
                map.put(scope, <span class=3D"hljs-keyword">false</span>);
            }
        }
        <span class=3D"hljs-keyword">return</span> map;
    }

    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> Map&lt;String, Object&gt; <span class=3D"hljs-title">evaluateScope</span>=
<span class=3D"hljs-params">(AccessToken token)</span> </span>{
        <span class=3D"hljs-keyword">return</span> mapScopes(token);
    }

    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> Map&lt;String, String&gt; <span class=3D"hljs-title">additionalDataToRetu=
rnFromAuthorizeEndpoint</span><span class=3D"hljs-params">(
            Map&lt;String, Token&gt; tokens,
            OAuth2Request request)</span> </span>{
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> HashMap&lt;String, String&gt;(); <span class=3D"hljs-commen=
t">// No special handling</span>
    }

    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">addit=
ionalDataToReturnFromTokenEndpoint</span><span class=3D"hljs-params">(
            AccessToken token,
            OAuth2Request request)</span>
            <span class=3D"hljs-keyword">throws</span> ServerException, Inv=
alidClientException </span>{
        <span class=3D"hljs-comment">// No special handling</span>
    }
}
  </pre></div><div class=3D"section" id=3D"build-oauth2-scopes-plugin"><div=
 class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#build-oauth2-scopes-plugin">3.2.2.&nbsp;Building the OAuth 2.0 Scope Vali=
dator Sample Plugin</a></h3></div></div></div><p>
   The
   <a class=3D"link" href=3D"https://github.com/ForgeRock/openam-scope-samp=
le/tree/13.0.0" target=3D"_blank">sample scope validator plugin source</a>
   is available online.
   Get a local clone so that you can try the sample on your system.
   In the sources you find the following files.
  </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span clas=
s=3D"term"><code class=3D"filename">pom.xml</code></span></dt><dd><p>
      Apache Maven project file for the module
     </p><p>
      This file specifies how to build the sample scope validator plugin,
      and also specifies its dependencies on OpenAM components.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">src/main/ja=
va/org/forgerock/openam/examples/CustomScopeValidator.java</code></span></d=
t><dd><p>
      Core class for the sample OAuth 2.0 scope validator plugin
     </p><p>
      See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#design-oauth2-scopes-plugin" title=3D"3.2.1.=
&nbsp;Designing an OAuth 2.0 Scope Validator Plugin">"Designing an OAuth 2.=
0 Scope Validator Plugin"</a> for a listing.
     </p></dd></dl></div><p>
   Build the module using Apache Maven.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">cd /path/to/openam-scope-sample</strong>
$ <strong class=3D"userinput">mvn install</strong>
<em class=3D"computeroutput">[INFO] Scanning for projects...
[INFO]
[INFO] --------------------------------------------------------------------=
----
[INFO] Building openam-scope-sample 1.0.0-SNAPSHOT
[INFO] --------------------------------------------------------------------=
----

...

[INFO]
[INFO] --- maven-jar-plugin:2.3.2:jar (default-jar) @ openam-scope-sample -=
--
[INFO] Building jar: .../target/openam-scope-sample-1.0.0-SNAPSHOT.jar

...

[INFO] --------------------------------------------------------------------=
----
[INFO] BUILD SUCCESS
[INFO] --------------------------------------------------------------------=
----
[INFO] Total time: 1.827s
[INFO] Finished at: Tue Jun 03 10:40:31 CEST 2014
[INFO] Final Memory: 27M/357M
[INFO] --------------------------------------------------------------------=
----</em></pre><p>
   After you successfully build the module,
   you find the .jar in the <code class=3D"filename">target/</code> directo=
ry of the project.
  </p></div><div class=3D"section" id=3D"configure-oauth2-scopes-plugin"><d=
iv class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#configure-oauth2-scopes-plugin">3.2.3.&nbsp;Configuring OpenAM to Use t=
he Plugin</a></h3></div></div></div><p>
   After building your plugin .jar file, copy the .jar file
   under <code class=3D"filename">WEB-INF/lib/</code> where you deployed Op=
enAM.
  </p><p>
   Restart OpenAM or the container in which it runs.
  </p><p>
   In OpenAM console, you can either
   configure a specific OAuth 2.0 provider to use your plugin,
   or configure your plugin as the default for new OAuth 2.0 providers.
   In either case, you need the class name of your plugin.
   The class name for the sample plugin is
   <code class=3D"literal">org.forgerock.openam.examples.CustomScopeValidat=
or</code>.
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     To configure a specific OAuth 2.0 provider to use your plugin, navigat=
e to
     Realms &gt; <em class=3D"replaceable">Realm Name</em> &gt; Services, c=
lick OAuth2
     Provider, and enter the class name of your scopes plugin to the Scope =
Implementation Class
     field.
    </p></li><li class=3D"listitem"><p>
     To configure your plugin as the default for new OAuth 2.0 providers,
     add the class name of your scopes plugin. Navigate to Configure &gt; G=
lobal
     Services, click OAuth2 Provider, and set Scope Implementation Class.
    </p></li></ul></div></div><div class=3D"section" id=3D"try-oauth2-scope=
s-plugin"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#try-oauth2-scopes-plugin">3.2.4.&nbsp;Trying the Sample P=
lugin</a></h3></div></div></div><p>
   In order to try the sample plugin,
   make sure you have configured an OAuth 2.0 provider to use the sample pl=
ugin.
   Also, set up an OAuth 2.0 client of the provider
   that takes scopes <code class=3D"literal">read</code> and <code class=3D=
"literal">write</code>.
  </p><p>
   Next try the provider as shown in the following example:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request POST \
 --data "grant_type=3Dclient_credentials \
&amp;client_id=3DmyClientID&amp;client_secret=3Dpassword&amp;scope=3Dread" =
\
 https://openam.example.com:8443/openam/oauth2/access_token</strong>

<em class=3D"computeroutput">{
    "scope": "read",
    "expires_in": 59,
    "token_type": "Bearer",
    "access_token": "c8860442-daba-4af0-a1d9-b607c03e5a0b"
}</em>

$ <strong class=3D"userinput">curl https://openam.example.com:8443/openam/o=
auth2/tokeninfo\
?access_token=3D0d492486-11a7-4175-b116-2fc1cbff6d78</strong>
<em class=3D"computeroutput">{
    "scope": [
        "read"
    ],
    "grant_type": "client_credentials",
    "realm": "/",
    "write": false,
    "read": true,
    "token_type": "Bearer",
    "expires_in": 24,
    "access_token": "c8860442-daba-4af0-a1d9-b607c03e5a0b"
}</em></pre><p>
   As seen in this example, the requested scope <code class=3D"literal">rea=
d</code> is
   authorized, but the <code class=3D"literal">write</code> scope has not b=
een authorized.
  </p></div></div><div class=3D"section" id=3D"sec-auth-spi"><div class=3D"=
titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a class=3D"=
self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#sec-auth-spi">3.3.&nbsp;Creating a Custom Authentication Modu=
le</a></h2></div></div></div><p>This section shows how to customize authent=
ication with a sample custom
 authentication module. For deployments with particular requirements not me=
t by
 existing OpenAM authentication modules, determine whether you can adapt on=
e of
 the built-in or extension modules for your needs. If not, build the
 functionality into a custom authentication module.</p><div class=3D"sectio=
n" id=3D"about-custom-auth-module"><div class=3D"titlepage"><div><div><h3 c=
lass=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.c=
om/docs/openam/13.5/dev-guide/index.html#about-custom-auth-module">3.3.1.&n=
bsp;About the Sample Authentication Module</a></h3></div></div></div><p>The=
 sample authentication module prompts for a user name and password
  to authenticate the user, and handles error conditions. The sample shows =
how
  you integrate an authentication module into OpenAM such that you can
  configure the module through OpenAM console, and also localize the user
  interface.</p><p lang=3D"en">
  For information on downloading and building OpenAM sample source code, se=
e
  <a class=3D"link" href=3D"https://backstage.forgerock.com/knowledge/kb/ar=
ticle/a47487197" target=3D"_blank">How do I access and build the
    sample code provided for OpenAM 12.x, 13.x and AM (All versions)?</a> i=
n the
  <em class=3D"citetitle">Knowledge Base</em>.
</p><div class=3D"variablelist"><p>
    Get a local clone so that you can try the sample
    on your system. In the sources, you find the following files under the
    <code class=3D"filename">/path/to/openam-source/openam-samples/custom-a=
uthentication-module</code>
    directory:
   </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"f=
ilename">pom.xml</code></span></dt><dd><p>Apache Maven project file for the=
 module</p><p>This file specifies how to build the sample authentication mo=
dule,
     and also specifies its dependencies on OpenAM components and on the
     Java Servlet API.</p></dd><dt><span class=3D"term"><code class=3D"file=
name">src/main/java/org/forgerock/openam/examples/SampleAuth.java</code></s=
pan></dt><dd><p>Core class for the sample authentication module</p><p>This =
class is called by OpenAM to initialize the module and to
     process authentication. See
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#authentication-logic-sample-auth-module" title=3D=
"3.3.4.&nbsp;The Sample Authentication Logic">"The Sample Authentication Lo=
gic"</a> for details.</p></dd><dt><span class=3D"term"><code class=3D"filen=
ame">src/main/java/org/forgerock/openam/examples/SampleAuthPrincipal.java</=
code></span></dt><dd><p>Class implementing <code class=3D"literal">java.sec=
urity.Principal</code>
     interface that defines how to map credentials to identities</p><p>This=
 class is used to process authentication. See
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#principal-sample-auth-module" title=3D"3.3.5.&nbs=
p;The Sample Auth Principal">"The Sample Auth Principal"</a> for details.</=
p></dd><dt><span class=3D"term"><code class=3D"filename">src/main/resources=
/amAuthSampleAuth.properties</code></span></dt><dd><p>Properties file mappi=
ng UI strings to property values</p><p>This file makes it easier to localiz=
e the UI. See
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#properties-sample-auth-module" title=3D"3.3.2.&nb=
sp;Sample Auth Properties">"Sample Auth Properties"</a> for details.</p></d=
d><dt><span class=3D"term"><code class=3D"filename">src/main/resources/amAu=
thSampleAuth.xml</code></span></dt><dd><p>Configuration file for the sample=
 authentication service</p><p>This file is used when registering the authen=
tication module with
     OpenAM. See <a class=3D"xref" href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/dev-guide/index.html#service-conf-sample-auth-module" titl=
e=3D"3.3.6.&nbsp;The Sample Auth Service Configuration">"The Sample Auth Se=
rvice Configuration"</a> for details.</p></dd><dt><span class=3D"term"><cod=
e class=3D"filename">src/main/resources/config/auth/default/SampleAuth.xml<=
/code></span></dt><dd><p>Callback file for OpenAM classic UI authentication=
 pages</p><p>The sample authentication module does not include localized ve=
rsions
     of this file. See <a class=3D"xref" href=3D"https://backstage.forgeroc=
k.com/docs/openam/13.5/dev-guide/index.html#callbacks-file-sample-auth-modu=
le" title=3D"3.3.3.&nbsp;Sample Auth Callbacks">"Sample Auth Callbacks"</a>=
 for
     details.</p></dd></dl></div></div><div class=3D"section" id=3D"propert=
ies-sample-auth-module"><div class=3D"titlepage"><div><div><h3 class=3D"tit=
le"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#properties-sample-auth-module">3.3.2.&nbsp;Sa=
mple Auth Properties</a></h3></div></div></div><p>OpenAM uses a Java proper=
ties file per locale to retrieve the
   appropriate, localized strings for the authentication module.</p><p>The =
following is the Sample Authentication Module properties file,
   <code class=3D"filename">amAuthSampleAuth.properties</code>.</p><div cla=
ss=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to clipboar=
d"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></spa=
n></span></div><pre class=3D"codelisting prettyprint java hljs">sampleauth-=
service-description=3DSample Authentication Module
a500=3DAuthentication Level
a501=3DService Specific Attribute

sampleauth-ui-login-header=3DLogin
sampleauth-ui-username-prompt=3DUser Name:
sampleauth-ui-password-prompt=3DPassword:

sampleauth-error-<span class=3D"hljs-number">1</span>=3DError <span class=
=3D"hljs-number">1</span> occurred during the authentication
sampleauth-error-<span class=3D"hljs-number">2</span>=3DError <span class=
=3D"hljs-number">2</span> occurred during the authentication</pre></div><di=
v class=3D"section" id=3D"callbacks-file-sample-auth-module"><div class=3D"=
titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"htt=
ps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#callback=
s-file-sample-auth-module">3.3.3.&nbsp;Sample Auth Callbacks</a></h3></div>=
</div></div><p>OpenAM callbacks XML files are used to build the classic UI =
to prompt
  the user for identity information needed to process the authentication.
  The document type for a callback XML file is described in
  <code class=3D"filename">WEB-INF/Auth_Module_Properties.dtd</code> where =
OpenAM is
  deployed.</p><p>The value of the <code class=3D"literal">moduleName</code=
> property in the callbacks
  file must match your custom authentication module's class name. Observe t=
hat
  the module name in <a class=3D"xref" href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#full-callbacks-file" title=3D"Sam=
ple Auth Callbacks File">"Sample Auth Callbacks File"</a>,
  <code class=3D"literal">SampleAuth</code>, matches the class name in
  <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#sample-auth-module-code" title=3D"Sample Authenticat=
ion Module Code">"Sample Authentication Module Code"</a>.
  </p><div class=3D"example" id=3D"full-callbacks-file"><div class=3D"examp=
le-title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/do=
cs/openam/13.5/dev-guide/index.html#full-callbacks-file">Sample Auth Callba=
cks File</a></div><div class=3D"example-contents"><p>The following is the <=
code class=3D"filename">SampleAuth.xml</code> callbacks
   file.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"C=
opy code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"=
fa fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint xm=
l hljs"><span class=3D"hljs-meta">&lt;!DOCTYPE <span class=3D"hljs-meta-key=
word">ModuleProperties</span> <span class=3D"hljs-meta-keyword">PUBLIC</spa=
n>
 <span class=3D"hljs-meta-string">"=3D//iPlanet//Authentication Module Prop=
erties XML Interface 1.0 DTD//EN"</span>
        <span class=3D"hljs-meta-string">"jar://com/sun/identity/authentica=
tion/Auth_Module_Properties.dtd"</span>&gt;</span>

<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ModuleProperties</sp=
an> <span class=3D"hljs-attr">moduleName</span>=3D<span class=3D"hljs-strin=
g">"SampleAuth"</span> <span class=3D"hljs-attr">version</span>=3D<span cla=
ss=3D"hljs-string">"1.0"</span> &gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Callbacks</span>=
 <span class=3D"hljs-attr">length</span>=3D<span class=3D"hljs-string">"0"<=
/span> <span class=3D"hljs-attr">order</span>=3D<span class=3D"hljs-string"=
>"1"</span> <span class=3D"hljs-attr">timeout</span>=3D<span class=3D"hljs-=
string">"600"</span> <span class=3D"hljs-attr">header</span>=3D<span class=
=3D"hljs-string">"#NOT SHOWN#"</span> /&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Callbacks</span>=
 <span class=3D"hljs-attr">length</span>=3D<span class=3D"hljs-string">"2"<=
/span> <span class=3D"hljs-attr">order</span>=3D<span class=3D"hljs-string"=
>"2"</span> <span class=3D"hljs-attr">timeout</span>=3D<span class=3D"hljs-=
string">"600"</span> <span class=3D"hljs-attr">header</span>=3D<span class=
=3D"hljs-string">"#TO BE SUBSTITUTED#"</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">NameCallback=
</span> <span class=3D"hljs-attr">isRequired</span>=3D<span class=3D"hljs-s=
tring">"true"</span>&gt;</span>
            <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Prompt</=
span>&gt;</span>#USERNAME#<span class=3D"hljs-tag">&lt;/<span class=3D"hljs=
-name">Prompt</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">NameCallbac=
k</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">PasswordCall=
back</span> <span class=3D"hljs-attr">echoPassword</span>=3D<span class=3D"=
hljs-string">"false"</span> &gt;</span>
            <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Prompt</=
span>&gt;</span>#PASSWORD#<span class=3D"hljs-tag">&lt;/<span class=3D"hljs=
-name">Prompt</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">PasswordCal=
lback</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Callbacks</span=
>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Callbacks</span>=
 <span class=3D"hljs-attr">length</span>=3D<span class=3D"hljs-string">"1"<=
/span> <span class=3D"hljs-attr">order</span>=3D<span class=3D"hljs-string"=
>"3"</span> <span class=3D"hljs-attr">timeout</span>=3D<span class=3D"hljs-=
string">"600"</span> <span class=3D"hljs-attr">header</span>=3D<span class=
=3D"hljs-string">"#TO BE SUBSTITUTED#"</span>
        <span class=3D"hljs-attr">error</span>=3D<span class=3D"hljs-string=
">"true"</span> &gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">NameCallback=
</span>&gt;</span>
            <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Prompt</=
span>&gt;</span>#THE DUMMY WILL NEVER BE SHOWN#<span class=3D"hljs-tag">&lt=
;/<span class=3D"hljs-name">Prompt</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">NameCallbac=
k</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Callbacks</span=
>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ModuleProperties</s=
pan>&gt;</span></pre><div class=3D"orderedlist"><p>This file specifies thre=
e states.</p><ol class=3D"orderedlist" type=3D"1"><li class=3D"listitem"><p=
>The initial state (order=3D"1") is used dynamically to replace the
     dummy strings shown between hashes (for example,
     <code class=3D"literal">#USERNAME#</code>) by the
     <code class=3D"literal">substituteUIStrings()</code> method in
     <code class=3D"filename">SampleAuth.java</code>.</p></li><li class=3D"=
listitem"><p>The next state (order=3D"2") handles prompting the user for
     authentication information.</p></li><li class=3D"listitem"><p>The last=
 state (order=3D"3") has the attribute
     <code class=3D"literal">error=3D"true"</code>. If the authentication m=
odule state
     machine reaches this order then the authentication has failed. The
     <code class=3D"literal">NameCallback</code> is not used and not displa=
yed to user.
     OpenAM requires that the callbacks array have at least one element.
     Otherwise OpenAM does not permit header substitution.</p></li></ol></d=
iv></div></div><br class=3D"example-break"></div><div class=3D"section" id=
=3D"authentication-logic-sample-auth-module"><div class=3D"titlepage"><div>=
<div><h3 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#authentication-logic-sam=
ple-auth-module">3.3.4.&nbsp;The Sample Authentication Logic</a></h3></div>=
</div></div><p>An OpenAM authentication module must extend the
  <code class=3D"literal">com.sun.identity.authentication.spi.AMLoginModule=
</code> abstract
  class, and must implement the methods shown below.</p><p>See the <a class=
=3D"link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/apidocs"=
 target=3D"_blank"><em class=3D"citetitle">OpenAM Java SDK API Specificatio=
n</em></a> for
  reference.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span clas=
s=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettypri=
nt java hljs"><span class=3D"hljs-comment">// OpenAM calls the init() metho=
d once when the module is created.</span>
<span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span> <s=
pan class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">init</spa=
n><span class=3D"hljs-params">(Subject subject, Map sharedState, Map option=
s)</span>

<span class=3D"hljs-comment">// OpenAM calls the process() method when the =
user submits authentication</span>
<span class=3D"hljs-comment">// information. The process() method determine=
s what happens next:</span>
<span class=3D"hljs-comment">// success, failure, or the next state specifi=
ed by the order</span>
<span class=3D"hljs-comment">// attribute in the callbacks XML file.</span>
<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">int=
</span> <span class=3D"hljs-title">process</span><span class=3D"hljs-params=
">(Callback[] callbacks, <span class=3D"hljs-keyword">int</span> state)</sp=
an> <span class=3D"hljs-keyword">throws</span> LoginException

<span class=3D"hljs-comment">// OpenAM expects the getPrincipal() method to=
 return an implementation of</span>
<span class=3D"hljs-comment">// the java.security.Principal interface.</spa=
n>
<span class=3D"hljs-keyword">public</span> Principal <span class=3D"hljs-ti=
tle">getPrincipal</span><span class=3D"hljs-params">()</span></span></pre><=
p>OpenAM does not reuse authentication module instances. This means that
  you can store information specific to the authentication process in the
  instance.</p><div class=3D"example" id=3D"sample-auth-module-code"><div c=
lass=3D"example-title"><a class=3D"self-link" href=3D"https://backstage.for=
gerock.com/docs/openam/13.5/dev-guide/index.html#sample-auth-module-code">S=
ample Authentication Module Code</a></div><div class=3D"example-contents"><=
p>The implementation, <code class=3D"filename">SampleAuth.java</code>, is s=
hown
  below.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"C=
opy code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"=
fa fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint ja=
va hljs"><span class=3D"hljs-comment">/**
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2011-2018 ForgeRock AS. All Rights Reserved
 *
 * The contents of this file are subject to the terms
 * of the Common Development and Distribution License
 * (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at legal/CDDLv1.0.txt.
 * See the License for the specific language governing
 * permission and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL
 * Header Notice in each file and include the License file at legal/CDDLv1.=
0.txt.
 * If applicable, add the following below the CDDL Header,
 * with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 */</span>

<span class=3D"hljs-keyword">package</span> org.forgerock.openam.examples;

<span class=3D"hljs-keyword">import</span> java.security.Principal;
<span class=3D"hljs-keyword">import</span> java.util.Map;
<span class=3D"hljs-keyword">import</span> java.util.ResourceBundle;

<span class=3D"hljs-keyword">import</span> javax.security.auth.Subject;
<span class=3D"hljs-keyword">import</span> javax.security.auth.callback.Cal=
lback;
<span class=3D"hljs-keyword">import</span> javax.security.auth.callback.Nam=
eCallback;
<span class=3D"hljs-keyword">import</span> javax.security.auth.callback.Pas=
swordCallback;
<span class=3D"hljs-keyword">import</span> javax.security.auth.login.LoginE=
xception;

<span class=3D"hljs-keyword">import</span> com.sun.identity.authentication.=
spi.AMLoginModule;
<span class=3D"hljs-keyword">import</span> com.sun.identity.authentication.=
spi.AuthLoginException;
<span class=3D"hljs-keyword">import</span> com.sun.identity.authentication.=
spi.InvalidPasswordException;
<span class=3D"hljs-keyword">import</span> com.sun.identity.authentication.=
util.ISAuthConstants;
<span class=3D"hljs-keyword">import</span> com.sun.identity.shared.datastru=
ct.CollectionHelper;
<span class=3D"hljs-keyword">import</span> com.sun.identity.shared.debug.De=
bug;

<span class=3D"hljs-comment">/**
 * SampleAuth authentication module example.
 *
 * If you create your own module based on this example, you must modify all
 * occurrences of "SampleAuth" in addition to changing the name of the clas=
s.
 *
 * Please refer to OpenAM documentation for further information.
 *
 * Feel free to look at the code for authentication modules delivered with
 * OpenAM, as they implement this same API.
 */</span>
<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-class"><span=
 class=3D"hljs-keyword">class</span> <span class=3D"hljs-title">SampleAuth<=
/span> <span class=3D"hljs-keyword">extends</span> <span class=3D"hljs-titl=
e">AMLoginModule</span> </span>{

    <span class=3D"hljs-comment">// Name for the debug-log</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String DEBUG_NAME=
 =3D <span class=3D"hljs-string">"SampleAuth"</span>;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> Debug debug =3D D=
ebug.getInstance(DEBUG_NAME);

    <span class=3D"hljs-comment">// Name of the resource bundle</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String amAuthSamp=
leAuth =3D <span class=3D"hljs-string">"amAuthSampleAuth"</span>;

    <span class=3D"hljs-comment">// User names for authentication logic</sp=
an>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String USERNAME =
=3D <span class=3D"hljs-string">"demo"</span>;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String PASSWORD =
=3D <span class=3D"hljs-string">"changeit"</span>;

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String ERROR_1_US=
ERNAME =3D <span class=3D"hljs-string">"test1"</span>;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String ERROR_2_US=
ERNAME =3D <span class=3D"hljs-string">"test2"</span>;

    <span class=3D"hljs-comment">// Orders defined in the callbacks file</s=
pan>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> <span class=3D"hl=
js-keyword">int</span> STATE_BEGIN =3D <span class=3D"hljs-number">1</span>=
;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> <span class=3D"hl=
js-keyword">int</span> STATE_AUTH =3D <span class=3D"hljs-number">2</span>;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> <span class=3D"hl=
js-keyword">int</span> STATE_ERROR =3D <span class=3D"hljs-number">3</span>=
;

    <span class=3D"hljs-comment">// Errors properties</span>
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String SAMPLE_AUT=
H_ERROR_1 =3D <span class=3D"hljs-string">"sampleauth-error-1"</span>;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String SAMPLE_AUT=
H_ERROR_2 =3D <span class=3D"hljs-string">"sampleauth-error-2"</span>;

    <span class=3D"hljs-keyword">private</span> Map&lt;String, String&gt; o=
ptions;
    <span class=3D"hljs-keyword">private</span> ResourceBundle bundle;
    <span class=3D"hljs-keyword">private</span> Map&lt;String, String&gt; s=
haredState;

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-title">SampleAuth</span><span class=3D"hljs-params">(=
)</span> </span>{
        <span class=3D"hljs-keyword">super</span>();
    }


    <span class=3D"hljs-comment">/**
     * This method stores service attributes and localized properties for l=
ater
     * use.
     * <span class=3D"hljs-doctag">@param</span> subject
     * <span class=3D"hljs-doctag">@param</span> sharedState
     * <span class=3D"hljs-doctag">@param</span> options
     */</span>
    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">init<=
/span><span class=3D"hljs-params">(Subject subject, Map sharedState, Map op=
tions)</span> </span>{

        debug.message(<span class=3D"hljs-string">"SampleAuth::init"</span>=
);

        <span class=3D"hljs-keyword">this</span>.options =3D options;
        <span class=3D"hljs-keyword">this</span>.sharedState =3D sharedStat=
e;
        <span class=3D"hljs-keyword">this</span>.bundle =3D amCache.getResB=
undle(amAuthSampleAuth, getLoginLocale());
    }

    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">int</span> <span class=3D"hljs-title">proces=
s</span><span class=3D"hljs-params">(Callback[] callbacks, <span class=3D"h=
ljs-keyword">int</span> state)</span> <span class=3D"hljs-keyword">throws</=
span> LoginException </span>{

        debug.message(<span class=3D"hljs-string">"SampleAuth::process stat=
e: {}"</span>, state);

        <span class=3D"hljs-keyword">switch</span> (state) {

            <span class=3D"hljs-keyword">case</span> STATE_BEGIN:
                <span class=3D"hljs-comment">// No time wasted here - simpl=
y modify the UI and</span>
                <span class=3D"hljs-comment">// proceed to next state</span=
>
                substituteUIStrings();
                <span class=3D"hljs-keyword">return</span> STATE_AUTH;

            <span class=3D"hljs-keyword">case</span> STATE_AUTH:
                <span class=3D"hljs-comment">// Get data from callbacks. Re=
fer to callbacks XML file.</span>
                NameCallback nc =3D (NameCallback) callbacks[<span class=3D=
"hljs-number">0</span>];
                PasswordCallback pc =3D (PasswordCallback) callbacks[<span =
class=3D"hljs-number">1</span>];
                String username =3D nc.getName();
                String password =3D String.valueOf(pc.getPassword());

                <span class=3D"hljs-comment">//First errorstring is stored =
in "sampleauth-error-1" property.</span>
                <span class=3D"hljs-keyword">if</span> (ERROR_1_USERNAME.eq=
uals(username)) {
                    setErrorText(SAMPLE_AUTH_ERROR_1);
                    <span class=3D"hljs-keyword">return</span> STATE_ERROR;
                }

                <span class=3D"hljs-comment">//Second errorstring is stored=
 in "sampleauth-error-2" property.</span>
                <span class=3D"hljs-keyword">if</span> (ERROR_2_USERNAME.eq=
uals(username)) {
                    setErrorText(SAMPLE_AUTH_ERROR_2);
                    <span class=3D"hljs-keyword">return</span> STATE_ERROR;
                }

                <span class=3D"hljs-keyword">if</span> (USERNAME.equals(use=
rname) &amp;&amp; PASSWORD.equals(password)) {
                    debug.message(<span class=3D"hljs-string">"SampleAuth::=
process User '{}' "</span> +
                            <span class=3D"hljs-string">"authenticated with=
 success."</span>, username);
                    <span class=3D"hljs-keyword">return</span> ISAuthConsta=
nts.LOGIN_SUCCEED;
                }

                <span class=3D"hljs-keyword">throw</span> <span class=3D"hl=
js-keyword">new</span> InvalidPasswordException(<span class=3D"hljs-string"=
>"password is wrong"</span>,
                        USERNAME);

            <span class=3D"hljs-keyword">case</span> STATE_ERROR:
                <span class=3D"hljs-keyword">return</span> STATE_ERROR;
            <span class=3D"hljs-keyword">default</span>:
                <span class=3D"hljs-keyword">throw</span> <span class=3D"hl=
js-keyword">new</span> AuthLoginException(<span class=3D"hljs-string">"inva=
lid state"</span>);
        }
    }

    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> Principal <span class=3D"hljs-title">getPrincipal</span><span class=3D"hl=
js-params">()</span> </span>{
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> SampleAuthPrincipal(USERNAME);
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">setE=
rrorText</span><span class=3D"hljs-params">(String err)</span> <span class=
=3D"hljs-keyword">throws</span> AuthLoginException </span>{
        <span class=3D"hljs-comment">// Receive correct string from propert=
ies and substitute the</span>
        <span class=3D"hljs-comment">// header in callbacks order 3.</span>
        substituteHeader(STATE_ERROR, bundle.getString(err));
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">private</spa=
n> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">subs=
tituteUIStrings</span><span class=3D"hljs-params">()</span> <span class=3D"=
hljs-keyword">throws</span> AuthLoginException </span>{
        <span class=3D"hljs-comment">// Get service specific attribute conf=
igured in OpenAM</span>
        String ssa =3D CollectionHelper.getMapAttr(options, <span class=3D"=
hljs-string">"specificAttribute"</span>);

        <span class=3D"hljs-comment">// Get property from bundle</span>
        String new_hdr =3D ssa + <span class=3D"hljs-string">" "</span> +
                bundle.getString(<span class=3D"hljs-string">"sampleauth-ui=
-login-header"</span>);
        substituteHeader(STATE_AUTH, new_hdr);

        replaceCallback(STATE_AUTH, <span class=3D"hljs-number">0</span>, <=
span class=3D"hljs-keyword">new</span> NameCallback(
                bundle.getString(<span class=3D"hljs-string">"sampleauth-ui=
-username-prompt"</span>)));
        replaceCallback(STATE_AUTH, <span class=3D"hljs-number">1</span>, <=
span class=3D"hljs-keyword">new</span> PasswordCallback(
                bundle.getString(<span class=3D"hljs-string">"sampleauth-ui=
-password-prompt"</span>), <span class=3D"hljs-keyword">false</span>));
    }
}</pre></div></div><br class=3D"example-break"></div><div class=3D"section"=
 id=3D"principal-sample-auth-module"><div class=3D"titlepage"><div><div><h3=
 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#principal-sample-auth-module">3.=
3.5.&nbsp;The Sample Auth Principal</a></h3></div></div></div><p>The implem=
entation, <code class=3D"filename">SampleAuthPrincipal.java</code>, is
  shown below.</p><div class=3D"informalexample"><div class=3D"zero-clipboa=
rd hidden-xs hidden-print" title=3D"Copy code to clipboard"><span class=3D"=
btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></span></div><pr=
e class=3D"codelisting prettyprint java hljs"><span class=3D"hljs-comment">=
/**
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2011-2018 ForgeRock AS. All Rights Reserved
 *
 * The contents of this file are subject to the terms
 * of the Common Development and Distribution License
 * (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at legal/CDDLv1.0.txt.
 * See the License for the specific language governing
 * permission and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL
 * Header Notice in each file and include the License file at legal/CDDLv1.=
0.txt.
 * If applicable, add the following below the CDDL Header,
 * with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 */</span>

<span class=3D"hljs-keyword">package</span> org.forgerock.openam.examples;

<span class=3D"hljs-keyword">import</span> java.io.Serializable;
<span class=3D"hljs-keyword">import</span> java.security.Principal;

<span class=3D"hljs-comment">/**
 * SampleAuthPrincipal represents the user entity.
 */</span>
<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-class"><span=
 class=3D"hljs-keyword">class</span> <span class=3D"hljs-title">SampleAuthP=
rincipal</span> <span class=3D"hljs-keyword">implements</span> <span class=
=3D"hljs-title">Principal</span>, <span class=3D"hljs-title">Serializable</=
span> </span>{
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String COLON =3D =
<span class=3D"hljs-string">" : "</span>;

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> String name;

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-title">SampleAuthPrincipal</span><span class=3D"hljs-=
params">(String name)</span> </span>{

        <span class=3D"hljs-keyword">if</span> (name =3D=3D <span class=3D"=
hljs-keyword">null</span>) {
            <span class=3D"hljs-keyword">throw</span> <span class=3D"hljs-k=
eyword">new</span> NullPointerException(<span class=3D"hljs-string">"illega=
l null input"</span>);
        }

        <span class=3D"hljs-keyword">this</span>.name =3D name;
    }

    <span class=3D"hljs-comment">/**
     * Return the LDAP username for this SampleAuthPrincipal.
     *
     * <span class=3D"hljs-doctag">@return</span> the LDAP username for thi=
s SampleAuthPrincipal
     */</span>
    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> String <span class=3D"hljs-title">getName</span><span class=3D"hljs-param=
s">()</span> </span>{
        <span class=3D"hljs-keyword">return</span> name;
    }

    <span class=3D"hljs-comment">/**
     * Return a string representation of this SampleAuthPrincipal.
     *
     * <span class=3D"hljs-doctag">@return</span> a string representation o=
f this
     *         TestAuthModulePrincipal.
     */</span>
    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> String <span class=3D"hljs-title">toString</span><span class=3D"hljs-para=
ms">()</span> </span>{
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">new</span> StringBuilder().append(<span class=3D"hljs-keyword">this</s=
pan>.getClass().getName())
                .append(COLON).append(name).toString();
    }

    <span class=3D"hljs-comment">/**
     * Compares the specified Object with this SampleAuthPrincipal
     * for equality. Returns true if the given object is also a
     *  SampleAuthPrincipal  and the two SampleAuthPrincipal have
     * the same username.
     *
     * <span class=3D"hljs-doctag">@param</span> o Object to be compared fo=
r equality with this
     *          SampleAuthPrincipal.
     * <span class=3D"hljs-doctag">@return</span> true if the specified Obj=
ect is equal equal to this
     *         SampleAuthPrincipal.
     */</span>
    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">boolean</span> <span class=3D"hljs-title">eq=
uals</span><span class=3D"hljs-params">(Object o)</span> </span>{
        <span class=3D"hljs-keyword">if</span> (o =3D=3D <span class=3D"hlj=
s-keyword">null</span>) {
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
keyword">false</span>;
        }

        <span class=3D"hljs-keyword">if</span> (<span class=3D"hljs-keyword=
">this</span> =3D=3D o) {
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
keyword">true</span>;
        }

        <span class=3D"hljs-keyword">if</span> (!(o <span class=3D"hljs-key=
word">instanceof</span> SampleAuthPrincipal)) {
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
keyword">false</span>;
        }
        SampleAuthPrincipal that =3D (SampleAuthPrincipal) o;

        <span class=3D"hljs-keyword">if</span> (<span class=3D"hljs-keyword=
">this</span>.getName().equals(that.getName())) {
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
keyword">true</span>;
        }
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">false</span>;
    }

    <span class=3D"hljs-comment">/**
     * Return a hash code for this SampleAuthPrincipal.
     *
     * <span class=3D"hljs-doctag">@return</span> a hash code for this Samp=
leAuthPrincipal.
     */</span>
    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">int</span> <span class=3D"hljs-title">hashCo=
de</span><span class=3D"hljs-params">()</span> </span>{
        <span class=3D"hljs-keyword">return</span> name.hashCode();
    }
}</pre></div></div><div class=3D"section" id=3D"service-conf-sample-auth-mo=
dule"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#service-conf-sample-auth-module">3.3.6.&nbsp;The Sample Auth Se=
rvice Configuration</a></h3></div></div></div><p>OpenAM requires that all a=
uthentication modules be configured by means
  of an OpenAM service. At minimum, the service must include an authenticat=
ion
  level attribute. Your module can access these configuration attributes in
  the <code class=3D"literal">options</code> parameter passed to the
  <code class=3D"literal">init()</code> method.</p><div class=3D"itemizedli=
st"><p>Some observations about the service configuration file follow in the
   list below.</p><ul class=3D"itemizedlist" style=3D"list-style-type: disc=
; "><li class=3D"listitem"><p>The document type for a service configuration=
 file is described in
    <code class=3D"filename">WEB-INF/sms.dtd</code> where OpenAM is deploye=
d.</p></li><li class=3D"listitem"><p>
     The service name is derived from the module name. The service name
     must have the following format:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: circle; "><li class=3D"listitem"><p>
       It must start with either <code class=3D"literal">iPlanetAMAuth</cod=
e> or
       <code class=3D"literal">sunAMAuth</code>.
      </p></li><li class=3D"listitem"><p>
       The module name must follow. The case of the module name must match
       the case of the class that implements the custom authentication modu=
le.
      </p></li><li class=3D"listitem"><p>
       It must end with <code class=3D"literal">Service</code>.
      </p></li></ul></div><p>
     In the Sample Auth service configuration, the module name is
     <code class=3D"literal">SampleAuth</code> and the service name is
     <code class=3D"literal">iPlanetAMAuthSampleAuthService</code>.
    </p></li><li class=3D"listitem"><p>The service must have a localized de=
scription, retrieved from a
    properties file.</p></li><li class=3D"listitem"><p>The <code class=3D"l=
iteral">i18nFileName</code> attribute in the service
    configuration holds the default (non-localized) base name of the Java
    properties file. The <code class=3D"literal">i18nKey</code> attributes =
indicate
    properties keys to string values in the Java properties file.</p></li><=
li class=3D"listitem"><p>
     The authentication level attribute name must have the following format=
:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: circle; "><li class=3D"listitem"><p>
       It must start with <code class=3D"literal">iplanet-am-auth-</code>,
       <code class=3D"literal">sun-am-auth-</code>, or <code class=3D"liter=
al">forgerock-am-auth-</code>.
      </p></li><li class=3D"listitem"><p>
       The module name must follow, and must appear in lower case if the
       attribute name starts with <code class=3D"literal">iplanet-am-auth-<=
/code>
       or <code class=3D"literal">forgerock-am-auth-</code>. If the attribu=
te name starts
       with <code class=3D"literal">sun-am-auth-</code>, it must exactly ma=
tch the case
       of the module name as it appears in the service name.
      </p></li><li class=3D"listitem"><p>
       It must end with <code class=3D"literal">-auth-level</code>.
      </p></li></ul></div><p>
     In the Sample Auth service configuration, the authentication level
     attribute name is
     <code class=3D"literal">iplanet-am-auth-sampleauth-auth-level</code>.
    </p></li><li class=3D"listitem"><p>The Sample Auth service configuratio=
n includes an example
    <code class=3D"literal">sampleauth-service-specific-attribute</code>, w=
hich can be
    configured through OpenAM console.</p></li></ul></div><p>The service co=
nfiguration file,
  <code class=3D"filename">amAuthSampleAuth.xml</code>, is shown below.
   Save a local copy of this file, which you use when registering the modul=
e.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint xml hljs=
"><span class=3D"hljs-meta">&lt;?xml version=3D"1.0" encoding=3D"UTF-8"?&gt=
;</span>
<span class=3D"hljs-comment">&lt;!--
   DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

   Copyright (c) 2011-2018 ForgeRock AS.

   The contents of this file are subject to the terms
   of the Common Development and Distribution License
   (the License). You may not use this file except in
   compliance with the License.

   You can obtain a copy of the License at legal/CDDLv1.0.txt.
   See the License for the specific language governing
   permission and limitations under the License.

   When distributing Covered Code, include this CDDL
   Header Notice in each file and include the License file at legal/CDDLv1.=
0.txt.
   If applicable, add the following below the CDDL Header,
   with the fields enclosed by brackets [] replaced by
   your own identifying information:
   "Portions Copyrighted [year] [name of copyright owner]"
--&gt;</span>
<span class=3D"hljs-meta">&lt;!DOCTYPE <span class=3D"hljs-meta-keyword">Se=
rvicesConfiguration</span>
    <span class=3D"hljs-meta-keyword">PUBLIC</span> <span class=3D"hljs-met=
a-string">"=3D//iPlanet//Service Management Services (SMS) 1.0 DTD//EN"</sp=
an>
    <span class=3D"hljs-meta-string">"jar://com/sun/identity/sm/sms.dtd"</s=
pan>&gt;</span>

<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ServicesConfiguratio=
n</span>&gt;</span>
 <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Service</span> <spa=
n class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"iPlanetAMA=
uthSampleAuthService"</span> <span class=3D"hljs-attr">version</span>=3D<sp=
an class=3D"hljs-string">"1.0"</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Schema</span>
   <span class=3D"hljs-attr">serviceHierarchy</span>=3D<span class=3D"hljs-=
string">"/DSAMEConfig/authentication/iPlanetAMAuthSampleAuthService"</span>
   <span class=3D"hljs-attr">i18nFileName</span>=3D<span class=3D"hljs-stri=
ng">"amAuthSampleAuth"</span> <span class=3D"hljs-attr">revisionNumber</spa=
n>=3D<span class=3D"hljs-string">"10"</span>
   <span class=3D"hljs-attr">i18nKey</span>=3D<span class=3D"hljs-string">"=
sampleauth-service-description"</span> <span class=3D"hljs-attr">resourceNa=
me</span>=3D<span class=3D"hljs-string">"sample"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Organization</spa=
n>&gt;</span>
    <span class=3D"hljs-comment">&lt;!-- Specify resourceName for a JSON-fr=
iendly property in the REST SMS --&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeSchema<=
/span> <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">=
"iplanet-am-auth-sampleauth-auth-level"</span> <span class=3D"hljs-attr">re=
sourceName</span>=3D<span class=3D"hljs-string">"authLevel"</span>
     <span class=3D"hljs-attr">type</span>=3D<span class=3D"hljs-string">"s=
ingle"</span> <span class=3D"hljs-attr">syntax</span>=3D<span class=3D"hljs=
-string">"number_range"</span> <span class=3D"hljs-attr">rangeStart</span>=
=3D<span class=3D"hljs-string">"0"</span> <span class=3D"hljs-attr">rangeEn=
d</span>=3D<span class=3D"hljs-string">"2147483647"</span>
     <span class=3D"hljs-attr">i18nKey</span>=3D<span class=3D"hljs-string"=
>"a500"</span>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">DefaultValues</=
span>&gt;</span>
      <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&g=
t;</span>1<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
     <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">DefaultValues<=
/span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">AttributeSchema=
</span>&gt;</span>

    <span class=3D"hljs-comment">&lt;!-- No need for resourceName when the =
name is JSON-compatible --&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeSchema<=
/span> <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">=
"specificAttribute"</span>
     <span class=3D"hljs-attr">type</span>=3D<span class=3D"hljs-string">"s=
ingle"</span> <span class=3D"hljs-attr">syntax</span>=3D<span class=3D"hljs=
-string">"string"</span> <span class=3D"hljs-attr">validator</span>=3D<span=
 class=3D"hljs-string">"no"</span> <span class=3D"hljs-attr">i18nKey</span>=
=3D<span class=3D"hljs-string">"a501"</span> /&gt;</span>

    <span class=3D"hljs-comment">&lt;!--
     For Auth Modules, the parent Schema element specifies the REST SMS res=
ourceName,
     and the nested SubSchema must have resourceName=3D"USE-PARENT"
    --&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">SubSchema</span>=
 <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"serve=
rconfig"</span> <span class=3D"hljs-attr">inheritance</span>=3D<span class=
=3D"hljs-string">"multiple"</span> <span class=3D"hljs-attr">resourceName</=
span>=3D<span class=3D"hljs-string">"USE-PARENT"</span>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeSchema=
</span> <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string"=
>"iplanet-am-auth-sampleauth-auth-level"</span> <span class=3D"hljs-attr">r=
esourceName</span>=3D<span class=3D"hljs-string">"authLevel"</span>
      <span class=3D"hljs-attr">type</span>=3D<span class=3D"hljs-string">"=
single"</span> <span class=3D"hljs-attr">syntax</span>=3D<span class=3D"hlj=
s-string">"number_range"</span> <span class=3D"hljs-attr">rangeStart</span>=
=3D<span class=3D"hljs-string">"0"</span> <span class=3D"hljs-attr">rangeEn=
d</span>=3D<span class=3D"hljs-string">"2147483647"</span>
      <span class=3D"hljs-attr">i18nKey</span>=3D<span class=3D"hljs-string=
">"a500"</span>&gt;</span>
      <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">DefaultValues<=
/span>&gt;</span>
       <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&=
gt;</span>1<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
      <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">DefaultValues=
</span>&gt;</span>
     <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">AttributeSchem=
a</span>&gt;</span>

     <span class=3D"hljs-comment">&lt;!-- No need for a DefaultValues eleme=
nt when the default is blank --&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeSchema=
</span> <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string"=
>"specificAttribute"</span>
      <span class=3D"hljs-attr">type</span>=3D<span class=3D"hljs-string">"=
single"</span> <span class=3D"hljs-attr">syntax</span>=3D<span class=3D"hlj=
s-string">"string"</span> <span class=3D"hljs-attr">validator</span>=3D<spa=
n class=3D"hljs-string">"no"</span> <span class=3D"hljs-attr">i18nKey</span=
>=3D<span class=3D"hljs-string">"a501"</span> /&gt;</span>

    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">SubSchema</span=
>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Organization</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Schema</span>&gt;=
</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Service</span>&gt;=
</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ServicesConfigurati=
on</span>&gt;</span></pre></div><div class=3D"section" id=3D"build-config-s=
ample-auth-module"><div class=3D"titlepage"><div><div><h3 class=3D"title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#build-config-sample-auth-module">3.3.7.&nbsp;Build=
ing and Installing the Sample Auth Module</a></h3></div></div></div><p>Buil=
d the module with Apache Maven, and install the module in
  OpenAM.</p><div class=3D"section" id=3D"building-sample-auth-module"><div=
 class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#building-sample-auth-module">3.3.7.1.&nbsp;Building the Module</a></h4></=
div></div></div><p>Build the module with Apache Maven, and install the modu=
le in OpenAM.</p><p>After you successfully build the module, you find the
     <code class=3D"literal">.jar</code> file in the <code class=3D"filenam=
e">target/</code> directory
     of the project.
   </p><p lang=3D"en">
  For information on downloading and building OpenAM sample source code, se=
e
  <a class=3D"link" href=3D"https://backstage.forgerock.com/knowledge/kb/ar=
ticle/a47487197" target=3D"_blank">How do I access and build the
    sample code provided for OpenAM 12.x, 13.x and AM (All versions)?</a> i=
n the
  <em class=3D"citetitle">Knowledge Base</em>.
</p></div><div class=3D"section" id=3D"installing-sample-auth-module"><div =
class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#installing-sample-auth-module">3.3.7.2.&nbsp;Installing the Module</a></h4=
></div></div></div><p>Installing the sample authentication module consists =
of copying the
    <code class=3D"literal">.jar</code> file to OpenAM's <code class=3D"fil=
ename">WEB-INF/lib/</code>
    directory, registering the module with OpenAM, and then restarting Open=
AM or
    the web application container where it runs.</p><div class=3D"orderedli=
st"><ol class=3D"orderedlist" type=3D"1"><li class=3D"listitem"><p>Copy the=
 sample authentication module <code class=3D"literal">.jar</code> file to
     <code class=3D"filename">WEB-INF/lib/</code> where OpenAM is deployed.=
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy comm=
and to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fil=
es-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$ =
<strong class=3D"userinput">cp target/custom*.jar /path/to/tomcat/webapps/o=
penam/WEB-INF/lib/</strong></pre></li><li class=3D"listitem"><p>Register th=
e module with OpenAM using the <span class=3D"command"><strong>ssoadm</stro=
ng></span>
     command.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=
=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint no=
highlight">$ <strong class=3D"userinput">ssoadm \
 create-svc \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --xmlfile src/main/resources/amAuthSampleAuth.xml</strong>

<em class=3D"computeroutput">Service was added.</em>
$ <strong class=3D"userinput">ssoadm \
 register-auth-module \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --authmodule org.forgerock.openam.examples.SampleAuth</strong>

<em class=3D"computeroutput">Authentication module was registered.</em></pr=
e><p>See the <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/re=
ference/index.html#ssoadm-1" class=3D"olink"><span class=3D"refentrytitle">=
ssoadm</span>(1)</a> in the <em>Reference</em> a full list of Authenticatio=
n Service Management
     subcommands.</p></li><li class=3D"listitem"><p>Restart OpenAM or the c=
ontainer in which it runs.</p><p>For example if you deployed OpenAM in Apac=
he Tomcat, then you shut
     down Tomcat and start it again.</p><div class=3D"zero-clipboard hidden=
-xs hidden-print" title=3D"Copy command to clipboard"><span class=3D"btn-co=
py-cmdline"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D=
"cmdline prettyprint nohighlight">$ <strong class=3D"userinput">/path/to/to=
mcat/bin/shutdown.sh</strong>
$ <strong class=3D"userinput">/path/to/tomcat/bin/startup.sh</strong>
$ <strong class=3D"userinput">tail -1 /path/to/tomcat/logs/catalina.out</st=
rong>
<em class=3D"computeroutput">INFO: Server startup in 14736 ms</em></pre></l=
i></ol></div></div></div><div class=3D"section" id=3D"configuring-testing-s=
ample-auth-module"><div class=3D"titlepage"><div><div><h3 class=3D"title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#configuring-testing-sample-auth-module">3.3.8.&nbs=
p;Configuring &amp; Testing the Sample Auth Module</a></h3></div></div></di=
v><p>Authentication modules are registered as services with OpenAM globally=
,
  and then set up for use in a particular realm. In this example, you set u=
p
  the sample authentication module for use in the realm / (Top Level Realm)=
.</p><p>Log in to the OpenAM console as an administrator,
  such as <code class=3D"literal">amadmin</code>, and browse to Realms
  &gt; Top Level Realm &gt; Authentication &gt; Modules.
  Click Add Module to create an instance of the Sample Authentication Modul=
e.
  Name the module <code class=3D"literal">Sample</code>.</p><div class=3D"m=
ediaobject" align=3D"center" id=3D"figure-register-sample-auth"><a class=3D=
"fancybox cboxElement" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/images/register-sample-auth.png"><img class=3D"img-responsiv=
e center-block" data-toggle=3D"tooltip" src=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/images/thumb_register-sample-auth.png" align=
=3D"middle" height=3D"395" alt=3D"Sample authentication module registration=
" title=3D"" data-original-title=3D"The module type is Sample Authenticatio=
n Module."></a></div><p>Click Create, and then configure the authentication=
 module as
   appropriate.</p><div class=3D"mediaobject" align=3D"center" id=3D"figure=
-sampleauth-conf"><a class=3D"fancybox cboxElement" href=3D"https://backsta=
ge.forgerock.com/docs/openam/13.5/dev-guide/images/sampleauth-conf.png"><im=
g class=3D"img-responsive center-block" data-toggle=3D"tooltip" src=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_samplea=
uth-conf.png" align=3D"middle" height=3D"355" alt=3D"Sample authentication =
module configuration" title=3D"" data-original-title=3D"The module has two =
configurable properties, Authentication Level and
    Service Specific Attribute."></a></div><p>Now that the module is config=
ured, log out of the OpenAM console.</p><p>Finally, try the module by speci=
fying the <code class=3D"literal">Sample</code>
  module using a query string parameter. Browse to the login URL such as
  <code class=3D"literal">http://openam.example.com:8080/openam/XUI/#login/=
&amp;module=3DSample</code>,
  and then authenticate with user name <code class=3D"literal">demo</code> =
and password
  <code class=3D"literal">changeit</code>.</p><div class=3D"mediaobject" al=
ign=3D"center" id=3D"figure-openam-auth-sample-login"><a class=3D"fancybox =
cboxElement" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-g=
uide/images/openam-auth-sample-login.png"><img class=3D"img-responsive cent=
er-block" data-toggle=3D"tooltip" src=3D"https://backstage.forgerock.com/do=
cs/openam/13.5/dev-guide/images/thumb_openam-auth-sample-login.png" align=
=3D"middle" height=3D"444" alt=3D"Sample authentication module login page" =
title=3D"" data-original-title=3D"On the login page, you can see the string=
 you set as the value of
    Service Specific Attribute."></a></div><p>After authentication you are =
redirected to the end user page for
  the demo user. You can logout of OpenAM console, and then try to
  authenticate as the non-existent user <code class=3D"literal">test123</co=
de>
  to see what the error handling looks like to the user.</p></div></div><di=
v class=3D"section" id=3D"sec-custom-quota-exhaustion-action"><div class=3D=
"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a class=3D=
"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gu=
ide/index.html#sec-custom-quota-exhaustion-action">3.4.&nbsp;Customizing Se=
ssion Quota Exhaustion Actions</a></h2></div></div></div><p>
  This section demonstrates a custom session quota exhaustion action plugin=
.
  OpenAM calls a session quota exhaustion action plugin
  when a user tries to open more stateful sessions than their quota allows.
  Note that session quotas are not available for stateless sessions.
 </p><p>
  You only need a custom session quota exhaustion action plugin
  if the built-in actions are not flexible enough for your deployment. See
  <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/i=
ndex.html#session-quotas-and-exhaustion-actions" class=3D"olink">"To Config=
ure Session Quotas and Exhaustion Actions"</a> in the <em>Administration Gu=
ide</em>.
 </p><div class=3D"section" id=3D"create-custom-quota-exhaustion-action"><d=
iv class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#create-custom-quota-exhaustion-action">3.4.1.&nbsp;Creating &amp; Insta=
lling a Custom Session Quota Exhaustion Action</a></h3></div></div></div><p=
>
   You build custom session quota exhaustion actions into a .jar
   that you then plug in to OpenAM.
   You must also add your new action to the Session service configuration,
   and restart OpenAM in order to be able to configure it for your use.
  </p><p>
   Your custom session quota exhaustion action implements the
   <code class=3D"literal">com.iplanet.dpro.session.service.QuotaExhaustion=
Action</code>
   interface, overriding the <code class=3D"literal">action</code> method.
   The <code class=3D"literal">action</code> method performs the action
   when the session quota is met, and returns <code class=3D"literal">true<=
/code>
   only if the request for a new session should <span class=3D"emphasis"><e=
m>not</em></span> be granted.
  </p><p>
   The example in this section simply removes the first session it finds
   as the session quota exhaustion action.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint java hlj=
s"><span class=3D"hljs-keyword">package</span> org.forgerock.openam.example=
s.quotaexhaustionaction;

<span class=3D"hljs-keyword">import</span> com.iplanet.dpro.session.Session=
;
<span class=3D"hljs-keyword">import</span> com.iplanet.dpro.session.Session=
Exception;
<span class=3D"hljs-keyword">import</span> com.iplanet.dpro.session.Session=
ID;
<span class=3D"hljs-keyword">import</span> com.iplanet.dpro.session.service=
.InternalSession;
<span class=3D"hljs-keyword">import</span> com.iplanet.dpro.session.service=
.QuotaExhaustionAction;
<span class=3D"hljs-keyword">import</span> com.iplanet.dpro.session.service=
.SessionService;
<span class=3D"hljs-keyword">import</span> com.sun.identity.shared.debug.De=
bug;
<span class=3D"hljs-keyword">import</span> java.util.Map;

<span class=3D"hljs-comment">/**
 * This is a sample {<span class=3D"hljs-doctag">@link</span> QuotaExhausti=
onAction} implementation,
 * which randomly kills the first session it finds.
 */</span>
<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-class"><span=
 class=3D"hljs-keyword">class</span> <span class=3D"hljs-title">SampleQuota=
ExhaustionAction</span> <span class=3D"hljs-keyword">implements</span> <spa=
n class=3D"hljs-title">QuotaExhaustionAction</span> </span>{

    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">static</span> Debug debug =3D SessionService.sessionDebug;

    <span class=3D"hljs-comment">/**
     * Check if the session quota for a given user has been exhausted and
     * if so perform the necessary actions. This implementation randomly
     * destroys the first session it finds.
     *
     * <span class=3D"hljs-doctag">@param</span> is               The Inter=
nalSession to be activated.
     * <span class=3D"hljs-doctag">@param</span> existingSessions All exist=
ing sessions that belong to the same
     *                         uuid (Map:sid-&gt;expiration_time).
     * <span class=3D"hljs-doctag">@return</span> true If the session activ=
ation request should be rejected,
     *              otherwise false.
     */</span>
    <span class=3D"hljs-meta">@Override</span>
    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">boolean</span> <span class=3D"hljs-title">ac=
tion</span><span class=3D"hljs-params">(
            InternalSession is,
            Map&lt;String, Long&gt; existingSessions)</span> </span>{
        <span class=3D"hljs-keyword">for</span> (Map.Entry&lt;String, Long&=
gt; entry : existingSessions.entrySet()) {
            <span class=3D"hljs-keyword">try</span> {
                <span class=3D"hljs-comment">// Get an actual Session insta=
nce based on the session ID.</span>
                Session session =3D
                        Session.getSession(<span class=3D"hljs-keyword">new=
</span> SessionID(entry.getKey()));
                <span class=3D"hljs-comment">// Use the session to destroy =
itself.</span>
                session.destroySession(session);
                <span class=3D"hljs-comment">// Only destroy the first sess=
ion.</span>
                <span class=3D"hljs-keyword">break</span>;
            } <span class=3D"hljs-keyword">catch</span> (SessionException s=
e) {
                <span class=3D"hljs-keyword">if</span> (debug.messageEnable=
d()) {
                    debug.message(<span class=3D"hljs-string">"Failed to de=
stroy existing session."</span>, se);
                }
                <span class=3D"hljs-comment">// In this case, deny the sess=
ion activation request.</span>
                <span class=3D"hljs-keyword">return</span> <span class=3D"h=
ljs-keyword">true</span>;
            }
        }
        <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyw=
ord">false</span>;
    }
}
</pre><p>
   The <a class=3D"link" href=3D"https://github.com/ForgeRock/openam-exampl=
es-quotaexhaustionaction/" target=3D"_blank">sample plugin source</a> is av=
ailable online.
   Get a local clone so that you can try the sample on your system.
   In the sources you find the following files.
  </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span clas=
s=3D"term"><code class=3D"filename">pom.xml</code></span></dt><dd><p>
      Apache Maven project file for the module
     </p><p>
      This file specifies how to build the sample plugin,
      and also specifies its dependencies on OpenAM components
      and on the Servlet API.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">src/main/ja=
va/org/forgerock/openam/examples/quotaexhaustionaction/SampleQuotaExhaustio=
nAction.java</code></span></dt><dd><p>
      Core class for the sample quota exhaustion action plugin
     </p></dd></dl></div><p>
   Build the module using Apache Maven.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">cd /path/to/openam-examples-quotaexhaustionac=
tion</strong>
$ <strong class=3D"userinput">mvn install</strong>
<em class=3D"computeroutput">[INFO] Scanning for projects...
[INFO]
[INFO] --------------------------------------------------------------------=
----
[INFO] Building OpenAM Example Quota Exhaustion Action 1.0.0-SNAPSHOT
[INFO] --------------------------------------------------------------------=
----

...

[INFO]
[INFO] --- maven-jar-plugin:2.3.1:jar (default-jar) @ quotaexhaustionaction=
 ---
[INFO] Building jar: .../target/quotaexhaustionaction-1.0.0-SNAPSHOT.jar

...

[INFO] --------------------------------------------------------------------=
----
[INFO] BUILD SUCCESS
[INFO] --------------------------------------------------------------------=
----
[INFO] Total time: 10.138s
[INFO] Finished at: Mon Nov 25 15:59:10 CET 2013
[INFO] Final Memory: 18M/129M
[INFO] --------------------------------------------------------------------=
----</em></pre><p>
   Copy the .jar to <code class=3D"filename">WEB-INF/lib/</code> where Open=
AM is deployed.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">cp target/*.jar /path/to/tomcat/webapps/opena=
m/WEB-INF/lib/</strong></pre><p>
   Using the <span class=3D"command"><strong>ssoadm</strong></span> command
   or the <code class=3D"literal">ssoadm.jsp</code> page in OpenAM Console,
   update the Session service configuration.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">ssoadm \
 set-attr-choicevals \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --servicename iPlanetAMSessionService \
 --schematype Global \
 --attributename iplanet-am-session-constraint-handler \
 --add \
 --choicevalues myKey=3D\
org.forgerock.openam.examples.quotaexhaustionaction.SampleQuotaExhaustionAc=
tion</strong>

<em class=3D"computeroutput">Choice Values were set.</em></pre><p>
   Extract <code class=3D"filename">amSession.properties</code>
   and if necessary the localized versions of this file
   from <code class=3D"filename">openam-core-13.5.2.jar</code>
   to <code class=3D"filename">WEB-INF/classes/</code> where OpenAM is depl=
oyed.
   For example, if OpenAM is deployed under
   <code class=3D"filename">/path/to/tomcat/webapps/openam</code>,
   then you could run the following commands.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">cd /path/to/tomcat/webapps/openam/WEB-INF/cla=
sses/</strong>
$ <strong class=3D"userinput">jar -xvf ../lib/openam-core-13.5.2.jar amSess=
ion.properties</strong>
 <em class=3D"computeroutput">inflated: amSession.properties</em></pre><p>
   Add the following line to <code class=3D"filename">amSession.properties<=
/code>.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint ini hljs=
"><span class=3D"hljs-attr">myKey</span>=3DRandomly Destroy Session</pre><p=
>
   Restart OpenAM or the container in which it runs.
  </p><p>
   You can now use the new session quota exhaustion action. In the OpenAM C=
onsole, navigate to
   Configure &gt; Global Services, click Session, scroll to Resulting
   behavior if session quota exhausted, and then choose an option.
  </p><p>
   Before moving to your test and production environments,
   be sure to add your <code class=3D"literal">.jar</code> file and updates=
 to
   <code class=3D"filename">amSession.properties</code>
   into a custom <code class=3D"literal">.war</code> file that you can then=
 deploy.
   You must still update the Session service configuration
   in order to use your custom session quota exhaustion action.
  </p></div><div class=3D"section" id=3D"list-custom-quota-exhaustion-actio=
ns"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self=
-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#list-custom-quota-exhaustion-actions">3.4.2.&nbsp;Listing Session=
 Quota Exhaustion Actions</a></h3></div></div></div><p>
   List session quota exhaustion actions
   by using the <span class=3D"command"><strong>ssoadm</strong></span> comm=
and
   or by using the <code class=3D"literal">ssoadm.jsp</code> page.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">ssoadm \
 get-attr-choicevals \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --servicename iPlanetAMSessionService \
 --schematype Global \
 --attributename iplanet-am-session-constraint-handler</strong>
<em class=3D"computeroutput">
I18n Key                  Choice Value
------------------------- ---...-----------------------------------------
choiceDestroyOldSession   org...session.service.DestroyOldestAction
choiceDenyAccess          org...session.service.DenyAccessAction
choiceDestroyNextExpiring org...session.service.DestroyNextExpiringAction
choiceDestroyAll          org...session.service.DestroyAllAction
myKey                     org...examples...SampleQuotaExhaustionAction</em>=
</pre></div><div class=3D"section" id=3D"remove-custom-quota-exhaustion-act=
ions"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#remove-custom-quota-exhaustion-actions">3.4.3.&nbsp;Removing a =
Session Quota Exhaustion Action</a></h3></div></div></div><p>
   Remove a session quota exhaustion action
   by using the <span class=3D"command"><strong>ssoadm</strong></span> comm=
and
   or by using the <code class=3D"literal">ssoadm.jsp</code> page.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">ssoadm \
 remove-attr-choicevals \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --servicename iPlanetAMSessionService \
 --schematype Global \
 --attributename iplanet-am-session-constraint-handler \
 --choicevalues \
 org.forgerock.openam.examples.quotaexhaustionaction.SampleQuotaExhaustionA=
ction</strong>

<em class=3D"computeroutput">Choice Values were removed.</em></pre></div></=
div><div class=3D"section" id=3D"sec-policy-spi"><div class=3D"titlepage"><=
div><div><h2 class=3D"title" style=3D"clear: both"><a class=3D"self-link" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#sec-policy-spi">3.5.&nbsp;Customizing Policy Evaluation</a></h2></div></d=
iv></div><p>OpenAM policies let you restrict access to resources based both=
 on
 identity and group membership, and also on a range of conditions including
 session age, authentication chain or module used, authentication level, re=
alm,
 session properties, IP address and DNS name, user profile content, resourc=
e
 environment, date, day, time of day, and time zone. Yet, some deployments
 require further distinctions for policy evaluation. This section explains =
how
 to customize policy evaluation for deployments with particular requirement=
s
 not met by built-in OpenAM functionality.</p><p>
  This section shows how to build and use a custom policy plugin
  that implements a custom subject condition, a custom environment conditio=
n,
  and a custom resource attribute.
 </p><div class=3D"section" id=3D"about-sample-policy-plugins"><div class=
=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#abou=
t-sample-policy-plugins">3.5.1.&nbsp;About the Sample Plugin</a></h3></div>=
</div></div><p>
   The OpenAM policy framework lets you build plugins that extend
   subject conditions, environment conditions, and resource attributes.
  </p><p lang=3D"en">
  For information on downloading and building OpenAM sample source code, se=
e
  <a class=3D"link" href=3D"https://backstage.forgerock.com/knowledge/kb/ar=
ticle/a47487197" target=3D"_blank">How do I access and build the
    sample code provided for OpenAM 12.x, 13.x and AM (All versions)?</a> i=
n the
  <em class=3D"citetitle">Knowledge Base</em>.
</p><p>
   Get a local clone so that you can try the sample
   on your system. In the sources, you find the following files under the
   <code class=3D"filename">/path/to/openam-source/openam-samples/policy-ev=
aluation-plugin</code>
   directory:
  </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span clas=
s=3D"term"><code class=3D"filename">pom.xml</code></span></dt><dd><p>
      Apache Maven project file for the module
     </p><p>
      This file specifies how to build the sample policy evaluation plugin,
      and also specifies its dependencies on OpenAM components.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">src/main/ja=
va/org/forgerock/openam/examples/SampleAttributeType.java</code></span></dt=
><dd><p>
      Extends the <code class=3D"literal">com.sun.identity.entitlement.Reso=
urceAttribute</code> interface,
      and shows an implementation of a resource attribute provider
      to send an attribute with the response.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">src/main/ja=
va/org/forgerock/openam/examples/SampleConditionType.java</code></span></dt=
><dd><p>
      Extends the <code class=3D"literal">com.sun.identity.entitlement.Enti=
tlementCondition</code> interface,
      and shows an implementation of a condition that is the length of the =
user name.
     </p><p>
      A condition influences whether the policy applies for a given access =
request.
      If the condition is fulfilled,
      then OpenAM includes the policy in the set of policies to evaluate
      in order to respond to a policy decision request.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">src/main/ja=
va/org/forgerock/openam/examples/SampleSubjectType.java</code></span></dt><=
dd><p>
      Extends the <code class=3D"literal">com.sun.identity.entitlement.Enti=
tlementSubject</code> interface,
      and shows an implementation that defines a user to whom the policy ap=
plies.
     </p><p>
      A subject, like a condition, influences whether the policy applies.
      If the subject matches in the context of a given access request,
      then the policy applies.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">src/main/ja=
va/org/forgerock/openam/examples/SampleEntitlementModule.java</code>, </spa=
n><span class=3D"term"><code class=3D"filename">src/main/resources/META-INF=
/services/org.forgerock.openam.entitlement.EntitlementModule</code></span><=
/dt><dd><p>
      These files serve to register the plugin with OpenAM.
     </p><p>
      The Java class, <code class=3D"literal">SampleEntitlementModule</code=
>, implements the
      <code class=3D"literal">org.forgerock.openam.entitlement.EntitlementM=
odule</code> interface.
      In the sample,
      this class registers <code class=3D"literal">SampleAttribute</code>,
      <code class=3D"literal">SampleCondition</code>, and <code class=3D"li=
teral">SampleSubject</code>.
     </p><p>
      The services file,
      <code class=3D"filename">org.forgerock.openam.entitlement.Entitlement=
Module</code>,
      holds the fully qualified class name of the <code class=3D"literal">E=
ntitlementModule</code>
      that registers the custom implementations.
      In this case, <code class=3D"literal">org.forgerock.openam.entitlemen=
t.EntitlementModule</code>.
     </p></dd></dl></div></div><div class=3D"section" id=3D"build-a-sample-=
plugin"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"=
self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#build-a-sample-plugin">3.5.2.&nbsp;Building the Sample Plugin=
</a></h3></div></div></div><p>Follow the steps in this procedure to build t=
he sample plugin:</p><div class=3D"procedure" id=3D"building-a-sample-plugi=
n"><div class=3D"procedure-inner"><div class=3D"procedure-title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#building-a-sample-plugin">To Build the Sample Plugin</a><=
/div><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>
     If you have not already done so, download and build the samples.
    </p><p lang=3D"en">
  For information on downloading and building OpenAM sample source code, se=
e
  <a class=3D"link" href=3D"https://backstage.forgerock.com/knowledge/kb/ar=
ticle/a47487197" target=3D"_blank">How do I access and build the
    sample code provided for OpenAM 12.x, 13.x and AM (All versions)?</a> i=
n the
  <em class=3D"citetitle">Knowledge Base</em>.
</p></li><li class=3D"step"><p>
     Check out the <code class=3D"literal">master</code> branch of the Open=
AM
     source.
    </p></li><li class=3D"step"><p>
   Build the module using Apache Maven:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">cd /path/to/openam-source/openam-samples</st=
rong>
$ <strong class=3D"userinput">cd policy-evaluation-plugin</strong>
$ <strong class=3D"userinput">mvn install</strong>
<em class=3D"computeroutput">[INFO] Scanning for projects...
[INFO]
[INFO] --------------------------------------------------------------------=
----
[INFO] Building policy-evaluation-plugin 13.5.2-15
[INFO] --------------------------------------------------------------------=
----
[INFO]
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @
[INFO] policy-evaluation-plugin ---

...

[INFO] Building jar: .../target/policy-evaluation-plugin-13.5.2-15.jar
[INFO]

...

[INFO] --------------------------------------------------------------------=
----
[INFO] BUILD SUCCESS
[INFO] --------------------------------------------------------------------=
----
[INFO] Total time: 5.264 s
[INFO] Finished at: 2016-05-11T19:39:23+02:00
[INFO] Final Memory: 32M/85M
[INFO] --------------------------------------------------------------------=
----</em></pre></li><li class=3D"step"><p>
   Copy the .jar to the <code class=3D"filename">WEB-INF/lib</code> directo=
ry
   where you deployed OpenAM:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">cp target/*.jar /path/to/tomcat/webapps/open=
am/WEB-INF/lib/</strong></pre></li><li class=3D"step"><p>
    Edit the
    <code class=3D"filename">/path/to/tomcat/webapps/openam/XUI/locales/en/=
translation.json</code>
    file to update the user interface to include the custom subject and
    environment conditions:
   </p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>
      Locate the line that contains the following text:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighli=
ght">"subjectTypes": {</pre><p>
     </p></li><li class=3D"step"><p>
      Insert the following text after the line you located in the previous =
step:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighli=
ght">"SampleSubject": {
    "title": "Sample Subject",
    "props": {
        "name": "Name"
    }
},</pre><p>
     </p></li><li class=3D"step"><p>
      Locate the line that contains the following text:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighli=
ght">"conditionTypes": {</pre><p>
     </p></li><li class=3D"step"><p>
      Insert the following text after the line you located in the previous =
step:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighli=
ght">"SampleCondition": {
    "title": "Sample Condition",
    "props": {
        "nameLength": "Minimum username length"
    }
},</pre><p>
     </p></li></ol></li><li class=3D"step"><p>
    If you require additional translations under
    <code class=3D"filename">/path/to/tomcat/webapps/openam/XUI/locales</co=
de>,
    modify other <code class=3D"filename">translation.json</code> files as =
needed.
   </p></li><li class=3D"step"><p>
    Clear your browser's cache and restart your browser.
   </p><p>
    Clearing the cache and refreshing the browser is required when you modi=
fy
    the <code class=3D"filename">translation.json</code> file.
   </p></li><li class=3D"step"><p>
    Restart OpenAM or the container in which it runs.
   </p></li></ol></div></div></div><div class=3D"section" id=3D"add-custom-=
policy-impl-to-existing-apps"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#add-custom-policy-impl-to-existing-app=
s">3.5.3.&nbsp;Adding Custom Policy Implementations to Existing Policy Sets=
</a></h3></div></div></div><p>
   In order to use your custom policy in existing policy sets, you must upd=
ate
   the policy sets. Note that you cannot update a policy set that already h=
as
   policies configured. When there are already policies configured for a
   policy set, you must instead first delete the policies, and then update =
the
   policy set.
  </p><p>
   Update the <code class=3D"literal">iPlanetAMWebAgentService</code> polic=
y set
   in the top level realm of a fresh installation. First, authenticate
   to OpenAM as the <code class=3D"literal">amadmin</code> user:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "X-OpenAM-Username: amadmin" \
 --header "X-OpenAM-Password: password" \
 --data "{}" \
 https://openam.example.com:8443/openam/json/authenticate</strong>
<em class=3D"computeroutput">{"tokenId":"AQIC5wM2...","successUrl":"/openam=
/console"}</em></pre><p>
   Then update the <code class=3D"literal">iPlanetAMWebAgentService</code> =
policy set by
   adding the <code class=3D"literal">SampleSubject</code> subject conditio=
n and the
   <code class=3D"literal">SampleCondition</code> environment condition:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request PUT \
 --header "iPlanetDirectoryPro: AQIC5wM2..." \
 --header "Content-Type: application/json" \
 --data '{
    "name": "iPlanetAMWebAgentService",
    "conditions": [
        "LEAuthLevel",
        "Script",
        "AuthenticateToService",
        "SimpleTime",
        "AMIdentityMembership",
        "OR",
        "IPv6",
        "IPv4",
        "SessionProperty",
        "AuthScheme",
        "AuthLevel",
        "NOT",
        "AuthenticateToRealm",
        "AND",
        "ResourceEnvIP",
        "LDAPFilter",
        "OAuth2Scope",
        "Session",
        "SampleCondition"
    ],
    "subjects": [
        "NOT",
        "OR",
        "JwtClaim",
        "AuthenticatedUsers",
        "AND",
        "Identity",
        "NONE",
        "SampleSubject"
    ],
    "applicationType": "iPlanetAMWebAgentService",
    "entitlementCombiner": "DenyOverride"
   }' https://openam.example.com:8443/openam/json/applications/iPlanetAMWeb=
AgentService</strong></pre></div><div class=3D"section" id=3D"trying-sample=
-policy-plugin"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a c=
lass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#trying-sample-policy-plugin">3.5.4.&nbsp;Trying the S=
ample Subject and Environment Conditions</a></h3></div></div></div><p>
   Using the OpenAM console, add a policy to the
   <code class=3D"literal">iPlanetAMWebAgentService</code> policy set in th=
e top level realm
   that allows HTTP GET access for URLs based on the template
   <code class=3D"literal">http://www.example.com:80/*</code> and uses the =
custom subject
   and environment conditions.
  </p><p>
   Create the policy with the following properties:
  </p><div class=3D"table" id=3D"d15472e12945"><div class=3D"table-title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#d15472e12945">Sample Policy Properties</a></div><d=
iv class=3D"table-contents"><table xmlns:ng=3D"http://docbook.org/docbook-n=
g" xmlns:db=3D"http://docbook.org/ns/docbook" xmlns:exsl=3D"http://exslt.or=
g/common" xmlns:exslt=3D"http://exslt.org/common" xmlns:doc=3D"http://nwals=
h.com/xsl/documentation/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.n=
walsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxsl=
t=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/x=
sltproc/python/Table" class=3D"table table-striped" summary=3D"Sample Polic=
y Properties" border=3D"0"><colgroup><col width=3D"33%"><col width=3D"67%">=
</colgroup><thead><tr><th>Property</th><th>Value</th></tr></thead><tbody><t=
r><td>Name</td><td><code class=3D"literal">Sample Policy</code></td></tr><t=
r><td>Resource Type</td><td><code class=3D"literal">URL</code></td></tr><tr=
><td>Resources</td><td>
       Use the <code class=3D"literal">*://*:*/*</code>resource template to=
 specify the
       resource <code class=3D"literal">http://www.example.com:80/*</code>.
      </td></tr><tr><td>Actions</td><td>Allow <code class=3D"literal">GET</=
code></td></tr><tr><td>Subject Conditions</td><td>Add a subject condition o=
f type
       <code class=3D"literal">Sample Subject</code> and a name of
       <code class=3D"literal">demo</code> so that the <code class=3D"liter=
al">demo</code> user is the
       only user who can access the resource.
      </td></tr><tr><td>Environment Conditions</td><td>Add an environment c=
ondition of type
       <code class=3D"literal">Sample Condition</code> and a minimum userna=
me length of
       <code class=3D"literal">4</code> so that only users with a username =
length of 4
       characters or greater can access the resource.
      </td></tr></tbody></table></div></div><br class=3D"table-break"><p>
   With the policy in place, authenticate
   both as a user who can request policy decisions
   and also as a user trying to access a resource, such as <code class=3D"l=
iteral">demo</code>
   in the example above.
   Both calls return <code class=3D"literal">tokenId</code> values
   for use in the policy decision request.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "X-OpenAM-Username: amadmin" \
 --header "X-OpenAM-Password: password" \
 --data "{}" \
 https://openam.example.com:8443/openam/json/authenticate</strong>

<em class=3D"computeroutput">{"tokenId":"AQIC5wM2LY4Sfcw...","successUrl":"=
/openam/console"}</em>

$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "X-OpenAM-Username: demo" \
 --header "X-OpenAM-Password: changeit" \
 --data "{}" \
 https://openam.example.com:8443/openam/json/authenticate</strong>

<em class=3D"computeroutput">{"tokenId":"AQIC5wM2LY4Sfcy...","successUrl":"=
/openam/console"}</em></pre><p>
   Use the administrator <code class=3D"literal">tokenId</code> as the head=
er of the policy
   decision request, and the user <code class=3D"literal">tokenId</code> as=
 the subject
   <code class=3D"literal">ssoToken</code> value.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "iPlanetDirectoryPro: AQIC5wM2LY4Sfcw..." \
 --data '{
    "subject": {
      "ssoToken": "AQIC5wM2LY4Sfcy..."},
    "resources": [
        "http://www.example.com:80/index.html"
    ],
    "application": "iPlanetAMWebAgentService"
 }' \
 https://openam.example.com:8443/openam/json/policies?_action=3Devaluate</s=
trong>
<em class=3D"computeroutput">
[
   {
       "resource": "http://www.example.com:80/index.html",
       "actions": {
           "GET": true
       },
       "attributes": {},
       "advices": {}
   }
]</em></pre><p>
   Notice that the actions returned from the policy evaluation call are set=
 in
   accordance with the policy.
  </p></div><div class=3D"section" id=3D"trying-custom-policy-resource-attr=
ibutes"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"=
self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#trying-custom-policy-resource-attributes">3.5.5.&nbsp;Trying =
the Sample Resource Attributes</a></h3></div></div></div><p>
   The sample custom policy plugin can
   have OpenAM return an attribute with the policy decision.
   In order to make this work, list the
   resource type for the <code class=3D"literal">URL</code>
   resource type to obtain its UUID, and then update your policy to return =
a
   <code class=3D"literal">test</code> attribute:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint json hlj=
s">$ curl \
 --request GET \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5wM2..."</s=
pan> \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/json/r=
esourcetypes?_queryFilter=3Dname%20eq%20%22URL%22</span>
{
  <span class=3D"hljs-attr">"result"</span>:[
    {
      <span class=3D"hljs-attr">"uuid"</span>:<span class=3D"hljs-string">"=
URL-resource-type-UUID"</span>,
      <span class=3D"hljs-attr">"name"</span>:<span class=3D"hljs-string">"=
URL"</span>,
      <span class=3D"hljs-attr">"description"</span>:<span class=3D"hljs-st=
ring">"The built-in URL Resource Type available to OpenAM Policies."</span>=
,
      <span class=3D"hljs-attr">"patterns"</span>:[<span class=3D"hljs-stri=
ng">"*://*:*/*"</span>,<span class=3D"hljs-string">"*://*:*/*?*"</span>],
      ...
    }
  ],
  <span class=3D"hljs-attr">"resultCount"</span>:<span class=3D"hljs-number=
">1</span>,
  <span class=3D"hljs-attr">"pagedResultsCookie"</span>:<span class=3D"hljs=
-literal">null</span>,
  <span class=3D"hljs-attr">"totalPagedResultsPolicy"</span>:<span class=3D=
"hljs-string">"NONE"</span>,
  <span class=3D"hljs-attr">"totalPagedResults"</span>:<span class=3D"hljs-=
number">-1</span>,
  <span class=3D"hljs-attr">"remainingPagedResults"</span>:<span class=3D"h=
ljs-number">0</span>
}

$ curl \
 --request PUT \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5wM2LY4Sfcw=
..."</span> \
 --header <span class=3D"hljs-string">"Content-Type: application/json"</spa=
n> \
 --data '{
    <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string">"S=
ample Policy"</span>,
    <span class=3D"hljs-attr">"active"</span>: <span class=3D"hljs-literal"=
>true</span>,
    <span class=3D"hljs-attr">"description"</span>: <span class=3D"hljs-str=
ing">"Try sample policy plugin"</span>,
    <span class=3D"hljs-attr">"resourceTypeUuid"</span>: <span class=3D"hlj=
s-string">"URL-resource-type-UUID"</span>,
    <span class=3D"hljs-attr">"resources"</span>: [
        <span class=3D"hljs-string">"http://www.example.com:80/*"</span>
    ],
    <span class=3D"hljs-attr">"applicationName"</span>: <span class=3D"hljs=
-string">"iPlanetAMWebAgentService"</span>,
    <span class=3D"hljs-attr">"actionValues"</span>: {
        <span class=3D"hljs-attr">"GET"</span>: <span class=3D"hljs-literal=
">true</span>
    },
    <span class=3D"hljs-attr">"subject"</span>: {
        <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string=
">"SampleSubject"</span>,
        <span class=3D"hljs-attr">"name"</span>: <span class=3D"hljs-string=
">"demo"</span>
    },
    <span class=3D"hljs-attr">"condition"</span>: {
        <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-string=
">"SampleCondition"</span>,
        <span class=3D"hljs-attr">"nameLength"</span>: <span class=3D"hljs-=
number">4</span>
    },
    <span class=3D"hljs-attr">"resourceAttributes"</span>: [
        {
            <span class=3D"hljs-attr">"type"</span>: <span class=3D"hljs-st=
ring">"SampleAttribute"</span>,
            <span class=3D"hljs-attr">"propertyName"</span>: <span class=3D=
"hljs-string">"test"</span>
        }
    ]
}' http:<span class=3D"hljs-comment">//openam.example.com:8088/openam/json/=
policies/Sample%20Policy</span></pre><p>
   When you now request the same policy decision as before,
   OpenAM returns the <code class=3D"literal">test</code> attribute that yo=
u configured in
   the policy.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "iPlanetDirectoryPro: AQIC5wM2LY4Sfcw..." \
 --data '{
    "subject": {
      "ssoToken": "AQIC5wM2LY4Sfcy..."},
    "resources": [
        "http://www.example.com:80/index.html"
    ],
    "application": "iPlanetAMWebAgentService"
 }' \
 http://openam.example.com:8080/openam/json/policies?_action=3Devaluate</st=
rong>
<em class=3D"computeroutput">
[
    {
        "resource": "http://www.example.com/profile",
        "actions": {
            "GET": true
        },
        "attributes": {
            "test": [
                "sample"
            ]
        },
        "advices": {}
    }
]</em></pre></div><div class=3D"section" id=3D"extend-ssoadm-classpath"><di=
v class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#extend-ssoadm-classpath">3.5.6.&nbsp;Extending the ssoadm Classpath</a><=
/h3></div></div></div><p>
   After customizing your OpenAM deployment to use policy evaluation plugin=
s,
   inform <span class=3D"command"><strong>ssoadm</strong></span> users to a=
dd the jar file containing the
   plugins to the classpath before running policy management subcommands.
  </p><p>
   To add a jar file to the <span class=3D"command"><strong>ssoadm</strong>=
</span> classpath, set the
   <code class=3D"literal">CLASSPATH</code> environment variable before run=
ning the
   <span class=3D"command"><strong>ssoadm</strong></span> command.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">export CLASSPATH=3D<em><strong class=3D"repl=
aceable">/path/to/jarfile</strong></em>:$CLASSPATH</strong>
$ <strong class=3D"userinput">ssoadm ...</strong></pre><p>
  </p></div></div><div class=3D"section" id=3D"sec-identity-repo-spi"><div =
class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a =
class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#sec-identity-repo-spi">3.6.&nbsp;Customizing Identit=
y Data Storage</a></h2></div></div></div><a class=3D"indexterm" name=3D"d15=
472e13124"></a><p>OpenAM maps user and group identities into a realm using =
data stores.
 An OpenAM data store relies on a Java identity repository (IdRepo) plugin =
to
 implement interaction with the identity repository where the users and gro=
ups
 are stored.</p><div class=3D"section" id=3D"about-idrepo-plugin"><div clas=
s=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#a=
bout-idrepo-plugin">3.6.1.&nbsp;About the Identity Repository Plugin</a></h=
3></div></div></div><p>This section describes how to create a custom identi=
ty repository
   plugin.
  OpenAM includes built-in support for LDAP identity repositories. For
  most deployments, you therefore do not need to create your own custom ide=
ntity
  repository plugin. Only create custom identity repository plugins for
  deployments with particular requirements not met by built-in OpenAM
  functionality.</p><div class=3D"panel panel-success"><div class=3D"panel-=
heading"><h3 class=3D"panel-title">Tip</h3></div><div class=3D"panel-body">=
<p>Before creating your own identity repository plugin, start by reading
   the OpenAM source code for the <code class=3D"literal">FilesRepo</code> =
or
   <code class=3D"literal">DatabaseRepo</code> plugins under
   <code class=3D"literal">com.sun.identity.idm.plugins</code>.</p></div></=
div><div class=3D"section" id=3D"idrepo-plugin-inheritance"><div class=3D"t=
itlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#idrepo-pl=
ugin-inheritance">3.6.1.1.&nbsp;IdRepo Inheritance</a></h4></div></div></di=
v><p>Your identity repository plugin class must extend the
   <code class=3D"literal">com.sun.identity.idm.IdRepo</code> abstract clas=
s, and must
   include a constructor method that takes no arguments.</p></div><div clas=
s=3D"section" id=3D"idrepo-plugin-lifecycle"><div class=3D"titlepage"><div>=
<div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#idrepo-plugin-lifecycle"=
>3.6.1.2.&nbsp;IdRepo Lifecycle</a></h4></div></div></div><p>When OpenAM in=
stantiates your IdRepo plugin, it calls the
   <code class=3D"literal">initialize()</code> method.</p><div class=3D"zer=
o-clipboard hidden-xs hidden-print" title=3D"Copy code to clipboard"><span =
class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></span>=
</div><pre class=3D"codelisting prettyprint java hljs"><span class=3D"hljs-=
function"><span class=3D"hljs-keyword">public</span> <span class=3D"hljs-ke=
yword">void</span> <span class=3D"hljs-title">initialize</span><span class=
=3D"hljs-params">(Map configParams)</span></span></pre><p>The <code class=
=3D"literal">configParams</code> are service configuration
   parameters for the realm where the IdRepo plugin is configured. The
   <code class=3D"literal">configParams</code> normally serve to set up com=
munication with
   the underlying identity data store. OpenAM calls the
   <code class=3D"literal">initialize()</code> method once, and considers t=
he identity
   repository ready for use.</p><p>If you encounter errors or exceptions du=
ring initialization, catch
   and store them in your plugin for use later when OpenAM calls other plug=
in
   methods.</p><p>After initialization, OpenAM calls the <code class=3D"lit=
eral">addListener()</code>
   and <code class=3D"literal">removeListener()</code> methods to register =
listeners that
   inform OpenAM client code of changes to identities managed by your
   IdRepo.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D=
"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span class=
=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettyprin=
t java hljs"><span class=3D"hljs-function"><span class=3D"hljs-keyword">pub=
lic</span> <span class=3D"hljs-keyword">int</span> <span class=3D"hljs-titl=
e">addListener</span><span class=3D"hljs-params">(SSOToken token, IdRepoLis=
tener listener)</span>
<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">voi=
d</span> <span class=3D"hljs-title">removeListener</span><span class=3D"hlj=
s-params">()</span></span></pre><p>You must handle listener registration in=
 your IdRepo plugin, and also
   return events to OpenAM through the <code class=3D"literal">IdRepoListen=
er</code>.</p><p>When stopping, OpenAM calls your IdRepo plugin
   <code class=3D"literal">shutdown()</code> method.</p><div class=3D"zero-=
clipboard hidden-xs hidden-print" title=3D"Copy code to clipboard"><span cl=
ass=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></span></=
div><pre class=3D"codelisting prettyprint java hljs"><span class=3D"hljs-fu=
nction"><span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyw=
ord">void</span> <span class=3D"hljs-title">shutdown</span><span class=3D"h=
ljs-params">()</span></span></pre><p>You are not required to implement <cod=
e class=3D"literal">shutdown()</code> unless
   your IdRepo plugin has shut down work of its own to do, such as close
   connections to the underlying identity data store.</p></div><div class=
=3D"section" id=3D"idrepo-plugin-capabilities"><div class=3D"titlepage"><di=
v><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage=
.forgerock.com/docs/openam/13.5/dev-guide/index.html#idrepo-plugin-capabili=
ties">3.6.1.3.&nbsp;IdRepo Plugin Capabilities</a></h4></div></div></div><p=
>Your IdRepo plugin provides OpenAM with a generic means to manage
   subjects=E2=80=94including users and groups but also special types such =
as
   roles, realms, and agents=E2=80=94 and to create, read, update, delete, =
and
   search subjects. In order for OpenAM to determine your plugin's capabili=
ties,
   it calls the methods described in this section.</p><div class=3D"zero-cl=
ipboard hidden-xs hidden-print" title=3D"Copy code to clipboard"><span clas=
s=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></span></di=
v><pre class=3D"codelisting prettyprint java hljs"><span class=3D"hljs-func=
tion"><span class=3D"hljs-keyword">public</span> Set <span class=3D"hljs-ti=
tle">getSupportedTypes</span><span class=3D"hljs-params">()</span></span></=
pre><p>The <code class=3D"literal">getSupportedTypes()</code> method return=
s a set of
   <code class=3D"literal">IdType</code> objects, such as <code class=3D"li=
teral">IdType.USER</code>
   and <code class=3D"literal">IdType.GROUP</code>. You can either hard-cod=
e the supported
   types into your plugin, or make them configurable through the IdRepo
   service.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span clas=
s=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettypri=
nt java hljs"><span class=3D"hljs-function"><span class=3D"hljs-keyword">pu=
blic</span> Set <span class=3D"hljs-title">getSupportedOperations</span><sp=
an class=3D"hljs-params">(IdType type)</span></span></pre><p>The <code clas=
s=3D"literal">getSupportedOperations()</code> method returns a set
   of <code class=3D"literal">IdOperation</code> objects, such as
   <code class=3D"literal">IdOperation.CREATE</code> and
   <code class=3D"literal">IdOperation.EDIT</code>. You can also either har=
d-code these, or
   make them configurable.</p><div class=3D"zero-clipboard hidden-xs hidden=
-print" title=3D"Copy code to clipboard"><span class=3D"btn-copy-codelistin=
g"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"codelist=
ing prettyprint java hljs"><span class=3D"hljs-function"><span class=3D"hlj=
s-keyword">public</span> <span class=3D"hljs-keyword">boolean</span> <span =
class=3D"hljs-title">supportsAuthentication</span><span class=3D"hljs-param=
s">()</span></span></pre><p>The <code class=3D"literal">supportsAuthenticat=
ion()</code> method returns true if
   your plugin supports the <code class=3D"literal">authenticate()</code> m=
ethod.</p></div></div><div class=3D"section" id=3D"idrepo-plugin-implementa=
tion"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#idrepo-plugin-implementation">3.6.2.&nbsp;Identity Repository P=
lugin Implementation</a></h3></div></div></div><p>Your IdRepo plugin implem=
ents operational methods depending on what
  you support. These methods perform the operations in your data store.</p>=
<div class=3D"variablelist"><dl class=3D"variablelist"><dt><span class=3D"t=
erm">Create</span></dt><dd><p>OpenAM calls <code class=3D"literal">create()=
</code> to provision a new identity
     in the repository, where <code class=3D"literal">name</code> is the ne=
w identity's
     name, and <code class=3D"literal">attrMap</code> holds the attributes =
names and
     values.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span clas=
s=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettypri=
nt java hljs"><span class=3D"hljs-function"><span class=3D"hljs-keyword">pu=
blic</span> String <span class=3D"hljs-title">create</span><span class=3D"h=
ljs-params">(SSOToken token, IdType type, String name, Map attrMap)</span>
  <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOException<=
/span></pre></dd><dt><span class=3D"term">Read</span></dt><dd><p>OpenAM cal=
ls the following methods to retrieve subjects in the
     identity repository, and to check account activity. If your data store
     does not support binary attributes, return an empty <code class=3D"lit=
eral">Map</code>
     for <code class=3D"literal">getBinaryAttributes()</code>.</p><div clas=
s=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to clipboard=
"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span=
></span></div><pre class=3D"codelisting prettyprint java hljs"><span class=
=3D"hljs-function"><span class=3D"hljs-keyword">public</span> <span class=
=3D"hljs-keyword">boolean</span> <span class=3D"hljs-title">isExists</span>=
<span class=3D"hljs-params">(
  SSOToken token,
  IdType type,
  String name
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">boo=
lean</span> <span class=3D"hljs-title">isActive</span><span class=3D"hljs-p=
arams">(
  SSOToken token,
  IdType type,
  String name
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption

<span class=3D"hljs-keyword">public</span> Map <span class=3D"hljs-title">g=
etAttributes</span><span class=3D"hljs-params">(
  SSOToken token,
  IdType type,
  String name
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption

<span class=3D"hljs-keyword">public</span> Map <span class=3D"hljs-title">g=
etAttributes</span><span class=3D"hljs-params">(
  SSOToken token,
  IdType type,
  String name,
  Set attrNames
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption

<span class=3D"hljs-keyword">public</span> Map <span class=3D"hljs-title">g=
etBinaryAttributes</span><span class=3D"hljs-params">(
  SSOToken token,
  IdType type,
  String name,
  Set attrNames
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption

<span class=3D"hljs-keyword">public</span> RepoSearchResults <span class=3D=
"hljs-title">search</span><span class=3D"hljs-params">(
  SSOToken token,
  IdType type,
  String pattern,
  Map avPairs,
  <span class=3D"hljs-keyword">boolean</span> recursive,
  <span class=3D"hljs-keyword">int</span> maxResults,
  <span class=3D"hljs-keyword">int</span> maxTime,
  Set returnAttrs
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption

<span class=3D"hljs-keyword">public</span> RepoSearchResults <span class=3D=
"hljs-title">search</span><span class=3D"hljs-params">(
  SSOToken token,
  IdType type,
  String pattern,
  <span class=3D"hljs-keyword">int</span> maxTime,
  <span class=3D"hljs-keyword">int</span> maxResults,
  Set returnAttrs,
  <span class=3D"hljs-keyword">boolean</span> returnAllAttrs,
  <span class=3D"hljs-keyword">int</span> filterOp,
  Map avPairs,
  <span class=3D"hljs-keyword">boolean</span> recursive
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption</span></pre></dd><dt><span class=3D"term">Edit</span></dt><dd><p>Ope=
nAM calls the following methods to update a subject in the
     identity repository.</p><div class=3D"zero-clipboard hidden-xs hidden-=
print" title=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting=
"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisti=
ng prettyprint java hljs"><span class=3D"hljs-function"><span class=3D"hljs=
-keyword">public</span> <span class=3D"hljs-keyword">void</span> <span clas=
s=3D"hljs-title">setAttributes</span><span class=3D"hljs-params">(
  SSOToken token,
  IdType type,
  String name,
  Map attributes,
  <span class=3D"hljs-keyword">boolean</span> isAdd
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">voi=
d</span> <span class=3D"hljs-title">setBinaryAttributes</span><span class=
=3D"hljs-params">(
  SSOToken token,
  IdType type,
  String name,
  Map attributes,
  <span class=3D"hljs-keyword">boolean</span> isAdd
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">voi=
d</span> <span class=3D"hljs-title">removeAttributes</span><span class=3D"h=
ljs-params">(
  SSOToken token,
  IdType type,
  String name,
  Set attrNames
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">voi=
d</span> <span class=3D"hljs-title">modifyMemberShip</span><span class=3D"h=
ljs-params">(
  SSOToken token,
  IdType type,
  String name,
  Set members,
  IdType membersType,
  <span class=3D"hljs-keyword">int</span> operation
)</span> <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOExc=
eption

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">voi=
d</span> <span class=3D"hljs-title">setActiveStatus</span><span class=3D"hl=
js-params">(
  SSOToken token,
  IdType type,
  String name,
  <span class=3D"hljs-keyword">boolean</span> active
)</span></span></pre></dd><dt><span class=3D"term">Authenticate</span></dt>=
<dd><p>OpenAM calls <code class=3D"literal">authenticate()</code> with the =
credentials
     from the <code class=3D"literal">DataStore</code> authentication modul=
e.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint java hlj=
s"><span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span>=
 <span class=3D"hljs-keyword">boolean</span> <span class=3D"hljs-title">aut=
henticate</span><span class=3D"hljs-params">(Callback[] credentials)</span>
  <span class=3D"hljs-keyword">throws</span> IdRepoException, AuthLoginExce=
ption</span></pre></dd><dt><span class=3D"term">Delete</span></dt><dd><p>Th=
e <code class=3D"literal">delete()</code> method removes the subject from
     the identity repository. The <code class=3D"literal">name</code> speci=
fies the
     subject.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span clas=
s=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettypri=
nt java hljs"><span class=3D"hljs-function"><span class=3D"hljs-keyword">pu=
blic</span> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-ti=
tle">delete</span><span class=3D"hljs-params">(SSOToken token, IdType type,=
 String name)</span>
  <span class=3D"hljs-keyword">throws</span> IdRepoException, SSOException<=
/span></pre></dd><dt><span class=3D"term">Service</span></dt><dd><p>The <co=
de class=3D"literal">IdOperation.SERVICE</code> operation is rarely used
     in recent OpenAM deployments.</p></dd></dl></div></div><div class=3D"s=
ection" id=3D"idrepo-plugin-deployment"><div class=3D"titlepage"><div><div>=
<h3 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#idrepo-plugin-deployment">3.6=
.3.&nbsp;Identity Repository Plugin Deployment</a></h3></div></div></div><p=
>
   When you build your IdRepo plugin,
   include <code class=3D"filename">openam-core-13.5.2.jar</code> in the cl=
asspath.
   This file is found under <code class=3D"filename">WEB-INF/lib/</code>
   where OpenAM is deployed.
  </p><p>
   You can either package your plugin as a .jar,
   and then add it to <code class=3D"filename">WEB-INF/lib/</code>,
   or add the classes under <code class=3D"filename">WEB-INF/classes/</code=
>.
  </p><p>To register your plugin with OpenAM, you add a
  <code class=3D"literal">SubSchema</code> to the
  <code class=3D"literal">sunIdentityRepositoryService</code> using the
  <span class=3D"command"><strong>ssoadm</strong></span> command. First, yo=
u create the
  <code class=3D"literal">SubSchema</code> document having the following st=
ructure.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"C=
opy code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"=
fa fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint xm=
l hljs"><span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">SubSchema</s=
pan> <span class=3D"hljs-attr">i18nKey</span>=3D<span class=3D"hljs-string"=
>"x4000"</span> <span class=3D"hljs-attr">inheritance</span>=3D<span class=
=3D"hljs-string">"multiple"</span> <span class=3D"hljs-attr">maintainPriori=
ty</span>=3D<span class=3D"hljs-string">"no"</span>
           <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-stri=
ng">"CustomRepo"</span> <span class=3D"hljs-attr">supportsApplicableOrganiz=
ation</span>=3D<span class=3D"hljs-string">"no"</span> <span class=3D"hljs-=
attr">validate</span>=3D<span class=3D"hljs-string">"yes"</span>&gt;</span>
 <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeSchema</sp=
an> <span class=3D"hljs-attr">cosQualifier</span>=3D<span class=3D"hljs-str=
ing">"default"</span> <span class=3D"hljs-attr">isSearchable</span>=3D<span=
 class=3D"hljs-string">"no"</span>
                  <span class=3D"hljs-attr">name</span>=3D<span class=3D"hl=
js-string">"RequiredValueValidator"</span> <span class=3D"hljs-attr">syntax=
</span>=3D<span class=3D"hljs-string">"string"</span>
                  <span class=3D"hljs-attr">type</span>=3D<span class=3D"hl=
js-string">"validator"</span> &gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">DefaultValues</spa=
n>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>com.sun.identity.sm.RequiredValueValidator<span class=3D"hljs-tag">&l=
t;/<span class=3D"hljs-name">Value</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">DefaultValues</sp=
an>&gt;</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">AttributeSchema</s=
pan>&gt;</span>
 <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeSchema</sp=
an> <span class=3D"hljs-attr">any</span>=3D<span class=3D"hljs-string">"req=
uired"</span> <span class=3D"hljs-attr">cosQualifier</span>=3D<span class=
=3D"hljs-string">"default"</span>
                  <span class=3D"hljs-attr">i18nKey</span>=3D<span class=3D=
"hljs-string">"x4001"</span> <span class=3D"hljs-attr">isSearchable</span>=
=3D<span class=3D"hljs-string">"no"</span>
                  <span class=3D"hljs-attr">name</span>=3D<span class=3D"hl=
js-string">"sunIdRepoClass"</span> <span class=3D"hljs-attr">syntax</span>=
=3D<span class=3D"hljs-string">"string"</span>
                  <span class=3D"hljs-attr">type</span>=3D<span class=3D"hl=
js-string">"single"</span> <span class=3D"hljs-attr">validator</span>=3D<sp=
an class=3D"hljs-string">"RequiredValueValidator"</span> &gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">DefaultValues</spa=
n>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>org.test.CustomRepo<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-=
name">Value</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">DefaultValues</sp=
an>&gt;</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">AttributeSchema</s=
pan>&gt;</span>
 <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeSchema</sp=
an> <span class=3D"hljs-attr">cosQualifier</span>=3D<span class=3D"hljs-str=
ing">"default"</span> <span class=3D"hljs-attr">i18nKey</span>=3D<span clas=
s=3D"hljs-string">"x4002"</span> <span class=3D"hljs-attr">isSearchable</sp=
an>=3D<span class=3D"hljs-string">"no"</span>
                  <span class=3D"hljs-attr">name</span>=3D<span class=3D"hl=
js-string">"sunIdRepoAttributeMapping"</span> <span class=3D"hljs-attr">syn=
tax</span>=3D<span class=3D"hljs-string">"string"</span> <span class=3D"hlj=
s-attr">type</span>=3D<span class=3D"hljs-string">"list"</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">DefaultValues</spa=
n>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;=
</span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>=
&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">DefaultValues</sp=
an>&gt;</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">AttributeSchema</s=
pan>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">SubSchema</span>&gt=
;</span></pre><p>Also include the <code class=3D"literal">AttributeSchema</=
code> required to
  configure your IdRepo plugin.</p><p>
   Notice the <code class=3D"literal">i18nKey</code> attributes
   on <code class=3D"literal">SubSchema</code> elements.
   The <code class=3D"literal">i18nKey</code> attribute values correspond t=
o properties in
   the <code class=3D"filename">amIdRepoService.properties</code> file
   under <code class=3D"filename">WEB-INF/classes/</code> where OpenAM is d=
eployed.
   OpenAM console displays the label for the configuration user interface
   that it retrieves from the value of the <code class=3D"literal">i18nKey<=
/code> property
   in the <code class=3D"filename">amIdRepoService.properties</code> file.
  </p><p>
   To make changes to the properties,
   first extract <code class=3D"filename">amIdRepoService.properties</code>
   and if necessary the localized versions of this file
   from <code class=3D"filename">openam-core-13.5.2.jar</code>
   to <code class=3D"filename">WEB-INF/classes/</code> where OpenAM is depl=
oyed.
   For example, if OpenAM is deployed under
   <code class=3D"filename">/path/to/tomcat/webapps/openam</code>,
   then you could run the following commands.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">cd /path/to/tomcat/webapps/openam/WEB-INF/cla=
sses/</strong>
$ <strong class=3D"userinput">jar -xvf ../lib/openam-core-13.5.2.jar amIdRe=
poService.properties</strong>
 <em class=3D"computeroutput">inflated: amIdRepoService.properties</em></pr=
e><p>Register your plugin using the <span class=3D"command"><strong>ssoadm<=
/strong></span> command after
  copy the files into place.</p><div class=3D"zero-clipboard hidden-xs hidd=
en-print" title=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdli=
ne"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline=
 prettyprint nohighlight">$ <strong class=3D"userinput">ssoadm \
 add-sub-schema \
 --adminid amadmin \
 --password-file /tmp/pwd.txt \
 --servicename sunIdentityRepositoryService \
 --schematype Organization \
 --filename customIdRepo.xml</strong></pre><p>Log in to the OpenAM console =
as administrator, then browse to Realms
  &gt; <em class=3D"replaceable">Realm Name</em> &gt; Data Stores. In the
  Data Stores table, click New... to create a Data Store corresponding to y=
our
  custom IdRepo plugin. In the first screen of the wizard, name the Data St=
ore
  and select the type corresponding to your plugin. In the second screen of=
 the
  wizard, add the configuration for your plugin.</p><p>After creating the D=
ata Store, create a new subject in the realm to
  check that your plugin works as expected. You can do this under Realms
  &gt; <em class=3D"replaceable">Realm Name</em> &gt; Subjects.</p><p>If yo=
ur plugin supports authentication, then users should now be able
  to authenticate using the <code class=3D"literal">DataStore</code> module=
 for the
  realm.</p><pre class=3D"literallayout">http://openam.example.com:8080/ope=
nam/UI/Login?realm=3Dtest&amp;module=3DDataStore</pre></div></div></div><di=
v lang=3D"" class=3D"chapter" id=3D"chap-extending"><div class=3D"titlepage=
"><div><div><h1 class=3D"title"><a class=3D"self-link" href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/index.html#chap-extending">C=
hapter&nbsp;4.&nbsp;Extending OpenAM</a></h1></div></div></div><p>OpenAM se=
rvices solve a wide range of access and federation
 management problems out of the box. Yet, OpenAM also exposes APIs and
 SPIs that enable you extend OpenAM services when built-in functionality
 does not fit your deployment.</p><p>This part of the guide covers OpenAM m=
echanisms for plugging in
 additional functionality not available out of the box.</p><div class=3D"se=
ction" id=3D"sec-post-auth"><div class=3D"titlepage"><div><div><h2 class=3D=
"title" style=3D"clear: both"><a class=3D"self-link" href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-post-auth">4.1.=
&nbsp;Creating a Post Authentication Plugin</a></h2></div></div></div><a cl=
ass=3D"indexterm" name=3D"d15472e13473"></a><p>Post authentication plugins =
(PAP) let you include custom processing at
 the end of the authentication process, immediately before the subject is
 authenticated. Common uses of post authentication plugins include setting
 cookies and session variables. Post authentication plugins are often used =
in
 conjunction with policy agents. The post authentication plugin sets custom
 session properties, and then the policy agent injects the custom propertie=
s
 into the request header to the protected application.</p><p>
  Two issues should be considered when writing a post authentication
  plugin for an OpenAM deployment that uses stateless sessions:
  </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span clas=
s=3D"term">Cookie size</span></dt><dd><p>
      You can set an unlimited number of session properties in a post
      authentication plugin. When OpenAM creates a stateless session,
      it writes the session properties into the session cookie, increasing
      the size of the cookie. Very large session cookies can exceed browser
      limitations. Therefore, when implementing a post authentication plugi=
n
      in a deployment with stateless sessions, be sure to monitor the sessi=
on
      cookie size and verify that you have not exceeded browser cookie
      size limits.
     </p><p>
      For more information about stateless session cookies,
      see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin=
-guide/index.html#session-state-cookies" class=3D"olink">"Session Cookies"<=
/a> in the <em>Administration Guide</em>.
     </p></dd><dt><span class=3D"term">Cookie security</span></dt><dd><p>
      The OpenAM administrator secures custom session properties residing o=
n the
      OpenAM server for stateful sessions by using firewalls and other typi=
cal
      security techniques.
     </p><p>
      However, when using stateless sessions, custom session properties are
      written in cookies and reside on end users' systems. Cookies can be
      long-lasting and might represent a security issue if any session
      properties are of a sensitive nature. When developing a post
      authentication plugin for a deployment that uses stateless sessions,
      be sure that you are aware of the measures securing the session conta=
ined
      within the cookie.
     </p><p>
      For more information about stateless session cookie security,
      see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin=
-guide/index.html#session-state-stateless-cookie-security" class=3D"olink">=
"Stateless Session Cookie Security"</a> in the <em>Administration Guide</em=
>.
     </p></dd></dl></div><p>
 </p><p>This section explains how to create a post authentication plugin.</=
p><div class=3D"section" id=3D"design-post-authentication-plugin"><div clas=
s=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#d=
esign-post-authentication-plugin">4.1.1.&nbsp;Designing Your Post Authentic=
ation Plugin</a></h3></div></div></div><p>Your post authentication plugin c=
lass implements the
  <code class=3D"literal">AMPostAuthProcessInterface</code> interface, and =
in particular
  the following three methods.</p><div class=3D"zero-clipboard hidden-xs hi=
dden-print" title=3D"Copy code to clipboard"><span class=3D"btn-copy-codeli=
sting"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"code=
listing prettyprint java hljs"><span class=3D"hljs-function"><span class=3D=
"hljs-keyword">public</span> <span class=3D"hljs-keyword">void</span> <span=
 class=3D"hljs-title">onLoginSuccess</span><span class=3D"hljs-params">(
  Map requestParamsMap,
  HttpServletRequest request,
  HttpServletResponse response,
  SSOToken token
)</span> <span class=3D"hljs-keyword">throws</span> AuthenticationException

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">voi=
d</span> <span class=3D"hljs-title">onLoginFailure</span><span class=3D"hlj=
s-params">(
  Map requestParamsMap,
  HttpServletRequest request,
  HttpServletResponse response
)</span> <span class=3D"hljs-keyword">throws</span> AuthenticationException

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-keyword">voi=
d</span> <span class=3D"hljs-title">onLogout</span><span class=3D"hljs-para=
ms">(
  HttpServletRequest request,
  HttpServletResponse response,
  SSOToken token
)</span> <span class=3D"hljs-keyword">throws</span> AuthenticationException=
</span></pre><p>OpenAM calls the <code class=3D"literal">onLoginSuccess()</=
code> and
  <code class=3D"literal">onLoginFailure()</code> methods immediately befor=
e informing the
  user of login success or failure, respectively. OpenAM calls the
  <code class=3D"literal">onLogout()</code> method only when the user activ=
ely logs out,
  not when a user's session times out.</p><p>See the <a class=3D"link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/apidocs" target=3D"_bl=
ank"><em class=3D"citetitle">OpenAM Java SDK API Specification</em></a> for
  reference.</p><p>These methods can perform whatever processing you requir=
e. Yet, know
  that OpenAM calls your methods synchronously as part of the authenticatio=
n
  process. Therefore, if your methods take a long time to complete, you wil=
l
  keep users waiting. Minimize the processing done in your post authenticat=
ion
  methods.</p></div><div class=3D"section" id=3D"build-post-authentication-=
plugin"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"=
self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#build-post-authentication-plugin">4.1.2.&nbsp;Building Your S=
ample Post Authentication Plugin</a></h3></div></div></div><p>The following=
 example post authentication plugin sets a session
  property during successful login, writing to its debug log if the operati=
on
  fails.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"C=
opy code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"=
fa fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint ja=
va hljs"><span class=3D"hljs-keyword">package</span> com.forgerock.openam.e=
xamples;

<span class=3D"hljs-keyword">import</span> java.util.Map;

<span class=3D"hljs-keyword">import</span> com.iplanet.sso.SSOException;
<span class=3D"hljs-keyword">import</span> com.iplanet.sso.SSOToken;

<span class=3D"hljs-keyword">import</span> com.sun.identity.authentication.=
spi.AMPostAuthProcessInterface;
<span class=3D"hljs-keyword">import</span> com.sun.identity.authentication.=
spi.AuthenticationException;
<span class=3D"hljs-keyword">import</span> com.sun.identity.shared.debug.De=
bug;

<span class=3D"hljs-keyword">import</span> javax.servlet.http.HttpServletRe=
quest;
<span class=3D"hljs-keyword">import</span> javax.servlet.http.HttpServletRe=
sponse;

<span class=3D"hljs-keyword">public</span> <span class=3D"hljs-class"><span=
 class=3D"hljs-keyword">class</span> <span class=3D"hljs-title">SamplePAP</=
span> <span class=3D"hljs-keyword">implements</span> <span class=3D"hljs-ti=
tle">AMPostAuthProcessInterface</span> </span>{
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String PROP_NAME =
=3D <span class=3D"hljs-string">"MyProperty"</span>;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String PROP_VALUE=
 =3D <span class=3D"hljs-string">"MyValue"</span>;
    <span class=3D"hljs-keyword">private</span> <span class=3D"hljs-keyword=
">final</span> <span class=3D"hljs-keyword">static</span> String DEBUG_FILE=
 =3D <span class=3D"hljs-string">"SamplePAP"</span>;

    <span class=3D"hljs-keyword">protected</span> Debug debug =3D Debug.get=
Instance(DEBUG_FILE);

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">onLog=
inSuccess</span><span class=3D"hljs-params">(
            Map requestParamsMap,
            HttpServletRequest request,
            HttpServletResponse response,
            SSOToken token
    )</span> <span class=3D"hljs-keyword">throws</span> AuthenticationExcep=
tion </span>{
        <span class=3D"hljs-keyword">try</span> {
            token.setProperty(PROP_NAME, PROP_VALUE);
        } <span class=3D"hljs-keyword">catch</span> (SSOException e) {
            debug.error(<span class=3D"hljs-string">"Unable to set property=
"</span>);
        }
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">onLog=
inFailure</span><span class=3D"hljs-params">(
            Map requestParamsMap,
            HttpServletRequest request,
            HttpServletResponse response
    )</span> <span class=3D"hljs-keyword">throws</span> AuthenticationExcep=
tion </span>{
        <span class=3D"hljs-comment">// Not used</span>
    }

    <span class=3D"hljs-function"><span class=3D"hljs-keyword">public</span=
> <span class=3D"hljs-keyword">void</span> <span class=3D"hljs-title">onLog=
out</span><span class=3D"hljs-params">(
            HttpServletRequest request,
            HttpServletResponse response,
            SSOToken token
    )</span> <span class=3D"hljs-keyword">throws</span> AuthenticationExcep=
tion </span>{
        <span class=3D"hljs-comment">// Not used</span>
    }
}
</pre><p>
   The <a class=3D"link" href=3D"https://github.com/ForgeRock/openam-post-a=
uth-sample" target=3D"_blank">sample post authentication plugin source</a>
   is available online.
   Get a local clone so that you can try the sample on your system.
   In the sources you find the following files.
  </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span clas=
s=3D"term"><code class=3D"filename">pom.xml</code></span></dt><dd><p>
      Apache Maven project file for the module
     </p><p>
      This file specifies how to build the sample post authentication plugi=
n,
      and also specifies its dependencies on OpenAM components
      and on the Servlet API.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">src/main/ja=
va/com/forgerock/openam/examples/SamplePAP.java</code></span></dt><dd><p>
      Core class for the sample post authentication plugin
     </p></dd></dl></div><p>
   Build the module using Apache Maven.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">cd /path/to/openam-post-auth-sample</strong>
$ <strong class=3D"userinput">mvn install</strong>
<em class=3D"computeroutput">[INFO] Scanning for projects...
[INFO]
[INFO] --------------------------------------------------------------------=
----
[INFO] Building openam-post-auth-sample 1.0.0-SNAPSHOT
[INFO] --------------------------------------------------------------------=
----

...

[INFO]
[INFO] --- maven-jar-plugin:2.3.1:jar (default-jar) @ openam-post-auth-samp=
le --
[INFO] Building jar: .../target/openam-post-auth-sample-1.0.0-SNAPSHOT.jar

...

[INFO] --------------------------------------------------------------------=
----
[INFO] BUILD SUCCESS
[INFO] --------------------------------------------------------------------=
----
[INFO] Total time: 6.727s
[INFO] Finished at: Mon Nov 25 17:07:23 CET 2013
[INFO] Final Memory: 20M/227M
[INFO] --------------------------------------------------------------------=
----</em></pre><p>
   Copy the .jar to the <code class=3D"filename">WEB-INF/lib</code> directo=
ry
   where you deployed OpenAM.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">cp target/*.jar /path/to/tomcat/webapps/opena=
m/WEB-INF/lib/</strong></pre><p>
   Restart OpenAM or the container in which it runs.
  </p></div><div class=3D"section" id=3D"configure-post-authentication-plug=
in"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self=
-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#configure-post-authentication-plugin">4.1.3.&nbsp;Configuring You=
r Post Authentication Plugin</a></h3></div></div></div><p>
      You can associate post authentication plugins with realms or services=
 (authentication
      chains). Where you configure the plugin depends on the scope to which=
 the
      plugin should apply:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>Plugins configured at the r=
ealm level are executed when authenticating to any
          authentication chain in the realm, provided the authentication ch=
ain does not
          have an associated plugin.
        </p></li><li class=3D"listitem"><p>Plugins configured at the servic=
e level are executed if that authentication
          chain is used for authentication. Any plugins configured at the r=
ealm level will
          not execute.</p></li></ul></div><p>
      In OpenAM Console, navigate to Realms &gt; <em class=3D"replaceable">=
Realm
      Name</em> &gt; Authentication &gt; Settings &gt; Post Authentication
      Processing. In the Authentication Post Processing Classes list,
      add the sample plugin class,
      <code class=3D"literal">com.forgerock.openam.examples.SamplePAP</code=
>,
      and then click Save.
    </p><p>
      Alternatively, you can configure sample plugin for the realm
      by using the <span class=3D"command"><strong>ssoadm</strong></span> c=
ommand.
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">ssoadm
  set-svc-attrs
  --adminid amadmin
  --password-file /tmp/pwd.txt
  --servicename iPlanetAMAuthService
  --realm /myRealm
  --attributevalues iplanet-am-auth-post-login-process-class=3D
  com.forgerock.openam.examples.SamplePAP</strong>

<em class=3D"computeroutput">iPlanetAMAuthService under /myRealm was
  modified.</em></pre></div><div class=3D"section" id=3D"test-post-authenti=
cation-plugin"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a cl=
ass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#test-post-authentication-plugin">4.1.4.&nbsp;Testing Y=
our Post Authentication Plugin</a></h3></div></div></div><p>
   To test the sample post authentication plugin,
   login successfully to OpenAM in the scope where the plugin is configured=
.
   For example, if you configured your plugin for the realm,
   <code class=3D"literal">/myRealm</code>, specify the realm in the login =
URL.
  </p><pre class=3D"literallayout">http://openam.example.com:8080/openam/UI=
/Login?realm=3DmyRealm</pre><p>
   Although as a user you do not notice anywhere in the user interface
   that OpenAM calls your plugin,
   a policy agent or custom client code could retrieve the session property
   that your plugin added to the user session.
  </p></div></div><div class=3D"section" id=3D"sec-uma-extension-points"><d=
iv class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both">=
<a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#sec-uma-extension-points">4.2.&nbsp;Extending UMA=
 Workflow with Extension Points</a></h2></div></div></div><a class=3D"index=
term" name=3D"d15472e13643"></a><p>OpenAM provides a number of extension po=
ints for extending the UMA
 workflow. These extension points are provided as filters and are
  dynamically loaded by using the <a class=3D"link" href=3D"http://docs.ora=
cle.com/javase/7/docs/api/java/util/ServiceLoader.html" target=3D"_top">Jav=
a <code class=3D"literal">ServiceLoader</code> framework</a> during the UMA=
 workflow.
 </p><p>The extension points available are described in the sections
  below:</p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D=
"list-style-type: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#e=
xt-resource-registration" title=3D"4.2.1.&nbsp;Resource Set Registration Ex=
tension Point">"Resource Set Registration Extension Point"</a></p></li><li =
class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#ext-permission-requests" title=
=3D"4.2.2.&nbsp;Permission Request Extension Point">"Permission Request Ext=
ension Point"</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#e=
xt-authorization-requests" title=3D"4.2.3.&nbsp;Authorization Request Exten=
sion Point">"Authorization Request Extension Point"</a></p></li><li class=
=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/dev-guide/index.html#ext-resource-delegation" title=3D"4.2=
.4.&nbsp;Resource Sharing Extension Point">"Resource Sharing Extension Poin=
t"</a></p></li></ul></div><div class=3D"section" id=3D"ext-resource-registr=
ation"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"s=
elf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#ext-resource-registration">4.2.1.&nbsp;Resource Set Registrati=
on Extension Point</a></h3></div></div></div><p>OpenAM provides the <code c=
lass=3D"literal">ResourceRegistrationFilter</code>
   extension point, which can be used to extend UMA resource set
   registration functionality.
  </p><div class=3D"table" id=3D"ext-resource-registration-methods"><div cl=
ass=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#ext-resource-registration-met=
hods">Resource Set Registration Extension Methods</a></div><div class=3D"ta=
ble-contents"><table xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D=
"http://docbook.org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmln=
s:exslt=3D"http://exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/docu=
mentation/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Ta=
ble" xmlns:xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xm=
l.apache.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python=
/Table" class=3D"table table-striped" summary=3D"Resource Set Registration =
Extension Methods" width=3D"100%" border=3D"0"><colgroup><col width=3D"33%"=
><col width=3D"33%"><col width=3D"34%"></colgroup><thead><tr><th>Method</th=
><th>Parameters</th><th>Description</th></tr></thead><tbody><tr><td>
         <p>
          <code class=3D"literal">beforeResourceRegistration</code>
         </p>
        </td><td>
         <p>
          <em class=3D"replaceable">resourceSet</em>
          (type: <code class=3D"literal">ResourceSetDescription</code>)
         </p>
        </td><td>
         <p>Invoked before a resource set is registered in the backend. </p=
>
         <p>Changes made to the <em class=3D"replaceable">resourceSet</em>
          object at this stage <span class=3D"emphasis"><em>will</em></span=
> be persisted.</p>
        </td></tr><tr><td>
         <p>
          <code class=3D"literal">afterResourceRegistration</code>
         </p>
        </td><td>
         <p>
          <em class=3D"replaceable">resourceSet</em>
          (type: <code class=3D"literal">ResourceSetDescription</code>)
         </p>
        </td><td>
         <p>Invoked after a resource set is registered in the backend.</p>
         <p>Changes made to the <em class=3D"replaceable">resourceSet</em>
          object at this stage <span class=3D"emphasis"><em>will not</em></=
span> be persisted.</p>
        </td></tr></tbody></table></div></div><br class=3D"table-break"></d=
iv><div class=3D"section" id=3D"ext-permission-requests"><div class=3D"titl=
epage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#ext-permissi=
on-requests">4.2.2.&nbsp;Permission Request Extension Point</a></h3></div><=
/div></div><p>OpenAM provides the <code class=3D"literal">PermissionRequest=
Filter</code>
   extension point, which can be used to extend UMA permission request
   functionality.
  </p><div class=3D"table" id=3D"ext-permission-requests-methods"><div clas=
s=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.forgeroc=
k.com/docs/openam/13.5/dev-guide/index.html#ext-permission-requests-methods=
">Permission Request Extension Methods</a></div><div class=3D"table-content=
s"><table xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http://doc=
book.org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"=
http://exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1=
.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:=
xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.or=
g/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table" cla=
ss=3D"table table-striped" summary=3D"Permission Request Extension Methods"=
 width=3D"100%" border=3D"0"><colgroup><col width=3D"33%"><col width=3D"33%=
"><col width=3D"34%"></colgroup><thead><tr><th>Method</th><th>Parameters</t=
h><th>Description</th></tr></thead><tbody><tr><td>
         <p>
          <code class=3D"literal">onPermissionRequest</code>
         </p>
        </td><td>
         <p>
          <em class=3D"replaceable">resourceSet</em>
          (type: <code class=3D"literal">ResourceSetDescription</code>)
         </p>
         <p>
          <em class=3D"replaceable">requestedScopes</em>
          (type: <code class=3D"literal">Set&lt;String&gt;</code>)
         </p>
         <p>
          <em class=3D"replaceable">requestingClientId</em>
          (type: <code class=3D"literal">String</code>)
         </p>
        </td><td>
         <p>Invoked before a permission request is created.</p>
        </td></tr></tbody></table></div></div><br class=3D"table-break"></d=
iv><div class=3D"section" id=3D"ext-authorization-requests"><div class=3D"t=
itlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#ext-autho=
rization-requests">4.2.3.&nbsp;Authorization Request Extension Point</a></h=
3></div></div></div><p>OpenAM provides the <code class=3D"literal">RequestA=
uthorizationFilter</code>
   extension point, which can be used to extend UMA authorization
   functionality.
  </p><div class=3D"table" id=3D"ext-authorization-requests-methods"><div c=
lass=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#ext-authorization-requests-m=
ethods">Authorization Request Extension Methods</a></div><div class=3D"tabl=
e-contents"><table xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"h=
ttp://docbook.org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:=
exslt=3D"http://exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/docume=
ntation/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Tabl=
e" xmlns:xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.=
apache.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/T=
able" class=3D"table table-striped" summary=3D"Authorization Request Extens=
ion Methods" width=3D"100%" border=3D"0"><colgroup><col width=3D"33%"><col =
width=3D"33%"><col width=3D"34%"></colgroup><thead><tr><th>Method</th><th>P=
arameters</th><th>Description</th></tr></thead><tbody><tr><td>
         <p>
          <code class=3D"literal">beforeAuthorization</code>
         </p>
        </td><td>
         <p>
          <em class=3D"replaceable">permissionTicket</em>
          (type: <code class=3D"literal">PermissionTicket</code>)
         </p>
         <p>
          <em class=3D"replaceable">requestingParty</em>
          (type: <code class=3D"literal">Subject</code>)
         </p>
         <p>
          <em class=3D"replaceable">resourceOwner</em>
          (type: <code class=3D"literal">Subject</code>)
         </p>
        </td><td>
         <p>Invoked before authorization of a request is attempted.</p>
         <p>Throws <code class=3D"literal">UmaException</code> if authoriza=
tion of
         the request should not be attempted.</p>
        </td></tr><tr><td>
         <p>
          <code class=3D"literal">afterAuthorization</code>
         </p>
        </td><td>
         <p>
          <em class=3D"replaceable">isAuthorized</em>
          (type: <code class=3D"literal">boolean</code>)
         </p>
         <p>
          <em class=3D"replaceable">permissionTicket</em>
          (type: <code class=3D"literal">PermissionTicket</code>)
         </p>
         <p>
          <em class=3D"replaceable">requestingParty</em>
          (type: <code class=3D"literal">Subject</code>)
         </p>
         <p>
          <em class=3D"replaceable">resourceOwner</em>
          (type: <code class=3D"literal">Subject</code>)
         </p>
        </td><td>
         <p>Invoked before authorization of a request is attempted.</p>
         <p>If the authorization request was successful,
          <em class=3D"replaceable">isAuthorized</em> will be
          <code class=3D"literal">true</code>.</p>
        </td></tr></tbody></table></div></div><br class=3D"table-break"></d=
iv><div class=3D"section" id=3D"ext-resource-delegation"><div class=3D"titl=
epage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#ext-resource=
-delegation">4.2.4.&nbsp;Resource Sharing Extension Point</a></h3></div></d=
iv></div><p>OpenAM provides the <code class=3D"literal">ResourceDelegationF=
ilter</code>
   extension point, which can be used to extend UMA resource sharing
   functionality.
  </p><div class=3D"table" id=3D"ext-resource-delegation-methods"><div clas=
s=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.forgeroc=
k.com/docs/openam/13.5/dev-guide/index.html#ext-resource-delegation-methods=
">Resource Sharing Extension Methods</a></div><div class=3D"table-contents"=
><table xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http://docbo=
ok.org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"ht=
tp://exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0=
" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xt=
bl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/=
xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table" class=
=3D"table table-striped" summary=3D"Resource Sharing Extension Methods" wid=
th=3D"100%" border=3D"0"><colgroup><col width=3D"40%"><col width=3D"33%"><c=
ol width=3D"27%"></colgroup><thead><tr><th>Method</th><th>Parameters</th><t=
h>Description</th></tr></thead><tbody><tr><td>
         <p>
          <code class=3D"literal">beforeResourceShared</code>
         </p>
        </td><td>
         <p>
          <em class=3D"replaceable">umaPolicy</em>
          (type: <code class=3D"literal">UmaPolicy</code>)
         </p>
        </td><td>
         <p>Invoked before creating a sharing policy for a resource.</p>
         <p>Changes to the
          <em class=3D"replaceable">umaPolicy</em> object at
          this stage <span class=3D"emphasis"><em>will</em></span> be persi=
sted.</p>
         <p>Throws <code class=3D"literal">ResourceException</code> if a
          sharing policy for the resource should not be created.</p>
        </td></tr><tr><td>
         <p>
          <code class=3D"literal">afterResourceShared</code>
         </p>
        </td><td>
         <p>
          <em class=3D"replaceable">umaPolicy</em>
          (type: <code class=3D"literal">UmaPolicy</code>)
         </p>
        </td><td>
         <p>Invoked after creating a sharing policy for a resource.</p>
         <p>Changes to the <em class=3D"replaceable">umaPolicy</em>
          object at this stage <span class=3D"emphasis"><em>will not</em></=
span> be persisted.</p>
        </td></tr><tr><td>
         <p>
          <code class=3D"literal">beforeResourceSharedModification</code>
         </p>
        </td><td>
         <p>
          <em class=3D"replaceable">currentUmaPolicy</em>
          (type: <code class=3D"literal">UmaPolicy</code>)
         </p>
         <p>
          <em class=3D"replaceable">updatedUmaPolicy</em>
          (type: <code class=3D"literal">UmaPolicy</code>)
         </p>
        </td><td>
         <p>Invoked before altering the sharing policy of a resource.</p>
         <p>Changes to the <em class=3D"replaceable">updatedUmaPolicy</em>
          object at this stage <span class=3D"emphasis"><em>will</em></span=
> be persisted.</p>
         <p>Throws <code class=3D"literal">ResourceException</code> if the
          sharing policy of the resource should not be modified.</p>
        </td></tr><tr><td>
         <p>
          <code class=3D"literal">onResourceSharedDeletion</code>
         </p>
        </td><td>
         <p>
          <em class=3D"replaceable">umaPolicy</em>
          (type: <code class=3D"literal">UmaPolicy</code>)
         </p>
        </td><td>
         <p>Invoked before deleting the sharing policy of a resource.</p>
         <p>Throws <code class=3D"literal">ResourceException</code> if the
          sharing policy of the resource should not be deleted.</p>
        </td></tr><tr><td>
         <p>
          <code class=3D"literal">beforeQueryResourceSets</code>
         </p>
        </td><td>
         <p>
          <em class=3D"replaceable">userId</em>
          (type: <code class=3D"literal">String</code>)
         </p>
         <p>
          <em class=3D"replaceable">queryFilter</em>
          (type: <code class=3D"literal">QueryFilter&lt;JsonPointer&gt;</co=
de>)
         </p>
        </td><td>
         <p>Invoked before querying the resource sets owned or shared with
          a user.</p>
         <p>The <em class=3D"replaceable">userId</em>
          parameter provides the ID of the user making the query request.
         </p>
         <p>The <em class=3D"replaceable">queryFilter</em>
          parameter provides the incoming request query filter.
         </p>
         <p>Returns a <code class=3D"literal">QueryFilter</code> that can b=
e used to
          return the user's resource sets.</p>
        </td></tr></tbody></table></div></div><br class=3D"table-break"></d=
iv></div></div><div lang=3D"" class=3D"chapter" id=3D"chap-scripting"><div =
class=3D"titlepage"><div><div><h1 class=3D"title"><a class=3D"self-link" hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#chap-scripting">Chapter&nbsp;5.&nbsp;Scripting OpenAM</a></h1></div></div>=
</div><a class=3D"indexterm" name=3D"d15472e14202"></a><p>
  This chapter explains how to use scripting to exact fine control
  over various aspects of OpenAM.
 </p><p>
  You can use scripts for client-side and server-side authentication,
  policy conditions, and handling OpenID Connect claims.
 </p><p>
  This chapter covers the following topics:
 </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-s=
tyle-type: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#script-en=
v" title=3D"5.1.&nbsp;The Scripting Environment">The Scripting Environment<=
/a> </p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://ba=
ckstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api" =
title=3D"5.2.&nbsp;The Scripting API">The Scripting API</a> </p></li><li cl=
ass=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.c=
om/docs/openam/13.5/dev-guide/index.html#sec-scripting-default-scripts" tit=
le=3D"5.3.&nbsp;Using the Default Scripts">Using the Default Scripts</a> </=
p></li></ul></div><p>
  For information on managing scripts, see <a href=3D"https://backstage.for=
gerock.com/docs/openam/13.5/admin-guide/index.html#chap-manage-scripts" cla=
ss=3D"olink">"Managing Scripts"</a> in the <em>Administration Guide</em> an=
d <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#sec-manage-scripts-rest" title=3D"2.1.17.&nbsp;RESTf=
ul Script Management">"RESTful Script Management"</a>.
 </p><div class=3D"section" id=3D"script-env"><div class=3D"titlepage"><div=
><div><h2 class=3D"title" style=3D"clear: both"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
cript-env">5.1.&nbsp;The Scripting Environment</a></h2></div></div></div><p=
>
   This section introduces how OpenAM executes scripts, and covers
   thread pools and security configuration.
  </p><p>
   You can use scripts to modify default OpenAM behavior in the
   following situations, also known as <em class=3D"firstterm">contexts</em=
>:
  </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span clas=
s=3D"term">Client-side Authentication</span></dt><dd><p>
      Scripts that are executed on the client during authentication.
     </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 c=
lass=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>Client-sid=
e scripts must be in JavaScript.</p></div></div></dd><dt><span class=3D"ter=
m">Server-side Authentication</span></dt><dd><p>
      Scripts are included in an authentication module and are
      executed on the server during authentication.
     </p><p>
      Scripted authentication modules are an alternative to developing
      custom authentication modules by using Java as described in
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#sec-auth-spi" title=3D"3.3.&nbsp;Creating a Cust=
om Authentication Module">"Creating a Custom Authentication Module"</a>. A
      scripted authentication module allows you to customize default authen=
tication
      behavior by adding Groovy or JavaScript code to the module configurat=
ion.
     </p><p>
      To see an example server-side authentication script, see
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#sec-scripted-auth-module" title=3D"5.3.1.&nbsp;D=
efault Server-side Authentication Script">"Default Server-side Authenticati=
on Script"</a>.
     </p></dd><dt><span class=3D"term">Policy Condition</span></dt><dd><p>
      Scripts used as conditions within policies.
     </p><p>
      To see an example policy condition script, see
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#sec-scripted-policy-condition" title=3D"5.3.2.&n=
bsp;Default Policy Condition Script">"Default Policy Condition Script"</a>.
     </p></dd><dt><span class=3D"term">OIDC Claims</span></dt><dd><p>
      Scripts that gather and populate the claims in a request when
      issuing an ID token or making a request to the
      <code class=3D"literal">userinfo</code> endpoint.
     </p></dd></dl></div><p>
   OpenAM implements a configurable scripting engine for each of the
   context types that are executed on the server.
  </p><p>
   The scripting engines in OpenAM have two main components: security
   settings, and the thread pool.
  </p><div class=3D"mediaobject" align=3D"center"><a class=3D"fancybox cbox=
Element" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/images/scripting-engine-overview.png"><img class=3D"img-responsive center-=
block" data-toggle=3D"tooltip" src=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/images/thumb_scripting-engine-overview.png" align=3D"=
middle" height=3D"468" alt=3D"Diagram of the scripting environment within O=
penAM." title=3D"" data-original-title=3D"The scripting engines contain con=
figuration for
     security settings and thread pool management."></a></div><div class=3D=
"section" id=3D"script-engine-security"><div class=3D"titlepage"><div><div>=
<h3 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#script-engine-security">5.1.1=
.&nbsp;Security</a></h3></div></div></div><p>
    OpenAM scripting engines provide security features for ensuring that
    malicious Java classes are not directly called. The engines validate
    scripts by checking all directly-called Java
    classes against a configurable blacklist and whitelist, and, optionally=
,
    against the JVM SecurityManager, if it is configured.
   </p><p>
    Whitelists and blacklists contain class names that
    are allowed or denied execution respectively. Specify classes in
    whitelists and blacklists by name or by using regular expressions.
   </p><p>
    Classes called by the script are checked against the whitelist
    first, and must match at least one pattern in the list. The
    blacklist is applied after the whitelist, and classes matching any
    pattern are disallowed.
   </p><p>
    You can also configure the scripting engine to make an additional
    call to the JVM security manager for each class that is accessed. The
    security manager throws an exception if a class being called is not
    allowed to execute.
   </p><p>
    For more information on configuring script engine security,
    see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/referen=
ce/index.html#scripting-configuration" class=3D"olink">"Scripting"</a> in t=
he <em>Reference</em>.
   </p><div class=3D"variablelist"><div class=3D"variablelist-title">Import=
ant Points About Script Engine Security</div><p>
     The following points should be considered when configuring the
     security settings within each script engine:
    </p><dl class=3D"variablelist"><dt><span class=3D"term">The scripting e=
ngine only validates directly accessible classes.</span></dt><dd><p>
       The security settings only apply to classes that the script
       <span class=3D"emphasis"><em>directly</em></span> accesses. If the s=
cript calls
       <code class=3D"literal">Foo.a()</code> and then that method
       calls <code class=3D"literal">Bar.b()</code>, the scripting engine w=
ill be unable
       to prevent it. You must consider the whole chain of accessible class=
es.
      </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 =
class=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
        <em class=3D"firstterm">Access</em> includes actions such as:
         </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=
=3D"list-style-type: disc; "><li class=3D"listitem"><p>Importing or loading=
 a class.</p></li><li class=3D"listitem"><p>
            Accessing any instance of that class. For example, passed as a
            parameter to the script.
           </p></li><li class=3D"listitem"><p>Calling a static method on th=
at class.</p></li><li class=3D"listitem"><p>Calling a method on an instance=
 of that class.</p></li><li class=3D"listitem"><p>
            Accessing a method or field that returns an instance of that
            class.
           </p></li></ul></div><p>
       </p></div></div></dd><dt><span class=3D"term">Potentially dangerous =
Java classes are blacklisted by default.</span></dt><dd><p>
       All Java reflection classes (<code class=3D"literal">java.lang.Class=
</code>,
       <code class=3D"literal">java.lang.reflect.*</code>)
       are blacklisted by default to avoid bypassing the security settings.
      </p><p>
       The <code class=3D"literal">java.security.AccessController</code> cl=
ass is
       also blacklisted by default to prevent access to the
       <code class=3D"literal">doPrivileged()</code> methods.
      </p><div class=3D"panel panel-danger"><div class=3D"panel-heading"><h=
3 class=3D"panel-title">Caution</h3></div><div class=3D"panel-body"><p>
        You should not remove potentially dangerous Java classes from the b=
lacklist.
       </p></div></div></dd><dt><span class=3D"term">The whitelists and bla=
cklists match class or package names only.</span></dt><dd><p>
       The whitelist and blacklist patterns apply only to the exact class
       or package names involved. The script engine does not know anything
       about inheritance, so it is best to whitelist known, specific classe=
s.
      </p></dd></dl></div></div><div class=3D"section" id=3D"script-engine-=
thread-pool"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a clas=
s=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#script-engine-thread-pool">5.1.2.&nbsp;Thread Pools</a><=
/h3></div></div></div><p>
    Each script is executed in an individual thread. Each scripting
    engine starts with an initial number of threads available for executing
    scripts. If no threads are available for execution, OpenAM creates
    a new thread to execute the script, until the configured maximum number
    of threads is reached.
   </p><p>
    If the maximum number of threads is reached, pending script
    executions are queued in a number of buffer threads, until a thread
    becomes available for execution. If a created thread has completed scri=
pt
    execution and has remained idle for a configured amount of time, OpenAM=
 terminates
    the thread, shrinking the pool.
   </p><p>
    For more information on configuring script engine thread pools, see
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/reference/i=
ndex.html#scripting-configuration" class=3D"olink">"Scripting"</a> in the <=
em>Reference</em>.</p></div></div><div class=3D"section" id=3D"scripting-ap=
i"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: b=
oth"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#scripting-api">5.2.&nbsp;The Scripting API</=
a></h2></div></div></div><a class=3D"indexterm" name=3D"d15472e14397"></a><=
p>
  Client-side scripts have access only to the user agent API.
  The functionality provided by each user agent is different, refer to the
  API provided by your user agent for more information.
 </p><div class=3D"section" id=3D"scripting-api-global"><div class=3D"title=
page"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"https://=
backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api=
-global">5.2.1.&nbsp;Global API Functionality</a></h3></div></div></div><p>=
This section covers functionality available to each of the
   server-side script types.</p><div class=3D"itemizedlist"><p>Global API f=
unctionality includes:</p><ul class=3D"itemizedlist" style=3D"list-style-ty=
pe: disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api-gl=
obal-http-client" title=3D"5.2.1.1.&nbsp;Accessing HTTP Services">Accessing=
 HTTP Services</a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
cripting-api-global-logger" title=3D"5.2.1.2.&nbsp;Debug Logging">Debug Log=
ging</a></p></li></ul></div><div class=3D"section" id=3D"scripting-api-glob=
al-http-client"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a c=
lass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#scripting-api-global-http-client">5.2.1.1.&nbsp;Acces=
sing HTTP Services</a></h4></div></div></div><p>
    OpenAM passes an HTTP client object, <code class=3D"literal">httpClient=
</code>,
    to server-side scripts.
    Server-side scripts can call HTTP services
    with the <code class=3D"literal">httpClient.get</code>
    and <code class=3D"literal">httpClient.post</code> methods.
    The methods return an <code class=3D"literal">HttpClientResponse</code>=
 object.
   </p><div class=3D"table" id=3D"scripted-auth-module-http-client-methods"=
><div class=3D"table-title"><a class=3D"self-link" href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripted-auth-module-=
http-client-methods">HTTP Client Methods</a></div><div class=3D"table-conte=
nts"><table xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http://d=
ocbook.org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=
=3D"http://exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentati=
on/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xm=
lns:xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apach=
e.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table"=
 class=3D"table table-striped" summary=3D"HTTP Client Methods" width=3D"100=
%" border=3D"0"><colgroup><col width=3D"25%"><col width=3D"25%"><col width=
=3D"25%"><col width=3D"25%"></colgroup><thead><tr><th>Method</th><th>Parame=
ters</th><th>Return Type</th><th>Description</th></tr></thead><tbody><tr><t=
d>
        <p>
         <code class=3D"literal">httpClient.get</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">URI</em></code> =
(type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Request Data</em=
></code> (type: <code class=3D"literal">Map</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">HttpClientResponse</code>
        </p>
       </td><td>
        <p>
         Perform an HTTP GET on the specified URI
         with the specified request data and return the response retrieved.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">httpClient.post</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">URI</em></code> =
(type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Body</em></code>=
 (type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Request Data</em=
></code> (type: <code class=3D"literal">Map</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">HttpClientResponse</code>
        </p>
       </td><td>
        <p>
         Perform an HTTP POST to the specified URI
         with the specified body and request data and return the response r=
etrieved.
        </p>
       </td></tr></tbody></table></div></div><br class=3D"table-break"><p>
    The <code class=3D"literal">requestData</code> object is a map in which=
 the keys are
    <code class=3D"literal">cookies</code> and <code class=3D"literal">head=
ers</code>. OpenAM ignores other keys.
   </p><p>
    The <code class=3D"literal">cookies</code> value, specifying the cookie=
 headers in the
    request, is a list of maps where the keys are <code class=3D"literal">d=
omain</code>,
    <code class=3D"literal">field</code>, and <code class=3D"literal">value=
</code>.
   </p><p>
    The <code class=3D"literal">headers</code> value, specifying the header=
s in the request,
    is a list of maps where the keys are <code class=3D"literal">field</cod=
e>, and
    <code class=3D"literal">value</code>.
   </p><p>An example <code class=3D"literal">requestData</code> JavaScript =
object using GET
    would be as follows:</p><div class=3D"zero-clipboard hidden-xs hidden-p=
rint" title=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"=
><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"codelistin=
g prettyprint javascript hljs"><span class=3D"hljs-keyword">var</span> resp=
onse =3D httpClient.get(<span class=3D"hljs-string">"http://example.com:808=
0/openam/json/users/"</span> + username,
{
    <span class=3D"hljs-attr">cookies</span>:[
        {
            <span class=3D"hljs-string">"domain"</span>: <span class=3D"hlj=
s-string">".example.com"</span>,
            <span class=3D"hljs-string">"field"</span>: <span class=3D"hljs=
-string">"iPlanetDirectoryPro"</span>,
            <span class=3D"hljs-string">"value"</span>: <span class=3D"hljs=
-string">"E8cDkvlad83kd....KDodkIEIx*DLEDLK...JKD09d"</span>
        }
    ],
    <span class=3D"hljs-attr">headers</span>:[
        {
            <span class=3D"hljs-string">"field"</span>: <span class=3D"hljs=
-string">"Content-type"</span>,
            <span class=3D"hljs-string">"value"</span>: <span class=3D"hljs=
-string">"application/json"</span>
        }
    ]
});</pre><p>An example <code class=3D"literal">requestData</code> JavaScrip=
t object using
    POST follows:</p><div class=3D"zero-clipboard hidden-xs hidden-print" t=
itle=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span =
class=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prett=
yprint javascript hljs"><span class=3D"hljs-keyword">var</span> response =
=3D httpClient.post(<span class=3D"hljs-string">"http://example.com:8080/op=
enam/json/authenticate"</span>,<span class=3D"hljs-string">"{
    "</span>authId<span class=3D"hljs-string">": "</span>eyAiYWxnIjogIkhTMj=
U2IiwgInR5cCI6ICJqd3QiIH0.eyAib3RrIjogIm03ODVzN2x
    sbnR1bjZvbGZ1MHZhOGVtYTQxIiwgInNlc3Npb25JZCI6ICJBUUlDNXdNMkxZNFNmY3lEeD=
Y3QnB
    PdzJtRU9rUzNpLWhfNDdRWlMwNHBEN1ppdy4qQUFKVFNRQUNNREVBQWxOTEFCUXROak15TU=
RjNU1
    UZzROVFUwTXpnNE5qRTNNQS4uKiIsICJyZWFsbSI6ICJkYz1vcGVuYW0sZGM9Zm9yZ2Vyb2=
NrLGR
    jPW9yZyIgfQ.VDRqaekQuXBm2lNI29hfwVADLxjepezuO0241VNDsIM<span class=3D"h=
ljs-string">",
    "</span>template<span class=3D"hljs-string">": "</span><span class=3D"h=
ljs-string">",
    "</span>stage<span class=3D"hljs-string">": "</span>DataStore1<span cla=
ss=3D"hljs-string">",
    "</span>callbacks<span class=3D"hljs-string">": [
        {
            "</span>type<span class=3D"hljs-string">": "</span>NameCallback=
<span class=3D"hljs-string">",
            "</span>output<span class=3D"hljs-string">": [
                {
                    "</span>name<span class=3D"hljs-string">": "</span>prom=
pt<span class=3D"hljs-string">",
                    "</span>value<span class=3D"hljs-string">": "</span>Use=
r Name:<span class=3D"hljs-string">"
                }
            ],
            "</span>input<span class=3D"hljs-string">": [
                {
                    "</span>name<span class=3D"hljs-string">": "</span>IDTo=
ken1<span class=3D"hljs-string">",
                    "</span>value<span class=3D"hljs-string">": "</span>dem=
o<span class=3D"hljs-string">"
                }
            ]
        },
        {
            "</span>type<span class=3D"hljs-string">": "</span>PasswordCall=
back<span class=3D"hljs-string">",
            "</span>output<span class=3D"hljs-string">": [
                {
                    "</span>name<span class=3D"hljs-string">": "</span>prom=
pt<span class=3D"hljs-string">",
                    "</span>value<span class=3D"hljs-string">": "</span>Pas=
sword:<span class=3D"hljs-string">"
                }
            ],
            "</span>input<span class=3D"hljs-string">": [
                {
                    "</span>name<span class=3D"hljs-string">": "</span>IDTo=
ken2<span class=3D"hljs-string">",
                    "</span>value<span class=3D"hljs-string">": "</span>cha=
ngeit<span class=3D"hljs-string">"
                }
            ]
        }
    ]
    }"</span>,
    {
        <span class=3D"hljs-attr">cookies</span>:[
        ],
        <span class=3D"hljs-attr">headers</span>:[
            {
                <span class=3D"hljs-string">"field"</span>: <span class=3D"=
hljs-string">"Content-Type"</span>,
                <span class=3D"hljs-string">"value"</span>: <span class=3D"=
hljs-string">"application/json"</span>
            }
        ]
});</pre><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 c=
lass=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>To get the=
 form data, you can access the <code class=3D"literal">sharedState</code>
    object to get the data that previous modules in the chain have obtained=
.
    For example, if you have a Data Store module in your chain, you can get=
 the
    username and password from the <code class=3D"literal">sharedState</cod=
e> object in the
    script.
   </p></div></div><p>
    HTTP client requests are synchronous, blocking until they return.
    You can, however, set a global timeout for server-side scripts.
    For details, see
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide=
/index.html#scripted-module-conf-hints" class=3D"olink">"Hints for the Scri=
pted Authentication Module"</a> in the <em>Administration Guide</em>.
   </p><p>
    Server-side scripts can access response data by using the methods
    listed in the table below.
   </p><div class=3D"table" id=3D"scripted-auth-module-http-client-response=
-methods"><div class=3D"table-title"><a class=3D"self-link" href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripted-aut=
h-module-http-client-response-methods">HTTP Client Response Methods</a></di=
v><div class=3D"table-contents"><table xmlns:ng=3D"http://docbook.org/docbo=
ok-ng" xmlns:db=3D"http://docbook.org/ns/docbook" xmlns:exsl=3D"http://exsl=
t.org/common" xmlns:exslt=3D"http://exslt.org/common" xmlns:doc=3D"http://n=
walsh.com/xsl/documentation/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/c=
om.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:=
lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/e=
xt/xsltproc/python/Table" class=3D"table table-striped" summary=3D"HTTP Cli=
ent Response Methods" width=3D"100%" border=3D"0"><colgroup><col width=3D"3=
3%"><col width=3D"22%"><col width=3D"22%"><col width=3D"23%"></colgroup><th=
ead><tr><th>Method</th><th>Parameters</th><th>Return Type</th><th>Descripti=
on</th></tr></thead><tbody><tr><td>
        <p>
         <code class=3D"literal">HttpClientResponse.getCookies</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Map&lt;String, String&gt;</code>
        </p>
       </td><td>
        <p>
         Get the cookies for the returned response, if any exist.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">HttpClientResponse.getEntity</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">String</code>
        </p>
       </td><td>
        <p>
         Get the entity of the returned response.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">HttpClientResponse.getHeaders</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Map&lt;String, String&gt;</code>
        </p>
       </td><td>
        <p>
         Get the headers for the returned response, if any exist.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">HttpClientResponse.getReasonPhrase</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">String</code>
        </p>
       </td><td>
        <p>
         Get the reason phrase of the returned response.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">HttpClientResponse.getStatusCode</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Integer</code>
        </p>
       </td><td>
        <p>
         Get the status code of the returned response.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">HttpClientResponse.hasCookies</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Boolean</code>
        </p>
       </td><td>
        <p>
         Indicate whether the returned response had any cookies.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">HttpClientResponse.hasHeaders</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Boolean</code>
        </p>
       </td><td>
        <p>
         Indicate whether the returned response had any headers.
        </p>
       </td></tr></tbody></table></div></div><br class=3D"table-break"></di=
v><div class=3D"section" id=3D"scripting-api-global-logger"><div class=3D"t=
itlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting=
-api-global-logger">5.2.1.2.&nbsp;Debug Logging</a></h4></div></div></div><=
p>
    Server-side scripts can write messages to OpenAM debug logs
    by using the <code class=3D"literal">logger</code> object.
   </p><p>
    OpenAM does not log debug messages from scripts by default.
    You can configure OpenAM to log such messages
    by setting the debug log level for the <code class=3D"literal">amScript=
</code> service.
    For details, see <a href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/admin-guide/index.html#log-debug-selective-capture" class=3D"olink">"=
Debug Logging By Service"</a> in the <em>Administration Guide</em>.
   </p><p>
    The following table lists the <code class=3D"literal">logger</code> met=
hods.
   </p><div class=3D"table" id=3D"scripted-auth-module-logger-methods"><div=
 class=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.for=
gerock.com/docs/openam/13.5/dev-guide/index.html#scripted-auth-module-logge=
r-methods">Logger Methods</a></div><div class=3D"table-contents"><table xml=
ns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.org/ns/d=
ocbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http://exslt.=
org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" xmlns:stb=
l=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan=
://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xslt" xmlns=
:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table" class=3D"table t=
able-striped" summary=3D"Logger Methods" width=3D"100%" border=3D"0"><colgr=
oup><col width=3D"22%"><col width=3D"22%"><col width=3D"22%"><col width=3D"=
34%"></colgroup><thead><tr><th>Method</th><th>Parameters</th><th>Return Typ=
e</th><th>Description</th></tr></thead><tbody><tr><td>
        <p>
         <code class=3D"literal">logger.error</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Error Message</e=
m></code> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Write <em class=3D"replaceable">Error Message</em> to OpenAM debug=
 logs
         if ERROR level logging is enabled.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">logger.errorEnabled</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Boolean</code>
        </p>
       </td><td>
        <p>
         Return <code class=3D"literal">true</code> when ERROR level debug =
messages are
         enabled.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">logger.message</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Message</em></co=
de> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Write <em class=3D"replaceable">Message</em> to OpenAM debug logs
         if MESSAGE level logging is enabled.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">logger.messageEnabled</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Boolean</code>
        </p>
       </td><td>
        <p>
         Return <code class=3D"literal">true</code> when MESSAGE level debu=
g messages are
         enabled.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">logger.warning</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Warning Message<=
/em></code> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Write <em class=3D"replaceable">Warning Message</em> to OpenAM deb=
ug logs
         if WARNING level logging is enabled.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">logger.warningEnabled</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Boolean</code>
        </p>
       </td><td>
        <p>
         Return <code class=3D"literal">true</code> when WARNING level debu=
g messages are
         enabled.
        </p>
       </td></tr></tbody></table></div></div><br class=3D"table-break"></di=
v></div><div class=3D"section" id=3D"scripting-api-authn"><div class=3D"tit=
lepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-a=
pi-authn">5.2.2.&nbsp;Authentication API Functionality</a></h3></div></div>=
</div><p>This section covers the available functionality when Scripting
   authentication modules use client-side and server-side authentication
   script types.</p><div class=3D"itemizedlist"><p>Authentication API funct=
ionality includes:</p><ul class=3D"itemizedlist" style=3D"list-style-type: =
disc; "><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backsta=
ge.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api-authn-=
state" title=3D"5.2.2.1.&nbsp;Accessing Authentication State">Accessing Aut=
hentication State</a></p></li><li class=3D"listitem"><p><a class=3D"xref" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#scripting-api-authn-id-repo" title=3D"5.2.2.2.&nbsp;Accessing Profile Dat=
a">Accessing Profile Data</a></p></li><li class=3D"listitem"><p><a class=3D=
"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#scripting-api-authn-client-data" title=3D"5.2.2.3.&nbsp;Accessing=
 Client-Side Script Output Data">Accessing Client-Side Script Output Data</=
a></p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api-aut=
hn-request-data" title=3D"5.2.2.4.&nbsp;Accessing Request Data">Accessing R=
equest Data</a></p></li></ul></div><div class=3D"section" id=3D"scripting-a=
pi-authn-state"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a c=
lass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#scripting-api-authn-state">5.2.2.1.&nbsp;Accessing Au=
thentication State</a></h4></div></div></div><p>
    OpenAM passes <code class=3D"literal">authState</code> and <code class=
=3D"literal">sharedState</code>
    objects to server-side scripts in order for the scripts to access
    authentication state.
   </p><p>
    Server-side scripts can access the current authentication state
    through the <code class=3D"literal">authState</code> object.
   </p><p>
    The <code class=3D"literal">authState</code> value is <code class=3D"li=
teral">SUCCESS</code>
    if the authentication is currently successful,
    or <code class=3D"literal">FAILED</code> if authentication has failed.
    Server-side scripts must set a value for <code class=3D"literal">authSt=
ate</code>
    before completing.
   </p><p>
    If an earlier authentication module in the authentication chain
    has set the login name of the user,
    server-side scripts can access the login name
    through <code class=3D"literal">username</code>.</p><p>The following au=
thentication modules set the login name of the user:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>Anonymous</p></li><li class=
=3D"listitem"><p>Certificate</p></li><li class=3D"listitem"><p>Data Store</=
p></li><li class=3D"listitem"><p>Federation</p></li><li class=3D"listitem">=
<p>HTTP Basic</p></li><li class=3D"listitem"><p>JDBC</p></li><li class=3D"l=
istitem"><p>LDAP</p></li><li class=3D"listitem"><p>Membership</p></li><li c=
lass=3D"listitem"><p>RADIUS</p></li><li class=3D"listitem"><p><span lang=3D=
"en" class=3D"phrase">
SecurID,
</span></p></li><li class=3D"listitem"><p>Windows Desktop SSO</p></li><li c=
lass=3D"listitem"><p>Windows NT</p></li></ul></div></div><div class=3D"sect=
ion" id=3D"scripting-api-authn-id-repo"><div class=3D"titlepage"><div><div>=
<h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#scripting-api-authn-id-repo">=
5.2.2.2.&nbsp;Accessing Profile Data</a></h4></div></div></div><p>
    Server-side authentication scripts can access profile data through
    the methods of the <code class=3D"literal">idRepository</code> object.
   </p><div class=3D"table" id=3D"scripted-auth-module-id-repo-methods"><di=
v class=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.fo=
rgerock.com/docs/openam/13.5/dev-guide/index.html#scripted-auth-module-id-r=
epo-methods">Profile Data Methods</a></div><div class=3D"table-contents"><t=
able xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.=
org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http:=
//exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" x=
mlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=
=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xs=
lt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table" class=
=3D"table table-striped" summary=3D"Profile Data Methods" width=3D"100%" bo=
rder=3D"0"><colgroup><col width=3D"22%"><col width=3D"33%"><col width=3D"11=
%"><col width=3D"34%"></colgroup><thead><tr><th>Method</th><th>Parameters</=
th><th>Return Type</th><th>Description</th></tr></thead><tbody><tr><td>
        <p>
         <code class=3D"literal">idRepository.getAttribute</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">User Name</em></=
code> (type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Name</=
em></code> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Set</code>
        </p>
       </td><td>
        <p>
         Return the values of the named attribute for the named user.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">idRepository.setAttribute</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">User Name</em></=
code> (type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Name</=
em></code> (type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Values=
</em></code> (type: <code class=3D"literal">Array</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Set the named attribute as specified by the attribute value for th=
e
         named user, and persist the result in the user's profile.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">idRepository.addAttribute</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">User Name</em></=
code> (type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Name</=
em></code> (type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Value<=
/em></code> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Add an attribute value to the list of attribute values associated =
with the
         attribute name for a particular user.
        </p>
       </td></tr></tbody></table></div></div><br class=3D"table-break"></di=
v><div class=3D"section" id=3D"scripting-api-authn-client-data"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scri=
pting-api-authn-client-data">5.2.2.3.&nbsp;Accessing Client-Side Script Out=
put Data</a></h4></div></div></div><p>
    Client-side scripts add data they gather into a String object
    named <code class=3D"literal">clientScriptOutputData</code>.
    Client-side scripts then cause the user-agent automatically
    to return the data to OpenAM by HTTP POST of a self-submitting form.
   </p></div><div class=3D"section" id=3D"scripting-api-authn-request-data"=
><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#scripting-api-authn-request-data">5.2.2.4.&nbsp;Accessing Request Da=
ta</a></h4></div></div></div><p>
    Server-side scripts can get access to the login request
    by using the methods of the <code class=3D"literal">requestData</code> =
object.
   </p><p>
    The following table lists the methods
    of the <code class=3D"literal">requestData</code> object. Note that thi=
s object differs
    from the client-side <code class=3D"literal">requestData</code> object =
(see
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#scripted-auth-module-http-client-methods" title=3D=
"HTTP Client Methods">"HTTP Client Methods"</a>)
    and contains information about the original authentication request made=
 by the user.
   </p><div class=3D"table" id=3D"scripted-auth-module-request-data-methods=
"><div class=3D"table-title"><a class=3D"self-link" href=3D"https://backsta=
ge.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripted-auth-module=
-request-data-methods">Request Data Methods</a></div><div class=3D"table-co=
ntents"><table xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http:=
//docbook.org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exsl=
t=3D"http://exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentat=
ion/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" x=
mlns:xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apac=
he.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table=
" class=3D"table table-striped" summary=3D"Request Data Methods" width=3D"1=
00%" border=3D"0"><colgroup><col width=3D"27%"><col width=3D"18%"><col widt=
h=3D"18%"><col width=3D"37%"></colgroup><thead><tr><th>Method</th><th>Param=
eters</th><th>Return Type</th><th>Description</th></tr></thead><tbody><tr><=
td>
        <p>
         <code class=3D"literal">requestData.getHeader</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Header Name</em>=
</code> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">String</code>
        </p>
       </td><td>
        <p>
         Return the String value of the named request header,
         or <code class=3D"literal">null</code> if parameter is not set.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">requestData.getHeaders</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Header Name</em>=
</code> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">String[]</code>
        </p>
       </td><td>
        <p>
         Return the array of String values of the named request header,
         or <code class=3D"literal">null</code> if parameter is not set.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">requestData.getParameter</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Parameter Name</=
em></code> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">String</code>
        </p>
       </td><td>
        <p>
         Return the String value of the named request parameter,
         or <code class=3D"literal">null</code> if parameter is not set.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">requestData.getParameters</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Parameter Name</=
em></code> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">String[]</code>
        </p>
       </td><td>
        <p>
         Return the array of String values of the named request parameter,
         or <code class=3D"literal">null</code> if parameter is not set.
        </p>
       </td></tr></tbody></table></div></div><br class=3D"table-break"></di=
v></div><div class=3D"section" id=3D"scripting-api-authz"><div class=3D"tit=
lepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-a=
pi-authz">5.2.3.&nbsp;Authorization API Functionality</a></h3></div></div><=
/div><p>This section covers functionality available when scripting
   authorization using the policy condition script context type.</p><div cl=
ass=3D"section" id=3D"scripted-api-authz-state"><div class=3D"titlepage"><d=
iv><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripted-api-authz-st=
ate">5.2.3.1.&nbsp;Accessing Authorization State</a></h4></div></div></div>=
<p>
    Server-side scripts can access the current authorization state
    through the following objects:
   </p><div class=3D"table" id=3D"scripted-api-authz-state-objects"><div cl=
ass=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#scripted-api-authz-state-obje=
cts">Authorization State Objects</a></div><div class=3D"table-contents"><ta=
ble xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.o=
rg/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http:/=
/exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" xm=
lns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=
=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xs=
lt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table" class=
=3D"table table-striped" summary=3D"Authorization State Objects" width=3D"1=
00%" border=3D"0"><colgroup><col width=3D"16%"><col width=3D"17%"><col widt=
h=3D"67%"></colgroup><thead><tr><th>Object</th><th>Type</th><th>Description=
</th></tr></thead><tbody><tr><td>
        <p>
         <code class=3D"literal">authorized</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Boolean</code>
        </p>
       </td><td>
        <p>
         Return <code class=3D"literal">true</code> if the authorization is=
 currently successful,
         or <code class=3D"literal">false</code> if authorization has faile=
d.
         Server-side scripts must set a value for <code class=3D"literal">a=
uthorized</code>
         before completing.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">environment</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Map&lt;String, Set&lt;String&gt;&gt;</code=
>
        </p>
       </td><td>
        <p>
         Describe the environment passed from the client making the
         authorization request.
        </p>
        <p>For example, the following shows a simple
         <code class=3D"literal">environment</code> map with a single entry=
:</p>
<div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to =
clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-=
o"></span></span></div><pre class=3D"codelisting prettyprint nohighlight">"=
environment": {
    "IP": [
        "127.0.0.1"
    ]
}</pre>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">resourceURI</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">String</code>
        </p>
       </td><td>
        <p>
         Specify the URI of the resource to which authorization is being re=
quested.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">username</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">String</code>
        </p>
       </td><td>
        <p>
         Specify the user ID of the subject that is requesting authorizatio=
n.
        </p>
       </td></tr></tbody></table></div></div><br class=3D"table-break"></di=
v><div class=3D"section" id=3D"scripting-api-authz-id-repo"><div class=3D"t=
itlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting=
-api-authz-id-repo">5.2.3.2.&nbsp;Accessing Profile Data</a></h4></div></di=
v></div><p>
    Server-side authorization scripts can access profile data of the
    subject of the authorization request through
    the methods of the <code class=3D"literal">identity</code> object.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>To access th=
e profile data of the subject, they must be
     logged in and their SSO token must be available.</p></div></div><div c=
lass=3D"table" id=3D"scripted-authz-module-id-repo-methods"><div class=3D"t=
able-title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/dev-guide/index.html#scripted-authz-module-id-repo-methods=
">Authorization Script Profile Data Methods</a></div><div class=3D"table-co=
ntents"><table xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http:=
//docbook.org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exsl=
t=3D"http://exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentat=
ion/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" x=
mlns:xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apac=
he.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table=
" class=3D"table table-striped" summary=3D"Authorization Script Profile Dat=
a Methods" width=3D"100%" border=3D"0"><colgroup><col width=3D"22%"><col wi=
dth=3D"33%"><col width=3D"11%"><col width=3D"34%"></colgroup><thead><tr><th=
>Method</th><th>Parameters</th><th>Return Type</th><th>Description</th></tr=
></thead><tbody><tr><td>
        <p>
         <code class=3D"literal">identity.getAttribute</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Name</=
em></code> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Set</code>
        </p>
       </td><td>
        <p>
         Return the values of the named attribute for the subject of the
         authorization request.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">identity.setAttribute</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Name</=
em></code> (type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Values=
</em></code> (type: <code class=3D"literal">Array</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Set the named attribute to the values specified by the attribute v=
alue
         for the subject of the authorization request.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">identity.addAttribute</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Name</=
em></code> (type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Value<=
/em></code> (type: <code class=3D"literal">String</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Add an attribute value to the list of attribute values associated =
with the
         attribute name for the subject of the authorization request.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">identity.store</code>
        </p>
       </td><td>
        <p>
         None
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Commit any changes to the identity repository.
        </p>
        <div class=3D"panel panel-danger"><div class=3D"panel-heading"><h3 =
class=3D"panel-title">Caution</h3></div><div class=3D"panel-body"><p>You mu=
st call <code class=3D"literal">store()</code> otherwise changes
         will be lost when the script completes.</p></div></div>
       </td></tr></tbody></table></div></div><br class=3D"table-break"></di=
v><div class=3D"section" id=3D"scripting-api-authz-session"><div class=3D"t=
itlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripting=
-api-authz-session">5.2.3.3.&nbsp;Accessing Session Data</a></h4></div></di=
v></div><p>
    Server-side authorization scripts can access session data of the
    subject of the authorization request through
    the methods of the <code class=3D"literal">session</code> object.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>To access th=
e session data of the subject, they must be
     logged in and their SSO token must be available.</p></div></div><div c=
lass=3D"table" id=3D"scripted-authz-module-session-methods"><div class=3D"t=
able-title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/=
docs/openam/13.5/dev-guide/index.html#scripted-authz-module-session-methods=
">Authorization Script Session Methods</a></div><div class=3D"table-content=
s"><table xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http://doc=
book.org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"=
http://exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1=
.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:=
xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.or=
g/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table" cla=
ss=3D"table table-striped" summary=3D"Authorization Script Session Methods"=
 width=3D"100%" border=3D"0"><colgroup><col width=3D"22%"><col width=3D"33%=
"><col width=3D"11%"><col width=3D"34%"></colgroup><thead><tr><th>Method</t=
h><th>Parameters</th><th>Return Type</th><th>Description</th></tr></thead><=
tbody><tr><td>
        <p>
         <code class=3D"literal">session.getProperty</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Property Name</e=
m></code> (type: String)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">String</code>
        </p>
       </td><td>
        <p>
         Retrieve properties from the session associated with the subject o=
f
         the authorization request. For example, <code class=3D"literal">Au=
thLevel</code>.</p>
       </td></tr></tbody></table></div></div><br class=3D"table-break"></di=
v><div class=3D"section" id=3D"scripting-api-authz-response"><div class=3D"=
titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"htt=
ps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scriptin=
g-api-authz-response">5.2.3.4.&nbsp;Setting Authorization Responses</a></h4=
></div></div></div><p>
    Server-side authorization scripts can return information in the respons=
e
    to an authorization request.
   </p><div class=3D"table" id=3D"scripted-authz-module-response-methods"><=
div class=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#scripted-authz-module-r=
esponse-methods">Authorization Script Response Methods</a></div><div class=
=3D"table-contents"><table xmlns:ng=3D"http://docbook.org/docbook-ng" xmlns=
:db=3D"http://docbook.org/ns/docbook" xmlns:exsl=3D"http://exslt.org/common=
" xmlns:exslt=3D"http://exslt.org/common" xmlns:doc=3D"http://nwalsh.com/xs=
l/documentation/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.sa=
xon.Table" xmlns:xtbl=3D"xalan://com.nwalsh.xalan.Table" xmlns:lxslt=3D"htt=
p://xml.apache.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/=
python/Table" class=3D"table table-striped" summary=3D"Authorization Script=
 Response Methods" width=3D"100%" border=3D"0"><colgroup><col width=3D"31%"=
><col width=3D"26%"><col width=3D"21%"><col width=3D"22%"></colgroup><thead=
><tr><th>Method</th><th>Parameters</th><th>Return Type</th><th>Description<=
/th></tr></thead><tbody><tr><td>
        <p>
         <code class=3D"literal">responseAttributes.put</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Name</=
em></code> (type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Attribute Values=
</em></code> (type: <code class=3D"literal">Array</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Add an attribute to the response to the authorization request.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">advice.put</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Advice Key</em><=
/code> (type: <code class=3D"literal">String</code>)
        </p>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">Advice Values</e=
m></code> (type: <code class=3D"literal">Array</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Add advice key-value pairs to the response to a failing authorizat=
ion
         request.
        </p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">ttl</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal"><em class=3D"replaceable">TTL Value</em></=
code> (type: <code class=3D"literal">Integer</code>)
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Void</code>
        </p>
       </td><td>
        <p>
         Add a time-to-live value to the response to a successful
         authorization, after which the decision is no longer valid.
        </p>
       </td></tr></tbody></table></div></div><br class=3D"table-break"></di=
v></div><div class=3D"section" id=3D"scripting-api-oidc-claims"><div class=
=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#scri=
pting-api-oidc-claims">5.2.4.&nbsp;OIDC Claims API Functionality</a></h3></=
div></div></div><p>This section covers functionality available when scripti=
ng
   OIDC claim handling using the OIDC claims script context type.</p><div c=
lass=3D"section" id=3D"scripted-api-oidc-request"><div class=3D"titlepage">=
<div><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#scripted-api-oidc-r=
equest">5.2.4.1.&nbsp;Accessing OpenID Connect Requests</a></h4></div></div=
></div><p>
    Server-side scripts can access the OpenID Connect request through the
    following objects:
   </p><div class=3D"table" id=3D"scripted-api-oidc-request-objects"><div c=
lass=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#scripted-api-oidc-request-ob=
jects">OIDC Request Objects</a></div><div class=3D"table-contents"><table x=
mlns:ng=3D"http://docbook.org/docbook-ng" xmlns:db=3D"http://docbook.org/ns=
/docbook" xmlns:exsl=3D"http://exslt.org/common" xmlns:exslt=3D"http://exsl=
t.org/common" xmlns:doc=3D"http://nwalsh.com/xsl/documentation/1.0" xmlns:s=
tbl=3D"http://nwalsh.com/xslt/ext/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xal=
an://com.nwalsh.xalan.Table" xmlns:lxslt=3D"http://xml.apache.org/xslt" xml=
ns:ptbl=3D"http://nwalsh.com/xslt/ext/xsltproc/python/Table" class=3D"table=
 table-striped" summary=3D"OIDC Request Objects" width=3D"100%" border=3D"0=
"><colgroup><col width=3D"33%"><col width=3D"22%"><col width=3D"45%"></colg=
roup><thead><tr><th>Object</th><th>Type</th><th>Description</th></tr></thea=
d><tbody><tr><td>
        <p>
         <code class=3D"literal">scopes</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Set&lt;String&gt;</code>
        </p>
       </td><td>
        <p>
         Contains a set of the requested scopes. For example:
        </p>
<div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to =
clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-=
o"></span></span></div><pre class=3D"codelisting prettyprint JavaScript hlj=
s">[
    <span class=3D"hljs-string">"profile"</span>,
    <span class=3D"hljs-string">"openid"</span>
]</pre>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">identity</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Class</code>
        </p>
       </td><td>
        <p>
         Contains a representation of the identity of the resource owner.
        </p>
        <p>For more details, see the
         <code class=3D"literal">com.sun.identity.idm.AMIdentity</code> cla=
ss in the <a class=3D"link" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/apidocs/index.html?com/sun/identity/idm/AMIdentity.html" target=
=3D"_top">OpenAM Javadoc</a>.</p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">session</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Class</code>
        </p>
       </td><td>
        <p>
         Contains a representation of the user's session object if the requ=
est
         contained a session cookie.
        </p>
        <p>For more details, see the <code class=3D"literal">com.iplanet.ss=
o.SSOToken</code>
         class in the <a class=3D"link" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/apidocs/index.html?com/iplanet/sso/SSOToken.html" tar=
get=3D"_top">OpenAM Javadoc</a>.</p>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">claims</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Map&lt;String, Object&gt;</code>
        </p>
       </td><td>
        <p>
         Contains a map of the claims the server provides by default. For e=
xample:
        </p>
<div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to =
clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-=
o"></span></span></div><pre class=3D"codelisting prettyprint JavaScript hlj=
s">{
    <span class=3D"hljs-string">"sub"</span>: <span class=3D"hljs-string">"=
248289761001"</span>,
    <span class=3D"hljs-string">"updated_at"</span>: <span class=3D"hljs-st=
ring">"1450368765"</span>
}</pre>
       </td></tr><tr><td>
        <p>
         <code class=3D"literal">requestedClaims</code>
        </p>
       </td><td>
        <p>
         <code class=3D"literal">Map&lt;String, Set&lt;String&gt;&gt;</code=
>
        </p>
       </td><td>
        <p>
         Contains requested claims if the <code class=3D"literal">claims</c=
ode>
         query parameter is used in the request and
         <span class=3D"emphasis"><em>Enable "claims_parameter_supported"</=
em></span>
         is checked in the OAuth2 provider service configuration, otherwise=
 is empty.</p>
        <p>For more information see
         <a class=3D"link" href=3D"http://openid.net/specs/openid-connect-c=
ore-1_0.html#ClaimsParameter" target=3D"_blank">"Requesting Claims using th=
e "claims" Request Parameter"</a> in the
         <em class=3D"citetitle">OpenID Connect Core 1.0</em> specification=
.
        </p>
        <p>Example:</p>
<div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code to =
clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-=
o"></span></span></div><pre class=3D"codelisting prettyprint nohighlight">{
    "given_name": {
        "essential": true,
        "values": [
            "Demo User",
            "D User"
        ]
    },
    "nickname": null,
    "email": {
        "essential": true
    }
}</pre>
       </td></tr></tbody></table></div></div><br class=3D"table-break"></di=
v></div></div><div class=3D"section" id=3D"sec-scripting-default-scripts"><=
div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"=
><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#sec-scripting-default-scripts">5.3.&nbsp;Using t=
he Default Scripts</a></h2></div></div></div><p>
   This section covers the default scripts provided in OpenAM. These
   scripts act as templates for creating your own scripts. They are global =
and
   can be used in any realm, and cannot be deleted.
  </p><div class=3D"panel panel-warning"><div class=3D"panel-heading"><h3 c=
lass=3D"panel-title">Warning</h3></div><div class=3D"panel-body"><p>
    Editing a default script will affect every authentication
    module, policy condition, or OIDC claim configuration that uses the
    script.
   </p></div></div><div class=3D"section" id=3D"sec-scripted-auth-module"><=
div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link=
" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#sec-scripted-auth-module">5.3.1.&nbsp;Default Server-side Authenticati=
on Script</a></h3></div></div></div><a class=3D"indexterm" name=3D"d15472e1=
6301"></a><p>
  This section demonstrates how to use the default server-side authenticati=
on
  script in a Scripted Authentication module.
 </p><p>The default server-side authentication script only authenticates a
 subject when the current time on the OpenAM server is between 09:00 and 17=
:00.
The script also uses the <code class=3D"literal">logger</code> and
 <code class=3D"literal">httpClient</code> functionality provided in the sc=
ripting
 API. </p><p>To examine the contents of the default server-side
                   authentication
  script in the OpenAM console browse to Realms &gt; Top Level Realm &gt; S=
cripts,
  and then click Scripted Module - Server Side.</p><p>For more information =
on the functions available for use in server-side
  authentication scripts, see <a class=3D"xref" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#scripting-api" title=3D"=
5.2.&nbsp;The Scripting API">"The Scripting API"</a>.</p><div class=3D"sect=
ion" id=3D"sec-scripted-auth-module-prepare"><div class=3D"titlepage"><div>=
<div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#sec-scripted-auth-module=
-prepare">5.3.1.1.&nbsp;Preparing OpenAM</a></h4></div></div></div><p>OpenA=
M requires a small amount of configuration before trying the example
 server-side authentication script. You must first create a Scripted
 authentication module, and then include it in an authentication chain, whi=
ch
 can then be used when logging in to OpenAM.
</p><p>The procedures in this section are:</p><div class=3D"itemizedlist"><=
ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li class=3D"li=
stitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#proc-scripted-auth-module" title=3D"To Crea=
te a Scripted Authentication Module that Uses the Default Server-side Authe=
ntication Script">"To Create a Scripted Authentication Module that Uses the=
 Default
        Server-side Authentication Script"</a> </p></li><li class=3D"listit=
em"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#proc-scripted-auth-chain" title=3D"To Create an=
 Authentication Chain that Uses a Scripted Authentication Module">"To Creat=
e an Authentication Chain that Uses a Scripted
   Authentication Module"</a> </p></li></ul></div><div class=3D"procedure" =
id=3D"proc-scripted-auth-module"><div class=3D"procedure-inner"><div class=
=3D"procedure-title"><a class=3D"self-link" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#proc-scripted-auth-module">T=
o Create a Scripted Authentication Module that Uses the Default
        Server-side Authentication Script</a></div><p>In this procedure cre=
ate a Scripted Authentication module, and
   link it to the default server-side authentication script.</p><ol class=
=3D"procedure" type=3D"1"><li class=3D"step"><p>Log in as an OpenAM adminis=
trator, for example <code class=3D"literal">amadmin</code>.</p></li><li cla=
ss=3D"step"><p>Click Realms &gt; Top Level Realm &gt; Authentication &gt; M=
odules.</p></li><li class=3D"step"><p>On the Authentication Modules page, c=
lick Add Module.</p></li><li class=3D"step"><p>On the New Module page, ente=
r a module name,
             such as <code class=3D"literal">myScriptedAuthModule</code>, i=
n the Type
             drop-down menu, select <code class=3D"literal">Scripted Module=
</code>, and then
             click Create.</p></li><li class=3D"step"><p>On the module conf=
iguration page:</p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>=
Uncheck the Client-side Script Enabled checkbox.</p></li><li class=3D"step"=
><p>In the Server-side Script drop-down menu, select
                    <code class=3D"literal">Scripted Module - Server Side</=
code>.</p></li><li class=3D"step"><p>Click Save Changes.</p></li></ol></li>=
</ol></div></div><div class=3D"procedure" id=3D"proc-scripted-auth-chain"><=
div class=3D"procedure-inner"><div class=3D"procedure-title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#proc-scripted-auth-chain">To Create an Authentication Chain tha=
t Uses a Scripted
   Authentication Module</a></div><p>In this procedure create an authentica=
tion chain that
    uses a Data Store authentication module and the Scripted
    authentication module created in the previous procedure.</p><ol class=
=3D"procedure" type=3D"1"><li class=3D"step"><p>Log in as an OpenAM adminis=
trator, for example <code class=3D"literal">amadmin</code>.</p></li><li cla=
ss=3D"step"><p>Click Realms &gt; Top Level Realm &gt; Authentication &gt; C=
hains.</p></li><li class=3D"step"><p>On the Authentication Chains page, cli=
ck Add Chain.</p></li><li class=3D"step"><p>On the Add Chain page, enter a =
name, such as
        <code class=3D"literal">myScriptedChain</code>, and then click Crea=
te.</p></li><li class=3D"step"><p>On the Edit Chain tab, click Add a Module=
.</p></li><li class=3D"step"><p>In the New Module dialog box:</p><ol type=
=3D"a" class=3D"substeps"><li class=3D"step"><p>In the Select Module drop-d=
own menu, select <code class=3D"literal">DataStore</code>.</p></li><li clas=
s=3D"step"><p>In the Select Criteria drop-down menu, select <code class=3D"=
literal">Required</code>.</p></li><li class=3D"step"><p>Click OK.</p></li><=
/ol><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 class=
=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
           The Data Store authentication module checks the user
           credentials, whereas the Scripted authentication module does not=
 check
           credentials, but instead only checks that the authentication req=
uest
           is processed during working hours. Without the Data Store module=
, the
           username in the Scripted authentication module cannot be determi=
ned.
           Therefore, do not configure the Scripted authentication module
           (server-side script) as the <span class=3D"emphasis"><em>first</=
em></span> module in an
           authentication chain, because it needs a username.
          </p></div></div></li><li class=3D"step"><p>On the Edit Chain tab,=
 click Add Module.</p></li><li class=3D"step"><p>In the New Module dialog b=
ox:</p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>In the Selec=
t Module drop-down menu, select the Scripted Module from the previous
         procedure, for example <code class=3D"literal">myScriptedAuthModul=
e</code>.</p></li><li class=3D"step"><p>In the Select Criteria drop-down me=
nu, select <code class=3D"literal">Required</code>.</p></li><li class=3D"st=
ep"><p>Click OK.</p></li></ol><p>The resulting chain resembles the followin=
g:</p><div class=3D"mediaobject" align=3D"center"><a class=3D"fancybox cbox=
Element" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/images/scripting-sample-chain.png"><img class=3D"img-responsive center-blo=
ck" data-toggle=3D"tooltip" src=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/images/thumb_scripting-sample-chain.png" align=3D"middle=
" height=3D"643" alt=3D"An example chain that uses the default server-side =
authentication script." title=3D"" data-original-title=3D"Two modules are r=
equired: DataStore and Scripted Module - Server
     Side."></a></div></li><li class=3D"step"><p>On the Edit Chain tab, cli=
ck Save Changes.</p></li></ol></div></div></div><div class=3D"section" id=
=3D"scripted-auth-module-try-it-out"><div class=3D"titlepage"><div><div><h4=
 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#scripted-auth-module-try-it-out"=
>5.3.1.2.&nbsp;Trying the Default Server-side Authentication Script</a></h4=
></div></div></div><p>
   This section shows how to log in using an authentication chain that cont=
ains a
   Scripted authentication module, which in turn uses the default server-si=
de
   authentication script.
  </p><div class=3D"procedure" id=3D"d15472e16471"><div class=3D"procedure-=
inner"><div class=3D"procedure-title"><a class=3D"self-link" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#d15472e1647=
1">To Login to OpenAM Using a Chain Containing a Scripted
  Authentication Module</a></div><ol class=3D"procedure" type=3D"1"><li cla=
ss=3D"step"><p>Log out of OpenAM.</p></li><li class=3D"step"><p>In a browse=
r, navigate to the OpenAM login URL, and specify
 the authentication chain created in the previous procedure as the
 value of the <code class=3D"literal">service</code> query parameter.</p><p=
>For example:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>https://openam.example.com:8443/openam/XUI/#login/&amp;service=3D<em><stro=
ng class=3D"replaceable">myScriptedChain</strong></em></pre></li><li class=
=3D"step"><p>
   Log in as user <code class=3D"literal">demo</code> with
   password <code class=3D"literal">changeit</code>.
  </p><p>
   If login is successful, the user profile page appears. The script will
   also output messages, such as the following
   in the <code class=3D"filename">debug/Authentication</code> log file:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
de to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"codelisting prettyprint none hlj=
s groovy"><span class=3D"hljs-string">amScript:</span><span class=3D"hljs-n=
umber">05</span><span class=3D"hljs-regexp">/08/</span><span class=3D"hljs-=
number">2015</span> <span class=3D"hljs-number">11</span>:<span class=3D"hl=
js-number">31</span>:<span class=3D"hljs-number">21</span>:<span class=3D"h=
ljs-number">835</span> AM <span class=3D"hljs-string">CEST:</span> Thread[p=
ool<span class=3D"hljs-number">-19</span>-thread<span class=3D"hljs-number"=
>-5</span>,<span class=3D"hljs-number">5</span>,main]
Starting server-side JavaScript
<span class=3D"hljs-string">amScript:</span><span class=3D"hljs-number">05<=
/span><span class=3D"hljs-regexp">/08/</span><span class=3D"hljs-number">20=
15</span> <span class=3D"hljs-number">11</span>:<span class=3D"hljs-number"=
>31</span>:<span class=3D"hljs-number">21</span>:<span class=3D"hljs-number=
">837</span> AM <span class=3D"hljs-string">CEST:</span> Thread[pool<span c=
lass=3D"hljs-number">-19</span>-thread<span class=3D"hljs-number">-5</span>=
,<span class=3D"hljs-number">5</span>,main]
<span class=3D"hljs-string">User:</span> demo
<span class=3D"hljs-string">amScript:</span><span class=3D"hljs-number">05<=
/span><span class=3D"hljs-regexp">/08/</span><span class=3D"hljs-number">20=
15</span> <span class=3D"hljs-number">11</span>:<span class=3D"hljs-number"=
>31</span>:<span class=3D"hljs-number">21</span>:<span class=3D"hljs-number=
">837</span> AM <span class=3D"hljs-string">CEST:</span> Thread[pool<span c=
lass=3D"hljs-number">-19</span>-thread<span class=3D"hljs-number">-5</span>=
,<span class=3D"hljs-number">5</span>,main]
Current <span class=3D"hljs-string">time:</span> <span class=3D"hljs-number=
">11</span>
<span class=3D"hljs-string">amScript:</span><span class=3D"hljs-number">05<=
/span><span class=3D"hljs-regexp">/08/</span><span class=3D"hljs-number">20=
15</span> <span class=3D"hljs-number">11</span>:<span class=3D"hljs-number"=
>31</span>:<span class=3D"hljs-number">21</span>:<span class=3D"hljs-number=
">837</span> AM <span class=3D"hljs-string">CEST:</span> Thread[pool<span c=
lass=3D"hljs-number">-19</span>-thread<span class=3D"hljs-number">-5</span>=
,<span class=3D"hljs-number">5</span>,main]
Authentication allowed!</pre><div class=3D"panel panel-success"><div class=
=3D"panel-heading"><h3 class=3D"panel-title">Tip</h3></div><div class=3D"pa=
nel-body"><p>The default server-side authentication script outputs log
  messages at the <code class=3D"literal">message</code> and
  <code class=3D"literal">error</code> level. </p><p>
    OpenAM does not log debug messages from scripts by default.
    You can configure OpenAM to log such messages
    by setting the debug log level for the <code class=3D"literal">amScript=
</code> service.
    For details, see
  <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/i=
ndex.html#log-debug-selective-capture" class=3D"olink">"Debug Logging By Se=
rvice"</a> in the <em>Administration Guide</em>.
   </p></div></div></li><li class=3D"step"><p><span class=3D"optional-step"=
>(Optional) </span>To test that the script is being used as part of the log=
in
  process,
  edit the script to alter the times when authentication is
  allowed:</p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>Log o=
ut the <code class=3D"literal">demo</code> user.</p></li><li class=3D"step"=
><p>Log in as an OpenAM administrator, for example <code class=3D"literal">=
amadmin</code>.</p></li><li class=3D"step"><p>Click Realms &gt; Top Level R=
ealm &gt; Scripts &gt; Scripted
         Module - Server Side.</p></li><li class=3D"step"><p>In the script,=
 swap the values for
         <code class=3D"literal">START_TIME</code> and <code class=3D"liter=
al">END_TIME</code>, for
         example:</p><div class=3D"zero-clipboard hidden-xs hidden-print" t=
itle=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span c=
lass=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprin=
t nohighlight">var START_TIME =3D 17;
var END_TIME   =3D 9; //</pre></li><li class=3D"step"><p>Click Save.</p></l=
i><li class=3D"step"><p>Repeat steps 1, 2, and 3 above, logging into the mo=
dule as
    the <code class=3D"literal">demo</code> user as before. The authenticat=
ion result
    will be the opposite of the previous result, as the allowed times have =
inverted.</p></li></ol></li></ol></div></div></div></div><div class=3D"sect=
ion" id=3D"sec-scripted-policy-condition"><div class=3D"titlepage"><div><di=
v><h3 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forg=
erock.com/docs/openam/13.5/dev-guide/index.html#sec-scripted-policy-conditi=
on">5.3.2.&nbsp;Default Policy Condition Script</a></h3></div></div></div><=
a class=3D"indexterm" name=3D"d15472e16567"></a><p>
  This section demonstrates how to use the sample policy condition script
  as part of an authorization policy. To examine the
  contents of the sample policy condition script in the OpenAM console brow=
se
  to Realms &gt; Top Level Realm &gt; Scripts, and then click
  <span class=3D"emphasis"><em>Scripted Policy Condition</em></span>.
 </p><p>The default policy condition script demonstrates how to access a us=
er's
 profile information, use that information in HTTP calls, and make a policy
 decision based on the outcome.</p><p>For more information on the functions=
 available for use in policy
 condition scripts, see <a class=3D"xref" href=3D"https://backstage.forgero=
ck.com/docs/openam/13.5/dev-guide/index.html#scripting-api" title=3D"5.2.&n=
bsp;The Scripting API">"The Scripting API"</a>.</p><div class=3D"section" i=
d=3D"sec-scripted-policy-condition-prepare"><div class=3D"titlepage"><div><=
div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.fo=
rgerock.com/docs/openam/13.5/dev-guide/index.html#sec-scripted-policy-condi=
tion-prepare">5.3.2.1.&nbsp;Preparing OpenAM</a></h4></div></div></div><p>O=
penAM requires a small amount of configuration before trying the default
 policy condition script. The default policy condition script requires that=
 the
 subject of the policy has an address in their profile. The script compares=
 the
 address to the country in the resource URL and to the country from which t=
he
 request originated, as determined by an external GeoIP web service. The
 <code class=3D"literal">demo</code> user also requires access to evaluate =
policies.
</p><p>The procedures in this section are:</p><div class=3D"itemizedlist"><=
ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li class=3D"li=
stitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#proc-scripted-pol-address" title=3D"To Add =
an Address to the Demo User">"To Add an Address to the Demo User"</a> </p><=
/li><li class=3D"listitem"><p><a class=3D"xref" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#proc-scripted-pol-privil=
ege" title=3D"To Allow the Demo User to Evaluate a Policy">"To Allow the De=
mo User to Evaluate a Policy"</a> </p></li><li class=3D"listitem"><p><a cla=
ss=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gu=
ide/index.html#proc-scripted-pol-policy" title=3D"To Create a Policy that U=
ses the Default Policy Condition Script">"To Create a Policy that Uses the =
Default Policy Condition Script"</a> </p></li><li class=3D"listitem"><p><a =
class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#proc-enable-entitlement-debug-logging" title=3D"To Enable=
 Message-level Logging for Policy Evaluation">"To Enable Message-level Logg=
ing for Policy Evaluation"</a> </p></li></ul></div><div class=3D"procedure"=
 id=3D"proc-scripted-pol-address"><div class=3D"procedure-inner"><div class=
=3D"procedure-title"><a class=3D"self-link" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#proc-scripted-pol-address">T=
o Add an Address to the Demo User</a></div><p>In this procedure, add an add=
ress value to the <code class=3D"literal">demo</code>
     user's profile. The default policy condition script uses the address w=
hen
     performing policy evaluation.</p><ol class=3D"procedure" type=3D"1"><l=
i class=3D"step"><p>Log in as an OpenAM administrator, for example <code cl=
ass=3D"literal">amadmin</code>.</p></li><li class=3D"step"><p>Click Realms =
&gt; Top Level Realm &gt; Subjects.</p></li><li class=3D"step"><p>On the Us=
er tab, click the <code class=3D"literal">demo</code> user.</p></li><li cla=
ss=3D"step"><p>In Home Address, enter a valid address. For example:</p><div=
 class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to c=
lipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></=
span></span></div><pre class=3D"cmdline prettyprint nohighlight"><strong cl=
ass=3D"userinput">201 Mission St, Suite 2900, San Francisco, CA 94105</stro=
ng></pre></li><li class=3D"step"><p>Click Save.</p></li></ol></div></div><d=
iv class=3D"procedure" id=3D"proc-scripted-pol-privilege"><div class=3D"pro=
cedure-inner"><div class=3D"procedure-title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#proc=
-scripted-pol-privilege">To Allow the Demo User to Evaluate a Policy</a></d=
iv><p>In this procedure, add the <code class=3D"literal">demo</code> user t=
o a
    group and assign the privilege required to perform policy evaluations.<=
/p><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>Log in as an Op=
enAM administrator, for example <code class=3D"literal">amadmin</code>.</p>=
</li><li class=3D"step"><p>Click Realms &gt; Top Level Realm &gt; Subjects.=
</p></li><li class=3D"step"><p>On the Group tab, click New, enter an ID for=
 the group, such as
    <code class=3D"literal">policyEval</code>, and then click OK.</p></li><=
li class=3D"step"><p>On the User tab:</p><ol type=3D"a" class=3D"substeps">=
<li class=3D"step"><p>Click the <code class=3D"literal">demo</code> user.</=
p></li><li class=3D"step"><p>Click the Group tab.</p></li><li class=3D"step=
"><p>In the Available box, select the group created in step 3, and then
      click Add.</p></li><li class=3D"step"><p>Click Save.</p></li></ol></l=
i><li class=3D"step"><p>Click Realms &gt; Top Level Realm &gt; Privileges.<=
/p></li><li class=3D"step"><p>Click the group created in step 3, for exampl=
e <code class=3D"literal">policyEval</code>.</p></li><li class=3D"step"><p>=
On the Privileges page, select <code class=3D"literal">Read and write acces=
s to all realm and policy properties</code>.</p></li><li class=3D"step"><p>=
Click Save.</p></li></ol></div></div><div class=3D"procedure" id=3D"proc-sc=
ripted-pol-policy"><div class=3D"procedure-inner"><div class=3D"procedure-t=
itle"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#proc-scripted-pol-policy">To Create a Polic=
y that Uses the Default Policy Condition Script</a></div><p>In this procedu=
re, create a policy that uses the
   default policy condition script. Policy evaluations can then be
   performed to test the script functionality.</p><ol class=3D"procedure" t=
ype=3D"1"><li class=3D"step"><p>Log in as an OpenAM administrator, for exam=
ple <code class=3D"literal">amadmin</code>.</p></li><li class=3D"step"><p>C=
lick Realms &gt; Top Level Realm &gt; Authorization &gt; Policy Sets.</p></=
li><li class=3D"step"><p>On the Policy Sets page, select <code class=3D"lit=
eral">Default Policy Set</code>.</p></li><li class=3D"step"><p>On the Defau=
lt Policy Set page, click Add a Policy.</p></li><li class=3D"step"><p>Defin=
e the policy as follows:</p><ol type=3D"a" class=3D"substeps"><li class=3D"=
step"><p>Enter a name for the policy.</p></li><li class=3D"step"><p>Define =
resources to which the policy applies:</p><ol type=3D"i" class=3D"substeps"=
><li class=3D"step"><p>Select <code class=3D"literal">URL</code> from the R=
esource Type drop down list.</p></li><li class=3D"step"><p>Select the resou=
rce pattern <code class=3D"literal">*://*:*/*</code> from the
        Resources drop down list.</p></li><li class=3D"step"><p>Click Add.<=
/p><p>The <code class=3D"literal">*://*:*/*</code> resource appears in the
        Resources field.</p></li><li class=3D"step"><p>Click Add Resource t=
o add a second resource to the policy.</p></li><li class=3D"step"><p>Select=
 the resource pattern <code class=3D"literal">*://*:*/*?*</code> from the
        Resources drop down list.</p></li><li class=3D"step"><p>Click Add.<=
/p><p>The <code class=3D"literal">*://*:*/*?*</code> resource appears
        along with the <code class=3D"literal">*://*:*/*</code> resource in=
 the Resources
        field.</p></li><li class=3D"step"><p>Click Create to create the pol=
icy.</p><p>The Resources tab appears as follows:</p><div class=3D"mediaobje=
ct" align=3D"center"><a class=3D"fancybox cboxElement" href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/images/scripting-sample-poli=
cy-resources.png"><img class=3D"img-responsive center-block" data-toggle=3D=
"tooltip" src=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/images/thumb_scripting-sample-policy-resources.png" align=3D"middle" heigh=
t=3D"393" alt=3D"Resources for an example policy that uses the default poli=
cy condition script." title=3D"" data-original-title=3D"Configure resources=
 for a policy as shown to try out the default policy
          condition script."></a></div></li></ol></li><li class=3D"step"><p=
>Specify actions to which the policy applies:</p><ol type=3D"i" class=3D"su=
bsteps"><li class=3D"step"><p>Select the Actions tab.</p></li><li class=3D"=
step"><p>Select GET from the Add an Action drop down list.</p></li><li clas=
s=3D"step"><p>The GET action appears in the list of actions. The default st=
ate
        for the GET action is Allow.</p><p>The Actions tab appears as follo=
ws:</p><div class=3D"mediaobject" align=3D"center"><a class=3D"fancybox cbo=
xElement" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/images/scripting-sample-policy-actions.png"><img class=3D"img-responsive =
center-block" data-toggle=3D"tooltip" src=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/images/thumb_scripting-sample-policy-actions.p=
ng" align=3D"middle" height=3D"314" alt=3D"Actions for an example policy th=
at uses the default policy condition script." title=3D"" data-original-titl=
e=3D"Configure actions for a policy as shown to try out the default policy
          condition script."></a></div></li><li class=3D"step"><p>Click Sav=
e Changes.</p></li></ol></li><li class=3D"step"><p>Configure subjects to wh=
ich the policy applies:</p><ol type=3D"i" class=3D"substeps"><li class=3D"s=
tep"><p>Select the Subjects tab.</p></li><li class=3D"step"><p>Click the ed=
it icon=E2=80=94the pencil.</p></li><li class=3D"step"><p>Select Authentica=
ted Users from the Type drop down list.</p></li><li class=3D"step"><p>Click=
 the OK icon=E2=80=94the check mark.</p><p>The Subjects tab appears as foll=
ows:</p><div class=3D"mediaobject" align=3D"center"><a class=3D"fancybox cb=
oxElement" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/images/scripting-sample-policy-subjects.png"><img class=3D"img-responsiv=
e center-block" data-toggle=3D"tooltip" src=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/images/thumb_scripting-sample-policy-subject=
s.png" align=3D"middle" height=3D"369" alt=3D"Subjects for an example polic=
y that uses the default policy condition script." title=3D"" data-original-=
title=3D"Configure subjects for a policy as shown to try out the default po=
licy
          condition script."></a></div></li><li class=3D"step"><p>Click Sav=
e Changes.</p></li></ol></li><li class=3D"step"><p>Configure environments i=
n which the policy applies:</p><ol type=3D"i" class=3D"substeps"><li class=
=3D"step"><p>Select the Environments tab.</p></li><li class=3D"step"><p>Cli=
ck Add an Environment Condition.</p></li><li class=3D"step"><p>Select Scrip=
t from the Type drop down list.</p></li><li class=3D"step"><p>Select Script=
ed Policy Condition from the Script Name drop down list.</p></li><li class=
=3D"step"><p>Click the OK icon=E2=80=94the check mark.</p><p>The Environmen=
ts tab appears as follows:</p><div class=3D"mediaobject" align=3D"center"><=
a class=3D"fancybox cboxElement" href=3D"https://backstage.forgerock.com/do=
cs/openam/13.5/dev-guide/images/scripting-sample-policy-environments.png"><=
img class=3D"img-responsive center-block" data-toggle=3D"tooltip" src=3D"ht=
tps://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_scrip=
ting-sample-policy-environments.png" align=3D"middle" height=3D"369" alt=3D=
"Environments for an example policy that uses the default policy condition =
script." title=3D"" data-original-title=3D"Configure environments for a pol=
icy as shown to try out the default policy
          condition script."></a></div></li><li class=3D"step"><p>Click Sav=
e Changes.</p></li></ol></li><li class=3D"step"><p>No additional configurat=
ion is required in the Response Attributes or Details
      tabs.</p></li></ol></li></ol></div></div><div class=3D"procedure" id=
=3D"proc-enable-entitlement-debug-logging"><div class=3D"procedure-inner"><=
div class=3D"procedure-title"><a class=3D"self-link" href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#proc-enable-entitle=
ment-debug-logging">To Enable Message-level Logging for Policy Evaluation</=
a></div><p>The default policy condition script writes to the debug logs at =
the
    <code class=3D"literal">message</code> level. Message-level debug loggi=
ng is not enabled
    for policy evaluation by default.</p><p>
    This section shows how to enable message-level debug logging for  polic=
y
    evaluation, so that logger output from the default policy condition
    script can be viewed in the <code class=3D"filename">Entitlement</code>=
 debug log.</p><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>Log=
 in as an OpenAM administrator, for example <code class=3D"literal">amadmin=
</code>.</p></li><li class=3D"step"><p>Visit the <code class=3D"literal">De=
bug.jsp</code> page, for example:
     <code class=3D"literal">https://openam.example.com:8443/openam/Debug.j=
sp</code>.</p></li><li class=3D"step"><p>
     In the Debug instances drop-down, select <code class=3D"literal">Entit=
lement</code>.
    </p></li><li class=3D"step"><p>
     In the Level drop-down, choose the debug level required. In this examp=
le,
     select <code class=3D"literal">Message</code>.
    </p><div class=3D"mediaobject" align=3D"center"><a class=3D"fancybox cb=
oxElement" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/images/enable-entitlement-debug-logs.png"><img class=3D"img-responsive c=
enter-block" data-toggle=3D"tooltip" src=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/images/thumb_enable-entitlement-debug-logs.png"=
 align=3D"middle" height=3D"171" alt=3D"Use the Debug.jsp page to enable me=
ssage-level debug logging." title=3D"" data-original-title=3D"Use the Debug=
.jsp page to enable message-level debug logging."></a></div></li><li class=
=3D"step"><p>Click Submit, and on the summary page that appears, click Conf=
irm.</p><p>Message-level debug logging is now enabled for policy evaluation=
.</p></li></ol></div></div></div><div class=3D"section" id=3D"sec-scripted-=
policy-condition-evaluate"><div class=3D"titlepage"><div><div><h4 class=3D"=
title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#sec-scripted-policy-condition-evaluate">5.=
3.2.2.&nbsp;Trying the Default Policy Condition Script</a></h4></div></div>=
</div><p>This section demonstrates using a policy that contains
the default policy condition script.</p><p>To evaluate against a policy, yo=
u must first obtain an SSO token for
   the subject performing the evaluation, in this case the <code class=3D"l=
iteral">demo</code>
   user. You can then make a call to the <code class=3D"literal">policies?_=
action=3Devaluate</code>
   endpoint, including some environment information, which the policy uses =
to
   make an authorization decision.
  </p><div class=3D"procedure" id=3D"d15472e16946"><div class=3D"procedure-=
inner"><div class=3D"procedure-title"><a class=3D"self-link" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#d15472e1694=
6">To Evaluate a Policy</a></div><ol class=3D"procedure" type=3D"1"><li cla=
ss=3D"step"><p>Obtain an SSO Token for the <code class=3D"literal">demo</co=
de> user:</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"=
Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"=
fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohigh=
light"><strong class=3D"userinput">curl \
--request POST \
--header "X-OpenAM-Username: demo" \
--header "X-OpenAM-Password: changeit" \
https://openam.example.com:8443/openam/json/authenticate</strong>
<em class=3D"computeroutput">{
     "tokenId": "AQIC5wM2...",
     "successUrl": "/openam/console"
}</em></pre></li><li class=3D"step"><p>Send an evaluation request to the <c=
ode class=3D"literal">policies</code>
    endpoint, using the SSO token of the <code class=3D"literal">demo</code=
> user in the
    <code class=3D"literal">iPlanetDirectoryPro</code> header.</p><p>In the=
 JSON data, set the <code class=3D"literal">subject</code> property
      to also be the SSO token of the <code class=3D"literal">demo</code> u=
ser.
      In the <code class=3D"literal">resources</code> property, include a U=
RL
      that resides on a server in the same country as the address set for t=
he
      <code class=3D"literal">demo</code> user. In the <code class=3D"liter=
al">environment</code>
      property, include an IP address that is also based in the same
      country as the user and the resource. The example below uses the
      ForgeRock Community web site URL and an IP address from a ForgeRock
      office, both located in the United States:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t"><strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "iPlanetDirectoryPro: AQIC5wM2..." \
--data '{
    "resources": [
        "http://www.forgerock.org:80/index.html"
    ],
    "application": "iPlanetAMWebAgentService",
    "subject": { "ssoToken": "AQIC5wM2..."},
    "environment": {
        "IP": [
            "38.99.39.210"
        ]
    }
}' \
https://openam.example.com:8443/openam/json/policies?_action=3Devaluate</st=
rong>
<em class=3D"computeroutput">[
  {
    "advices": {},
    "ttl": 9223372036854775807,
    "resource": "http://www.forgerock.org:80/index.html",
    "actions": {
      "POST": true,
      "GET": true
    },
    "attributes": {
      "countryOfOrigin": [
        "United States"
      ]
    }
  }
]</em></pre><p>If the country in the subject's profile matches the country
      determined from the source IP in the environment and the country
      determined from the resource URL, then OpenAM returns a list of actio=
ns available.
      The script will also add an attribute to the response called
      <code class=3D"literal">countryOfOrigin</code> with the country as th=
e value.</p><p>If the countries do not match, no actions are returned. In t=
he
      following example, the resource URL is based in France, while the IP
       and user's address in the profile are based in the United States:</p=
><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command=
 to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-=
o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"><stro=
ng class=3D"userinput">curl -X POST \
-H "Content-Type: application/json" \
-H "iPlanetDirectoryPro: AQIC5wM2..." \
-d '{
    "resources": [
        "http://www.forgerock.fr:80/index.html"
    ],
    "application": "iPlanetAMWebAgentService",
    "subject": { "ssoToken": "AQIC5wM2..."},
    "environment": {
        "IP": [
            "38.99.39.210"
        ]
    }
}' \
'https://openam.example.com:8443/openam/json/policies?_action=3Devaluate'</=
strong>
<em class=3D"computeroutput">[
    {
        "advices": {},
        "ttl": 9223372036854775807,
        "resource": "http://www.forgerock.fr:80/index.html",
        "actions": {},
        "attributes": {}
    }
]</em></pre></li></ol></div></div></div></div><div class=3D"section" id=3D"=
sec-scripted-oidc-claims"><div class=3D"titlepage"><div><div><h3 class=3D"t=
itle"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#sec-scripted-oidc-claims">5.3.3.&nbsp;Defau=
lt OIDC Claims Script</a></h3></div></div></div><a class=3D"indexterm" name=
=3D"d15472e17017"></a><p>
  This section demonstrates how to use the default OIDC claims
  script to return the profile attributes of a user in response to an OpenI=
D
  Connect request for the <code class=3D"literal">profile</code> scope.
 </p><p>The default OIDC claims script maps the following claims to the
 <code class=3D"literal">profile</code> scope:</p><div class=3D"itemizedlis=
t"><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li class=
=3D"listitem"><p>zoneinfo</p></li><li class=3D"listitem"><p>family_name</p>=
</li><li class=3D"listitem"><p>locale</p></li><li class=3D"listitem"><p>nam=
e</p></li></ul></div><p>To examine the contents of the default OIDC claims =
script in the
  OpenAM console browse to Realms &gt; Top Level Realm &gt; Scripts, and th=
en click
  OIDC Claims Script.</p><p>For more information on the functions available=
 for use in OIDC claim
  scripts, see <a class=3D"xref" href=3D"https://backstage.forgerock.com/do=
cs/openam/13.5/dev-guide/index.html#scripting-api" title=3D"5.2.&nbsp;The S=
cripting API">"The Scripting API"</a>.</p><div class=3D"section" id=3D"sec-=
scripted-oidc-claims-prepare"><div class=3D"titlepage"><div><div><h4 class=
=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#sec-scripted-oidc-claims-prepare">5.3.=
3.1.&nbsp;Preparing OpenAM</a></h4></div></div></div><p>OpenAM requires a s=
mall amount of configuration before trying the example
 OIDC claims script. You must first create an OAuth2 provider with OpenID
 Connect settings, and register an OpenID Connect client, before
 you can authenticate to the client using a web browser.
</p><p>The procedures in this section are:</p><div class=3D"itemizedlist"><=
ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li class=3D"li=
stitem"><p><a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/o=
penam/13.5/dev-guide/index.html#proc-oidc-script-provider" title=3D"To Crea=
te an OpenID Connect Provider Service">"To Create an OpenID Connect Provide=
r Service"</a> </p></li><li class=3D"listitem"><p><a class=3D"xref" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#proc=
-oidc-script-client" title=3D"To Register an OpenID Connect Client">"To Reg=
ister an OpenID Connect Client"</a> </p></li></ul></div><div class=3D"proce=
dure" id=3D"proc-oidc-script-provider"><div class=3D"procedure-inner"><div =
class=3D"procedure-title"><a class=3D"self-link" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#proc-oidc-script-provid=
er">To Create an OpenID Connect Provider Service</a></div><p>Follow the ste=
ps in this procedure to create an OpenID Connect
      provider service by using the wizard.</p><ol class=3D"procedure" type=
=3D"1"><li class=3D"step"><p>Log in to OpenAM as an administrator, for exam=
ple
          <code class=3D"literal">amadmin</code>.</p></li><li class=3D"step=
"><p>Click Realms &gt; Top Level Realm &gt; Configure OAuth Provider
          &gt; Configure OpenID Connect.</p></li><li class=3D"step"><p>On t=
he Configure OpenID Connect page, accept the default values
          and then click Create.</p></li><li class=3D"step"><p>Navigate to =
Realms &gt; Top Level Realm &gt; Services, click OAuth2
          Provider, and verify that the value for OIDC Claims Script is the
          default script, <code class=3D"literal">OIDC Claims Script</code>=
.</p></li></ol></div></div><p>For a more detailed explanation and example o=
f creating an OpenID
    Connect provider service, see <a href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/admin-guide/index.html#configure-openid-connect-provider=
" class=3D"olink">"Configuring OpenAM As OpenID Connect Provider"</a> in th=
e <em>Administration Guide</em>.</p><div class=3D"procedure" id=3D"proc-oid=
c-script-client"><div class=3D"procedure-inner"><div class=3D"procedure-tit=
le"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#proc-oidc-script-client">To Register an OpenI=
D Connect Client</a></div><p>Follow the steps in this procedure to create a=
n OpenID Connect client
    agent profile.</p><ol class=3D"procedure" type=3D"1"><li class=3D"step"=
><p>Log in to OpenAM as an administrator, for example
         <code class=3D"literal">amadmin</code>.</p></li><li class=3D"step"=
><p>Click Realms &gt; Top Level Realm &gt; Agents &gt;
         OAuth 2.0/OpenID Connect Client.</p></li><li class=3D"step"><p>In =
the Agent table, click New.</p></li><li class=3D"step"><p>Enter a name for =
the client, such as <code class=3D"literal">oidcTest</code>,
         provide a password, and then click Create.</p></li><li class=3D"st=
ep"><p>On the OAuth 2.0/OpenID Connect Client page, click the agent name
         to configure the agent.</p></li><li class=3D"step"><p>On the edit =
client page:</p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>In =
Redirection URIs, enter an example URI such as
            <code class=3D"literal">http://www.example.com</code>.</p></li>=
<li class=3D"step"><p>In Scope(s), enter both <code class=3D"literal">profi=
le</code> and
            <code class=3D"literal">openid</code>.</p><p>The <code class=3D=
"literal">profile</code> scope will return details
            about the subject such as given name and timezone. The
            <code class=3D"literal">openid</code> scope indicates this is a=
n OpenID Connect
            client.</p></li><li class=3D"step"><p>In Display name, enter th=
e name of the client as it will be
            displayed on the consent page, for example
            <code class=3D"literal">OIDC Claims Script Client</code>.</p></=
li></ol></li><li class=3D"step"><p>Save your work.</p></li></ol></div></div=
><p>For a more detailed explanation and examples of registering an OpenID
    Connect client, see <a href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/admin-guide/index.html#register-openid-connect-clients" class=3D"o=
link">"Registering OpenID Connect Relying Parties"</a> and
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide=
/index.html#configure-oauth2-client" class=3D"olink">"Configuring OAuth 2.0=
 and OpenID Connect 1.0 Clients"</a> in the <em>Administration Guide</em>.<=
/p></div><div class=3D"section" id=3D"scripted-oidc-claims-try-it-out"><div=
 class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#scripted-oidc-claims-try-it-out">5.3.3.2.&nbsp;Trying the Default OIDC Cl=
aims Script</a></h4></div></div></div><p>
   This section shows how to authenticate to a registered OpenID
   Connect client and request scopes from OpenAM, which in turn uses the de=
fault
   OIDC Claims script to populate the scope with claims and profile values.
  </p><div class=3D"procedure" id=3D"d15472e17167"><div class=3D"procedure-=
inner"><div class=3D"procedure-title"><a class=3D"self-link" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#d15472e1716=
7">To Authenticate to an OIDC Client and use the Default OIDC Claims
  Script</a></div><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>=
Log out of OpenAM.</p></li><li class=3D"step"><p>In an Internet browser, na=
vigate to the OpenAM OAuth 2.0 authorization
 endpoint, <code class=3D"literal">/oauth2/authorize</code>, and specify
 the following query parameters, with the values you configured in the agen=
t
 profile:</p><div class=3D"table" id=3D"table-oidc-profile-mappings"><div c=
lass=3D"table-title"><a class=3D"self-link" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#table-oidc-profile-mappings"=
>Query parameters for OpenID Connect Authorization to an Agent Profile</a><=
/div><div class=3D"table-contents"><table xmlns:ng=3D"http://docbook.org/do=
cbook-ng" xmlns:db=3D"http://docbook.org/ns/docbook" xmlns:exsl=3D"http://e=
xslt.org/common" xmlns:exslt=3D"http://exslt.org/common" xmlns:doc=3D"http:=
//nwalsh.com/xsl/documentation/1.0" xmlns:stbl=3D"http://nwalsh.com/xslt/ex=
t/com.nwalsh.saxon.Table" xmlns:xtbl=3D"xalan://com.nwalsh.xalan.Table" xml=
ns:lxslt=3D"http://xml.apache.org/xslt" xmlns:ptbl=3D"http://nwalsh.com/xsl=
t/ext/xsltproc/python/Table" class=3D"table table-striped" summary=3D"Query=
 parameters for OpenID Connect Authorization to an Agent Profile" border=3D=
"0"><colgroup><col width=3D"20%"><col width=3D"80%"></colgroup><thead><tr><=
th>Query Parameter</th><th>Agent Profile Property Value</th></tr></thead><t=
body><tr><td><code class=3D"literal">client_id</code></td><td>Name of the a=
gent, for example <code class=3D"literal">oidcTest</code>.</td></tr><tr><td=
><code class=3D"literal">redirect_uri</code></td><td>Redirection URIs, for =
example
       <code class=3D"literal">http://www.example.com</code>.</td></tr><tr>=
<td><code class=3D"literal">response_type</code></td><td>Response Types, fo=
r example <code class=3D"literal">code</code>.</td></tr><tr><td><code class=
=3D"literal">scope</code></td><td>Scope(s), for example <code class=3D"lite=
ral">openid profile</code>.</td></tr></tbody></table></div></div><br class=
=3D"table-break"><p>For example:
<code class=3D"literal">http://openam.example.com:8080/openam/oauth2/author=
ize?client_id=3DoidcTest&amp;redirect_uri=3Dhttp://www.example.com&amp;resp=
onse_type=3Dcode&amp;scope=3Dopenid profile</code>
</p></li><li class=3D"step"><p>Log in to OpenAM as <code class=3D"literal">=
demo</code>, with password
 <code class=3D"literal">changeit</code>.</p></li><li class=3D"step"><p>On =
the consent page, expand the panel labelled Your
 personal information to see the claim values the default OIDC script
 has populated into the requested <code class=3D"literal">profile</code> sc=
ope.</p><div class=3D"mediaobject" align=3D"center"><a class=3D"fancybox cb=
oxElement" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/images/scripting-sample-oidc-consent.png"><img class=3D"img-responsive c=
enter-block" data-toggle=3D"tooltip" src=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/images/thumb_scripting-sample-oidc-consent.png"=
 align=3D"middle" height=3D"469" alt=3D"The OpenID Consent Screen with Clai=
ms Mapped to a Scope." title=3D"" data-original-title=3D"The OIDC Claims sc=
ript maps claims to scopes."></a></div></li><li class=3D"step"><p>Click All=
ow to be redirected to the Redirection URI specified in
 the agent profile. The authorization code is appended to the redirection U=
RI as
 the value of the <code class=3D"literal">code</code> query parameter.</p><=
/li></ol></div></div></div></div></div></div><div lang=3D"" class=3D"chapte=
r" id=3D"chap-fedlets"><div class=3D"titlepage"><div><div><h1 class=3D"titl=
e"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#chap-fedlets">Chapter&nbsp;6.&nbsp;Building SA=
ML v2.0 Service Providers With Fedlets</a></h1></div></div></div><a class=
=3D"indexterm" name=3D"d15472e17267"></a><p>
  This chapter introduces OpenAM Fedlets, and shows how to use the Fedlet
  as part of your Java web application.
 </p><p>
  An OpenAM <em class=3D"firstterm">Fedlet</em> is a small web application =
that
  that acts as a lightweight SAML v2.0 service provider.
 </p><p>
  Fedlets are easy to integrate into Java web applications. The
  Fedlet does not require an entire OpenAM installation alongside your
  application, but instead can redirect to OpenAM for single sign-on, and t=
o
  retrieve SAML assertions.
 </p><div class=3D"section" id=3D"sec-fedlet-java"><div class=3D"titlepage"=
><div><div><h2 class=3D"title" style=3D"clear: both"><a class=3D"self-link"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#sec-fedlet-java">6.1.&nbsp;Using Fedlets in Java Web Applications</a></=
h2></div></div></div><a class=3D"indexterm" name=3D"d15472e17285"></a><p>
  This section introduces OpenAM Fedlets and shows how to use the Fedlet
  as part of your Java web application.
 </p><div class=3D"section" id=3D"create-install-java-fedlet"><div class=3D=
"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"ht=
tps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#create-=
install-java-fedlet">6.1.1.&nbsp;Creating and Installing a Java Fedlet</a><=
/h3></div></div></div><p>
   The following sections provide procedures for creating, installing,
   configuring, and testing a Java Fedlet to perform single sign-on and sin=
gle
   logout with an identity provider:
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#generating-fedlet-configuration-idp" title=3D"6.=
1.1.1.&nbsp;Generating the Fedlet Configuration on the Identity Provider">"=
Generating the Fedlet Configuration on the Identity Provider"</a>
     </p></li><li class=3D"listitem"><p>
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#installing-fedlet-sp" title=3D"6.1.1.2.&nbsp;Ins=
talling and Configuring the Fedlet on the Service Provider">"Installing and=
 Configuring the Fedlet on the Service Provider"</a>
     </p></li><li class=3D"listitem"><p>
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#testing-fedlet-sso-slo" title=3D"6.1.1.3.&nbsp;T=
esting Fedlet Single Sign-on and Single Logout">"Testing Fedlet Single Sign=
-on and Single Logout"</a>
     </p></li></ul></div><p>
   You can also use the Fedlet to query attributes of users on identity
   providers configured with the Attribute Authority
   (<code class=3D"literal">AttrAuth</code>) and the XACML Policy Decision =
Point
   (<code class=3D"literal">XACML PDP</code>) types. See the following sect=
ions for
   additional configuration requirements:
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#fedlet-attribute-query" title=3D"6.1.1.4.&nbsp;Qu=
erying an Attribute Authority">"Querying an Attribute Authority"</a>
    </p></li><li class=3D"listitem"><p>
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#fedlet-xacml-pdp" title=3D"6.1.1.5.&nbsp;Querying=
 an XACML Policy Decision Point">"Querying an XACML Policy Decision Point"<=
/a>
    </p></li></ul></div><div class=3D"section" id=3D"generating-fedlet-conf=
iguration-idp"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a cl=
ass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#generating-fedlet-configuration-idp">6.1.1.1.&nbsp;Gen=
erating the Fedlet Configuration on the Identity Provider</a></h4></div></d=
iv></div><p>
    Perform the following steps on the identity provider to create a
    <code class=3D"filename">Fedlet.zip</code> file containing the configur=
ation files for
    the Java fedlet:
   </p><div class=3D"procedure" id=3D"create-config-files-for-a-java-fedlet=
"><div class=3D"procedure-inner"><div class=3D"procedure-title"><a class=3D=
"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gu=
ide/index.html#create-config-files-for-a-java-fedlet">To Create Configurati=
on Files for a Fedlet</a></div><ol class=3D"procedure" type=3D"1"><li class=
=3D"step"><p>
      If you have not already done so, create a hosted identity provider,
      using the test certificate for the signing key.
     </p><p>
      For information about how to create a hosted identity provider, see
      <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-gui=
de/index.html#saml2-create-hosted-idp" class=3D"olink">"Creating a Hosted I=
dentity Provider"</a> in the <em>Administration Guide</em>.
     </p></li><li class=3D"step"><p>
      Under Realms &gt; <em class=3D"replaceable">Realm Name</em> &gt;
      Dashboard, click Create Fedlet Configuration, and then click Create F=
edlet
      Configuration a second time.
     </p><p>
      Note that the circle of trust includes your hosted identity provider.
     </p></li><li class=3D"step"><p>
      Name the Fedlet, and set the Destination URL.
     </p><p>
      You can use the deployment URL, such as
      <code class=3D"literal">http://openam.example.com:8080/fedlet</code> =
as both the name
      and the destination URL.
     </p></li><li class=3D"step"><p>
      Click Create to generate the <code class=3D"filename">Fedlet.zip</cod=
e> file.
     </p><p>
      A message appears indicating Fedlet creation was successful. Note the
      location of the generated output file in the message. For example,
      <code class=3D"filename">/path/to/openam/config/myfedlets/httpopename=
xamplecom8080fedlet/Fedlet.zip</code>.
     </p></li><li class=3D"step"><p>
      Click OK to close the message informing you that the Fedlet was creat=
ed.
     </p></li><li class=3D"step"><p>
      Transfer the <code class=3D"filename">Fedlet.zip</code> file to the s=
ervice provider
      administrator.
     </p></li></ol></div></div></div><div class=3D"section" id=3D"installin=
g-fedlet-sp"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a clas=
s=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#installing-fedlet-sp">6.1.1.2.&nbsp;Installing and Confi=
guring the Fedlet on the Service Provider</a></h4></div></div></div><p>
    Having obtained the <code class=3D"filename">Fedlet.zip</code> file fro=
m the identity
    provider administrator, the service provider adminsitrator unzips and
    installs the file, and then installs the <code class=3D"filename">fedle=
t.war</code>
    file from the OpenAM distribution:
   </p><div class=3D"procedure" id=3D"install-fedlet-as-demo"><div class=3D=
"procedure-inner"><div class=3D"procedure-title"><a class=3D"self-link" hre=
f=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#=
install-fedlet-as-demo">To Install and Configure the Fedlet as a Demo Appli=
cation</a></div><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>
      Create the <code class=3D"filename">fedlet</code> directory in the ho=
me directory
      of the user that runs the OpenAM web container:
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">cd $HOME</strong>
$ <strong class=3D"userinput">mkdir fedlet</strong></pre></li><li class=3D"=
step"><p>
      Copy the <code class=3D"filename">Fedlet.zip</code> file obtained fro=
m the identity
      provider administrator to the <code class=3D"filename">$HOME/fedlet</=
code> directory.
     </p></li><li class=3D"step"><p>
      Unzip the <code class=3D"filename">Fedlet.zip</code> file.
     </p></li><li class=3D"step"><p>
      Move all the files under <code class=3D"filename">$HOME/fedlet/conf</=
code> to
      <code class=3D"filename">$HOME/fedlet</code>.
     </p></li><li class=3D"step"><p>
      Obtain the <code class=3D"filename">Fedlet-13.5.2.zip</code> file fro=
m the full
      OpenAM distribution file, <code class=3D"filename">OpenAM-13.5.2.zip<=
/code>.
     </p></li><li class=3D"step"><p>
      Unzip the <code class=3D"filename">Fedlet-13.5.2.zip</code> file:
      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlig=
ht">$ <strong class=3D"userinput">cd /path/to/openam-distribution/openam</s=
trong>
$ <strong class=3D"userinput">unzip Fedlet-13.5.2.zip</strong></pre><p>
     </p></li><li class=3D"step"><p>Deploy the Fedlet in your web container=
:</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy com=
mand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">$=
 <strong class=3D"userinput">cp /path/to/openam-distribution/openam/fedlet.=
war /path/to/tomcat/webapps</strong></pre></li></ol></div></div></div><div =
class=3D"section" id=3D"testing-fedlet-sso-slo"><div class=3D"titlepage"><d=
iv><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstag=
e.forgerock.com/docs/openam/13.5/dev-guide/index.html#testing-fedlet-sso-sl=
o">6.1.1.3.&nbsp;Testing Fedlet Single Sign-on and Single Logout</a></h4></=
div></div></div><p>
    To test single sign-on and single logout from the Fedlet, browse to the
    Fedlet URL. For example,
    <code class=3D"literal">http://openam.example.com:8080/fedlet</code>.
   </p><p>
    Try one or more examples from the Fedlet home page:
   </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-fedlet-demo=
"><a class=3D"fancybox cboxElement" href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/images/fedlet-demo.png"><img class=3D"img-respo=
nsive center-block" data-toggle=3D"tooltip" src=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/images/thumb_fedlet-demo.png" align=3D"m=
iddle" height=3D"253" alt=3D"Home page for demo Fedlet" title=3D"" data-ori=
ginal-title=3D"The home page for the demo Fedlet lets you try Fedlet (SP)
     initiated and IDP initiated single sign-on and single logout."></a></d=
iv><p>
    You can log in to the identity provider with username
    <code class=3D"literal">demo</code> and password <code class=3D"literal=
">changeit</code>.
   </p></div><div class=3D"section" id=3D"fedlet-attribute-query"><div clas=
s=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#f=
edlet-attribute-query">6.1.1.4.&nbsp;Querying an Attribute Authority</a></h=
4></div></div></div><p>
    You can use the Fedlet to query attributes on an identity provider. The
    identity provider must be configured with the Attribute Authority
    (<code class=3D"literal">AttrAuth</code>) type and should sign response=
s. The Fedlet
    must be configured to deal with signed responses. Furthermore, map the
    attributes to request in both the identity provider and the Fedlet
    configurations.
   </p><p>
    Perform the following steps:
   </p><div class=3D"procedure" id=3D"try-fedlet-attribute-query"><div clas=
s=3D"procedure-inner"><div class=3D"procedure-title"><a class=3D"self-link"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#try-fedlet-attribute-query">To Use the Fedlet to Query an Attribute Aut=
hority</a></div><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>
      Add the Attribute Authority type to the hosted identity provider.
     </p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>
        On OpenAM where the identity provider is hosted, log in to the
        OpenAM console as an administrator, such as <code class=3D"literal"=
>amadmin</code>.
       </p></li><li class=3D"step"><p>
        Under Federation &gt; Entity Providers, select the identity provide=
r,
        and then click New, even though you plan to change the configuratio=
n
        rather than create a new provider.
       </p></li><li class=3D"step"><p>
        Select the protocol of the provider: <code class=3D"literal">SAMLv2=
</code>.
       </p></li><li class=3D"step"><p>
        In the Create SAMLv2 Entity Provider page, do the following.
       </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"=
list-style-type: disc; "><li class=3D"listitem"><p>
          Set the Realm.
         </p></li><li class=3D"listitem"><p>
          Set the Entity Identifier to the same entity identifier you
          selected in the previous screen.
         </p></li><li class=3D"listitem"><p>
          In the Attribute Authority section, set the Meta Alias for exampl=
e
          to <code class=3D"literal">/attra</code>, and set the Signing cer=
tificate alias
          and Encryption certificate alias values to <code class=3D"literal=
">test</code> (to
          use the test certificate).
         </p></li><li class=3D"listitem"><p>
          Click Create to save your changes.
         </p><p>
          Disregard any error messages stating that the entity already
          exists.
         </p></li></ul></div><p>
        <code class=3D"literal">AttrAuth</code> now appears in the list of =
Types for
        your identity provider.
       </p></li></ol></li><li class=3D"step"><p>
      Under Federation &gt; Entity Providers, click the Identity Provider
      link to open the provider's configuration.
     </p></li><li class=3D"step"><p>
      Make sure attributes for the query are mapped on the Identity
      Provider.
     </p><p>
      Under IDP &gt; Attribute Mapper, add the following values to the
      Attribute Map if they are not yet present.
     </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"li=
st-style-type: disc; "><li class=3D"listitem"><p><code class=3D"literal">cn=
=3Dcn</code></p></li><li class=3D"listitem"><p><code class=3D"literal">sn=
=3Dsn</code></p></li><li class=3D"listitem"><p><code class=3D"literal">uid=
=3Duid</code></p></li></ul></div><div class=3D"panel panel-info"><div class=
=3D"panel-heading"><h3 class=3D"panel-title">Note</h3></div><div class=3D"p=
anel-body"><p>
       Make sure to use thread-safe code if you implement the
       AttributeAuthorityMapper. You can use the attributes on the HttpRequ=
est
       instead of synchronizing them. The default AttributeAuthorityMapper =
uses
       an attribute on the HttpServletRequest to pass information to the
       AttributeQueryUtil.
      </p></div></div><p>
      Click Save to save your changes.
     </p></li><li class=3D"step"><p>
      Generate the Fedlet configuration files as described in
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#create-config-files-for-a-java-fedlet" title=3D"=
To Create Configuration Files for a Fedlet">"To Create Configuration Files =
for a Fedlet"</a>,
      making sure you map the attributes.
     </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"li=
st-style-type: disc; "><li class=3D"listitem"><p><code class=3D"literal">cn=
=3Dcn</code></p></li><li class=3D"listitem"><p><code class=3D"literal">sn=
=3Dsn</code></p></li><li class=3D"listitem"><p><code class=3D"literal">uid=
=3Duid</code></p></li></ul></div><p>
      This step creates a Fedlet configuration with updated identity
      provider metadata. If you already created a Fedlet, either use a diff=
erent
      name, or delete the existing Fedlet.
     </p></li><li class=3D"step"><p>
      Deploy the new Fedlet as described in
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#install-fedlet-as-demo" title=3D"To Install and =
Configure the Fedlet as a Demo Application">"To Install and Configure the F=
edlet as a Demo Application"</a>.
     </p></li><li class=3D"step"><p>
      Edit the new Fedlet configuration to request signing and encryption,
      and replace the existing configuration in OpenAM with the edited
      configuration.
     </p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>
        Copy the test keystore from OpenAM, and prepare password files.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighli=
ght">$ <strong class=3D"userinput">scp user@openam:/home/user/openam/openam=
/keystore.jks ~/fedlet/</strong></pre><p>
        The Fedlet uses password files when accessing the keystore. These
        password files contain encoded passwords, where the encoding is spe=
cific
        to the Fedlet.
       </p><p>
        To encode the password, use <code class=3D"literal">fedletEncode.js=
p</code>.
        <code class=3D"literal">fedletEncode.jsp</code> is in the deployed =
Fedlet, for example
        <code class=3D"literal">http://openam.example.com:8080/fedlet/fedle=
tEncode.jsp</code>.
        The only password to encode for OpenAM's test keystore is
        <code class=3D"literal">changeit</code>, because the keystore and p=
rivate key
        passwords are both the same.
       </p><p>
        Use the encoded value to create the password files as in the
        following example.
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa=
 fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighli=
ght">$ <strong class=3D"userinput">echo AQIC5BHNSjLwT303GqndmHbyYvzP9Tz7OAn=
K &gt; ~/fedlet/.storepass</strong>
$ <strong class=3D"userinput">echo AQIC5BHNSjLwT303GqndmHbyYvzP9Tz7OAnK &gt=
; ~/fedlet/.keypass</strong></pre></li><li class=3D"step"><p>
        Edit <code class=3D"filename">~/fedlet/sp.xml</code>.
       </p><p>
        To use the test
        certificate for the attribute query feature, add a <code class=3D"l=
iteral">RoleDescriptor</code>
        to the <code class=3D"literal">EntityDescriptor</code> after the <c=
ode class=3D"literal">SSODescriptor</code>.
        The <code class=3D"literal">RoleDescriptor</code> describes
        the certificates that are used for signing and encryption. The attr=
ibute
        authority encrypts the response with the Fedlet's public key, and t=
he
        Fedlet decrypts the response with its private key.
       </p><p>
        Change the following:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint xml=
 hljs"><span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">RoleDescripto=
r</span> <span class=3D"hljs-attr">xmlns:xsi</span>=3D<span class=3D"hljs-s=
tring">"http://www.w3.org/2001/XMLSchema-instance"</span>
    <span class=3D"hljs-attr">xmlns:query</span>=3D<span class=3D"hljs-stri=
ng">"urn:oasis:names:tc:SAML:metadata:ext:query"</span>
    <span class=3D"hljs-attr">xsi:type</span>=3D<span class=3D"hljs-string"=
>"query:AttributeQueryDescriptorType"</span>
    <span class=3D"hljs-attr">protocolSupportEnumeration</span>=3D<span cla=
ss=3D"hljs-string">"urn:oasis:names:tc:SAML:2.0:protocol"</span>&gt;</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">RoleDescriptor</sp=
an>&gt;</span></pre><p>
        To:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint xml=
 hljs"> <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">RoleDescript=
or</span> <span class=3D"hljs-attr">xmlns:xsi</span>=3D<span class=3D"hljs-=
string">"http://www.w3.org/2001/XMLSchema-instance"</span>
    <span class=3D"hljs-attr">xmlns:query</span>=3D<span class=3D"hljs-stri=
ng">"urn:oasis:names:tc:SAML:metadata:ext:query"</span>
    <span class=3D"hljs-attr">xsi:type</span>=3D<span class=3D"hljs-string"=
>"query:AttributeQueryDescriptorType"</span>
    <span class=3D"hljs-attr">protocolSupportEnumeration</span>=3D<span cla=
ss=3D"hljs-string">"urn:oasis:names:tc:SAML:2.0:protocol"</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">KeyDescriptor</spa=
n> <span class=3D"hljs-attr">use</span>=3D<span class=3D"hljs-string">"sign=
ing"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:KeyInfo</span>=
 <span class=3D"hljs-attr">xmlns:ds</span>=3D<span class=3D"hljs-string">"h=
ttp://www.w3.org/2000/09/xmldsig#"</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:X509Data</spa=
n>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:X509Certific=
ate</span>&gt;</span>
MIICQDCCAakCBEeNB0swDQYJKoZIhvcNAQEEBQAwZzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkN=
h
bGlmb3JuaWExFDASBgNVBAcTC1NhbnRhIENsYXJhMQwwCgYDVQQKEwNTdW4xEDAOBgNVBAsTB09=
w
ZW5TU08xDTALBgNVBAMTBHRlc3QwHhcNMDgwMTE1MTkxOTM5WhcNMTgwMTEyMTkxOTM5WjBnMQs=
w
CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEUMBIGA1UEBxMLU2FudGEgQ2xhcmExDDA=
K
BgNVBAoTA1N1bjEQMA4GA1UECxMHT3BlblNTTzENMAsGA1UEAxMEdGVzdDCBnzANBgkqhkiG9w0=
B
AQEFAAOBjQAwgYkCgYEArSQc/U75GB2AtKhbGS5piiLkmJzqEsp64rDxbMJ+xDrye0EN/q1U5Of=
+
RkDsaN/igkAvV1cuXEgTL6RlafFPcUX7QxDhZBhsYF9pbwtMzi4A4su9hnxIhURebGEmxKW9qJN=
Y
Js0Vo5+IgjxuEWnjnnVgHTs1+mq5QYTA7E6ZyL8CAwEAATANBgkqhkiG9w0BAQQFAAOBgQB3Pw/=
U
QzPKTPTYi9upbFXlrAKMwtFf2OW4yvGWWvlcwcNSZJmTJ8ARvVYOMEVNbsT4OFcfu2/PeYoAdiD=
A
cGy/F2Zuj8XJJpuQRSE6PtQqBuDEHjjmOQJ0rV/r8mO1ZCtHRhpZ5zYRjhRC9eCbjx9VrFax0JD=
C
/FfwWigmrW0Y0Q=3D=3D
     <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:X509Certifi=
cate</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:X509Data</sp=
an>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:KeyInfo</span=
>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">KeyDescriptor</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">KeyDescriptor</spa=
n> <span class=3D"hljs-attr">use</span>=3D<span class=3D"hljs-string">"encr=
yption"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:KeyInfo</span>=
 <span class=3D"hljs-attr">xmlns:ds</span>=3D<span class=3D"hljs-string">"h=
ttp://www.w3.org/2000/09/xmldsig#"</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:X509Data</spa=
n>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:X509Certific=
ate</span>&gt;</span>
MIICQDCCAakCBEeNB0swDQYJKoZIhvcNAQEEBQAwZzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkN=
h
bGlmb3JuaWExFDASBgNVBAcTC1NhbnRhIENsYXJhMQwwCgYDVQQKEwNTdW4xEDAOBgNVBAsTB09=
w
ZW5TU08xDTALBgNVBAMTBHRlc3QwHhcNMDgwMTE1MTkxOTM5WhcNMTgwMTEyMTkxOTM5WjBnMQs=
w
CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEUMBIGA1UEBxMLU2FudGEgQ2xhcmExDDA=
K
BgNVBAoTA1N1bjEQMA4GA1UECxMHT3BlblNTTzENMAsGA1UEAxMEdGVzdDCBnzANBgkqhkiG9w0=
B
AQEFAAOBjQAwgYkCgYEArSQc/U75GB2AtKhbGS5piiLkmJzqEsp64rDxbMJ+xDrye0EN/q1U5Of=
+
RkDsaN/igkAvV1cuXEgTL6RlafFPcUX7QxDhZBhsYF9pbwtMzi4A4su9hnxIhURebGEmxKW9qJN=
Y
Js0Vo5+IgjxuEWnjnnVgHTs1+mq5QYTA7E6ZyL8CAwEAATANBgkqhkiG9w0BAQQFAAOBgQB3Pw/=
U
QzPKTPTYi9upbFXlrAKMwtFf2OW4yvGWWvlcwcNSZJmTJ8ARvVYOMEVNbsT4OFcfu2/PeYoAdiD=
A
cGy/F2Zuj8XJJpuQRSE6PtQqBuDEHjjmOQJ0rV/r8mO1ZCtHRhpZ5zYRjhRC9eCbjx9VrFax0JD=
C
/FfwWigmrW0Y0Q=3D=3D
     <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:X509Certifi=
cate</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:X509Data</sp=
an>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:KeyInfo</span=
>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">EncryptionMethod<=
/span> <span class=3D"hljs-attr">Algorithm</span>=3D<span class=3D"hljs-str=
ing">"http://www.w3.org/2001/04/xmlenc#aes128-cbc"</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">xenc:KeySize</sp=
an> <span class=3D"hljs-attr">xmlns:xenc</span>=3D<span class=3D"hljs-strin=
g">"http://www.w3.org/2001/04/xmlenc#"</span>
      &gt;</span>128<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name"=
>xenc:KeySize</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">EncryptionMethod=
</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">KeyDescriptor</sp=
an>&gt;</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">RoleDescriptor</sp=
an>&gt;</span></pre></li><li class=3D"step"><p>
        Edit <code class=3D"filename">~/fedlet/sp-extended.xml</code> to us=
e the test
        certificate for the attribute query.
       </p><p>
        Change the following, assuming your circle of trust is called
        <code class=3D"literal">cot</code>:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint xml=
 hljs"><span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeQuer=
yConfig</span> <span class=3D"hljs-attr">metaAlias</span>=3D<span class=3D"=
hljs-string">"/attrQuery"</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span>=
 <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"signi=
ngCertAlias"</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>=
&gt;</span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span=
>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span>=
 <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"encry=
ptionCertAlias"</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>=
&gt;</span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span=
>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span>=
 <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantN=
ameIDEncrypted"</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>=
&gt;</span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span=
>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span>=
 <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"cotli=
st"</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>=
&gt;</span>cot<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value=
</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span=
>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">AttributeQueryConfi=
g</span>&gt;</span></pre><p>
        To:
       </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Co=
py code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"f=
a fa-files-o"></span></span></div><pre class=3D"codelisting prettyprint xml=
 hljs"><span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeQuer=
yConfig</span> <span class=3D"hljs-attr">metaAlias</span>=3D<span class=3D"=
hljs-string">"/attrQuery"</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span>=
 <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"signi=
ngCertAlias"</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>=
&gt;</span>test<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Valu=
e</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span=
>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span>=
 <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"encry=
ptionCertAlias"</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>=
&gt;</span>test<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Valu=
e</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span=
>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span>=
 <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantN=
ameIDEncrypted"</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>=
&gt;</span>true<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Valu=
e</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span=
>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span>=
 <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"cotli=
st"</span>&gt;</span>
        <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>=
&gt;</span>cot<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value=
</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span=
>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">AttributeQueryConfi=
g</span>&gt;</span></pre></li><li class=3D"step"><p>
        In the OpenAM Console, under Federation &gt; Entity Providers, dele=
te
        the existing configuration for your new Fedlet.
       </p></li><li class=3D"step"><p>
        Make a copy of <code class=3D"filename">sp-extended.xml</code>
        called <code class=3D"filename">sp-extended-copy.xml</code>
        and set <code class=3D"literal">hosted=3D"0"</code> in the root ele=
ment of the copy.
       </p><p>
        Use the copy, <code class=3D"filename">sp-extended-copy.xml</code>,
        when importing the Fedlet configuration into OpenAM.
        OpenAM must register the Fedlet
        as a <span class=3D"emphasis"><em>remote</em></span> service provid=
er.
       </p></li><li class=3D"step"><p>
        Under Federation &gt; Entity Providers, click Import Entity... and
        import your updated Fedlet configuration.
       </p><p>
        This ensures OpenAM has the correct service provider configuration
        for your new Fedlet.
       </p></li><li class=3D"step"><p>
        Restart the Fedlet or the container where it is deployed.
       </p></li></ol></li><li class=3D"step"><p>
      Try the Attribute Query test.
     </p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>
        Access the Fedlet.
       </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-fedlet-=
sso-request"><a class=3D"fancybox cboxElement" href=3D"https://backstage.fo=
rgerock.com/docs/openam/13.5/dev-guide/images/fedlet-sso-request.png"><img =
class=3D"img-responsive center-block" data-toggle=3D"tooltip" src=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_fedlet-ss=
o-request.png" align=3D"middle" height=3D"237" alt=3D"Home page for demo Fe=
dlet" title=3D"" data-original-title=3D"The home page for the demo Fedlet l=
ets you try Fedlet (SP)
         initiated and IDP initiated single sign-on and single logout."></a=
></div></li><li class=3D"step"><p>
        Try SSO with username <code class=3D"literal">demo</code>, password
        <code class=3D"literal">changeit</code>.
       </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-fedlet-=
sso-response"><a class=3D"fancybox cboxElement" href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/images/fedlet-sso-response.png"><im=
g class=3D"img-responsive center-block" data-toggle=3D"tooltip" src=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_fedlet-=
sso-response.png" align=3D"middle" height=3D"584" alt=3D"Fedlet SSO respons=
e page" title=3D"" data-original-title=3D"After signing in, you should see =
information about the
         authentication and also other tests to try."></a></div></li><li cl=
ass=3D"step"><p>
        Click Fedlet Attribute Query, set the attributes in the Attribute
        Query page to match the mapped attributes, and then click Submit.
       </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-fedlet-=
attr-query-request"><a class=3D"fancybox cboxElement" href=3D"https://backs=
tage.forgerock.com/docs/openam/13.5/dev-guide/images/fedlet-attr-query-requ=
est.png"><img class=3D"img-responsive center-block" data-toggle=3D"tooltip"=
 src=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/t=
humb_fedlet-attr-query-request.png" align=3D"middle" height=3D"280" alt=3D"=
Fedlet Attribute Query request page" title=3D"" data-original-title=3D"Afte=
r signing in, you can try the Attribute Query demo."></a></div></li><li cla=
ss=3D"step"><p>
        Check that you see the attribute values in the response.
       </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-fedlet-=
attr-query-response"><a class=3D"fancybox cboxElement" href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/images/fedlet-attr-query-res=
ponse.png"><img class=3D"img-responsive center-block" data-toggle=3D"toolti=
p" src=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images=
/thumb_fedlet-attr-query-response.png" align=3D"middle" height=3D"182" alt=
=3D"Fedlet Attribute Query response page" title=3D"" data-original-title=3D=
"The responses for each attribute value in this case should be
         demo."></a></div></li></ol></li></ol></div></div></div><div class=
=3D"section" id=3D"fedlet-xacml-pdp"><div class=3D"titlepage"><div><div><h4=
 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#fedlet-xacml-pdp">6.1.1.5.&nbsp;=
Querying an XACML Policy Decision Point</a></h4></div></div></div><p>
    You can use the Fedlet to query an XACML policy decision point on an
    identity provider. The identity provider must have a policy configured,=
 must
    be configured with the Policy Decision Point (<code class=3D"literal">X=
ACML PDP</code>)
    type, and must have a SAML v2.0 SOAP Binding PDP handler configured.
   </p><p>
    Perform the following steps:
   </p><div class=3D"procedure" id=3D"try-fedlet-xacml-query"><div class=3D=
"procedure-inner"><div class=3D"procedure-title"><a class=3D"self-link" hre=
f=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#=
try-fedlet-xacml-query">To Use the Fedlet to Query an XACML Policy Decision=
 Point</a></div><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>
      Configure a policy on the hosted identity provider.
     </p><p>
      OpenAM uses the policy to make the decision whether to permit or deny
      access to a resource. For the purpose of the demonstration, configure=
 a
      simple policy that allows all authenticated users HTTP GET access on
      <code class=3D"literal">http://www.example.com/</code>.
     </p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>
        Log in to OpenAM console as an administrator, such as
        <code class=3D"literal">amadmin</code>.
       </p></li><li class=3D"step"><p>
        Access the policy editor under
        Realms &gt; <em class=3D"replaceable">Realm Name</em> &gt; Authoriz=
ation.
       </p></li><li class=3D"step"><p>
        Choose an application that allows the resource pattern
        <code class=3D"literal">http://www.example.com/*</code>,
        and HTTP GET as an action.
       </p><p>
        If no application exists in the realm, add a new application
        for the resource pattern <code class=3D"literal">http://www.example=
.com/*</code>.
       </p></li><li class=3D"step"><p>
        Add a new policy with the following characteristics.
       </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"=
list-style-type: disc; "><li class=3D"listitem"><p>
          Resource pattern: <code class=3D"literal">http://www.example.com/=
*</code>
         </p></li><li class=3D"listitem"><p>
          Actions: allow <code class=3D"literal">GET</code>
         </p></li><li class=3D"listitem"><p>
          Subject conditions: <code class=3D"literal">Authenticated Users</=
code>
         </p></li></ul></div></li></ol></li><li class=3D"step"><p>
      Add the Policy Decision Point type to the identity provider.
     </p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>
        Under Federation &gt; Entity Providers, select the identity provide=
r,
        and then click New, even though you plan to change the configuratio=
n
        rather than create a new provider.
       </p></li><li class=3D"step"><p>
        Select the protocol of the provider: <code class=3D"literal">SAMLv2=
</code>.
       </p></li><li class=3D"step"><p>
        In the Create SAMLv2 Entity Provider page, do the following.
       </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"=
list-style-type: disc; "><li class=3D"listitem"><p>
          Set the Realm.
         </p></li><li class=3D"listitem"><p>
          Set the Entity Identifier to the entity identifier for the hosted
          identity provider.
         </p></li><li class=3D"listitem"><p>
          In the XACML Policy Decision Point section, set the Meta Alias fo=
r
          example to <code class=3D"literal">/pdp</code>.
         </p></li><li class=3D"listitem"><p>
          Click Create to save your changes.
         </p><p>
          Disregard any error messages stating that the entity already
          exists.
         </p></li></ul></div><p>
        <code class=3D"literal">XACML PDP</code> now appears in the list of=
 Types for
        your identity provider.
       </p></li></ol></li><li class=3D"step"><p>
      Add the PDP handler for the SAML v2.0 SOAP Binding.
     </p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>
        Navigate to Configure &gt; Global Services, click SAMLv2 SOAP Bindi=
ng,
        and then click New.
       </p></li><li class=3D"step"><p>
        Set the new key to match the meta alias you used when adding the
        XACML PDP type to the identity provider configuration, for example
        <code class=3D"literal">/pdp</code>.
       </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"=
list-style-type: disc; "><li class=3D"listitem"><p>
          Key: <code class=3D"literal">/pdp</code>
         </p></li><li class=3D"listitem"><p>
          Class: <code class=3D"literal">com.sun.identity.xacml.plugins.XAC=
MLAuthzDecisionQueryHandler</code>
         </p></li></ul></div><p>
        Click OK. (Your changes are not saved yet.)
       </p></li><li class=3D"step"><p>
        Click Save to actually save the new Key:Class pair.
       </p></li></ol></li><li class=3D"step"><p>
      Create the Fedlet's configuration files as described in
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#create-config-files-for-a-java-fedlet" title=3D"=
To Create Configuration Files for a Fedlet">"To Create Configuration Files =
for a Fedlet"</a>.
     </p><p>
      This step creates Fedlet configuration files with updated identity
      provider metadata. If you already created a Fedlet, either use a diff=
erent
      name, or delete the existing Fedlet.
     </p></li><li class=3D"step"><p>
      Deploy the new Fedlet as described in
      <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#install-fedlet-as-demo" title=3D"To Install and =
Configure the Fedlet as a Demo Application">"To Install and Configure the F=
edlet as a Demo Application"</a>.
     </p></li><li class=3D"step"><p>
      Try the XACML Query test.
     </p><ol type=3D"a" class=3D"substeps"><li class=3D"step"><p>
        Access the Fedlet.
       </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-fedlet-=
sso-request-xacml"><a class=3D"fancybox cboxElement" href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/images/fedlet-sso-request.png"=
><img class=3D"img-responsive center-block" data-toggle=3D"tooltip" src=3D"=
https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_fed=
let-sso-request.png" align=3D"middle" height=3D"237" alt=3D"Home page for d=
emo Fedlet" title=3D"" data-original-title=3D"The home page for the demo Fe=
dlet lets you try Fedlet (SP)
         initiated and IDP initiated single sign-on and single logout."></a=
></div></li><li class=3D"step"><p>
        Try SSO with username <code class=3D"literal">demo</code>, password
        <code class=3D"literal">changeit</code>.
       </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-fedlet-=
sso-response-xacml"><a class=3D"fancybox cboxElement" href=3D"https://backs=
tage.forgerock.com/docs/openam/13.5/dev-guide/images/fedlet-sso-response.pn=
g"><img class=3D"img-responsive center-block" data-toggle=3D"tooltip" src=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb=
_fedlet-sso-response.png" align=3D"middle" height=3D"584" alt=3D"Fedlet SSO=
 response page" title=3D"" data-original-title=3D"After signing in, you sho=
uld see information about the
         authentication and also other tests to try."></a></div></li><li cl=
ass=3D"step"><p>
        Click XACML Attribute Query, set the Resource URL in the XACML
        Query page to <code class=3D"literal">http://www.example.com/</code=
>, and then
        click Submit.
       </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-fedlet-=
xacml-query-request"><a class=3D"fancybox cboxElement" href=3D"https://back=
stage.forgerock.com/docs/openam/13.5/dev-guide/images/fedlet-xacml-query-re=
quest.png"><img class=3D"img-responsive center-block" data-toggle=3D"toolti=
p" src=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images=
/thumb_fedlet-xacml-query-request.png" align=3D"middle" height=3D"193" alt=
=3D"Fedlet XACML Query request page" title=3D"" data-original-title=3D"Afte=
r signing in, you can try the XACML Query demo."></a></div></li><li class=
=3D"step"><p>
        Check that you see the permit decision in the response.
       </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-fedlet-=
xacml-query-response"><a class=3D"fancybox cboxElement" href=3D"https://bac=
kstage.forgerock.com/docs/openam/13.5/dev-guide/images/fedlet-xacml-query-r=
esponse.png"><img class=3D"img-responsive center-block" data-toggle=3D"tool=
tip" src=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/imag=
es/thumb_fedlet-xacml-query-response.png" align=3D"middle" height=3D"113" a=
lt=3D"Fedlet XACML Query response page" title=3D"" data-original-title=3D"T=
he response is to permit the user to access the resource."></a></div></li><=
/ol></li></ol></div></div></div></div><div class=3D"section" id=3D"fedlet-s=
igning-encryption"><div class=3D"titlepage"><div><div><h3 class=3D"title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#fedlet-signing-encryption">6.1.2.&nbsp;Enabling Si=
gning and Encryption in a Fedlet</a></h3></div></div></div><p>By default wh=
en you create the Java Fedlet, signing and encryption are
  not configured. You can however set up OpenAM and the Fedlet to sign and
  to verify XML signatures and to encrypt and to decrypt data such as SAML
  assertions. If you have tried the Attribute Query demonstration, then you
  have already configured the Fedlet to request signing and encryption usin=
g
  the test keys from the identity provider.</p><div class=3D"itemizedlist">=
<p>Enabling signing and encryption for the Java Fedlet involves the
   following high level stages:</p><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>Before you create the Fedlet=
, configure the IDP to sign and encrypt
    data. See Federation &gt; Entity Providers &gt; <em class=3D"replaceabl=
e">IDP
    Name</em> &gt; Signing and Encryption in the OpenAM console.</p><p>For =
evaluation, you can use the <code class=3D"literal">test</code> certificate
    delivered with OpenAM.</p></li><li class=3D"listitem"><p>Initially depl=
oy and configure the Fedlet, but do not use the Fedlet
    until you finish.</p></li><li class=3D"listitem"><p>On the Fedlet side =
set up a JKS keystore used for signing and
    encryption. For evaluation, you can use copy the
    <code class=3D"filename">keystore.jks</code> file delivered with OpenAM=
. You can find
    the file under the configuration directory for OpenAM, such as
    <code class=3D"filename">$HOME/openam/openam/</code> for a server insta=
nce with
    base URI <code class=3D"literal">openam</code>. The built-in keystore i=
ncludes the
    <code class=3D"literal">test</code> certificate.</p><p>You must also se=
t up <code class=3D"filename">.storepass</code> and
    <code class=3D"filename">.keypass</code> files using the
    <code class=3D"filename">fedletEncode.jsp</code> page, such as
    <code class=3D"literal">http://openam.example.com:8080/fedlet/fedletEnc=
ode.jsp</code>, to
    encode passwords on the Fedlet side. The passwords for the test keystor=
e
    and private key are both <code class=3D"literal">changeit</code>.</p></=
li><li class=3D"listitem"><p>Configure the Fedlet to perform signing and en=
cryption by ensuring
    the Fedlet has access to the keystore, and by updating the SP metadata
    for the Fedlet.</p></li><li class=3D"listitem"><p>Import the updated SP=
 metadata into the IDP to replace the default
    Fedlet configuration.</p></li><li class=3D"listitem"><p>Restart the Fed=
let or container in which the Fedlet runs for the
    changes you made on the Fedlet side to take effect.</p></li></ul></div>=
<div class=3D"procedure" id=3D"fedlet-conf-signing-encryption"><div class=
=3D"procedure-inner"><div class=3D"procedure-title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#fedlet-conf-signing-encryption">To Configure the Fedlet For Signing &amp=
; Encryption</a></div><p>The <code class=3D"filename">FederationConfig.prop=
erties</code> file specifies
   the paths to the JKS keystore holding the signing or encryption keys for
   the Fedlet, the keystore password file, and the private key password
   file.</p><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>After =
setting up your keystore and password files as described above,
    edit the properties file in the configuration directory, such as
    <code class=3D"filename">$HOME/fedlet/FederationConfig.properties</code=
>, to point
    to the keystore and password files.</p></li><li class=3D"step"><p>Expor=
t the certificate to use for signing and encryption
    purposes.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy command to clipboard"><span class=3D"btn-copy-cmdline"><span class=
=3D"fa fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint no=
highlight">$ <strong class=3D"userinput">keytool -export -rfc -keystore key=
store.jks -alias test</strong>
<em class=3D"computeroutput">Enter keystore password:
-----BEGIN CERTIFICATE-----
MIICQDCCAakCBEeNB0swDQYJKoZIhvcNAQEEBQAwZzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkN=
h
bGlmb3JuaWExFDASBgNVBAcTC1NhbnRhIENsYXJhMQwwCgYDVQQKEwNTdW4xEDAOBgNVBAsTB09=
w
ZW5TU08xDTALBgNVBAMTBHRlc3QwHhcNMDgwMTE1MTkxOTM5WhcNMTgwMTEyMTkxOTM5WjBnMQs=
w
CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEUMBIGA1UEBxMLU2FudGEgQ2xhcmExDDA=
K
BgNVBAoTA1N1bjEQMA4GA1UECxMHT3BlblNTTzENMAsGA1UEAxMEdGVzdDCBnzANBgkqhkiG9w0=
B
AQEFAAOBjQAwgYkCgYEArSQc/U75GB2AtKhbGS5piiLkmJzqEsp64rDxbMJ+xDrye0EN/q1U5Of=
+
RkDsaN/igkAvV1cuXEgTL6RlafFPcUX7QxDhZBhsYF9pbwtMzi4A4su9hnxIhURebGEmxKW9qJN=
Y
Js0Vo5+IgjxuEWnjnnVgHTs1+mq5QYTA7E6ZyL8CAwEAATANBgkqhkiG9w0BAQQFAAOBgQB3Pw/=
U
QzPKTPTYi9upbFXlrAKMwtFf2OW4yvGWWvlcwcNSZJmTJ8ARvVYOMEVNbsT4OFcfu2/PeYoAdiD=
A
cGy/F2Zuj8XJJpuQRSE6PtQqBuDEHjjmOQJ0rV/r8mO1ZCtHRhpZ5zYRjhRC9eCbjx9VrFax0JD=
C
/FfwWigmrW0Y0Q=3D=3D</em></pre></li><li class=3D"step"><p>Edit the standard=
 metadata file for the Fedlet, such as
    <code class=3D"filename">$HOME/fedlet/sp.xml</code>, to include the cer=
tificate
    in KeyDescriptor elements, that are children of the SPSSODescriptor
    element.</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span clas=
s=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettypri=
nt xml hljs"><span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">EntityD=
escriptor</span>
 <span class=3D"hljs-attr">xmlns</span>=3D<span class=3D"hljs-string">"urn:=
oasis:names:tc:SAML:2.0:metadata"</span>
 <span class=3D"hljs-attr">entityID</span>=3D<span class=3D"hljs-string">"h=
ttp://www.example.com:8080/fedlet"</span>&gt;</span>
 <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">SPSSODescriptor</sp=
an>
  <span class=3D"hljs-attr">AuthnRequestsSigned</span>=3D<span class=3D"hlj=
s-string">"true"</span>
  <span class=3D"hljs-attr">WantAssertionsSigned</span>=3D<span class=3D"hl=
js-string">"true"</span>
  <span class=3D"hljs-attr">protocolSupportEnumeration</span>=3D<span class=
=3D"hljs-string">"urn:oasis:names:tc:SAML:2.0:protocol"</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">KeyDescriptor</spa=
n> <span class=3D"hljs-attr">use</span>=3D<span class=3D"hljs-string">"sign=
ing"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:KeyInfo</span>=
 <span class=3D"hljs-attr">xmlns:ds</span>=3D<span class=3D"hljs-string">"h=
ttp://www.w3.org/2000/09/xmldsig#"</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:X509Data</spa=
n>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:X509Certific=
ate</span>&gt;</span>
MIICQDCCAakCBEeNB0swDQYJKoZIhvcNAQEEBQAwZzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkN=
h
bGlmb3JuaWExFDASBgNVBAcTC1NhbnRhIENsYXJhMQwwCgYDVQQKEwNTdW4xEDAOBgNVBAsTB09=
w
ZW5TU08xDTALBgNVBAMTBHRlc3QwHhcNMDgwMTE1MTkxOTM5WhcNMTgwMTEyMTkxOTM5WjBnMQs=
w
CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEUMBIGA1UEBxMLU2FudGEgQ2xhcmExDDA=
K
BgNVBAoTA1N1bjEQMA4GA1UECxMHT3BlblNTTzENMAsGA1UEAxMEdGVzdDCBnzANBgkqhkiG9w0=
B
AQEFAAOBjQAwgYkCgYEArSQc/U75GB2AtKhbGS5piiLkmJzqEsp64rDxbMJ+xDrye0EN/q1U5Of=
+
RkDsaN/igkAvV1cuXEgTL6RlafFPcUX7QxDhZBhsYF9pbwtMzi4A4su9hnxIhURebGEmxKW9qJN=
Y
Js0Vo5+IgjxuEWnjnnVgHTs1+mq5QYTA7E6ZyL8CAwEAATANBgkqhkiG9w0BAQQFAAOBgQB3Pw/=
U
QzPKTPTYi9upbFXlrAKMwtFf2OW4yvGWWvlcwcNSZJmTJ8ARvVYOMEVNbsT4OFcfu2/PeYoAdiD=
A
cGy/F2Zuj8XJJpuQRSE6PtQqBuDEHjjmOQJ0rV/r8mO1ZCtHRhpZ5zYRjhRC9eCbjx9VrFax0JD=
C
/FfwWigmrW0Y0Q=3D=3D
     <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:X509Certifi=
cate</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:X509Data</sp=
an>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:KeyInfo</span=
>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">KeyDescriptor</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">KeyDescriptor</spa=
n> <span class=3D"hljs-attr">use</span>=3D<span class=3D"hljs-string">"encr=
yption"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:KeyInfo</span>=
 <span class=3D"hljs-attr">xmlns:ds</span>=3D<span class=3D"hljs-string">"h=
ttp://www.w3.org/2000/09/xmldsig#"</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:X509Data</spa=
n>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">ds:X509Certific=
ate</span>&gt;</span>
MIICQDCCAakCBEeNB0swDQYJKoZIhvcNAQEEBQAwZzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkN=
h
bGlmb3JuaWExFDASBgNVBAcTC1NhbnRhIENsYXJhMQwwCgYDVQQKEwNTdW4xEDAOBgNVBAsTB09=
w
ZW5TU08xDTALBgNVBAMTBHRlc3QwHhcNMDgwMTE1MTkxOTM5WhcNMTgwMTEyMTkxOTM5WjBnMQs=
w
CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEUMBIGA1UEBxMLU2FudGEgQ2xhcmExDDA=
K
BgNVBAoTA1N1bjEQMA4GA1UECxMHT3BlblNTTzENMAsGA1UEAxMEdGVzdDCBnzANBgkqhkiG9w0=
B
AQEFAAOBjQAwgYkCgYEArSQc/U75GB2AtKhbGS5piiLkmJzqEsp64rDxbMJ+xDrye0EN/q1U5Of=
+
RkDsaN/igkAvV1cuXEgTL6RlafFPcUX7QxDhZBhsYF9pbwtMzi4A4su9hnxIhURebGEmxKW9qJN=
Y
Js0Vo5+IgjxuEWnjnnVgHTs1+mq5QYTA7E6ZyL8CAwEAATANBgkqhkiG9w0BAQQFAAOBgQB3Pw/=
U
QzPKTPTYi9upbFXlrAKMwtFf2OW4yvGWWvlcwcNSZJmTJ8ARvVYOMEVNbsT4OFcfu2/PeYoAdiD=
A
cGy/F2Zuj8XJJpuQRSE6PtQqBuDEHjjmOQJ0rV/r8mO1ZCtHRhpZ5zYRjhRC9eCbjx9VrFax0JD=
C
/FfwWigmrW0Y0Q=3D=3D
     <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:X509Certifi=
cate</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:X509Data</sp=
an>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ds:KeyInfo</span=
>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">EncryptionMethod<=
/span> <span class=3D"hljs-attr">Algorithm</span>=3D<span class=3D"hljs-str=
ing">"http://www.w3.org/2001/04/xmlenc#aes128-cbc"</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">xenc:KeySize</sp=
an> <span class=3D"hljs-attr">xmlns:xenc</span>=3D<span class=3D"hljs-strin=
g">"http://www.w3.org/2001/04/xmlenc#"</span>&gt;</span>
     128
    <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">xenc:KeySize</s=
pan>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">EncryptionMethod=
</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">KeyDescriptor</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">SingleLogoutServic=
e</span>
   <span class=3D"hljs-attr">Binding</span>=3D<span class=3D"hljs-string">"=
urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect"</span>
   <span class=3D"hljs-attr">Location</span>=3D<span class=3D"hljs-string">=
"http://www.example.com:8080/fedlet/fedletSloRedirect"</span>
   <span class=3D"hljs-attr">ResponseLocation</span>=3D<span class=3D"hljs-=
string">"http://www.example.com:8080/fedlet/fedletSloRedirect"</span> /&gt;=
</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">SingleLogoutServic=
e</span>
   <span class=3D"hljs-attr">Binding</span>=3D<span class=3D"hljs-string">"=
urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"</span>
   <span class=3D"hljs-attr">Location</span>=3D<span class=3D"hljs-string">=
"http://www.example.com:8080/fedlet/fedletSloPOST"</span>
   <span class=3D"hljs-attr">ResponseLocation</span>=3D<span class=3D"hljs-=
string">"http://www.example.com:8080/fedlet/fedletSloPOST"</span> /&gt;</sp=
an>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">SingleLogoutServic=
e</span>
   <span class=3D"hljs-attr">Binding</span>=3D<span class=3D"hljs-string">"=
urn:oasis:names:tc:SAML:2.0:bindings:SOAP"</span>
   <span class=3D"hljs-attr">Location</span>=3D<span class=3D"hljs-string">=
"http://www.example.com:8080/fedlet/fedletSloSoap"</span> /&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">NameIDFormat</span=
>&gt;</span>
   urn:oasis:names:tc:SAML:2.0:nameid-format:transient
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">NameIDFormat</spa=
n>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AssertionConsumerS=
ervice</span>
   <span class=3D"hljs-attr">index</span>=3D<span class=3D"hljs-string">"0"=
</span>
   <span class=3D"hljs-attr">isDefault</span>=3D<span class=3D"hljs-string"=
>"true"</span>
   <span class=3D"hljs-attr">Binding</span>=3D<span class=3D"hljs-string">"=
urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST"</span>
   <span class=3D"hljs-attr">Location</span>=3D<span class=3D"hljs-string">=
"http://www.example.com:8080/fedlet/fedletapplication"</span> /&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AssertionConsumerS=
ervice</span>
   <span class=3D"hljs-attr">index</span>=3D<span class=3D"hljs-string">"1"=
</span>
   <span class=3D"hljs-attr">Binding</span>=3D<span class=3D"hljs-string">"=
urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact"</span>
   <span class=3D"hljs-attr">Location</span>=3D<span class=3D"hljs-string">=
"http://www.example.com:8080/fedlet/fedletapplication"</span> /&gt;</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">SPSSODescriptor</s=
pan>&gt;</span>
 <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">RoleDescriptor</spa=
n>
  <span class=3D"hljs-attr">xmlns:xsi</span>=3D<span class=3D"hljs-string">=
"http://www.w3.org/2001/XMLSchema-instance"</span>
  <span class=3D"hljs-attr">xmlns:query</span>=3D<span class=3D"hljs-string=
">"urn:oasis:names:tc:SAML:metadata:ext:query"</span>
  <span class=3D"hljs-attr">xsi:type</span>=3D<span class=3D"hljs-string">"=
query:AttributeQueryDescriptorType"</span>
  <span class=3D"hljs-attr">protocolSupportEnumeration</span>=3D<span class=
=3D"hljs-string">"urn:oasis:names:tc:SAML:2.0:protocol"</span>&gt;</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">RoleDescriptor</sp=
an>&gt;</span>
 <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">XACMLAuthzDecisionQ=
ueryDescriptor</span>
  <span class=3D"hljs-attr">WantAssertionsSigned</span>=3D<span class=3D"hl=
js-string">"false"</span>
  <span class=3D"hljs-attr">protocolSupportEnumeration</span>=3D<span class=
=3D"hljs-string">"urn:oasis:names:tc:SAML:2.0:protocol"</span> /&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">EntityDescriptor</s=
pan>&gt;</span></pre></li><li class=3D"step"><p>Edit the extended metadata =
file for the Fedlet, such as
    <code class=3D"filename">$HOME/fedlet/sp-extended.xml</code>, to set th=
e certificate
    alias names to the alias for the Fedlet certificate, and the
    <code class=3D"literal">want*Signed</code> and <code class=3D"literal">=
want*Encrypted</code> values
    to <code class=3D"literal">true</code>.</p><p>If you reformat the file,=
 take care not to add white space around
    string values in elements.</p><div class=3D"zero-clipboard hidden-xs hi=
dden-print" title=3D"Copy code to clipboard"><span class=3D"btn-copy-codeli=
sting"><span class=3D"fa fa-files-o"></span></span></div><pre class=3D"code=
listing prettyprint xml hljs"><span class=3D"hljs-tag">&lt;<span class=3D"h=
ljs-name">EntityConfig</span> <span class=3D"hljs-attr">xmlns</span>=3D<spa=
n class=3D"hljs-string">"urn:sun:fm:SAML:2.0:entityconfig"</span>
 <span class=3D"hljs-attr">xmlns:fm</span>=3D<span class=3D"hljs-string">"u=
rn:sun:fm:SAML:2.0:entityconfig"</span> <span class=3D"hljs-attr">hosted</s=
pan>=3D<span class=3D"hljs-string">"1"</span>
 <span class=3D"hljs-attr">entityID</span>=3D<span class=3D"hljs-string">"h=
ttp://www.example.com:8080/fedlet"</span>&gt;</span>
 <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">SPSSOConfig</span> =
<span class=3D"hljs-attr">metaAlias</span>=3D<span class=3D"hljs-string">"/=
sp"</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"descrip=
tion"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"signing=
CertAlias"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>test<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"encrypt=
ionCertAlias"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>test<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"basicAu=
thOn"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>false<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"basicAu=
thUser"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"basicAu=
thPassword"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"autofed=
Enabled"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>false<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"autofed=
Attribute"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"transie=
ntUser"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>anonymous<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Valu=
e</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"spAdapt=
er"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"spAdapt=
erEnv"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"fedletA=
dapter"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>com.sun.identity.saml2.plugins.DefaultFedletAdapter<span class=3D"hlj=
s-tag">&lt;/<span class=3D"hljs-name">Value</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"fedletA=
dapterEnv"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"spAccou=
ntMapper"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>com.sun.identity.saml2.plugins.DefaultLibrarySPAccountMapper<span cla=
ss=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"useName=
IDAsSPUserID"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>false<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"spAttri=
buteMapper"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>com.sun.identity.saml2.plugins.DefaultSPAttributeMapper<span class=3D=
"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"spAuthn=
contextMapper"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>com.sun.identity.saml2.plugins.DefaultSPAuthnContextMapper<span class=
=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"spAuthn=
contextClassrefMapping"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>
   &gt;</span>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTrans=
port|0|default<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value=
</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"spAuthn=
contextComparisonType"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>exact<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"attribu=
teMap"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>*=3D*<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"saml2Au=
thModuleName"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"localAu=
thURL"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"interme=
diateUrl"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"default=
RelayState"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"appLogo=
utUrl"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>http://www.example.com:8080/fedlet/logout<span class=3D"hljs-tag">&lt=
;/<span class=3D"hljs-name">Value</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"asserti=
onTimeSkew"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>300<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</spa=
n>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantAtt=
ributeEncrypted"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>true<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantAss=
ertionEncrypted"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>true<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantNam=
eIDEncrypted"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>true<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantPOS=
TResponseSigned"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantArt=
ifactResponseSigned"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantLog=
outRequestSigned"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantLog=
outResponseSigned"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantMNI=
RequestSigned"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantMNI=
ResponseSigned"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"respons=
eArtifactMessageEncoding"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>URI<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</spa=
n>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"cotlist=
"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>fedlet-cot<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Val=
ue</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"saeAppS=
ecretList"</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"saeSPUr=
l"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"saeSPLo=
goutUrl"</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"ECPRequ=
estIDPListFinderImpl"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>com.sun.identity.saml2.plugins.ECPIDPFinder<span class=3D"hljs-tag">&=
lt;/<span class=3D"hljs-name">Value</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"ECPRequ=
estIDPList"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"ECPRequ=
estIDPListGetComplete"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"enableI=
DPProxy"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>false<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"idpProx=
yList"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"idpProx=
yCount"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>0<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>=
&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"useIntr=
oductionForIDPProxy"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>false<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"spSessi=
onSyncEnabled"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>false<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"relaySt=
ateUrlList"</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">SPSSOConfig</span>=
&gt;</span>
 <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeQueryConfi=
g</span> <span class=3D"hljs-attr">metaAlias</span>=3D<span class=3D"hljs-s=
tring">"/attrQuery"</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"signing=
CertAlias"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>test<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"encrypt=
ionCertAlias"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>test<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantNam=
eIDEncrypted"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>true<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"cotlist=
"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>fedlet-cot<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Val=
ue</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">AttributeQueryConf=
ig</span>&gt;</span>
 <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">XACMLAuthzDecisionQ=
ueryConfig</span> <span class=3D"hljs-attr">metaAlias</span>=3D<span class=
=3D"hljs-string">"/pep"</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"signing=
CertAlias"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>test<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"encrypt=
ionCertAlias"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>test<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"basicAu=
thOn"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>false<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"basicAu=
thUser"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"basicAu=
thPassword"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantXAC=
MLAuthzDecisionResponseSigned"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>false<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantAss=
ertionEncrypted"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>true<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
  <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> <=
span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"cotlist=
"</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;<=
/span>fedlet-cot<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Val=
ue</span>&gt;</span>
  <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&=
gt;</span>
 <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">XACMLAuthzDecision=
QueryConfig</span>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">EntityConfig</span>=
&gt;</span></pre></li><li class=3D"step"><p>
     Make a copy of <code class=3D"filename">sp-extended.xml</code>
     called <code class=3D"filename">sp-extended-copy.xml</code>
     and set <code class=3D"literal">hosted=3D"0"</code> in the root elemen=
t of the copy.
    </p><p>
     Use the copy, <code class=3D"filename">sp-extended-copy.xml</code>,
     when importing the Fedlet configuration into OpenAM.
     OpenAM must register the Fedlet
     as a <span class=3D"emphasis"><em>remote</em></span> service provider.
    </p></li><li class=3D"step"><p>In OpenAM console delete the original SP=
 entity configuration for the
    Fedlet, and then import the updated metadata for the new configuration =
into
    OpenAM on the IDP side.</p></li><li class=3D"step"><p>Restart the Fedle=
t or the container in which it runs in order for
    the Fedlet to pick up the changes to the configuration properties and t=
he
    metadata.</p></li></ol></div></div></div><div class=3D"section" id=3D"c=
ustomize-java-fedlet"><div class=3D"titlepage"><div><div><h3 class=3D"title=
"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#customize-java-fedlet">6.1.3.&nbsp;Customizing =
a Java Fedlet</a></h3></div></div></div><p>You can customize the Java Fedle=
t to perform many of the SAML v2.0
  service provider operations. The Java Fedlet has the SAML v2.0 capabiliti=
es
  identified in
  <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/i=
ndex.html#fedlet-saml2-features" class=3D"olink">"Fedlet Support for SAML v=
2.0 Features"</a> in the <em>Administration Guide</em>.</p><div class=3D"pr=
ocedure" id=3D"hello-world-with-fedlet"><div class=3D"procedure-inner"><div=
 class=3D"procedure-title"><a class=3D"self-link" href=3D"https://backstage=
.forgerock.com/docs/openam/13.5/dev-guide/index.html#hello-world-with-fedle=
t">To Add Your Application</a></div><div class=3D"variablelist"><p>The Fedl=
et includes the following files that you use when building
    your own service provider application based on the demo web application=
,
    including a set of JavaServer Pages (JSP) examples.</p><dl class=3D"var=
iablelist"><dt><span class=3D"term"><code class=3D"filename">conf/</code></=
span></dt><dd><p>Configuration files copied to <code class=3D"filename">$HO=
ME/fedlet</code> when
      you first deploy and configure the Fedlet. When deploying your applic=
ation,
      you can move these to an alternate location passed to the Java virtua=
l
      machine for the web application container at startup. For example, if
      you store the configuration under <code class=3D"filename">/export/fe=
dlet/</code>,
      then you could pass the following property to the JVM.</p><pre class=
=3D"literallayout">-Dcom.sun.identity.fedlet.home=3D/export/fedlet/conf</pr=
e><p>You do not need to include these files in your application.</p></dd><d=
t><span class=3D"term"><code class=3D"filename">fedletAttrQuery.jsp</code>,=
 </span><span class=3D"term"><code class=3D"filename">fedletAttrResp.jsp</c=
ode></span></dt><dd><p>Sample SAML attribute query and response handlers.</=
p></dd><dt><span class=3D"term"><code class=3D"filename">fedletEncode.jsp</=
code></span></dt><dd><p>Utility JSP to encode a password, such as the passw=
ord used to
      protect a Java keystore</p></dd><dt><span class=3D"term"><code class=
=3D"filename">fedletSampleApp.jsp</code>, </span><span class=3D"term"><code=
 class=3D"filename">index.jsp</code></span></dt><dd><p>Demo application. Yo=
u can remove these before deployment to replace
      them with your application.</p></dd><dt><span class=3D"term"><code cl=
ass=3D"filename">fedletXACMLQuery.jsp</code>, </span><span class=3D"term"><=
code class=3D"filename">fedletXACMLResp.jsp</code></span></dt><dd><p>Sample=
 SAML XACML query and response handlers.</p></dd><dt><span class=3D"term"><=
code class=3D"filename">logout.jsp</code></span></dt><dd><p>Utility page to=
 perform single log out</p></dd><dt><span class=3D"term"><code class=3D"fil=
ename">saml2/jsp/</code></span></dt><dd><p>JSPs to initiate single sign-on =
and single logout, and to handle
      errors, and also a JSP for obtaining Fedlet metadata,
      <code class=3D"filename">saml2/jsp/exportmetadata.jsp</code></p></dd>=
<dt><span class=3D"term"><code class=3D"filename">WEB-INF/classes/</code></=
span></dt><dd><p>Localized Java properties files for strings used in the Fe=
dlet user
      interface</p></dd><dt><span class=3D"term"><code class=3D"filename">W=
EB-INF/lib/</code></span></dt><dd><p>Fedlet libraries required by your appl=
ication</p></dd><dt><span class=3D"term"><code class=3D"filename">WEB-INF/w=
eb.xml</code></span></dt><dd><p>Fedlet web application configuration, showi=
ng how JSPs map to URLs
      used in the Fedlet. Add mappings for your application before
      deployment.</p><p>In the <code class=3D"filename">web.xml</code> mapp=
ings, your application must
      be mapped to <code class=3D"literal">/fedletapplication</code>, as th=
is is the
      assertion consumer URL set in the Fedlet metadata.</p><div class=3D"z=
ero-clipboard hidden-xs hidden-print" title=3D"Copy code to clipboard"><spa=
n class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></spa=
n></div><pre class=3D"codelisting prettyprint xml hljs"><span class=3D"hljs=
-tag">&lt;<span class=3D"hljs-name">servlet</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">servlet-name</sp=
an>&gt;</span>yourApp<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name=
">servlet-name</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">jsp-file</span>&=
gt;</span>/fedletSampleApp.jsp<span class=3D"hljs-tag">&lt;/<span class=3D"=
hljs-name">jsp-file</span>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">servlet</span>&gt;<=
/span>
<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">servlet-mapping</spa=
n>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">servlet-name</sp=
an>&gt;</span>yourApp<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name=
">servlet-name</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">url-pattern</spa=
n>&gt;</span>/fedletapplication<span class=3D"hljs-tag">&lt;/<span class=3D=
"hljs-name">url-pattern</span>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">servlet-mapping</sp=
an>&gt;</span></pre></dd></dl></div><p>Follow these steps for a very simple=
 demonstration of how to customize
   the Fedlet.</p><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>=
Backup <code class=3D"filename">fedletSampleApp.jsp</code>.</p><div class=
=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy command to clipboa=
rd"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span><=
/span></div><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=
=3D"userinput">cd /path/to/tomcat/webapps/fedlet/</strong>
$ <strong class=3D"userinput">cp fedletSampleApp.jsp fedletSampleApp.jsp.or=
ig</strong></pre></li><li class=3D"step"><p>Edit <code class=3D"filename">f=
edletSampleApp.jsp</code> to reduce it to a single
    redirection to <code class=3D"filename">myapp.jsp</code>. An implementa=
tion of the
    &lt;html&gt; element of the file follows below.</p><div class=3D"zero-c=
lipboard hidden-xs hidden-print" title=3D"Copy code to clipboard"><span cla=
ss=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></span></d=
iv><pre class=3D"codelisting prettyprint html hljs xml"><span class=3D"hljs=
-tag">&lt;<span class=3D"hljs-name">html</span>&gt;</span>
<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">head</span>&gt;</spa=
n>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">title</span>&gt;=
</span>Fedlet Sample Application<span class=3D"hljs-tag">&lt;/<span class=
=3D"hljs-name">title</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">meta</span> <spa=
n class=3D"hljs-attr">http-equiv</span>=3D<span class=3D"hljs-string">"Cont=
ent-Type"</span> <span class=3D"hljs-attr">content</span>=3D<span class=3D"=
hljs-string">"text/html; charset=3Diso-8859-1"</span> /&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">head</span>&gt;</sp=
an>

<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">body</span>&gt;</spa=
n>
<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">%</span>
    // <span class=3D"hljs-attr">BEGIN</span> <span class=3D"hljs-attr">:</=
span> <span class=3D"hljs-attr">following</span> <span class=3D"hljs-attr">=
code</span> <span class=3D"hljs-attr">is</span> <span class=3D"hljs-attr">a=
</span> <span class=3D"hljs-attr">must</span> <span class=3D"hljs-attr">for=
</span> <span class=3D"hljs-attr">Fedlet</span> (<span class=3D"hljs-attr">=
SP</span>) <span class=3D"hljs-attr">side</span> <span class=3D"hljs-attr">=
application</span>
    <span class=3D"hljs-attr">Map</span> <span class=3D"hljs-attr">map</spa=
n>;
    <span class=3D"hljs-attr">try</span> {
        // <span class=3D"hljs-attr">invoke</span> <span class=3D"hljs-attr=
">the</span> <span class=3D"hljs-attr">Fedlet</span> <span class=3D"hljs-at=
tr">processing</span> <span class=3D"hljs-attr">logic.</span> <span class=
=3D"hljs-attr">this</span> <span class=3D"hljs-attr">will</span> <span clas=
s=3D"hljs-attr">do</span> <span class=3D"hljs-attr">all</span> <span class=
=3D"hljs-attr">the</span>
        // <span class=3D"hljs-attr">necessary</span> <span class=3D"hljs-a=
ttr">processing</span> <span class=3D"hljs-attr">conforming</span> <span cl=
ass=3D"hljs-attr">to</span> <span class=3D"hljs-attr">SAML</span> <span cla=
ss=3D"hljs-attr">v2.0</span> <span class=3D"hljs-attr">specifications</span=
>,
        // <span class=3D"hljs-attr">such</span> <span class=3D"hljs-attr">=
as</span> <span class=3D"hljs-attr">XML</span> <span class=3D"hljs-attr">si=
gnature</span> <span class=3D"hljs-attr">validation</span>, <span class=3D"=
hljs-attr">Audience</span> <span class=3D"hljs-attr">and</span> <span class=
=3D"hljs-attr">Recipient</span>
        // <span class=3D"hljs-attr">validation</span> <span class=3D"hljs-=
attr">etc.</span>
        <span class=3D"hljs-attr">map</span> =3D <span class=3D"hljs-string=
">SPACSUtils.processResponseForFedlet(request,</span> <span class=3D"hljs-a=
ttr">response</span>,
            <span class=3D"hljs-attr">new</span> <span class=3D"hljs-attr">=
PrintWriter</span>(<span class=3D"hljs-attr">out</span>, <span class=3D"hlj=
s-attr">true</span>));
        <span class=3D"hljs-attr">response.sendRedirect</span>("<span class=
=3D"hljs-attr">myapp.jsp</span>");
    } <span class=3D"hljs-attr">catch</span> (<span class=3D"hljs-attr">SAM=
L2Exception</span> <span class=3D"hljs-attr">sme</span>) {
        <span class=3D"hljs-attr">SAMLUtils.sendError</span>(<span class=3D=
"hljs-attr">request</span>, <span class=3D"hljs-attr">response</span>,
            <span class=3D"hljs-attr">response.SC_INTERNAL_SERVER_ERROR</sp=
an>, "<span class=3D"hljs-attr">failedToProcessSSOResponse</span>",
            <span class=3D"hljs-attr">sme.getMessage</span>());
        <span class=3D"hljs-attr">return</span>;
    } <span class=3D"hljs-attr">catch</span> (<span class=3D"hljs-attr">IOE=
xception</span> <span class=3D"hljs-attr">ioe</span>) {
        <span class=3D"hljs-attr">SAMLUtils.sendError</span>(<span class=3D=
"hljs-attr">request</span>, <span class=3D"hljs-attr">response</span>,
            <span class=3D"hljs-attr">response.SC_INTERNAL_SERVER_ERROR</sp=
an>, "<span class=3D"hljs-attr">failedToProcessSSOResponse</span>",
            <span class=3D"hljs-attr">ioe.getMessage</span>());
        <span class=3D"hljs-attr">return</span>;
    } <span class=3D"hljs-attr">catch</span> (<span class=3D"hljs-attr">Ses=
sionException</span> <span class=3D"hljs-attr">se</span>) {
        <span class=3D"hljs-attr">SAMLUtils.sendError</span>(<span class=3D=
"hljs-attr">request</span>, <span class=3D"hljs-attr">response</span>,
            <span class=3D"hljs-attr">response.SC_INTERNAL_SERVER_ERROR</sp=
an>, "<span class=3D"hljs-attr">failedToProcessSSOResponse</span>",
            <span class=3D"hljs-attr">se.getMessage</span>());
        <span class=3D"hljs-attr">return</span>;
    } <span class=3D"hljs-attr">catch</span> (<span class=3D"hljs-attr">Ser=
vletException</span> <span class=3D"hljs-attr">se</span>) {
        <span class=3D"hljs-attr">SAMLUtils.sendError</span>(<span class=3D=
"hljs-attr">request</span>, <span class=3D"hljs-attr">response</span>,
            <span class=3D"hljs-attr">response.SC_BAD_REQUEST</span>, "<spa=
n class=3D"hljs-attr">failedToProcessSSOResponse</span>",
            <span class=3D"hljs-attr">se.getMessage</span>());
        <span class=3D"hljs-attr">return</span>;
    }
    // <span class=3D"hljs-attr">END</span> <span class=3D"hljs-attr">:</sp=
an> <span class=3D"hljs-attr">code</span> <span class=3D"hljs-attr">is</spa=
n> <span class=3D"hljs-attr">a</span> <span class=3D"hljs-attr">must</span>=
 <span class=3D"hljs-attr">for</span> <span class=3D"hljs-attr">Fedlet</spa=
n> (<span class=3D"hljs-attr">SP</span>) <span class=3D"hljs-attr">side</sp=
an> <span class=3D"hljs-attr">application</span>
%&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">body</span>&gt;</sp=
an>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">html</span>&gt;</sp=
an></pre></li><li class=3D"step"><p>Add a <code class=3D"filename">myapp.js=
p</code> page to the Fedlet, such as the
    following.</p><div class=3D"zero-clipboard hidden-xs hidden-print" titl=
e=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span cla=
ss=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettypr=
int html hljs xml"><span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">h=
tml</span>&gt;</span>
<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">head</span>&gt;</spa=
n>
<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">title</span>&gt;</sp=
an>My Application<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">ti=
tle</span>&gt;</span>
<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">meta</span> <span cl=
ass=3D"hljs-attr">http-equiv</span>=3D<span class=3D"hljs-string">"Content-=
Type"</span> <span class=3D"hljs-attr">content</span>=3D<span class=3D"hljs=
-string">"text/html"</span> /&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">head</span>&gt;</sp=
an>

<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">body</span>&gt;</spa=
n>

<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">h1</span>&gt;</span>=
My Application<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">h1</s=
pan>&gt;</span>

<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">p</span>&gt;</span>A=
fter you change the <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">=
code</span>&gt;</span>fedletSampleApp.jsp<span class=3D"hljs-tag">&lt;/<spa=
n class=3D"hljs-name">code</span>&gt;</span>,
   all it does is redirect to this home page after
   successful login.<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name"=
>p</span>&gt;</span>

<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">body</span>&gt;</sp=
an>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">html</span>&gt;</sp=
an></pre></li><li class=3D"step"><p>Browse to the Fedlet URL, such as
    <code class=3D"literal">http://openam.example.com:8080/fedlet/</code>, =
and try one
    of the login methods.</p><p>After login you are redirected to <code cla=
ss=3D"filename">myapp.jsp</code>.</p></li></ol></div></div><div class=3D"se=
ction" id=3D"fedlet-perform-sso"><div class=3D"titlepage"><div><div><h4 cla=
ss=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#fedlet-perform-sso">6.1.3.1.&nbsp;Pe=
rforming Single Sign-On</a></h4></div></div></div><p>The Java Fedlet includ=
es a JSP file,
   <code class=3D"filename">saml2/jsp/fedletSSOInit.jsp</code>, that you ca=
n call to
   initiate single sign-on from the Fedlet (SP) side. The Fedlet home page,
   <code class=3D"filename">index.jsp</code>, calls this page when the user=
 does
   Fedlet-initiated single sign-on.</p><p>When calling this JSP, the parame=
ters to use are those also used by
   <code class=3D"filename">saml2/jsp/spSSOInit.jsp</code> in OpenAM. Those=
 parameters are
   described in <a href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/admin-guide/index.html#spssoinit-parameters" class=3D"olink">spSSOInit.jsp=
 Parameters</a> in the <em>Administration Guide</em>.</p><p>For IDP-initiat=
ed single sign-on, call the appropriate page on the
   identity provider. OpenAM's page is described in
   <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#idpssoinit-parameters" class=3D"olink">idpSSOInit.jsp Parameters=
</a> in the <em>Administration Guide</em>.</p><p>After single sign-on, the =
user-agent is directed by default to the
   assertion consumer URI set in the Fedlet metadata, which by default is
   <code class=3D"literal">/fedletapplication</code>. Also by default that =
URI points to
   the JSP, <code class=3D"filename">fedletSampleApp.jsp</code></p></div><d=
iv class=3D"section" id=3D"fedlet-perform-slo"><div class=3D"titlepage"><di=
v><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage=
.forgerock.com/docs/openam/13.5/dev-guide/index.html#fedlet-perform-slo">6.=
1.3.2.&nbsp;Performing Single Logout</a></h4></div></div></div><p>The Java =
Fedlet includes a JSP file,
   <code class=3D"filename">saml2/jsp/spSingleLogoutInit.jsp</code>, that y=
ou can call to
   initiate single logout from the Fedlet (SP) side. The Fedlet assertion
   consumer page, <code class=3D"filename">fedletSampleApp.jsp</code>, call=
s this when
   the user does Fedlet-initiated single logout.</p><p>When calling this JS=
P, the parameters to use are those also used by
   <code class=3D"filename">saml2/jsp/spSingleLogoutInit.jsp</code> in Open=
AM. Those
   parameters are described in <a href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/admin-guide/index.html#spsloinit-parameters" class=3D"olink=
">spSingleLogoutInit.jsp Parameters</a> in the <em>Administration Guide</em=
>.</p><p>For IDP-initiated single logout, call the appropriate page on the
   identity provider. OpenAM's page is described in
   <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#idpsloinit-parameters" class=3D"olink">idpSingleLogoutInit.jsp P=
arameters</a> in the <em>Administration Guide</em>.</p><p>Set the <code cla=
ss=3D"literal">RelayState</code> parameter when initiating logout
   to redirect the user-agent appropriately when the process is complete.</=
p></div><div class=3D"section" id=3D"fedlet-perform-attr-query"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#fedl=
et-perform-attr-query">6.1.3.3.&nbsp;Performing Attribute Queries</a></h4><=
/div></div></div><p>As seen in <a class=3D"xref" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#try-fedlet-attribute-qu=
ery" title=3D"To Use the Fedlet to Query an Attribute Authority">"To Use th=
e Fedlet to Query an Attribute Authority"</a>,
   an attribute query allows the Fedlet to get profile information about a
   subject from the attribute authority. The Fedlet must be configured to d=
eal
   with responses from the attribute authority, including configuration for
   signing and encryption. Also, an identity provider and attribute authori=
ty
   is likely to share only those attributes that the Fedlet absolutely requ=
ires
   to provide service, such as, for example, a name to customize a page. Th=
e
   attributes must then be mapped in the attribute authority and Fedlet
   metadata.</p><p>The Java Fedlet includes a JSP file,
   <code class=3D"filename">fedletAttrQuery.jsp</code>, which is used in th=
e procedure
   described above to prepare an attribute query using the transient subjec=
t
   identifier obtained during single sign-on. The
   <code class=3D"filename">fedletAttrQuery.jsp</code> also supports using =
the Subject
   name from an X.509 identity certificate.</p><p>Another JSP file, <code c=
lass=3D"filename">fedletAttrResp.jsp</code>, sends the
   query to the attribute authority using
   <code class=3D"literal">com.sun.identity.saml2.profile.AttributeQueryUti=
l.html.getAttributesForFedlet()</code>,
   and if successful processes the result, which is a
   <code class=3D"literal">java.util.Map</code> of the attribute types and =
their
   values.</p></div><div class=3D"section" id=3D"fedlet-perform-xacml-query=
"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-l=
ink" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/ind=
ex.html#fedlet-perform-xacml-query">6.1.3.4.&nbsp;Performing XACML Queries<=
/a></h4></div></div></div><p>As seen in <a class=3D"xref" href=3D"https://b=
ackstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#try-fedlet-xac=
ml-query" title=3D"To Use the Fedlet to Query an XACML Policy Decision Poin=
t">"To Use the Fedlet to Query an XACML Policy Decision Point"</a>,
   a XACML query allows the Fedlet to request a policy decision from a XACM=
L
   PDP. You can configure OpenAM to respond to such queries as described in=
 that
   procedure.</p><p>The Java Fedlet includes a JSP file,
   <code class=3D"filename">fedletXACMLQuery.jsp</code>, which is used in t=
he procedure
   described above to prepare a XACML query, identifying a resource URL and=
 a
   type of HTTP operation to perform, and specifying the subject identifier
   obtained during single sign-on.</p><p>Another JSP file, <code class=3D"f=
ilename">fedletXACMLResp.jsp</code>, sends the
   query to the XACML PDP using
   <code class=3D"literal">com.sun.identity.saml2.profile.XACMLQueryUtil.ge=
tPolicyDecisionForFedlet()</code>,
   and if successful processes the result, which is a
   <code class=3D"literal">java.lang.String</code> representing the decisio=
n, such as
   <code class=3D"literal">Permit</code> if the decision is to allow access=
, or
   <code class=3D"literal">Deny</code> if the decision is to deny access.</=
p></div></div></div><div lang=3D"en" class=3D"section" id=3D"sec-fedlet-unc=
onfigured"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"=
clear: both"><a class=3D"self-link" href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#sec-fedlet-unconfigured">6.2.&nbsp;C=
onfiguring Java Fedlets By Hand</a></h2></div></div></div><a class=3D"index=
term" name=3D"d15472e18410"></a><p>
  An OpenAM Fedlet is a small web application
  that makes it easy to add SAML v2.0 Service Provider (SP) capabilities
  to your Java web application.
  The OpenAM console offers a wizard for configuring a Java Fedlet
  as a SAML v2.0 Service Provider with OpenAM as the Identity Provider (IDP=
).
  If that fits your purposes, then read the chapter
  <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#sec-fedlet-java" title=3D"6.1.&nbsp;Using Fedlets in=
 Java Web Applications">"Using Fedlets in Java Web Applications"</a>
  instead.
 </p><p>
  The full distribution file, <code class=3D"filename">OpenAM-13.5.2.zip</c=
ode>,
  also includes a Java Fedlet, <code class=3D"filename">Fedlet-13.5.2.zip</=
code>,
  that you can configure by hand.
  This chapter covers how to configure a Java Fedlet using that distributio=
n,
  by manually editing the Circle of Trust, Java properties,
  and IDP and SP XML configuration templates.
 </p><div class=3D"itemizedlist"><p>
   Seen from a high level, what you must do is this:
  </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li clas=
s=3D"listitem"><p>
    Determine the roles that the IDP(s) and Fedlet play
    in SAML v2.0 Circles of Trust.
   </p></li><li class=3D"listitem"><p>
    Unpack the unconfigured Fedlet from the full OpenAM distribution
    to access the Fedlet war and template configuration files.
   </p></li><li class=3D"listitem"><p>
    Begin preparing the Fedlet configuration,
    including setting up a configuration directory and keystore if needed.
   </p></li><li class=3D"listitem"><p>
    Obtain SAML v2.0 metadata configuration files from the IDP(s),
    and add them to the Fedlet configuration.
   </p><p>
    The IDP must provide at least the standard SAML v2.0 metadata.
   </p></li><li class=3D"listitem"><p>
    Finish preparing the Fedlet configuration
    by editing the remaining Fedlet template configuration files.
   </p></li><li class=3D"listitem"><p>
    Share the Fedlet SAML v2.0 configuration files
    at least for the standard SAML v2.0 metadata
    with the IDP(s).
   </p><p>
    An IDP relies on the standard SAML v2.0 metadata to communicate with th=
e
    Fedlet.
   </p></li><li class=3D"listitem"><p>
    Deploy and test the Fedlet with each IDP.
   </p></li></ul></div><div class=3D"section" id=3D"unconfigured-fedlet-con=
f"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-=
link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#unconfigured-fedlet-conf">6.2.1.&nbsp;Java Fedlet Layout</a></h3><=
/div></div></div><p>
   Unpack the Java Fedlet distribution into a working directory.
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">mkdir fedlet &amp;&amp; cd fedlet</strong>
$ <strong class=3D"userinput">unzip ../Fedlet-13.5.2.zip</strong></pre><div=
 class=3D"variablelist"><p>
    When you unpack the <code class=3D"filename">Fedlet-13.5.2.zip</code> f=
ile,
    you find the following files.
   </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"f=
ilename">Fedlet-13.5.2.war</code></span></dt><dd><p>
      This file contains a Java Fedlet web application
      that serves as an example, and that you can embed in your application=
s.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">README</cod=
e></span></dt><dd><p>
      This file succinctly describes how to configure some Fedlet features.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">conf/</code=
></span></dt><dd><p>
      This folder contains the Fedlet configuration templates
      that you edit as appropriate for your deployment.
     </p><p>
      When editing the templates, place copies of the files
      in the Fedlet home directory on the system where you deploy the Fedle=
t.
      By default the Fedlet home directory is
      <code class=3D"filename"><em class=3D"replaceable">user.home</em>/<em=
 class=3D"replaceable">uri</em></code>,
      where <em class=3D"replaceable">user.home</em> is the value
      of the Java system property <code class=3D"literal">user.home</code>
      for the user running the web container where you deploy the Fedlet,
      and <em class=3D"replaceable">uri</em> is the path of the URI
      where you deploy the Fedlet, such as <code class=3D"literal">/fedlet<=
/code>.
     </p><p>
      For example, if <em class=3D"replaceable">user.home</em>
      is <code class=3D"filename">/home/user</code>,
      that user could have a <code class=3D"filename">/home/user/fedlet</co=
de> folder
      for Fedlet configuration files.
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">mkdir ~/fedlet</strong></pre><p>
      To change the location, set the system property
      <code class=3D"literal">com.sun.identity.fedlet.home</code>
      when starting the container where the Fedlet runs.
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">java -Dcom.sun.identity.fedlet.home=3D/pat=
h/to/fedlet/conf ...</strong></pre></dd><dt><span class=3D"term"><code clas=
s=3D"filename">conf/FederationConfig.properties</code></span></dt><dd><p>
      This file defines settings for the Fedlet as a web application.
      It does not address the SAML v2.0 configuration.
     </p><p>
      For more about this file,
      see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#unconfigured-fedlet-properties" title=3D"6.2=
.2.&nbsp;Configuring Java Fedlet Properties">"Configuring Java Fedlet Prope=
rties"</a>.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">conf/fedlet=
.cot-template</code></span></dt><dd><p>
      This template defines settings for a SAML v2.0 Circle of Trust
      to which the Fedlet belongs.
     </p><p>
      For more about this file,
      see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#unconfigured-fedlet-cot" title=3D"6.2.3.&nbs=
p;Configuring Circles of Trust">"Configuring Circles of Trust"</a>.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">conf/idp.xm=
l</code> (not provided)</span></dt><dd><p>
      The <code class=3D"filename">idp.xml</code> file is standard SAML v2.=
0 metadata
      that describes the IDP configuration.
     </p><p>
      Templates for other SAML v2.0 configuration files are provided,
      but no <code class=3D"filename">idp.xml</code> template file is provi=
ded.
     </p><p>
      Instead you must obtain the SAML v2.0 metadata from the IDP,
      and add it as <code class=3D"filename">idp.xml</code> here,
      alongside the other SAML v2.0 configuration files.
      How you obtain this file from the IDP depends on the IDP implementati=
on.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">conf/idp-ex=
tended.xml-template</code></span></dt><dd><p>
      This template holds extended SAML v2.0 IDP settings that OpenAM uses.
     </p><p>
      For more about this file,
      see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#unconfigured-fedlet-idp" title=3D"6.2.4.&nbs=
p;Configuring the Identity Providers">"Configuring the Identity Providers"<=
/a>.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">conf/sp.xml=
-template</code></span></dt><dd><p>
      This template describes standard SAML v2.0 SP settings.
     </p><p>
      For more about this file,
      see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#unconfigured-fedlet-sp" title=3D"6.2.5.&nbsp=
;Configuring the Service Providers">"Configuring the Service Providers"</a>=
.
     </p></dd><dt><span class=3D"term"><code class=3D"filename">conf/sp-ext=
ended.xml-template</code></span></dt><dd><p>
      This template describes extended SAML v2.0 SP settings that the Fedle=
t
      uses.
     </p><p>
      For more about this file,
      see <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#unconfigured-fedlet-sp" title=3D"6.2.5.&nbsp=
;Configuring the Service Providers">"Configuring the Service Providers"</a>=
.
     </p></dd></dl></div></div><div class=3D"section" id=3D"unconfigured-fe=
dlet-properties"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a =
class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#unconfigured-fedlet-properties">6.2.2.&nbsp;Configur=
ing Java Fedlet Properties</a></h3></div></div></div><p>
   The Java Fedlet to configure by hand includes
   a <code class=3D"filename">FederationConfig.properties</code> file
   that defines settings for the Fedlet as a web application.
   The configuration for a single Java Fedlet includes
   only one <code class=3D"filename">FederationConfig.properties</code> fil=
e,
   regardless of how many IDP and SP configurations are involved.
   This file does not address the SAML v2.0 configuration.
  </p><p>
   When configured this file contains sensitive properties
   such as the value of <code class=3D"literal">am.encryption.pwd</code>.
   Make sure it is readable only by the user running the Fedlet application=
.
  </p><div class=3D"itemizedlist"><p>
    This section categorizes the settings as follows:
   </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li cla=
ss=3D"listitem"><p>
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#unconfigured-fedlet-properties-deploy-url" title=
=3D"Deployment URL Settings">Deployment URL Settings</a>
    </p></li><li class=3D"listitem"><p>
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#unconfigured-fedlet-properties-logs" title=3D"Log=
 and Statistics Settings">Log and Statistics Settings</a>
    </p></li><li class=3D"listitem"><p>
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#unconfigured-fedlet-properties-keys" title=3D"Pub=
lic and Private Key Settings">Public and Private Key Settings</a>
    </p></li><li class=3D"listitem"><p>
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#unconfigured-fedlet-properties-alt-impl" title=3D=
"Alternative Implementation Settings">Alternative Implementation Settings</=
a>
    </p></li></ul></div><div class=3D"variablelist" id=3D"unconfigured-fedl=
et-properties-deploy-url"><div class=3D"variablelist-title">Deployment URL =
Settings</div><p>
    The following settings define the Fedlet deployment URL.
   </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"l=
iteral">com.iplanet.am.server.protocol</code></span></dt><dd><p>
      Set this to the protocol portion of the URL, such as HTTP or HTTPS.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
am.server.host</code></span></dt><dd><p>
      Set this to the host portion of the URL, such as
      <code class=3D"literal">sp.example.com</code>.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
am.server.port</code></span></dt><dd><p>
      Set this to the port portion of the URL, such as 80, 443, 8080, or 84=
43.
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
am.services.deploymentDescriptor</code></span></dt><dd><p>
      Set this to path portion of the URL, starting with a <code class=3D"l=
iteral">/</code>,
      such as <code class=3D"literal">/fedlet</code>.
     </p></dd></dl></div><div class=3D"variablelist" id=3D"unconfigured-fed=
let-properties-logs"><div class=3D"variablelist-title">Log and Statistics S=
ettings</div><p>
    The following settings define the Fedlet configuration
    for logging and monitoring statistics.
   </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"l=
iteral">com.iplanet.am.logstatus</code></span></dt><dd><p>
      This sets whether the Fedlet actively writes debug log files.
     </p><p>
      Default: <code class=3D"literal">ACTIVE</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
services.debug.level</code></span></dt><dd><p>
      This sets the debug log level.
     </p><p>
      The following settings are available, in order of increasing verbosit=
y:
     </p><table border=3D"0" summary=3D"Simple list" class=3D"simplelist"><=
tbody><tr><td><code class=3D"literal">off</code></td></tr><tr><td><code cla=
ss=3D"literal">error</code></td></tr><tr><td><code class=3D"literal">warnin=
g</code></td></tr><tr><td><code class=3D"literal">message</code></td></tr><=
/tbody></table><p>
      Default: <code class=3D"literal">message</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
services.debug.directory</code></span></dt><dd><p>
      This sets the location of the debug log folder.
     </p><p>
      Trailing spaces in the file names are significant.
      Even on Windows systems, use slashes to separate directories.
     </p><p>
      Examples: <code class=3D"filename">/home/user/fedlet/debug</code>,
      <code class=3D"filename">C:/fedlet/debug</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
am.stats.interval</code></span></dt><dd><p>
      This sets the interval at which statistics are written, in seconds.
     </p><p>
      The shortest interval supported is 5 seconds.
      Settings less than 5 (seconds) are taken as 5 seconds.
     </p><p>
      Default: 60
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
services.stats.state</code></span></dt><dd><p>
      This sets how the Fedlet writes monitoring statistics.
     </p><p>
      The following settings are available:
     </p><table border=3D"0" summary=3D"Simple list" class=3D"simplelist"><=
tbody><tr><td><code class=3D"literal">off</code></td></tr><tr><td><code cla=
ss=3D"literal">console</code> (write to the container logs)</td></tr><tr><t=
d><code class=3D"literal">file</code> (write to Fedlet stats logs)</td></tr=
></tbody></table><p>
      Default: <code class=3D"literal">file</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
services.stats.directory</code></span></dt><dd><p>
      This sets the location of the stats file folder.
     </p><p>
      Trailing spaces in the file names are significant.
      Even on Windows systems, use slashes to separate directories.
     </p><p>
      Examples: <code class=3D"filename">/home/user/fedlet/stats</code>,
      <code class=3D"filename">C:/fedlet/stats</code>
     </p></dd></dl></div><div class=3D"variablelist" id=3D"unconfigured-fed=
let-properties-keys"><div class=3D"variablelist-title">Public and Private K=
ey Settings</div><p>
    The following settings define settings for access to
    certificates and private keys used in signing and encryption.
   </p><p>
    Other sections in this guide explain
    how to configure a Fedlet for signing and encryption
    including how to work with the keystores that these settings reference,
    and how to specify public key certificates in standard SAML v2.0 metada=
ta.
    When working with a Java Fedlet, see the section on
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#fedlet-signing-encryption" title=3D"6.1.2.&nbsp;En=
abling Signing and Encryption in a Fedlet">"Enabling Signing and Encryption=
 in a Fedlet"</a>.
   </p><div class=3D"panel panel-success"><div class=3D"panel-heading"><h3 =
class=3D"panel-title">Tip</h3></div><div class=3D"panel-body"><p>Although t=
his section focuses on Java Fedlets,
     if you are working with a .NET Fedlet see <a class=3D"link" href=3D"ht=
tps://backstage.forgerock.com/knowledge/kb/article/a99870342" target=3D"_bl=
ank">How do I use
      Fedlets in .NET applications in OpenAM (All versions)?</a> in the <em=
 class=3D"citetitle">ForgeRock
      Knowledge Base</em>.
    </p></div></div><dl class=3D"variablelist"><dt><span class=3D"term"><co=
de class=3D"literal">com.sun.identity.saml.xmlsig.keystore</code></span></d=
t><dd><p>
      This sets the path to the keystore file
      that holds public key certificates of IDPs and key pairs for the Fedl=
et.
     </p><p>
      For hints on generating a keystore file with a key pair,
      see <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin=
-guide/index.html#change-signing-key" class=3D"olink">"To Change OpenAM Def=
ault test Signing Key "</a> in the <em>Administration Guide</em>.
     </p><p>
      Example: <code class=3D"filename">@FEDLET_HOME@/keystore.jks</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.saml.xmlsig.storepass</code></span></dt><dd><p>
      This sets the path to the file that contains
      the keystore password encoded by using the symmetric key
      set as the value of <code class=3D"literal">am.encryption.pwd</code>.
     </p><div class=3D"itemizedlist"><p>
       When creating the file, encode the clear text password
       by using your own test copy (not a production version) of OpenAM.
      </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li =
class=3D"listitem"><p>
        Log in to the OpenAM Console as administrator <code class=3D"litera=
l">amadmin</code>.
       </p></li><li class=3D"listitem"><p>
        Under Deployment &gt; Servers &gt; <em class=3D"replaceable">Server=
 Name </em>
        &gt; Security &gt; Encryption,
        set the Password Encryption Key to your symmetric key,
        and save your work.
       </p><p>
        Do not do this in a production system
        where the existing symmetric key is already in use!
       </p></li><li class=3D"listitem"><p>
        Switch to the <code class=3D"filename">encode.jsp</code> page,
        such as <code class=3D"literal">http://openam.example.com:8080/open=
am/encode.jsp</code>,
        enter the clear text password to encode with your symmetric key,
        and click Encode.
       </p></li><li class=3D"listitem"><p>
        Copy the encoded password to your file.
       </p></li></ul></div><p>
      Example: <code class=3D"filename">@FEDLET_HOME@/.storepass</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.saml.xmlsig.keypass</code></span></dt><dd><p>
      This sets the path to the file that contains
      the private key password encoded by using the symmetric key
      set as the value of <code class=3D"literal">am.encryption.pwd</code>.
     </p><p>
      To encode the clear text password, follow the same steps
      for the password used when setting
      <code class=3D"literal">com.sun.identity.saml.xmlsig.storepass</code>=
.
     </p><p>
      Example: <code class=3D"filename">@FEDLET_HOME@/.keypass</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.saml.xmlsig.certalias</code></span></dt><dd><p>
      This sets the alias of the Fedlet's public key certificate.
     </p><p>
      Example: <code class=3D"literal">fedlet-cert</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.saml.xmlsig.storetype</code></span></dt><dd><p>
      The sets the type of keystore.
     </p><p>
      Default: <code class=3D"literal">JKS</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">am.encryptio=
n.pwd</code></span></dt><dd><p>
      This sets the symmetric key that used to encrypt and decrypt password=
s.
     </p><p>
      Example: <code class=3D"literal">uu4dHvBkJJpIjPQWM74pxH3brZJ5gJje</co=
de>
     </p></dd></dl></div><div class=3D"variablelist" id=3D"unconfigured-fed=
let-properties-alt-impl"><div class=3D"variablelist-title">Alternative Impl=
ementation Settings</div><p>
    The Java Fedlet properties file includes settings
    that let you plug in alternative implementations of Fedlet capabilities=
.
    You can safely use the default settings, as specified in the following =
list.
    The list uses the same order for the keys you find in the file.
   </p><dl class=3D"variablelist"><dt><span class=3D"term"><code class=3D"l=
iteral">com.sun.identity.plugin.configuration.class</code></span></dt><dd><=
p>
      Default: <code class=3D"literal">com.sun.identity.plugin.configuratio=
n.impl.FedletConfigurationImpl</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.plugin.datastore.class.default</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.plugin.datastore.im=
pl.FedletDataStoreProvider</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.plugin.log.class</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.plugin.log.impl.Fed=
letLogger</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.plugin.session.class</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.plugin.session.impl=
.FedletSessionProvider</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.plugin.monitoring.agent.class</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.plugin.monitoring.i=
mpl.FedletAgentProvider</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.plugin.monitoring.saml1.class</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.plugin.monitoring.i=
mpl.FedletMonSAML1SvcProvider</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.plugin.monitoring.saml2.class</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.plugin.monitoring.i=
mpl.FedletMonSAML2SvcProvider</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.plugin.monitoring.idff.class</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.plugin.monitoring.i=
mpl.FedletMonIDFFSvcProvider</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.saml.xmlsig.keyprovider.class</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.saml.xmlsig.JKSKeyP=
rovider</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.saml.xmlsig.signatureprovider.class</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.saml.xmlsig.AMSigna=
tureProvider</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.common.serverMode</code></span></dt><dd><p>
      Default: <code class=3D"literal">false</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.webcontainer</code></span></dt><dd><p>
      Default: <code class=3D"literal">WEB_CONTAINER</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.saml.xmlsig.passwordDecoder</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.fedlet.FedletEncode=
Decode</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
services.comm.server.pllrequest.maxContentLength</code></span></dt><dd><p>
      Default: 16384
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
security.SecureRandomFactoryImpl</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.iplanet.am.util.SecureRandomFact=
oryImpl</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
security.SSLSocketFactoryImpl</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.sun.identity.shared.ldap.factory=
.JSSESocketFactory</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
security.encryptor</code></span></dt><dd><p>
      Default: <code class=3D"literal">com.iplanet.services.util.JCEEncrypt=
ion</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.sun.iden=
tity.jss.donotInstallAtHighestPriority</code></span></dt><dd><p>
      Default: <code class=3D"literal">true</code>
     </p></dd><dt><span class=3D"term"><code class=3D"literal">com.iplanet.=
services.configpath</code></span></dt><dd><p>
      Default: <code class=3D"literal">@BASE_DIR@</code>
     </p></dd></dl></div></div><div class=3D"section" id=3D"unconfigured-fe=
dlet-cot"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#unconfigured-fedlet-cot">6.2.3.&nbsp;Configuring Circles =
of Trust</a></h3></div></div></div><p>
   As described in <a class=3D"xref" href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-conf" title=3D"=
6.2.1.&nbsp;Java Fedlet Layout">"Java Fedlet Layout"</a>,
   this template defines settings for a SAML v2.0 Circle of Trust.
   The Fedlet belongs to at least one Circle of Trust.
  </p><div class=3D"itemizedlist"><p>
    This section includes the following procedures:
   </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li cla=
ss=3D"listitem"><p>
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#unconfigured-fedlet-cot-single" title=3D"To Confi=
gure a Circle of Trust With a Single IDP">"To Configure a Circle of Trust W=
ith a Single IDP"</a>
    </p></li><li class=3D"listitem"><p>
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#unconfigured-fedlet-cot-multiple" title=3D"To Con=
figure Multiple Circles of Trust">"To Configure Multiple Circles of Trust"<=
/a>
    </p></li><li class=3D"listitem"><p>
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#unconfigured-fedlet-cot-discovery" title=3D"To Co=
nfigure a Circle of Trust With Multiple IDPs">"To Configure a Circle of Tru=
st With Multiple IDPs"</a>
    </p></li></ul></div><div class=3D"procedure" id=3D"unconfigured-fedlet-=
cot-single"><div class=3D"procedure-inner"><div class=3D"procedure-title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#unconfigured-fedlet-cot-single">To Configure a Cir=
cle of Trust With a Single IDP</a></div><p>
    When the Fedlet is involved in only a single Circle of Trust
    with one IDP and the Fedlet as an SP,
    the only settings to change are
    <code class=3D"literal">cot-name</code> and <code class=3D"literal">sun=
-fm-trusted-providers</code>.
   </p><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>
     Save a copy of the template
     as <code class=3D"filename">fedlet.cot</code> in the configuration fol=
der,
     as in the following example.
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">cp ~/Downloads/fedlet/conf/fedlet.cot-templ=
ate ~/fedlet/fedlet.cot</strong></pre></li><li class=3D"step"><p>
     Set <code class=3D"literal">cot-name</code> to the name of the Circle =
of Trust.
    </p></li><li class=3D"step"><p>
     Set <code class=3D"literal">sun-fm-trusted-providers</code> to a comma=
-separated list
     of the entity names for the IDP and SP.
    </p><p>
     For example, if the IDP is OpenAM with entity ID
     <code class=3D"literal">https://openam.example.com:8443/openam</code>
     and the SP is the Fedlet with entity ID
     <code class=3D"literal">https://sp.example.net:8443/fedlet</code>,
     then set the property as follows.
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"codelisting prettyprint ini hl=
js"><span class=3D"hljs-attr">sun-fm-trusted-providers</span>=3Dhttps://ope=
nam.example.com:<span class=3D"hljs-number">8443</span>/openam,\
 https://sp.example.net:8443/fedlet
    </pre></li></ol></div></div><div class=3D"procedure" id=3D"unconfigured=
-fedlet-cot-multiple"><div class=3D"procedure-inner"><div class=3D"procedur=
e-title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/doc=
s/openam/13.5/dev-guide/index.html#unconfigured-fedlet-cot-multiple">To Con=
figure Multiple Circles of Trust</a></div><p>
    This procedure concerns deployments where the Fedlet participates as SP
    in multiple Circles of Trust, each involving their own IDP.
   </p><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>
     For each Circle of Trust,
     save a copy of the template in the configuration folder.
    </p><p>
     The following example involves two Circles of Trust.
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">cp ~/Downloads/fedlet/conf/fedlet.cot-templ=
ate ~/fedlet/fedlet.cot</strong>
$ <strong class=3D"userinput">cp ~/Downloads/fedlet/conf/fedlet.cot-templat=
e ~/fedlet/fedlet2.cot</strong></pre></li><li class=3D"step"><p>
     Set up IDP XML files for each IDP as described
     in <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#unconfigured-fedlet-idp" title=3D"6.2.4.&nbsp;=
Configuring the Identity Providers">"Configuring the Identity Providers"</a=
>.
    </p></li><li class=3D"step"><p>
     For each Circle of Trust, set up the cot file
     as described in <a class=3D"xref" href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-cot-single" t=
itle=3D"To Configure a Circle of Trust With a Single IDP">"To Configure a C=
ircle of Trust With a Single IDP"</a>.
    </p></li><li class=3D"step"><p>
     In the extended SP XML file
     described in <a class=3D"xref" href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-idp" title=3D"6.=
2.4.&nbsp;Configuring the Identity Providers">"Configuring the Identity Pro=
viders"</a>,
     set the Attribute element with name <code class=3D"literal">cotlist</c=
ode>
     to include values for all Circles of Trust.
     The values are taken from the <code class=3D"literal">cot-name</code> =
settings
     in the cot files.
    </p><p>
     The following example works with two Circles of Trust,
     <code class=3D"literal">cot</code> and <code class=3D"literal">cot2</c=
ode>.
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"codelisting prettyprint xml hl=
js"><span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span>=
 <span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"cotli=
st"</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;=
</span>cot<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</sp=
an>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt;=
</span>cot2<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</s=
pan>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>&gt=
;</span>
</pre><p>
     The same Attribute element is also available in extended IDP XML files
     for cases where an IDP belongs to multiple Circles of Trust.
    </p></li></ol></div></div><div class=3D"procedure" id=3D"unconfigured-f=
edlet-cot-discovery"><div class=3D"procedure-inner"><div class=3D"procedure=
-title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#unconfigured-fedlet-cot-discovery">To Con=
figure a Circle of Trust With Multiple IDPs</a></div><p>
    When the Circle of Trust involves multiple IDPs,
    use the Fedlet in combination with the OpenAM IDP Discovery service.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
     For this to work, the IDPs must be configured to use IDP discovery,
     and users must have preferred IDPs.
    </p></div></div><ol class=3D"procedure" type=3D"1"><li class=3D"step"><=
p>
     Set up the OpenAM IDP Discovery service.
    </p><p>
     For details see <a href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/admin-guide/index.html#deploy-idp-discovery" class=3D"olink">"Deployi=
ng the Identity Provider Discovery Service"</a> in the <em>Administration G=
uide</em>.
    </p></li><li class=3D"step"><p>
     Configure the Circle of Trust as described in
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#unconfigured-fedlet-cot-single" title=3D"To Confi=
gure a Circle of Trust With a Single IDP">"To Configure a Circle of Trust W=
ith a Single IDP"</a>,
     but specifying multiple IDPs,
     including the IDP that provides the IDP Discovery service.
    </p></li><li class=3D"step"><p>
     Set the <code class=3D"literal">sun-fm-saml2-readerservice-url</code>
     and the <code class=3D"literal">sun-fm-saml2-writerservice-url</code>
     properties as defined for the IDP Discovery service.
    </p></li></ol></div></div></div><div class=3D"section" id=3D"unconfigur=
ed-fedlet-idp"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a cl=
ass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#unconfigured-fedlet-idp">6.2.4.&nbsp;Configuring the I=
dentity Providers</a></h3></div></div></div><p>
   As described in <a class=3D"xref" href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-conf" title=3D"=
6.2.1.&nbsp;Java Fedlet Layout">"Java Fedlet Layout"</a>,
   the IDP provides its standard SAML v2.0 metadata as XML,
   which you save in the configuration folder as <code class=3D"filename">i=
dp.xml</code>.
   If the IDP uses OpenAM,
   the IDP can also provide extended SAML v2.0 metadata as XML,
   which you save in the configuration folder as <code class=3D"filename">i=
dp-extended.xml</code>,
   rather than using the template for extended information.
  </p><p>
   If you have multiple identity providers, then number the configuration f=
iles,
   as in <code class=3D"filename">idp.xml</code>, <code class=3D"filename">=
idp2.xml</code>,
   <code class=3D"filename">idp3.xml</code>,
   and also <code class=3D"filename">idp-extended.xml</code>,
   <code class=3D"filename">idp2-extended.xml</code>,
   <code class=3D"filename">idp3-extended.xml</code> and so on.
  </p><div class=3D"section" id=3D"unconfigured-fedlet-idp-standard"><div c=
lass=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" hre=
f=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#=
unconfigured-fedlet-idp-standard">6.2.4.1.&nbsp;Identity Provider Standard =
XML</a></h4></div></div></div><p>
    This section covers the configuration in <code class=3D"filename">idp.x=
ml</code>.
    The <code class=3D"filename">idp.xml</code> file contains standard SAML=
 v2.0 metadata
    for an IDP in a Circle of Trust that includes the Fedlet as SP.
    The IDP provides you the content of this file.
   </p><p>
    If the IDP uses OpenAM then the administrator can export the metadata
    by using either the <span class=3D"command"><strong>ssoadm create-metad=
ata-templ</strong></span> command
    or the <code class=3D"literal">/saml2/jsp/exportmetadata.jsp</code> end=
point
    under the OpenAM deployment URL.
   </p><p>
    If the IDP uses an implementation different from OpenAM,
    see the documentation for details on obtaining the standard metadata.
    The standard, product-independent metadata are covered in
    <a class=3D"link" href=3D"http://docs.oasis-open.org/security/saml/v2.0=
/saml-metadata-2.0-os.pdf" target=3D"_blank"><em class=3D"citetitle">Metada=
ta for the OASIS
     Security Assertion Markup Language (SAML) V2.0</em></a>.
    The standard XML namespace describing the XML document has identifier
    <code class=3D"literal">urn:oasis:names:tc:SAML:2.0:metadata</code>.
    An XML schema description for this namespace is found online at
    <a class=3D"link" href=3D"http://docs.oasis-open.org/security/saml/v2.0=
/saml-schema-metadata-2.0.xsd" target=3D"_blank">http://docs.oasis-open.org=
/security/saml/v2.0/saml-schema-metadata-2.0.xsd</a>.
   </p></div><div class=3D"section" id=3D"unconfigured-fedlet-idp-extended"=
><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#unconfigured-fedlet-idp-extended">6.2.4.2.&nbsp;Identity Provider Ex=
tended XML</a></h4></div></div></div><p>
    This section covers the configuration in <code class=3D"filename">idp-e=
xtended.xml</code>.
    Most extended metadata are specific to the OpenAM implementation of SAM=
L v2.0.
    If the IDP runs OpenAM, have the IDP provide the extended metadata
    exported by using the <span class=3D"command"><strong>ssoadm create-met=
adata-templ</strong></span> command.
    This section covers only the basic settings relative to all IDPs.
   </p><p>
    The extended metadata file describes an <code class=3D"sgmltag-element"=
>EntityConfig</code> element,
    defined by the namespace with the identifier
    <code class=3D"literal">urn:sun:fm:SAML:2.0:entityconfig</code>.
    The XML schema definition is described in
    <code class=3D"filename">entity-config-schema.xsd</code>,
    available online as part of the OpenAM source code,
    though not included in the OpenAM war file.
   </p><p>
    The unconfigured Fedlet includes a template file,
    <code class=3D"filename">conf/idp-extended.xml-template</code>.
    This extended metadata template for the IDP requires that you edit
    at least the <code class=3D"literal">IDP_ENTITY_ID</code>
    and <code class=3D"literal">fedletcot</code> values
    to reflect the IDP entity ID used in the standard metadata
    and the Circle of Trust name defined in <code class=3D"filename">fedlet=
.cot</code>,
    respectively.
    The <code class=3D"literal">hosted</code> attribute on the <code class=
=3D"sgmltag-element">EntityConfig</code> element
    must remain set to <code class=3D"literal">hosted=3D"0"</code>,
    meaning that the IDP is remote.
    The IDP is likely to play at least the role of SSO Identity Provider,
    though the namespace defines elements
    for the Attribute Authority and Policy Decision Point roles
    shown in the template, as well as the others
    defined in the standard governing SAML v2.0 metadata.
   </p><p>
    The extended metadata file is essentially a series of
    XML maps of key-value pairs specifying IDP configuration for each role.
    All role-level elements can take a <code class=3D"literal">metaAlias</c=
ode> attribute
    that the Fedlet uses when communicating with the IDP.
    Each child element of a role element defines an <code class=3D"sgmltag-=
element">Attribute</code>
    whose <code class=3D"literal">name</code> is the key.
    Each <code class=3D"sgmltag-element">Attribute</code> element can conta=
in multiple <code class=3D"sgmltag-element">Value</code> elements.
    The <code class=3D"sgmltag-element">Value</code> elements' contents com=
prise the values for the key.
    All values are strings, sometimes with a format that is meaningful to O=
penAM.
    The basic example in the IDP template shows the minimal configuration
    for the SSO IDP role.
   </p><p>
    In the following example, the <code class=3D"literal">description</code=
> is empty
    and the name of the Circle of Trust is <code class=3D"literal">fedletco=
t</code>.
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint xml hlj=
s"><span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">IDPSSOConfig</spa=
n>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> =
<span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"descri=
ption"</span>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>/&g=
t;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>=
&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> =
<span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"cotlis=
t"</span>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt=
;</span>fedletcot<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Va=
lue</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>=
&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">IDPSSOConfig</span>=
&gt;</span>
<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">AttributeAuthorityCo=
nfig</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> =
<span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"cotlis=
t"</span>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt=
;</span>fedletcot<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Va=
lue</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>=
&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">AttributeAuthorityC=
onfig</span>&gt;</span>
<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">XACMLPDPConfig</span=
>&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> =
<span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"wantXA=
CMLAuthzDecisionQuerySigned"</span>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt=
;</span><span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Value</span=
>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>=
&gt;</span>
   <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Attribute</span> =
<span class=3D"hljs-attr">name</span>=3D<span class=3D"hljs-string">"cotlis=
t"</span>&gt;</span>
     <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">Value</span>&gt=
;</span>fedletcot<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Va=
lue</span>&gt;</span>
   <span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">Attribute</span>=
&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">XACMLPDPConfig</spa=
n>&gt;</span>
</pre><p>
    When functioning as IDP, OpenAM can take many other <code class=3D"sgml=
tag-element">Attribute</code> values.
    These are implementation dependent.
    You can obtain the extended metadata from OpenAM
    either as part of the pre-packaged Java Fedlet that you create
    by using the OpenAM console wizard as described in
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#create-config-files-for-a-java-fedlet" title=3D"To=
 Create Configuration Files for a Fedlet">"To Create Configuration Files fo=
r a Fedlet"</a>,
    or by using the <span class=3D"command"><strong>ssoadm create-metadata-=
templ</strong></span> subcommand.
   </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 cla=
ss=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>
     Custom authentication contexts can be loaded and saved when they are l=
oaded via
     ssoadm as part of the hosted IDP/SP extended metadata and the saves ar=
e made
     in the console. Any custom contexts loaded via ssoadm are
     also visible in the console.
    </p><p>
     For example, you can specify custom entries in the
     <code class=3D"literal">idpAuthncontextClassrefMapping</code> element =
of the
     extended metadata for a hosted IDP as follows:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"codelisting prettyprint nohigh=
light">&lt;Attribute name=3D"idpAuthncontextClassrefMapping"&gt;
 &lt;Value&gt;urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTrans=
port
  |1||default&lt;/Value&gt;
 &lt;Value&gt;http://idmanagement.gov/ns/assurance/loa/4|4||&lt;/Value&gt;
 &lt;Value&gt;http://idmanagement.gov/ns/assurance/loa/3|3||&lt;/Value&gt;
 &lt;Value&gt;http://idmanagement.gov/ns/assurance/loa/2|2||&lt;/Value&gt;
 &lt;Value&gt;http://idmanagement.gov/ns/assurance/loa/1|1||&lt;/Value&gt;
&lt;/Attribute&gt;
    </pre></div></div></div><div class=3D"section" id=3D"unconfigured-fedle=
t-idp-extended-idpssoconfig"><div class=3D"titlepage"><div><div><h4 class=
=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-idp-extended-idpss=
oconfig">6.2.4.3.&nbsp;Identity Provider Extended XML: IDPSSOConfig Setting=
s</a></h4></div></div></div><p>
     This section covers elements for the IDP SSO role,
     arranged in the order they appear in the template.
    </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span cl=
ass=3D"term"><code class=3D"literal">description</code></span></dt><dd><p>
        Description of the file.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">cotlist</c=
ode></span></dt><dd><p>
        Specifies the circle of trust(s) to which the provider belongs.
       </p><p>
        Default:
        <code class=3D"literal">fedletcot</code>
       </p></dd></dl></div></div><div class=3D"section" id=3D"unconfigured-=
fedlet-idp-extended-attributeAuthorityConfig"><div class=3D"titlepage"><div=
><div><h4 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-idp=
-extended-attributeAuthorityConfig">6.2.4.4.&nbsp;Identity Provider Extende=
d XML: Attribute Authority Configuration Settings</a></h4></div></div></div=
><p>
    This section covers the element for the AttributeAuthorityConfig role,
    arranged in the order they appear in the template.
   </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span cla=
ss=3D"term"><code class=3D"literal">cotlist</code></span></dt><dd><p>
        Specifies the circle of trust(s) to which the provider belongs.
       </p><p>
        Default:
        <code class=3D"literal">fedletcot</code>
       </p></dd></dl></div></div><div class=3D"section" id=3D"unconfigured-=
fedlet-idp-extended-xacmlPdpConfig"><div class=3D"titlepage"><div><div><h4 =
class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-idp-extended-=
xacmlPdpConfig">6.2.4.5.&nbsp;Identity Provider Extended XML: XACML PDP Con=
figuration</a></h4></div></div></div><p>
    This section covers the elements for the XACMLPDPConfig role, arranged
    in the order they appear in the template.
   </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span cla=
ss=3D"term"><code class=3D"literal">wantXACMLAuthzDecisionQuerySigned</code=
></span></dt><dd><p>
       If the IdP requires signed XACML AuthzDecision queries, then set thi=
s
       attribute to <code class=3D"literal">true</code>.
      </p></dd><dt><span class=3D"term"><code class=3D"literal">cotlist</co=
de></span></dt><dd><p>
       Specifies the circle of trust(s) to which the provider belongs.
      </p><p>
       Default:
       <code class=3D"literal">fedletcot</code>
      </p></dd></dl></div></div></div><div class=3D"section" id=3D"unconfig=
ured-fedlet-sp"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a c=
lass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#unconfigured-fedlet-sp">6.2.5.&nbsp;Configuring the S=
ervice Providers</a></h3></div></div></div><p>
   As mentioned in <a class=3D"xref" href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-conf" title=3D"=
6.2.1.&nbsp;Java Fedlet Layout">"Java Fedlet Layout"</a>,
   the Fedlet SAML v2.0 configuration is defined in two XML files,
   the standard metadata in <code class=3D"filename">sp.xml</code>
   and the extended metadata in <code class=3D"filename">sp-extended.xml</c=
ode>.
  </p><p>
   If the Fedlet has multiple service provider personalities,
   then number the configuration files,
   as in <code class=3D"filename">sp.xml</code>, <code class=3D"filename">s=
p2.xml</code>,
   <code class=3D"filename">sp3.xml</code>,
   and also <code class=3D"filename">sp-extended.xml</code>,
   <code class=3D"filename">sp2-extended.xml</code>,
   <code class=3D"filename">sp3-extended.xml</code> and so on.
  </p><div class=3D"section" id=3D"unconfigured-fedlet-sp-standard"><div cl=
ass=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#u=
nconfigured-fedlet-sp-standard">6.2.5.1.&nbsp;Service Provider Standard XML=
</a></h4></div></div></div><p>
    This section covers the configuration in <code class=3D"filename">sp.xm=
l</code>.
    The <code class=3D"filename">sp.xml</code> file contains standard SAML =
v2.0 metadata
    for the Fedlet as SP.
    If you edit the standard metadata,
    make sure that you provide the new version to your IDP,
    as the IDP software relies on the metadata to get the Fedlet's configur=
ation.
   </p><p>
    The standard metadata are covered in
    <a class=3D"link" href=3D"http://docs.oasis-open.org/security/saml/v2.0=
/saml-metadata-2.0-os.pdf" target=3D"_blank"><em class=3D"citetitle">Metada=
ta for the OASIS
     Security Assertion Markup Language (SAML) V2.0</em></a>.
    The standard XML namespace describing the XML document has identifier
    <code class=3D"literal">urn:oasis:names:tc:SAML:2.0:metadata</code>.
    An XML schema description for this namespace is found online at
    <a class=3D"link" href=3D"http://docs.oasis-open.org/security/saml/v2.0=
/saml-schema-metadata-2.0.xsd" target=3D"_blank">http://docs.oasis-open.org=
/security/saml/v2.0/saml-schema-metadata-2.0.xsd</a>.
   </p><p>
    A standard metadata file describes the SAML v2.0 roles that the Fedlet =
plays.
    The default base element of the file is an <code class=3D"sgmltag-eleme=
nt">EntityDescriptor</code>,
    which is a container for role descriptor elements.
    The <code class=3D"sgmltag-element">EntityDescriptor</code> element can=
 therefore
    contain multiple role descriptor elements.
    The namespace for the standard metadata document is
    <code class=3D"literal">urn:oasis:names:tc:SAML:2.0:metadata</code>.
    You can get the corresponding XML schema description online at
    <a class=3D"link" href=3D"http://docs.oasis-open.org/security/saml/v2.0=
/saml-schema-metadata-2.0.xsd" target=3D"_blank">http://docs.oasis-open.org=
/security/saml/v2.0/saml-schema-metadata-2.0.xsd</a>.
    In general, you can find standard SAML v2.0-related XML schema definiti=
ons at
    <a class=3D"link" href=3D"http://docs.oasis-open.org/security/saml/v2.0=
/" target=3D"_blank">http://docs.oasis-open.org/security/saml/v2.0/</a>.
   </p><p>
    Fedlets do not support all arbitrary SP configurations.
    As lightweight Service Provider components,
    Fedlets are built to play the SP role in web single sign-on and single =
logout,
    to perform attribute queries and XACML policy decision requests,
    and to work with multiple IDPs
    including Circles of Trust with an IDP discovery service.
    For a list of what Fedlets support, see the table
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide=
/index.html#fedlet-saml2-features" class=3D"olink">"Fedlet Support for SAML=
 v2.0 Features"</a> in the <em>Administration Guide</em>.
   </p><div class=3D"itemizedlist"><p>
     When preparing a standard SP metadata file, follow these suggestions.
    </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li cl=
ass=3D"listitem"><p>
      Start either with an existing example or with the template,
      <code class=3D"filename">conf/sp.xml-template</code>.
     </p></li><li class=3D"listitem"><p>
      When using the template, replace the following placeholders.
     </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span c=
lass=3D"term"><code class=3D"literal">FEDLET_ENTITY_ID</code></span></dt><d=
d><p>
         The Fedlet entity ID used when communicating with the IDP.
        </p><p>
         OpenAM often uses the deployment URL as the entity ID,
         though that is a convention rather than a requirement.
        </p></dd><dt><span class=3D"term"><code class=3D"literal">FEDLET_PR=
OTOCOL</code></span></dt><dd><p>
         The Fedlet deployment protocol
         (<code class=3D"literal">http</code>, <code class=3D"literal">http=
s</code>)
        </p></dd><dt><span class=3D"term"><code class=3D"literal">FEDLET_HO=
ST</code></span></dt><dd><p>
         The Fedlet deployment host name
        </p></dd><dt><span class=3D"term"><code class=3D"literal">FEDLET_PO=
RT</code></span></dt><dd><p>
         The Fedlet deployment port number
        </p></dd><dt><span class=3D"term"><code class=3D"literal">FEDLET_DE=
PLOY_URI</code></span></dt><dd><p>
         The Fedlet application deployment path
        </p></dd></dl></div></li><li class=3D"listitem"><p>
      Add and edit role elements as children
      depending on the roles the Fedlet plays
      as described in the following sections.
     </p></li></ul></div><div class=3D"section" id=3D"unconfigured-fedlet-s=
p-standard-sso"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a c=
lass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#unconfigured-fedlet-sp-standard-sso">6.2.5.1.1.&nbsp;=
Single Sign-On and Logout: SPSSODescriptor Element</a></h5></div></div></di=
v><p>
     Add an <code class=3D"sgmltag-element">SPSSODescriptor</code> element =
to play the SP role
     in web single sign-on and logout.
     An <code class=3D"sgmltag-element">SPSSODescriptor</code> element has =
attributes specifying
     whether requests and assertion responses should be digitally signed.
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
       The <code class=3D"literal">AuthnRequestsSigned</code> attribute ind=
icates
       whether the Fedlet signs authentication requests.
      </p><p>
       If you set the <code class=3D"literal">AuthnRequestsSigned</code> at=
tribute to true,
       then you must also configure the <code class=3D"sgmltag-element">SPS=
SODescriptor</code> element
       to allow the Fedlet to sign requests.
       For details see the section on
       <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#fedlet-signing-encryption" title=3D"6.1.2.&nbsp=
;Enabling Signing and Encryption in a Fedlet">"Enabling Signing and Encrypt=
ion in a Fedlet"</a>.
      </p></li><li class=3D"listitem"><p>
       The <code class=3D"literal">WantAssertionsSigned</code> attribute in=
dicates
       whether the Fedlet requests signed assertion responses from the IDP.
      </p></li></ul></div><p>
     An <code class=3D"sgmltag-element">SPSSODescriptor</code> element's ch=
ildren indicate
     what name ID formats the Fedlet supports,
     and where the IDP can call the following services on the Fedlet.
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
       The <code class=3D"sgmltag-element">AssertionConsumerService</code> =
elements specify endpoints
       that support the SAML Authentication Request protocols.
      </p><p>
       You must specify at least one of these.
       The template specifies two, with the endpoint supporting
       the HTTP POST binding as the default.
      </p></li><li class=3D"listitem"><p>
       The optional <code class=3D"sgmltag-element">SingleLogoutService</co=
de> elements specify endpoints
       that support the SAML Single Logout protocols.
      </p></li></ul></div></div><div class=3D"section" id=3D"unconfigured-f=
edlet-sp-standard-attr-query"><div class=3D"titlepage"><div><div><h5 class=
=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp-standard-attr-q=
uery">6.2.5.1.2.&nbsp;Attribute Queries: RoleDescriptor Element</a></h5></d=
iv></div></div><p>
     Add a <code class=3D"sgmltag-element">RoleDescriptor</code> element wi=
th
     <code class=3D"literal">type=3D"query:AttributeQueryDescriptorType"</c=
ode>
     to perform attribute queries.
    </p><p>
     Attribute queries require the IDP to act as Attribute Authority
     and call for signing and encryption to be configured for the Fedlet.
     For details see the example in the procedure
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#try-fedlet-attribute-query" title=3D"To Use the F=
edlet to Query an Attribute Authority">"To Use the Fedlet to Query an Attri=
bute Authority"</a>.
     For example, you can set the attribute mapping on the Fedlet
     by editing the extended metadata attribute <code class=3D"literal">att=
ributeMap</code>
     in the <code class=3D"sgmltag-element">SPSSOConfig</code> element
     as described in <a class=3D"xref" href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp-extended-s=
pssoconfig" title=3D"6.2.5.2.1.&nbsp;Service Provider Extended XML: SPSSOCo=
nfig Settings">"Service Provider Extended XML: SPSSOConfig Settings"</a>.
    </p></div><div class=3D"section" id=3D"unconfigured-fedlet-sp-standard-=
xacml"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"s=
elf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#unconfigured-fedlet-sp-standard-xacml">6.2.5.1.3.&nbsp;XACML R=
equests: XACMLAuthzDecisionQueryDescriptor Element</a></h5></div></div></di=
v><p>
     Add an <code class=3D"sgmltag-element">XACMLAuthzDecisionQueryDescript=
or</code> element
     to perform XACML policy decision queries.
    </p><p>
     Attribute queries require the IDP to act as XACML PDP.
     For details see the example in the procedure
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#try-fedlet-xacml-query" title=3D"To Use the Fedle=
t to Query an XACML Policy Decision Point">"To Use the Fedlet to Query an X=
ACML Policy Decision Point"</a>.
    </p></div></div><div class=3D"section" id=3D"unconfigured-fedlet-sp-ext=
ended"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"s=
elf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#unconfigured-fedlet-sp-extended">6.2.5.2.&nbsp;Service Provide=
r Extended XML</a></h4></div></div></div><p>
    This section covers the configuration
    in the <code class=3D"filename">sp-extended.xml</code> file.
    The extended metadata are specific to the OpenAM implementation of SAML=
 v2.0.
   </p><p>
    The extended metadata file describes an <code class=3D"sgmltag-element"=
>EntityConfig</code> element,
    defined by the namespace with the identifier
    <code class=3D"literal">urn:sun:fm:SAML:2.0:entityconfig</code>.
    The XML schema definition is described in
    <code class=3D"filename">entity-config-schema.xsd</code>,
    available online as part of the OpenAM source code,
    though not included with the unconfigured Fedlet.
   </p><p>
    The unconfigured Fedlet does include a template file,
    <code class=3D"filename">conf/sp-extended.xml-template</code>.
    This extended metadata template for the IDP requires that you edit
    at least the <code class=3D"literal">FEDLET_ENTITY_ID</code> placeholde=
r value,
    the <code class=3D"literal">appLogoutUrl</code> attribute value
    in the <code class=3D"sgmltag-element">SPSSOConfig</code> element,
    and the <code class=3D"literal">fedletcot</code> values.
    The <code class=3D"literal">FEDLET_ENTITY_ID</code> value must reflect =
the SP entity ID
    used in the standard metadata.
    For the single logout profile,
    the <code class=3D"literal">appLogoutUrl</code> attribute value must ma=
tch
    the Fedlet URL based on the values used in the
    <code class=3D"filename">FederationConfig.properties</code> file.
    The <code class=3D"literal">fedletcot</code> values must correspond to
    the Circle of Trust name defined in <code class=3D"filename">fedlet.cot=
</code>.
   </p><p>
    The <code class=3D"literal">hosted</code> attribute on the <code class=
=3D"sgmltag-element">EntityConfig</code> element
    must remain set to <code class=3D"literal">hosted=3D"1"</code>,
    meaning that the SP is hosted (local to the Fedlet).
    If you provide a copy of the file to your IDP running OpenAM, however,
    then set <code class=3D"literal">hosted=3D"0"</code> for the IDP,
    as the Fedlet is remote to the IDP.
   </p><p>
    The extended metadata file is essentially a series of
    XML maps of key-value pairs specifying IDP configuration for each role.
    All role-level elements can take a <code class=3D"literal">metaAlias</c=
ode> attribute
    that the Fedlet uses when communicating with the IDP.
    Each child element of a role element defines an <code class=3D"sgmltag-=
element">Attribute</code>
    whose <code class=3D"literal">name</code> is the key.
    Each <code class=3D"sgmltag-element">Attribute</code> element can conta=
in multiple <code class=3D"sgmltag-element">Value</code> elements.
    The <code class=3D"sgmltag-element">Value</code> elements' contents com=
prise the values for the key.
    All values are strings, sometimes with a format that is meaningful to t=
he Fedlet.
    The basic example in the SP template shows the configuration options,
    documented in the following lists.
   </p><div class=3D"section" id=3D"unconfigured-fedlet-sp-extended-spssoco=
nfig"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"se=
lf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#unconfigured-fedlet-sp-extended-spssoconfig">6.2.5.2.1.&nbsp;Se=
rvice Provider Extended XML: SPSSOConfig Settings</a></h5></div></div></div=
><p>
     This section covers elements for the SP SSO role,
     arranged in the order they appear in the template.
    </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span cl=
ass=3D"term"><code class=3D"literal">description</code></span></dt><dd><p>
        Human-readable description of the Fedlet in the SP SSO role
       </p></dd><dt><span class=3D"term"><code class=3D"literal">signingCer=
tAlias</code></span></dt><dd><p>
        Alias of the public key certificate for the key pair
        used when signing messages to the IDP
       </p><p>
        The key pair is found in the Fedlet's keystore,
        and the certificate is included in the standard metadata.
        See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-properties-keys" title=
=3D"Public and Private Key Settings">Public and Private Key Settings</a> fo=
r details
        on how to specify access to the keystore,
        and <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp-standard" title=3D"=
6.2.5.1.&nbsp;Service Provider Standard XML">"Service Provider Standard XML=
"</a> for details
        on how to set up standard metadata.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">encryption=
CertAlias</code></span></dt><dd><p>
        Alias of the public key certificate for the key pair
        used when encrypting messages to the IDP
       </p><p>
        The key pair is found in the Fedlet's keystore,
        and the certificate is included in the standard metadata.
        See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-properties-keys" title=
=3D"Public and Private Key Settings">Public and Private Key Settings</a> fo=
r details
        on how to specify access to the keystore,
        and <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp-standard" title=3D"=
6.2.5.1.&nbsp;Service Provider Standard XML">"Service Provider Standard XML=
"</a> for details
        on how to set up standard metadata.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">basicAuthO=
n</code></span></dt><dd><p>
        Set this to true to use HTTP Basic authorization with the IDP.
       </p><p>
        Default: false
       </p></dd><dt><span class=3D"term"><code class=3D"literal">basicAuthU=
ser</code></span></dt><dd><p>
        When using HTTP Basic authorization with the IDP,
        this value is the user name.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">basicAuthP=
assword</code></span></dt><dd><p>
        When using HTTP Basic authorization with the IDP,
        this value is the password.
       </p><p>
        Encrypt the password using the <code class=3D"filename">encode.jsp<=
/code> page
        of your test copy of OpenAM that you might also have used
        to encode keystore passwords as described in
        <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#unconfigured-fedlet-properties-keys" title=3D"=
Public and Private Key Settings">Public and Private Key Settings</a>.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">autofedEna=
bled</code></span></dt><dd><p>
        Set this to true to enable automatic federation with OpenAM
        based on the value of a profile attribute that is common to user pr=
ofiles
        both in OpenAM and in the Fedlet's context.
       </p><p>
        Default: false
       </p></dd><dt><span class=3D"term"><code class=3D"literal">autofedAtt=
ribute</code></span></dt><dd><p>
        When automatic federation is enabled, set this
        to the name of the user profile attribute used for automatic federa=
tion.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">transientU=
ser</code></span></dt><dd><p>
        Use this effective identity for users with transient identifiers.
       </p><p>
        Default: anonymous
       </p></dd><dt><span class=3D"term"><code class=3D"literal">spAdapter<=
/code></span></dt><dd><p>
        Class name for a plugin service provider adapter
       </p><p>
        This class must extend
        <code class=3D"literal">com.sun.identity.saml2.plugins.SAML2Service=
ProviderAdapter</code>.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">spAdapterE=
nv</code></span></dt><dd><p>
        When using a plugin service provider adapter, this attribute's valu=
es
        optionally take a map of settings
        <code class=3D"literal"><em class=3D"replaceable">key</em>=3D<em cl=
ass=3D"replaceable">value</em></code>
        used to initialize the plugin.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">fedletAdap=
ter</code></span></dt><dd><p>
        Class name for an alternate fedlet adapter. Default is an empty val=
ue.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">fedletAdap=
terEnv</code></span></dt><dd><p>
        When using an alternate fedlet adapter, this attribute's values
        optionally take a map of settings
        <code class=3D"literal"><em class=3D"replaceable">key</em>=3D<em cl=
ass=3D"replaceable">value</em></code>
        used to initialize the plugin.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">spAccountM=
apper</code></span></dt><dd><p>
        Class name for an implementation mapping SAML protocol objects
        to local user profiles
       </p><p>
        Default:
        <code class=3D"literal">com.sun.identity.saml2.plugins.DefaultLibra=
rySPAccountMapper</code>
       </p></dd><dt><span class=3D"term"><code class=3D"literal">spAttribut=
eMapper</code></span></dt><dd><p>
        Class name for an implementation mapping SAML assertion attributes
        to local user profile attributes
       </p><p>
        Default:
        <code class=3D"literal">com.sun.identity.saml2.plugins.DefaultSPAtt=
ributeMapper</code>
       </p></dd><dt><span class=3D"term"><code class=3D"literal">spAuthncon=
textMapper</code></span></dt><dd><p>
        Class name for an implementation determining
        the authentication context to set in an authentication request,
        and mapping the authentication context to an authentication level
       </p><p>
        Default:
        <code class=3D"literal">com.sun.identity.saml2.plugins.DefaultSPAut=
hnContextMapper</code>
       </p></dd><dt><span class=3D"term"><code class=3D"literal">spAuthncon=
textClassrefMapping</code></span></dt><dd><p>
        String defining how the SAML authentication context classes
        map to authentication levels and indicate the default context class
       </p><p>
        Format: <code class=3D"literal"><em class=3D"replaceable">authnCont=
extClass</em>|<em class=3D"replaceable">authLevel</em>[|default]</code>
       </p><p>
        Default:
        <code class=3D"literal">urn:oasis:names:tc:SAML:2.0:ac:classes:Pass=
wordProtectedTransport|0|default</code>
       </p></dd><dt><span class=3D"term"><code class=3D"literal">spAuthncon=
textComparisonType</code></span></dt><dd><p>
        How to evaluate authentication context class identifiers.
       </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span=
 class=3D"term"><code class=3D"literal">exact</code></span></dt><dd><p>
           Assertion context must exactly match a context in the list
          </p></dd><dt><span class=3D"term"><code class=3D"literal">minimum=
</code></span></dt><dd><p>
           Assertion context must be at least as strong as a context in the=
 list
          </p></dd><dt><span class=3D"term"><code class=3D"literal">maximum=
</code></span></dt><dd><p>
           Assertion context must be no stronger than a context in the list
          </p></dd><dt><span class=3D"term"><code class=3D"literal">better<=
/code></span></dt><dd><p>
           Assertion context must be stronger than all contexts in the list
          </p></dd></dl></div><p>
        Default: <code class=3D"literal">exact</code>
       </p></dd><dt><span class=3D"term"><code class=3D"literal">attributeM=
ap</code></span></dt><dd><p>
        Map of SAML assertion attributes to local user profile attributes
       </p><p>
        Default: <code class=3D"literal">*=3D*</code>
       </p></dd><dt><span class=3D"term"><code class=3D"literal">saml2AuthM=
oduleName</code></span></dt><dd><p>
        Name of an alternative SAML v2.0 authentication module
       </p></dd><dt><span class=3D"term"><code class=3D"literal">localAuthU=
RL</code></span></dt><dd><p>
        URL to a login page on the Fedlet side
       </p><p>
        Use this to override the Assertion Consumer Service URL from the st=
andard metadata
        when consuming assertions.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">intermedia=
teUrl</code></span></dt><dd><p>
        URL to an intermediate page returned
        before the user accesses the final protected resource
       </p></dd><dt><span class=3D"term"><code class=3D"literal">defaultRel=
ayState</code></span></dt><dd><p>
        If no RelayState is specified in a SAML request,
        redirect to this URL after successful single sign-on.
       </p><p>
        URL-encode the <code class=3D"literal">defaultRelayState</code> val=
ue.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">appLogoutU=
rl</code></span></dt><dd><p>
        One or more Fedlet URLs that initiate single logout
       </p><p>
        Replace the placeholders in the default with the values for your Fe=
dlet.
       </p><p>
        Default:
        <code class=3D"literal">FEDLET_PROTOCOL://FEDLET_HOST:FEDLET_PORT/F=
EDLET_DEPLOY_URI/logout</code>
       </p></dd><dt><span class=3D"term"><code class=3D"literal">assertionT=
imeSkew</code></span></dt><dd><p>
        Tolerate clock skew between the Fedlet and the IDP
        of at most this number of seconds
       </p><p>
        Default: 300
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantAttrib=
uteEncrypted</code></span></dt><dd><p>
        Set to true to request that the IDP encrypt attributes in the respo=
nse
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantAssert=
ionEncrypted</code></span></dt><dd><p>
        Set to true to request that the IDP encrypt the SAML assertion in t=
he response
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantNameID=
Encrypted</code></span></dt><dd><p>
        Set to true to request that the IDP encrypt the name ID in the resp=
onse
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantPOSTRe=
sponseSigned</code></span></dt><dd><p>
        Set to true to request that the IDP sign the response when using HT=
TP POST
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantArtifa=
ctResponseSigned</code></span></dt><dd><p>
        Set to true to request that the IDP sign the response when using HT=
TP Artifact
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantLogout=
RequestSigned</code></span></dt><dd><p>
        Set to true to request that the IDP sign single logout requests
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantLogout=
ResponseSigned</code></span></dt><dd><p>
        Set to true to request that the IDP sign single logout responses
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantMNIReq=
uestSigned</code></span></dt><dd><p>
        Set to true to request that the IDP manage name ID requests
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantMNIRes=
ponseSigned</code></span></dt><dd><p>
        Set to true to request that the IDP manage name ID responses
       </p></dd><dt><span class=3D"term"><code class=3D"literal">cotlist</c=
ode></span></dt><dd><p>
        Set this to the Circle of Trust name used in
        <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#unconfigured-fedlet-cot" title=3D"6.2.3.&nbsp;=
Configuring Circles of Trust">"Configuring Circles of Trust"</a>.
       </p><p>
        Default: <code class=3D"literal">fedletcot</code>
       </p></dd><dt><span class=3D"term"><code class=3D"literal">saeAppSecr=
etList</code></span></dt><dd><p>
        When using Secure Attribute Exchange with OpenAM
        this represents the Application Security Configuration settings.
       </p><p>
        Values take the format
        <code class=3D"literal">url=3D<em class=3D"replaceable">FedletURL</=
em>|type=3D<em class=3D"replaceable">symmetric</em>|secret=3D<em class=3D"r=
eplaceable">EncodedSharedSecret</em>[|encryptionalgorithm=3D<em class=3D"re=
placeable">EncAlg</em>|encryptionkeystrength=3D<em class=3D"replaceable">En=
cStrength</em>]</code>
        or
        <code class=3D"literal">url=3D<em class=3D"replaceable">FedletURL</=
em>|type=3D<em class=3D"replaceable">asymmetric</em>|privatekeyalias=3D<em =
class=3D"replaceable">FedletSigningCertAlias</em>[|encryptionalgorithm=3D<e=
m class=3D"replaceable">EncAlg</em>|encryptionkeystrength=3D<em class=3D"re=
placeable">EncStrength</em>|pubkeyalias=3D<em class=3D"replaceable">FedletP=
ublicKeyAlias</em>]</code>
       </p><p>
        You can omit the <code class=3D"literal">privatekeyalias</code> set=
ting
        if the signing certifcate is specified in the standard metadata.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">saeSPUrl</=
code></span></dt><dd><p>
        When using Secure Attribute Exchange (SAE) with OpenAM
        this is the Fedlet URL that handles SAE requests.
        If this is omitted, then SAE is not enabled.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">saeSPLogou=
tUrl</code></span></dt><dd><p>
        When using Secure Attribute Exchange with OpenAM
        this is the Fedlet URL that handles SAE global logout requests.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">ECPRequest=
IDPListFinderImpl</code></span></dt><dd><p>
        When using the Enhanced Client and Proxy profile
        this is the class name for the implementation that returns
        a list of preferred IDPs trusted by the ECP.
       </p><p>
        Default: <code class=3D"literal">com.sun.identity.saml2.plugins.ECP=
IDPFinder</code>
       </p></dd><dt><span class=3D"term"><code class=3D"literal">ECPRequest=
IDPList</code></span></dt><dd><p>
        When using the Enhanced Client and Proxy profile
        this is the list of IDPs for the ECP to contact.
       </p><p>
        When not specified the list finder implementation is used.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">enableIDPP=
roxy</code></span></dt><dd><p>
        Set this to true to enable IDP proxy functionality.
       </p><p>
        Default: false
       </p></dd><dt><span class=3D"term"><code class=3D"literal">idpProxyLi=
st</code></span></dt><dd><p>
        A list of preferred IDPs that the Fedlet can proxy to
       </p></dd><dt><span class=3D"term"><code class=3D"literal">idpProxyCo=
unt</code></span></dt><dd><p>
        Number of IDP proxies that the Fedlet can have
       </p><p>
        Default: 0
       </p></dd><dt><span class=3D"term"><code class=3D"literal">useIntrodu=
ctionForIDPProxy</code></span></dt><dd><p>
        Set this to true to pick a preferred IDP
        based on a SAML v2.0 introduction cookie.
       </p><p>
        Default: false
       </p></dd></dl></div></div><div class=3D"section" id=3D"unconfigured-=
fedlet-sp-extended-attributequeryconfig"><div class=3D"titlepage"><div><div=
><h5 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp-exten=
ded-attributequeryconfig">6.2.5.2.2.&nbsp;Service Provider Extended XML: At=
tributeQueryConfig Settings</a></h5></div></div></div><p>
     This section covers elements for the Attribute Requester role,
     arranged in the order they appear in the template.
    </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span cl=
ass=3D"term"><code class=3D"literal">signingCertAlias</code></span></dt><dd=
><p>
        Alias of the public key certificate for the key pair
        used when signing messages to the IDP
       </p><p>
        The key pair is found in the Fedlet's keystore,
        and the certificate is included in the standard metadata.
        See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-properties-keys" title=
=3D"Public and Private Key Settings">Public and Private Key Settings</a> fo=
r details
        on how to specify access to the keystore,
        and <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp-standard" title=3D"=
6.2.5.1.&nbsp;Service Provider Standard XML">"Service Provider Standard XML=
"</a> for details
        on how to set up standard metadata.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">encryption=
CertAlias</code></span></dt><dd><p>
        Alias of the public key certificate for the key pair
        used when encrypting messages to the IDP
       </p><p>
        The key pair is found in the Fedlet's keystore,
        and the certificate is included in the standard metadata.
        See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-properties-keys" title=
=3D"Public and Private Key Settings">Public and Private Key Settings</a> fo=
r details
        on how to specify access to the keystore,
        and <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp-standard" title=3D"=
6.2.5.1.&nbsp;Service Provider Standard XML">"Service Provider Standard XML=
"</a> for details
        on how to set up standard metadata.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantNameID=
Encrypted</code></span></dt><dd><p>
        Set to true to request that the IDP encrypt the name ID
       </p></dd><dt><span class=3D"term"><code class=3D"literal">cotlist</c=
ode></span></dt><dd><p>
        Set this to the Circle of Trust name used in
        <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#unconfigured-fedlet-cot" title=3D"6.2.3.&nbsp;=
Configuring Circles of Trust">"Configuring Circles of Trust"</a>.
       </p><p>
        Default: <code class=3D"literal">fedletcot</code>
       </p></dd></dl></div></div><div class=3D"section" id=3D"unconfigured-=
fedlet-sp-extended-xacmlauthzdecisionqueryconfig"><div class=3D"titlepage">=
<div><div><h5 class=3D"title"><a class=3D"self-link" href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#unconfigured-fedlet=
-sp-extended-xacmlauthzdecisionqueryconfig">6.2.5.2.3.&nbsp;Service Provide=
r Extended XML: XACMLAuthzDecisionQueryConfig Settings</a></h5></div></div>=
</div><p>
     This section covers elements for the XACML decision requester role,
     enabling the Fedlet to act as a Policy Enforcement Point,
     arranged in the order they appear in the template.
    </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span cl=
ass=3D"term"><code class=3D"literal">signingCertAlias</code></span></dt><dd=
><p>
        Alias of the public key certificate for the key pair
        used when signing messages to the IDP
       </p><p>
        The key pair is found in the Fedlet's keystore,
        and the certificate is included in the standard metadata.
        See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-properties-keys" title=
=3D"Public and Private Key Settings">Public and Private Key Settings</a> fo=
r details
        on how to specify access to the keystore,
        and <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp-standard" title=3D"=
6.2.5.1.&nbsp;Service Provider Standard XML">"Service Provider Standard XML=
"</a> for details
        on how to set up standard metadata.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">encryption=
CertAlias</code></span></dt><dd><p>
        Alias of the public key certificate for the key pair
        used when encrypting messages to the IDP
       </p><p>
        The key pair is found in the Fedlet's keystore,
        and the certificate is included in the standard metadata.
        See <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-properties-keys" title=
=3D"Public and Private Key Settings">Public and Private Key Settings</a> fo=
r details
        on how to specify access to the keystore,
        and <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#unconfigured-fedlet-sp-standard" title=3D"=
6.2.5.1.&nbsp;Service Provider Standard XML">"Service Provider Standard XML=
"</a> for details
        on how to set up standard metadata.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">basicAuthO=
n</code></span></dt><dd><p>
        Set to true to use HTTP Basic authorization when contacting
        the Policy Decision Provider
       </p><p>
        Default: false
       </p></dd><dt><span class=3D"term"><code class=3D"literal">basicAuthU=
ser</code></span></dt><dd><p>
        When using Basic authorization to contact the Policy Decision Provi=
der,
        use this value as the user name
       </p></dd><dt><span class=3D"term"><code class=3D"literal">basicAuthP=
assword</code></span></dt><dd><p>
        When using Basic authorization to contact the Policy Decision Provi=
der,
        use this value as the password
       </p><p>
        Encrypt the password using the <code class=3D"filename">encode.jsp<=
/code> page
        of your test copy of OpenAM that you might also have used
        to encode keystore passwords as described in
        <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#unconfigured-fedlet-properties-keys" title=3D"=
Public and Private Key Settings">Public and Private Key Settings</a>.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantXACMLA=
uthzDecisionResponseSigned</code></span></dt><dd><p>
        Set this to true to request that the Policy Decision Provider sign =
the
        XACML response.
       </p></dd><dt><span class=3D"term"><code class=3D"literal">wantAssert=
ionEncrypted</code></span></dt><dd><p>
        Set this to true to request that the Policy Decision Provider
        encrypt the SAML assertion response
       </p></dd><dt><span class=3D"term"><code class=3D"literal">cotlist</c=
ode></span></dt><dd><p>
        Set this to the Circle of Trust name used in
        <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/index.html#unconfigured-fedlet-cot" title=3D"6.2.3.&nbsp;=
Configuring Circles of Trust">"Configuring Circles of Trust"</a>.
       </p><p>
        Default: <code class=3D"literal">fedletcot</code>
       </p></dd></dl></div></div></div></div><div class=3D"section" id=3D"u=
nconfigured-fedlet-embedding"><div class=3D"titlepage"><div><div><h3 class=
=3D"title"><a class=3D"self-link" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#unconfigured-fedlet-embedding">6.2.6.&=
nbsp;Embedding the Java Fedlet in a Web Application</a></h3></div></div></d=
iv><p>
   The Fedlet war file, <code class=3D"filename">Fedlet-13.5.2.war</code>,
   serves both as an example and also to provide the code needed
   to embed the Fedlet in your web application.
  </p><div class=3D"itemizedlist"><p>
    The basic steps for using the Fedlet in your application are as follows=
.
   </p><ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li cla=
ss=3D"listitem"><p>
     Unpack the Fedlet war file to a working directory,
     remove any files you do not want to keep such as
     <code class=3D"filename">index.jsp</code> or <code class=3D"filename">=
fedletEncode.jsp</code>,
     and overlay the Fedlet files with those of your web application.
    </p></li><li class=3D"listitem"><p>
     To integrate single sign-on into your application,
     modify the functionality in <code class=3D"filename">fedletSampleApp.j=
sp</code>
     or add it to your application's logic.
    </p><p>
     If you add it to your application's logic,
     then you must also edit your application's deployment descriptor file,
     <code class=3D"filename">web.xml</code>, to set the assertion consumer=
 URI,
     which by default is <code class=3D"literal">/fedletapplication</code>
     in the basic SP XML for the Fedlet.
     Add <code class=3D"literal">servlet</code> and <code class=3D"literal"=
>servlet-mapping</code>
     elements as shown in the following example.
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"codelisting prettyprint xml hl=
js"><span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">servlet</span>&g=
t;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">servlet-name</sp=
an>&gt;</span>yourapplication<span class=3D"hljs-tag">&lt;/<span class=3D"h=
ljs-name">servlet-name</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">jsp-file</span>&=
gt;</span>/your-application.jsp<span class=3D"hljs-tag">&lt;/<span class=3D=
"hljs-name">jsp-file</span>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">servlet</span>&gt;<=
/span>
<span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">servlet-mapping</spa=
n>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">servlet-name</sp=
an>&gt;</span>yourapplication<span class=3D"hljs-tag">&lt;/<span class=3D"h=
ljs-name">servlet-name</span>&gt;</span>
    <span class=3D"hljs-tag">&lt;<span class=3D"hljs-name">url-pattern</spa=
n>&gt;</span>/fedletapplication<span class=3D"hljs-tag">&lt;/<span class=3D=
"hljs-name">url-pattern</span>&gt;</span>
<span class=3D"hljs-tag">&lt;/<span class=3D"hljs-name">servlet-mapping</sp=
an>&gt;</span>
</pre></li><li class=3D"listitem"><p>
     Build a war file from your web application with embedded Fedlet files.
    </p><p>
     This is the version of the application to deploy.
    </p></li><li class=3D"listitem"><p>
     When you deploy your war file,
     also provide the Fedlet configuration as described in this section.
    </p></li></ul></div></div></div></div><div lang=3D"" class=3D"chapter" =
id=3D"chap-sts"><div class=3D"titlepage"><div><div><h1 class=3D"title"><a c=
lass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5=
/dev-guide/index.html#chap-sts">Chapter&nbsp;7.&nbsp;Working With the Secur=
ity Token Service</a></h1></div></div></div><a class=3D"indexterm" name=3D"=
d15472e20543"></a><p>
  This chapter covers tasks developers perform when working with OpenAM's
  Security Token Service (STS).
 </p><p>
  The Security Token Service transforms security tokens upon request. For
  example, you can call the Security Token Service to convert a username an=
d
  password token to a SAML v2.0 token. For a complete description of the
  Security Token Service, including operational flow, supported token types=
,
  configuration, and deployment, see
  <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/i=
ndex.html#chap-sts" class=3D"olink">"Configuring the Security Token Service=
"</a> in the <em>Administration Guide</em>.
 </p><p>
  This section covers tasks that developers perform when working with
  the Security Token Service:
 </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-s=
tyle-type: disc; "><li class=3D"listitem"><p>
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#sts-publish" title=3D"7.1.&nbsp;Publishing STS Ins=
tances">"Publishing STS Instances"</a>
   </p></li><li class=3D"listitem"><p>
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#sts-consume" title=3D"7.2.&nbsp;Consuming STS Inst=
ances">"Consuming STS Instances"</a>
   </p></li><li class=3D"listitem"><p>
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#sts-query-validate-cancel" title=3D"7.3.&nbsp;Quer=
ying, Validating, and Canceling Tokens">"Querying, Validating, and Cancelin=
g Tokens"</a>
   </p></li><li class=3D"listitem"><p>
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#sts-custom-token-types" title=3D"7.4.&nbsp;Extendi=
ng STS to Support Custom Token Types">"Extending STS to Support Custom Toke=
n Types"</a>
   </p></li></ul></div><p>
  Several sections in this chapter reference STS code examples. The followi=
ng
  procedure describes how to access the examples:
 </p><div class=3D"procedure" id=3D"sts-access-example-code"><div class=3D"=
procedure-inner"><div class=3D"procedure-title"><a class=3D"self-link" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
ts-access-example-code">To Access the STS Example Code</a></div><ol class=
=3D"procedure" type=3D"1"><li class=3D"step"><p>
    If you have not already done so, download and build the STS samples.
   </p><p lang=3D"en">
  For information on downloading and building OpenAM sample source code, se=
e
  <a class=3D"link" href=3D"https://backstage.forgerock.com/knowledge/kb/ar=
ticle/a47487197" target=3D"_blank">How do I access and build the
    sample code provided for OpenAM 12.x, 13.x and AM (All versions)?</a> i=
n the
  <em class=3D"citetitle">Knowledge Base</em>.
</p></li><li class=3D"step"><p>
    Check out the <code class=3D"literal">master</code> branch of the OpenA=
M
    source.
   </p><p>
    You can find the STS code examples under
    <code class=3D"filename">/path/to/openam-samples-external/sts-example-c=
ode</code>.
   </p></li></ol></div></div><div class=3D"section" id=3D"sts-publish"><div=
 class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a=
 class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#sts-publish">7.1.&nbsp;Publishing STS Instances</a>=
</h2></div></div></div><p>
   You configure STS <em class=3D"firstterm">instances</em> to perform one =
or more
   token transformations. Each instance provides configuration details abou=
t
   how SAML v2.0 and/or OpenID Connect output tokens are encrypted or signe=
d.
   Deployments that support multiple SAML v2.0 and/or OpenID Connect servic=
e
   providers require multiple STS instances.
  </p><p>
   <em class=3D"firstterm">Publishing an STS instance</em> means creating a=
n STS
   instance with a given configuration.
  </p><p>
   OpenAM supports two types of STS instances: REST STS instances and SOAP =
STS
   instances. REST STS instances provide token transformations by letting u=
sers
   call REST API endpoints, while SOAP STS instances provide token
   transformations by letting users call WS-Trust 1.4-compliant SOAP endpoi=
nts.
  </p><p>
   OpenAM provides two techniques for publishing STS instances:
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     Creating and configuring the instance by using the OpenAM console
    </p></li><li class=3D"listitem"><p>
     Executing code that calls the <code class=3D"literal">sts-publish</cod=
e> REST endpoint
    </p></li></ul></div><p>
   <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#chap-sts" class=3D"olink">"Configuring the Security Token Servic=
e"</a> in the <em>Administration Guide</em> describes how to
   create and configure STS instances by using the OpenAM console. This cha=
pter
   covers how to publish STS instances programmatically.
  </p><p>
   When you publish a REST STS instance, OpenAM exposes a REST endpoint for
   accessing the instance, and the instance is immediately available for us=
e to
   callers.
  </p><p>
   For SOAP STS instances, there is an additional deployment step. In order=
 for
   the SOAP endpoint to be exposed, a SOAP STS deployment must exist for th=
e
   realm in which the SOAP STS instance was created. A SOAP STS deployment =
is a
   running web application separate from OpenAM. For information about crea=
ting
   SOAP STS deployments, see
   <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide/=
index.html#sts-deploy-soap-sts" class=3D"olink">"Deploying SOAP STS Instanc=
es"</a> in the <em>Administration Guide</em>.
  </p><div class=3D"section" id=3D"sts-publish-service"><div class=3D"title=
page"><div><div><h3 class=3D"title"><a class=3D"self-link" href=3D"https://=
backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-publish-s=
ervice">7.1.1.&nbsp;The Publish Service</a></h3></div></div></div><p>
    To publish an STS instance, perform an HTTP POST on one of the
    <code class=3D"literal">sts-publish</code> endpoints:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      <code class=3D"literal">/sts-publish/rest</code>, for REST STS instan=
ces
     </p></li><li class=3D"listitem"><p>
      <code class=3D"literal">/sts-publish/soap</code>, for SOAP STS instan=
ces
     </p></li></ul></div><p>
    Specify the <code class=3D"literal">_action=3Dcreate</code> parameter i=
n the URL.
   </p><p>
    For example, you could publish a REST STS instance named
    <code class=3D"literal">username-transformer</code> in the Top Level Re=
alm as follows:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request POST \
 --header "iPlanetDirectoryPro: AQIC5..." \
 --header "Content-Type: application/json" \
 --data '{
    "invocation_context": "invocation_context_client_sdk",
    "instance_state": {
      "saml2-config": {
        "issuer-name":"saml2-issuer",
        ...
      },
      "deployment-config": {
        "deployment-url-element":"username-transformer",
        "deployment-realm":"/",
        ...
      },
      "persist-issued-tokens-in-cts":"false",
      "supported-token-transforms":[{
        "inputTokenType":"USERNAME",
        "outputTokenType":"OPENIDCONNECT",
        "invalidateInterimOpenAMSession":false
      }],
      "oidc-id-token-config":{
        "oidc-issuer":"test",
        ...
      }
    }
  } \
 https://openam.example.com:8443/openam/sts-publish/rest?_action=3Dcreate</=
strong>
<em class=3D"computeroutput">{
  "_id":"username-transformer",
  "_rev":"21939129",
  "result":"success",
  "url_element":"username-transformer"}
}</em></pre><p>
    The <code class=3D"literal">instance_state</code> object in the JSON pa=
yload represents
    the STS instance's configuration. For a complete example of an
    <code class=3D"literal">instance_state</code> object, see the sample co=
de for the
    <code class=3D"literal">RestSTSInstancePublisher</code> class in
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#sts-publish-rest" title=3D"7.1.2.&nbsp;Publishing =
REST STS Instances">"Publishing REST STS Instances"</a>.
   </p><p>
    Accessing the <code class=3D"literal">sts-publish</code> endpoint requi=
res
    administrative privileges. Authenticate as an OpenAM administrative use=
r,
    such as <code class=3D"literal">amadmin</code>, before attempting to pu=
blish an STS
    instance.
   </p><p>
    In addition to publishing instances, the <code class=3D"literal">sts-pu=
blish</code>
    endpoint can also return the configuration of an STS instance when you
    perform an HTTP GET on the <code class=3D"literal">sts-publish</code> e=
ndpoint for the
    instance. The endpoint you access differs for REST and SOAP STS instanc=
es:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      For REST STS instances, access
      <code class=3D"literal">/sts-publish/rest/<em class=3D"replaceable">r=
ealm</em>/<em class=3D"replaceable">deployment-URL-element</em></code>
     </p></li><li class=3D"listitem"><p>
      For SOAP STS instances, access
      <code class=3D"literal">/sts-publish/soap/<em class=3D"replaceable">r=
ealm</em>/<em class=3D"replaceable">deployment-URL-element</em></code>
     </p></li></ul></div><p>
    In the preceding examples, <em class=3D"replaceable">deployment-URL-ele=
ment</em>
    is the value of the STS instance's deployment URL element=E2=80=94one o=
f the
    instance's configuration properties. <em class=3D"replaceable">realm</e=
m> is the
    realm in which a SOAP STS instance has been configured.
   </p><p>
    For example, you could obtain the configuration of a REST STS instance
    configured in the Top Level Realm with the deployment URL element
    <code class=3D"literal">username-transformer</code> as follows:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request GET \
 --header "iPlanetDirectoryPro: AQIC5..." \
 https://openam.example.com:8443/openam/sts-publish/rest/username-transform=
er</strong>
<em class=3D"computeroutput">{
  "_id":"username-transformer",
  "_rev":"-659999943",
  "username-transformer": {
    "saml2-config": {
      "issuer-name":"saml2-issuer",
      ...
    },
    "deployment-config": {
      "deployment-url-element":"username-transformer",
      ...
    },
    "persist-issued-tokens-in-cts":"false",
    "supported-token-transforms":[{
      "inputTokenType":"USERNAME",
      "outputTokenType":"OPENIDCONNECT",
      "invalidateInterimOpenAMSession":false
      }],
    "oidc-id-token-config":{
      "oidc-issuer":"test",
      ...
    }
  }
}</em></pre><p>
    You can delete STS instances by performing an HTTP DELETE on the
    <code class=3D"literal">sts-publish</code> endpoint. The endpoint you a=
ccess differs for
    REST and SOAP STS instances:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      For REST STS instances, perform an HTTP DELETE on
      <code class=3D"literal">/sts-publish/rest/<em class=3D"replaceable">r=
ealm</em>/<em class=3D"replaceable">deployment-URL-element</em></code>
     </p></li><li class=3D"listitem"><p>
      For SOAP STS instances, perform an HTTP DELETE on
      <code class=3D"literal">/sts-publish/soap/<em class=3D"replaceable">r=
ealm</em>/<em class=3D"replaceable">deployment-URL-element</em></code>
     </p></li></ul></div></div><div class=3D"section" id=3D"sts-publish-res=
t"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-=
link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#sts-publish-rest">7.1.2.&nbsp;Publishing REST STS Instances</a></h=
3></div></div></div><p>
    The sample code referenced in this section provides an example of how t=
o
    programmatically publish REST STS instance. The code is not intended to=
 be a
    working example. Rather, it is a starting point=E2=80=94code that you c=
an
    modify to satisfy your organization's specific requirements. To access
    the sample code, see <a class=3D"xref" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#sts-access-example-code" titl=
e=3D"To Access the STS Example Code">"To Access the STS Example Code"</a>.
   </p><p>
    After publishing a REST STS instance programmatically, you can view the
    instance's configuration in the OpenAM console. The instance is ready f=
or
    consumption.
   </p><p>
    Sample code is available for the following classes:
   </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span cla=
ss=3D"term">RestSTSInstancePublisher</span></dt><dd><p>
       The <code class=3D"literal">RestSTSInstancePublisher</code> class ex=
poses an API to
       publish, delete, and update REST STS instances by calling methods th=
at
       perform an HTTP POST operation on the
       <code class=3D"literal">soap-sts/publish</code> endpoint.
      </p></dd><dt><span class=3D"term">RestSTSInstanceConfigFactory</span>=
</dt><dd><p>
       The <code class=3D"filename">RestSTSInstancePublisher</code>class ca=
lls the
       <code class=3D"literal">RestSTSInstanceConfigFactory</code> class to=
 create a
       <code class=3D"literal">RestSTSInstanceConfig</code> instance.
       <code class=3D"literal">RestSTSInstanceConfig</code> objects encapsu=
late all the
       configuration information of a REST STS instance, and emit JSON valu=
es
       that you can post to the <code class=3D"literal">sts-publish/rest</c=
ode> endpoint to
       publish a REST STS instance.
      </p></dd><dt><span class=3D"term">STSPublishContext</span></dt><dd><p=
>
       The sample <code class=3D"literal">STSPublishContext</code> class sp=
ecifies the
       configuration necessary to publish REST and SOAP STS instances. The
       class provides a programmatic method for setting configuration
       properties=E2=80=94the same configuration properties available throu=
gh
       the OpenAM console under Realms &gt;
       <em class=3D"replaceable">Realm Name</em> &gt; STS.
      </p></dd><dt><span class=3D"term">CustomTokenOperationContext</span><=
/dt><dd><p>
       The sample <code class=3D"literal">CustomTokenOperationContext</code=
> class
       specifies custom validators, token types, and transformations that a
       REST STS instance can support.
      </p></dd></dl></div><div class=3D"panel panel-primary"><div class=3D"=
panel-heading"><h3 class=3D"panel-title">Important</h3></div><div class=3D"=
panel-body"><p>
     The sample code referenced in this section is <span class=3D"emphasis"=
><em>not</em></span>
     compilable, because it uses classes that are not available publicly. T=
he
     code provides patterns to developers familiar with the problem domain =
and
     is intended only to assist developers who want to programmatically pub=
lish
     REST STS instances.
    </p><p>
     The sample code imports a number of classes, introducing dependencies.
     Classes imported from the OpenAM client SDK can remain in your code, b=
ut
     other imported classes must be removed and replaced with code that
     provides similar functionality in your environment. For example, the
     <code class=3D"literal">RestSTSInstanceConfigFactory</code> class uses=
 a constant
     named <code class=3D"literal">CommonConstants.DEFAULT_CERT_MODULE_NAME=
</code> from the
     imported
     <code class=3D"literal">com.forgerock.openam.functionaltest.sts.frmwk.=
common.CommonConstants</code>
     utility class. This utility class is not publicly available. Therefore=
,
     you need to replace this constant with another construct.
    </p><p>
     The critical part of the sample code is the idioms that programmatical=
ly
     set all the state necessary to publish a REST STS instance.
    </p></div></div></div><div class=3D"section" id=3D"sts-publish-soap"><d=
iv class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#sts-publish-soap">7.1.3.&nbsp;Publishing SOAP STS Instances</a></h3></d=
iv></div></div><p>
    The sample code referenced in this section provides an example of how t=
o
    programmatically publish of a SOAP STS instance. The code is not intend=
ed to
    be a working example. Rather, it is starter code that you can modify to
    satisfy your organization's specific requirements. To access
    the sample code, see <a class=3D"xref" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#sts-access-example-code" titl=
e=3D"To Access the STS Example Code">"To Access the STS Example Code"</a>.
   </p><p>
    After publishing a SOAP STS instance programmatically, you can view the
    instance's configuration in the OpenAM console. However, the instance i=
s
    not ready for consumption until after you have created and deployed a S=
OAP
    STS <code class=3D"literal">.war</code> file. For information about how=
 to create and
    deploy a SOAP STS <code class=3D"literal">.war</code> file, see
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide=
/index.html#sts-deploy-soap-sts" class=3D"olink">"Deploying SOAP STS Instan=
ces"</a> in the <em>Administration Guide</em>."
   </p><p>
    Sample code is available for the following classes:
   </p><div class=3D"variablelist"><dl class=3D"variablelist"><dt><span cla=
ss=3D"term">SoapSTSInstancePublisher</span></dt><dd><p>
       The sample <code class=3D"literal">SoapSTSInstancePublisher</code> c=
lass exposes an
       API to publish, delete, and update SOAP STS instances by calling met=
hods
       that perform an HTTP POST operation on the
       <code class=3D"literal">soap-sts-publish/publish</code> endpoint.
      </p></dd><dt><span class=3D"term">SoapSTSInstanceConfigFactory</span>=
</dt><dd><p>
       The sample <code class=3D"literal">SoapSTSInstancePublisher</code> c=
lass calls the
       <code class=3D"literal">SoapSTSInstanceConfigFactory</code> class to=
 create a
       <code class=3D"literal">SoapSTSInstanceConfig</code> instance.
       <code class=3D"literal">SoapSTSInstanceConfig</code> objects encapsu=
late all the
       configuration information of a SOAP STS instance, and emit JSON valu=
es
       that you can post to the <code class=3D"literal">soap-sts-publish/pu=
blish</code>
       endpoint to publish a REST STS instance.
      </p></dd><dt><span class=3D"term">SoapSTSServerCryptoState</span></dt=
><dd><p>
       The sample <code class=3D"literal">SoapSTSServerCryptoState</code> c=
lass specifies
       the configuration for the keystore used by a SOAP STS instance. The
       class provides a programmatic method for setting configuration
       properties=E2=80=94the same configuration properties available throu=
gh
       the OpenAM console under Realms &gt;
       <em class=3D"replaceable">Realm Name</em> &gt; STS &gt; Soap Keystor=
e
       Configuration.
      </p></dd><dt><span class=3D"term">STSPublishContext</span></dt><dd><p=
>
       The sample <code class=3D"literal">STSPublishContext</code> class sp=
ecifies the
       configuration necessary to publish REST and SOAP STS instances. The
       class provides a programmatic method for setting configuration
       properties=E2=80=94the same configuration properties available throu=
gh
       the OpenAM console under Realms &gt;
       <em class=3D"replaceable">Realm Name</em> &gt; STS.
      </p></dd></dl></div><div class=3D"panel panel-primary"><div class=3D"=
panel-heading"><h3 class=3D"panel-title">Important</h3></div><div class=3D"=
panel-body"><p>
     The sample code referenced in this section is <span class=3D"emphasis"=
><em>not</em></span>
     compilable, because it uses classes that are not available publicly. T=
he
     code provides patterns to developers familiar with the problem domain =
and
     is intended only to assist developers who want to programmatically pub=
lish
     SOAP STS instances.
    </p><p>
     The sample code imports a number of classes, introducing dependencies.
     Classes imported from the OpenAM client SDK and the SOAP STS client SD=
K
     can remain in your code, but other imported classes must be removed an=
d
     replaced with code that provides similar functionality in your
     environment. For example, the
     <code class=3D"literal">SoapSTSInstanceConfigFactory</code> class uses=
 a constant
     named <code class=3D"literal">CommonConstants.DEFAULT_CERT_MODULE_NAME=
</code> from the
     imported
     <code class=3D"literal">com.forgerock.openam.functionaltest.sts.frmwk.=
common.CommonConstants</code>
     utility class. This utility class is not publicly available. Therefore=
,
     you need to replace this constant with another construct.
    </p><p>
     The critical part of the sample code is the idioms that programmatical=
ly
     set all the state necessary to publish a SOAP STS instance.
    </p></div></div></div></div><div class=3D"section" id=3D"sts-consume"><=
div class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"=
><a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam=
/13.5/dev-guide/index.html#sts-consume">7.2.&nbsp;Consuming STS Instances</=
a></h2></div></div></div><p>
   Once REST and SOAP STS instance endpoints have been exposed, they are
   available for use to consumers as follows:
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     Developers access REST STS instances by making REST API calls that sup=
port
     token transformations.
    </p></li><li class=3D"listitem"><p>
     Developers access SOAP STS instances by sending SOAP messages or by us=
ing
     the SOAP STS client SDK. OpenAM's SOAP STS is
     <a class=3D"link" href=3D"http://docs.oasis-open.org/ws-sx/ws-trust/v1=
.4/ws-trust.html" target=3D"_blank">WS-Trust 1.4</a> compliant.
    </p></li></ul></div><div class=3D"section" id=3D"sts-consume-rest"><div=
 class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" h=
ref=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.htm=
l#sts-consume-rest">7.2.1.&nbsp;Consuming REST STS Instances</a></h3></div>=
</div></div><p>
    You consume a REST STS instance by sending REST API calls to the instan=
ce's
    endpoint.
   </p><div class=3D"section" id=3D"sts-consume-rest-endpoint"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-=
consume-rest-endpoint">7.2.1.1.&nbsp;REST STS Instance Endpoint</a></h4></d=
iv></div></div><p>
     REST STS instances' endpoints comprise the following parts:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
       The OpenAM context
      </p></li><li class=3D"listitem"><p>
       The string <code class=3D"literal">rest-sts</code>
      </p></li><li class=3D"listitem"><p>
       The realm in which the REST STS instance is configured
      </p></li><li class=3D"listitem"><p>
       The deployment URL element, which is one of the configuration proper=
ties
       of an STS instance
      </p></li></ul></div><p>
     For example, a REST STS instance configured in the realm
     <code class=3D"literal">myRealm</code> with the deployment URL element
     <code class=3D"literal">username-transformer</code> exposes the endpoi=
nt
     <code class=3D"literal">/rest-sts/myRealm/username-transformer</code>.
    </p></div><div class=3D"section" id=3D"sts-consume-json-payload"><div c=
lass=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" hre=
f=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#=
sts-consume-json-payload">7.2.1.2.&nbsp;JSON Representation of Token Transf=
ormations</a></h4></div></div></div><p>
     Token transformations are represented in JSON as follows:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">{
  "input_token_state": {
    "token_type": "<em><strong class=3D"replaceable">INPUT_TOKEN_TYPE</stro=
ng></em>"
    ... <em><strong class=3D"replaceable">INPUT_TOKEN_TYPE_PROPERTIES</stro=
ng></em> ...
  },
  "output_token_state": {
    "token_type": "<em><strong class=3D"replaceable">OUTPUT_TOKEN_TYPE</str=
ong></em>"
    ... <em><strong class=3D"replaceable">OUTPUT_TOKEN_TYPE_PROPERTIES</str=
ong></em> ...
  }
}</pre><p>
     REST STS supports the following token types and properties:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
       Input token types:
      </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"l=
ist-style-type: circle; "><li class=3D"listitem"><p>
         <code class=3D"literal">USERNAME</code>
        </p><p>
         Requires the <code class=3D"literal">username</code> and
         <code class=3D"literal">password</code> properties.
        </p></li><li class=3D"listitem"><p>
         <code class=3D"literal">OPENAM</code>
        </p><p>
         Requires the <code class=3D"literal">session_id</code> property, w=
ith an SSO
         token as its value.
        </p></li><li class=3D"listitem"><p>
         <code class=3D"literal">X509</code>
        </p><p>
         No properties are required, because input X.509 tokens are present=
ed
         either in HTTP headers or by using TLS. For more information about
         X.509 tokens, see the configuration details for the Authentication
         Target Mappings and Client Certificate Header Key properties in
         <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-=
guide/index.html#sts-configure-rest-properties" class=3D"olink">"REST STS C=
onfiguration Properties"</a> in the <em>Administration Guide</em>.
        </p></li><li class=3D"listitem"><p>
         <code class=3D"literal">OPENIDCONNECT</code>
        </p><p>
         Requires the <code class=3D"literal">oidc_id_token</code> property=
, with the
         OpenID Connect token as its value.
        </p></li></ul></div></li><li class=3D"listitem"><p>
       Output token types:
      </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"l=
ist-style-type: circle; "><li class=3D"listitem"><p>
         <code class=3D"literal">SAML2</code>
        </p><p>
         Requires the <code class=3D"literal">subject_confirmation</code> p=
roperty, the
         value of which determines the
         <code class=3D"literal">&lt;saml:ConfirmationMethod&gt;</code> ele=
ment for the
         generated SAML v2.0 assertion. Valid values are
         <code class=3D"literal">BEARER</code>, <code class=3D"literal">SEN=
DER_VOUCHES</code>, and
         <code class=3D"literal">HOLDER_OF_KEY</code>.
        </p><p>
         When generating an assertion with a holder-of-key subject confirma=
tion
         method, the <code class=3D"literal">proof_token_state</code> prope=
rty is required.
         The value for this property is an object that contains the
         <code class=3D"literal">base64EncodedCertificate</code> property.
        </p></li><li class=3D"listitem"><p>
         <code class=3D"literal">OPENIDCONNECT</code>
        </p><p>
         Requires the <code class=3D"literal">nonce</code> and
         <code class=3D"literal">allow_access</code> properties.
        </p></li></ul></div></li></ul></div><p>
     The following are examples of JSON payloads that define REST STS token
     transformations:
    </p><div class=3D"orderedlist"><ol class=3D"orderedlist" type=3D"1"><li=
 class=3D"listitem"><p>
       Transform a username token to a SAML v2.0 token with the bearer subj=
ect
       confirmation method:
      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlig=
ht">{
  "input_token_state": {
    "token_type": "USERNAME",
    "username": "demo",
    "password": "changeit"
  },
  "output_token_state": {
    "token_type": "SAML2",
    "subject_confirmation": "BEARER"
  }
}</pre></li><li class=3D"listitem"><p>
       Transform an X.509 token to a SAML v2.0 token with the sender vouche=
s
       subject confirmation method:
      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlig=
ht">{
  "input_token_state": {
    "token_type": "X509"
  },
  "output_token_state": {
    "token_type": "SAML2",
    "subject_confirmation": "SENDER_VOUCHES"
  }
}</pre></li><li class=3D"listitem"><p>
       Transform an OpenID Connect token to a SAML v2.0 token with the
       holder-of-key subject confirmation method:
      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlig=
ht">{
  "input_token_state": {
    "token_type": "OPENIDCONNECT",
    "oidc_id_token": "eyAiYWxQ.euTNnNDExNTkyMjEyIH0.kuNlKwyvZJqaC8EYpDyPJMi=
EcII"
  },
  "output_token_state": {
    "token_type": "SAML2",
    "subject_confirmation": "HOLDER_OF_KEY",
    "proof_token_state": {
      "base64EncodedCertificate": "MIMbFAAOBjQAwgYkCgYEArSQ...c/U75GB2AtKhb=
GS5pimrW0Y0Q=3D=3D"
     }
  }
}</pre></li><li class=3D"listitem"><p>
       Transform an OpenAM SSO token to an OpenID Connect token:
      </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Cop=
y command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa =
fa-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlig=
ht">{
  "input_token_state": {
    "token_type": "OPENAM",
    "session_id": "AQIC5wM2...TMQAA*"
  },
  "output_token_state": {
    "token_type": "OPENIDCONNECT",
    "nonce": "471564333",
    "allow_access": true
  }
}</pre></li></ol></div><p>
     For more examples of JSON payloads that you can send to REST STS insta=
nces,
     see the comments in the sample code in
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#sts-consume-rest-programmatic" title=3D"7.2.1.4.&=
nbsp;Java Example">"Java Example"</a>.
    </p></div><div class=3D"section" id=3D"sts-consume-rest-cli"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-=
consume-rest-cli">7.2.1.3.&nbsp;Command-Line Example</a></h4></div></div></=
div><p>
     You can use the <span class=3D"command"><strong>curl</strong></span> c=
ommand to quickly verify that a
     published REST STS instance operates as expected.
    </p><p>
     For example, if you publish a REST instance with a deployment URL elem=
ent
     <code class=3D"literal">usernmame-transformer</code> that supports use=
rname to SAML
     v2.0 bearer assertion token transformation, you can perform an HTTP PO=
ST to
     the <code class=3D"literal">/rest-sts/username-transformer</code> endp=
oint, setting the
     <code class=3D"literal">_action</code> parameter to <code class=3D"lit=
eral">translate</code> as
     follows:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"codelisting prettyprint nohigh=
light">$ curl \
 --request POST \
 --header "iPlanetDirectoryPro: AQIC5..." \
 --header "Content-Type: application/json" \
 --data '{
    "input_token_state": {
        "token_type": "USERNAME",
        "username": "demo",
        "password": "changeit"
    },
    "output_token_state": {
        "token_type": "SAML2",
        "subject_confirmation": "BEARER"
    }
 }' \
 https://openam.example.com:8443/openam/rest-sts/username-transformer?_acti=
on=3Dtranslate
 {
  "issued_token":
     "&lt;saml:Assertion
       xmlns:saml=3D\"urn:oasis:names:tc:SAML:2.0:assertion\"
       Version=3D\"2.0\"
       ID=3D\"s2c51ebd0ad10aae44fb76e4b400164497c63b4ce6\"
       IssueInstant=3D\"2016-03-02T00:14:47Z\"&gt;\n
       &lt;saml:Issuer&gt;saml2-issuer&lt;/saml:Issuer&gt;
       &lt;saml:Subject&gt;\n
        &lt;saml:NameID
         Format=3D\"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\=
"&gt;demo
        &lt;/saml:NameID&gt;
        &lt;saml:SubjectConfirmation
         Method=3D\"urn:oasis:names:tc:SAML:2.0:cm:bearer\"&gt;\n
         &lt;saml:SubjectConfirmationData
          NotOnOrAfter=3D\"2016-03-02T00:24:47Z\" &gt;
         &lt;/saml:SubjectConfirmationData&gt;
        &lt;/saml:SubjectConfirmation&gt;\n
       &lt;/saml:Subject&gt;
       &lt;saml:Conditions
        NotBefore=3D\"2016-03-02T00:14:47Z\"
        NotOnOrAfter=3D\"2016-03-02T00:24:47Z\"&gt;\n
        &lt;saml:AudienceRestriction&gt;\n
         &lt;saml:Audience&gt;saml2-issuer-entity&lt;/saml:Audience&gt;\n
        &lt;/saml:AudienceRestriction&gt;\n&lt;/saml:Conditions&gt;\n
        &lt;saml:AuthnStatement
         AuthnInstant=3D\"2016-03-02T00:14:47Z\"&gt;
         &lt;saml:AuthnContext&gt;
          &lt;saml:AuthnContextClassRef&gt;
           urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTranspor=
t
          &lt;/saml:AuthnContextClassRef&gt;
         &lt;/saml:AuthnContext&gt;
        &lt;/saml:AuthnStatement&gt;
       &lt;/saml:Assertion&gt;\n"
}</pre><p lang=3D"en">
  The <code class=3D"literal">iPlanetDirectoryPro</code> header is required=
 and should
  contain the SSO token of an administrative user, such as <code class=3D"l=
iteral">amAdmin</code>, who
  has access to perform the operation.
</p></div><div class=3D"section" id=3D"sts-consume-rest-programmatic"><div =
class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#sts-consume-rest-programmatic">7.2.1.4.&nbsp;Java Example</a></h4></div></=
div></div><p>
     The <code class=3D"filename">RestSTSConsumer.java</code> sample code p=
rovides an
     example of how to consume a published REST STS instance programmatical=
ly.
     Tailor this example as required to provide programmatic consumption of=
 your
     own REST STS instances. To access the sample code, see
     <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#sts-access-example-code" title=3D"To Access the S=
TS Example Code">"To Access the STS Example Code"</a>.
    </p><div class=3D"panel panel-primary"><div class=3D"panel-heading"><h3=
 class=3D"panel-title">Important</h3></div><div class=3D"panel-body"><p>
      The sample code referenced in this section is <span class=3D"emphasis=
"><em>not</em></span>
      compilable, because it uses classes that are not available publicly. =
The
      code provides patterns to developers familiar with the problem domain=
 and
      is intended only to assist developers who want to programmatically co=
nsume
      REST STS instances.
     </p></div></div></div></div><div class=3D"section" id=3D"sts-consume-s=
oap"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"sel=
f-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/=
index.html#sts-consume-soap">7.2.2.&nbsp;Consuming SOAP STS Instances</a></=
h3></div></div></div><p>
    You consume a SOAP STS instance by sending it SOAP messages to the
    instance's endpoint, or by calling it using the OpenAM SOAP STS client =
SDK.
   </p><div class=3D"section" id=3D"sts-consume-soap-endpoint"><div class=
=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-=
consume-soap-endpoint">7.2.2.1.&nbsp;SOAP STS Instance URL</a></h4></div></=
div></div><p>
     SOAP STS instances' URLs comprise the following parts:
    </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"lis=
t-style-type: disc; "><li class=3D"listitem"><p>
       The SOAP STS deployment context
      </p></li><li class=3D"listitem"><p>
       The string <code class=3D"literal">sts</code>
      </p></li><li class=3D"listitem"><p>
       The realm in which the REST STS instance is configured
      </p></li><li class=3D"listitem"><p>
       The deployment URL element, which is one of the configuration proper=
ties
       of an STS instance
      </p></li></ul></div><p>
     The SOAP STS deployment context comprises the base URL of the web
     container to which the SOAP STS <code class=3D"literal">.war</code> fi=
le is deployed
     and the deployment web application name. For more information about SO=
AP
     STS deployments, see
     <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guid=
e/index.html#sts-deploy-soap-sts-deploy-war" class=3D"olink">"Deploying the=
 SOAP STS Instance to a Web Container"</a> in the <em>Administration Guide<=
/em>.
    </p><p>
     For example, a SOAP STS instance configured in the realm
     <code class=3D"literal">myRealm</code> with the deployment URL element
     <code class=3D"literal">soap-username-transformer</code> and the a dep=
loyment web
     application name <code class=3D"literal">openam-soap-sts</code> would =
expose a URL
     similar to
     <code class=3D"literal">https://soap-sts-host.com:8443/openam-soap-sts=
/sts/myRealm/soap-username-transformer</code>.
    </p><p>
     The WSDL for the service would be available at
     <code class=3D"literal">https://soap-sts-host.com:8443/openam-soap-sts=
/sts/myRealm/soap-username-transformer?wsdl</code>.
    </p></div><div class=3D"section" id=3D"sts-consume-soap-messages"><div =
class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#sts-consume-soap-messages">7.2.2.2.&nbsp;Consuming SOAP STS Instances Usin=
g SOAP Messages</a></h4></div></div></div><p>
     Because an OpenAM SOAP STS instance is a WS-Trust 1.4-compliant securi=
ty
     token service, users can consume the instance by sending it standard
     WS-Trust 1.4 SOAP STS framework messages, such as
     <code class=3D"literal">RequestSecurityToken</code> messages, passed a=
s the payload to
     WSDL ports that are implemented by the security token services.
    </p><p>
     For more information about WS-Trust 1.4 security token services,
     see the
     <a class=3D"link" href=3D"http://docs.oasis-open.org/ws-sx/ws-trust/v1=
.4/ws-trust.html" target=3D"_blank">WS-Trust 1.4 specification</a>.
    </p></div><div class=3D"section" id=3D"sts-consume-soap-client-sdk"><di=
v class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#sts-consume-soap-client-sdk">7.2.2.3.&nbsp;Consuming SOAP STS Instances =
Using the OpenAM SOAP STS Client SDK</a></h4></div></div></div><p>
     You can consume an OpenAM SOAP STS instance by calling it using the Op=
enAM
     SOAP STS client SDK.
    </p><div class=3D"section" id=3D"sts-consume-soap-client-sdk-about"><di=
v class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self-link" =
href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.ht=
ml#sts-consume-soap-client-sdk-about">7.2.2.3.1.&nbsp;About the SOAP STS Cl=
ient SDK</a></h5></div></div></div><p>
      The SOAP STS client SDK is based on classes in
      <a class=3D"link" href=3D"http://cxf.apache.org/" target=3D"_blank">A=
pache CXF</a>, an open source service framework. Apache CXF provides
      the
      <a class=3D"link" href=3D"http://cxf.apache.org/javadoc/latest" targe=
t=3D"_blank"><code class=3D"literal">org.apache.cxf.ws.security.trust.STSCl=
ient</code></a>
      class, which encapsulates consumption of a SOAP STS service. However,
      using this class requires considerable expertise.
     </p><p>
      The SOAP STS client SDK makes it easier to consume OpenAM SOAP STS
      instances than using Apache CXF for the following reasons:
     </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"li=
st-style-type: disc; "><li class=3D"listitem"><p>
        The <code class=3D"literal">org.forgerock.openam.sts.soap.SoapSTSCo=
nsumer</code>
        class in the OpenAM SOAP STS client SDK wraps the Apache CXF class
        <code class=3D"literal">org.apache.cxf.ws.security.trust.STSClient<=
/code>, providing
        a higher level of abstraction that makes consumption of SOAP STS
        instances easier to achieve.
       </p></li><li class=3D"listitem"><p>
        The <code class=3D"literal">SoapSTSConsumer</code> class'
        <code class=3D"literal">issueToken</code>, <code class=3D"literal">=
validateToken</code>, and
        <code class=3D"literal">cancelToken</code> methods provide the thre=
e fundamental
        operations exposed by SOAP STS instances. Supporting classes facili=
tate
        the creation of state necessary to invoke these methods.
       </p></li><li class=3D"listitem"><p>
        Classes in the SDK provide logic to allow OpenAM session tokens to =
be
        presented in order to satisfy the security policy bindings that man=
date
        OpenAM sessions as supporting tokens. The STS client obtains secret
        password state=E2=80=94keystore entry passwords and aliases, userna=
me
        token credential information, and so forth=E2=80=94from a callback
        handler. The <code class=3D"literal">SoapSTSConsumerCallbackHandler=
</code> class
        provides the means to create a callback handler initialized with st=
ate
        that will be encountered when consuming SOAP STS instances. The
        <code class=3D"literal">SoapSTSConsumerCallbackHandler</code> insta=
nce can be passed
        to an STS client. The <code class=3D"literal">TokenSpecification</c=
ode> class
        provides a way to create the varying token state necessary to obtai=
n
        specific tokens and create any necessary supporting state.
       </p></li></ul></div><p>
      You can use the classes in the SOAP STS client SDK as is, or you can
      tailor them to your needs. For more information about the SOAP STS cl=
ient
      SDK classes, see the source code and the Javadoc.
     </p></div><div class=3D"section" id=3D"sts-consume-soap-client-sdk-bui=
ld"><div class=3D"titlepage"><div><div><h5 class=3D"title"><a class=3D"self=
-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/i=
ndex.html#sts-consume-soap-client-sdk-build">7.2.2.3.2.&nbsp;Building a SOA=
P STS Client SDK .jar File</a></h5></div></div></div><p>
      The SOAP STS client SDK is not part of the OpenAM client SDK.
      <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide=
/index.html#ftn.d15472e21342" class=3D"footnote"><sup class=3D"footnote" id=
=3D"d15472e21342">[2]</sup></a>
      To use the SOAP STS client SDK, you must compile the source code for =
the
      SOAP STS client SDK and create a <code class=3D"literal">.jar</code> =
file.
     </p><div class=3D"procedure" id=3D"sts-consume-soap-client-sdk-build-p=
rocedure"><div class=3D"procedure-inner"><div class=3D"procedure-title"><a =
class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.=
5/dev-guide/index.html#sts-consume-soap-client-sdk-build-procedure">To Buil=
d the SOAP STS Client SDK</a></div><ol class=3D"procedure" type=3D"1"><li c=
lass=3D"step"><p>
        Download the OpenAM source code.
       </p></li><li class=3D"step"><p>
        Change to the <code class=3D"filename">openam-sts/openam-soap-sts</=
code>
        directory.
       </p></li><li class=3D"step"><p>
        Run the <code class=3D"literal">mvn install</code> command.
       </p></li><li class=3D"step"><p>
        Locate the
        <code class=3D"filename">openam-soap-sts-client-13.5.2-15.jar</code=
>
        file in the
        <code class=3D"filename">openam-sts/openam-soap-sts/openam-soap-sts=
-client/target</code>
        directory.
       </p></li></ol></div></div></div></div></div></div><div class=3D"sect=
ion" id=3D"sts-query-validate-cancel"><div class=3D"titlepage"><div><div><h=
2 class=3D"title" style=3D"clear: both"><a class=3D"self-link" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sts-query=
-validate-cancel">7.3.&nbsp;Querying, Validating, and Canceling Tokens</a><=
/h2></div></div></div><p>
   Both REST and SOAP STS instances support
   <em class=3D"firstterm">token persistence</em>, which is the ability to =
store
   tokens issued for the STS instance in the Core Token Service (CTS). You
   enable token persistence for both REST and SOAP STS instances' configura=
tion
   under Realms &gt; <em class=3D"replaceable">Realm Name</em> &gt; STS &gt=
;
   <em class=3D"replaceable">STS Instance Name</em> &gt; General Configurat=
ion &gt;
   Persist Issued Tokens in Core Token Store. Tokens are saved in the CTS f=
or
   the duration of the token lifetime, which is a configuration property fo=
r
   STS-issued SAML v2.0 and OpenID Connect tokens. Tokens with expired dura=
tions
   are periodically removed from the CTS.
  </p><p>
   With token persistence enabled for an STS instance, OpenAM provides the
   ability to query, validate, and cancel tokens issued for the instance:
  </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list-=
style-type: disc; "><li class=3D"listitem"><p>
     <em class=3D"firstterm">Querying tokens</em> means listing tokens issu=
ed for an
     STS instance or for a user.
    </p></li><li class=3D"listitem"><p>
     <em class=3D"firstterm">Validating a token</em> means verifying that t=
he token
     is still present in the CTS.
    </p></li><li class=3D"listitem"><p>
     <em class=3D"firstterm">Cancelling a token</em> means removing the tok=
en from
     the CTS.
    </p></li></ul></div><div class=3D"section" id=3D"sts-query-validate-can=
cel-sts-tokengen"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a=
 class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#sts-query-validate-cancel-sts-tokengen">7.3.1.&nbsp=
;Invoking the sts-tokengen Endpoint</a></h3></div></div></div><p>
    The <code class=3D"literal">sts-tokengen</code> endpoint provides admin=
istrators with
    the ability to query and cancel tokens issued <span class=3D"emphasis">=
<em>for both REST and
    SOAP STS instances</em></span> using REST API calls.
   </p><p>
    When using the <code class=3D"literal">sts-tokengen</code> endpoint, be=
 sure to
    provide the token ID for an OpenAM administrator, such as
    <code class=3D"literal">amadmin</code>, as the value of a header whose =
name is the name
    of the SSO token cookie, by default <code class=3D"literal">iPlanetDire=
ctoryPro</code>.
   </p><div class=3D"section" id=3D"sts-query-validate-cancel-sts-tokengen-=
query"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a class=3D"s=
elf-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#sts-query-validate-cancel-sts-tokengen-query">7.3.1.1.&nbsp;Qu=
erying Tokens</a></h4></div></div></div><p>
     List tokens issued for an STS instance by using the
     <code class=3D"literal">queryFilter</code> action in an HTTP GET call =
to the
     <code class=3D"literal">sts-tokengen</code> endpoint with the <code cl=
ass=3D"literal">/sts-id</code>
     argument.
    </p><p>
     The following example lists all the tokens issued for the
     <code class=3D"literal">username-transformer</code> STS instance. The =
results show that
     OpenAM has issued two OpenID Connect tokens for the <code class=3D"lit=
eral">demo</code>
     user for the <code class=3D"literal">username-transformer</code> STS i=
nstance:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"codelisting prettyprint json h=
ljs">$ curl \
 --request GET \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span=
> \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/sts-to=
kengen\</span>
     ?_queryFilter=3D\/sts_id+eq+\'username-transformer'\
 {
  <span class=3D"hljs-attr">"result"</span>:[
    {
      <span class=3D"hljs-attr">"_id"</span>:<span class=3D"hljs-string">"B=
663D248CE4C3B63A7422000B03B8F5E0F8E443B"</span>,
      <span class=3D"hljs-attr">"_rev"</span>:<span class=3D"hljs-string">"=
"</span>,
      <span class=3D"hljs-attr">"token_id"</span>:<span class=3D"hljs-strin=
g">"B663D248CE4C3B63A7422000B03B8F5E0F8E443B"</span>,
      <span class=3D"hljs-attr">"sts_id"</span>:<span class=3D"hljs-string"=
>"username-transformer"</span>,
      <span class=3D"hljs-attr">"principal_name"</span>:<span class=3D"hljs=
-string">"demo"</span>,
      <span class=3D"hljs-attr">"token_type"</span>:<span class=3D"hljs-str=
ing">"OPENIDCONNECT"</span>,
      <span class=3D"hljs-attr">"expiration_time"</span>:<span class=3D"hlj=
s-number">1459376096</span>
    },
    {
      <span class=3D"hljs-attr">"_id"</span>:<span class=3D"hljs-string">"7=
CB70009970D1AAFF177AC2A08D58405EDC35DF5"</span>,
      <span class=3D"hljs-attr">"_rev"</span>:<span class=3D"hljs-string">"=
"</span>,
      <span class=3D"hljs-attr">"token_id"</span>:<span class=3D"hljs-strin=
g">"7CB70009970D1AAFF177AC2A08D58405EDC35DF5"</span>,
      <span class=3D"hljs-attr">"sts_id"</span>:<span class=3D"hljs-string"=
>"username-transformer"</span>,
      <span class=3D"hljs-attr">"principal_name"</span>:<span class=3D"hljs=
-string">"demo"</span>,
      <span class=3D"hljs-attr">"token_type"</span>:<span class=3D"hljs-str=
ing">"OPENIDCONNECT"</span>,
      <span class=3D"hljs-attr">"expiration_time"</span>:<span class=3D"hlj=
s-number">1459376098</span>
   }
 ],
 <span class=3D"hljs-attr">"resultCount"</span>:<span class=3D"hljs-number"=
>2</span>,
 <span class=3D"hljs-attr">"pagedResultsCookie"</span>:<span class=3D"hljs-=
literal">null</span>,
 <span class=3D"hljs-attr">"totalPagedResultsPolicy"</span>:<span class=3D"=
hljs-string">"NONE"</span>,
 <span class=3D"hljs-attr">"totalPagedResults"</span>:<span class=3D"hljs-n=
umber">-1</span>,
 <span class=3D"hljs-attr">"remainingPagedResults"</span>:<span class=3D"hl=
js-number">-1</span>
}</pre><p>
     List tokens issued for a particular user with the
     <code class=3D"literal">queryFilter</code> action in an HTTP GET call =
to the
     <code class=3D"literal">sts-tokengen</code> endpoint with the
     <code class=3D"literal">/token-principal</code> argument.
    </p><p>
     The following example lists all the tokens issued for the
     <code class=3D"literal">demo</code> user. The results show that OpenAM=
 has issued two
     OpenID Connect tokens:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
code to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"codelisting prettyprint json h=
ljs">$ curl \
 --request GET \
 --header <span class=3D"hljs-string">"iPlanetDirectoryPro: AQIC5..."</span=
> \
 https:<span class=3D"hljs-comment">//openam.example.com:8443/openam/sts-to=
kengen\</span>
     ?_queryFilter=3D\/token_principal+eq+\'demo'\
 {
  <span class=3D"hljs-attr">"result"</span>:[
    {
      <span class=3D"hljs-attr">"_id"</span>:<span class=3D"hljs-string">"B=
663D248CE4C3B63A7422000B03B8F5E0F8E443B"</span>,
      <span class=3D"hljs-attr">"_rev"</span>:<span class=3D"hljs-string">"=
"</span>,
      <span class=3D"hljs-attr">"token_id"</span>:<span class=3D"hljs-strin=
g">"B663D248CE4C3B63A7422000B03B8F5E0F8E443B"</span>,
      <span class=3D"hljs-attr">"sts_id"</span>:<span class=3D"hljs-string"=
>"username-transformer"</span>,
      <span class=3D"hljs-attr">"principal_name"</span>:<span class=3D"hljs=
-string">"demo"</span>,
      <span class=3D"hljs-attr">"token_type"</span>:<span class=3D"hljs-str=
ing">"OPENIDCONNECT"</span>,
      <span class=3D"hljs-attr">"expiration_time"</span>:<span class=3D"hlj=
s-number">1459376096</span>
    },
    {
      <span class=3D"hljs-attr">"_id"</span>:<span class=3D"hljs-string">"7=
CB70009970D1AAFF177AC2A08D58405EDC35DF5"</span>,
      <span class=3D"hljs-attr">"_rev"</span>:<span class=3D"hljs-string">"=
"</span>,
      <span class=3D"hljs-attr">"token_id"</span>:<span class=3D"hljs-strin=
g">"7CB70009970D1AAFF177AC2A08D58405EDC35DF5"</span>,
      <span class=3D"hljs-attr">"sts_id"</span>:<span class=3D"hljs-string"=
>"username-transformer"</span>,
      <span class=3D"hljs-attr">"principal_name"</span>:<span class=3D"hljs=
-string">"demo"</span>,
      <span class=3D"hljs-attr">"token_type"</span>:<span class=3D"hljs-str=
ing">"OPENIDCONNECT"</span>,
      <span class=3D"hljs-attr">"expiration_time"</span>:<span class=3D"hlj=
s-number">1459376098</span>
   }
 ],
 <span class=3D"hljs-attr">"resultCount"</span>:<span class=3D"hljs-number"=
>2</span>,
 <span class=3D"hljs-attr">"pagedResultsCookie"</span>:<span class=3D"hljs-=
literal">null</span>,
 <span class=3D"hljs-attr">"totalPagedResultsPolicy"</span>:<span class=3D"=
hljs-string">"NONE"</span>,
 <span class=3D"hljs-attr">"totalPagedResults"</span>:<span class=3D"hljs-n=
umber">-1</span>,
 <span class=3D"hljs-attr">"remainingPagedResults"</span>:<span class=3D"hl=
js-number">-1</span>
}</pre></div><div class=3D"section" id=3D"sts-query-validate-cancel-sts-tok=
engen-cancel"><div class=3D"titlepage"><div><div><h4 class=3D"title"><a cla=
ss=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/index.html#sts-query-validate-cancel-sts-tokengen-cancel">7.3.1.2.=
&nbsp;Cancelling Tokens</a></h4></div></div></div><p>
     Cancel tokens by making an HTTP DELETE call to the
     <code class=3D"literal">sts-tokengen</code>/<em class=3D"replaceable">=
token_id</em>
     endpoint:
    </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy =
command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight=
">$ <strong class=3D"userinput">curl \
 --request DELETE \
 --header "iPlanetDirectoryPro: AQIC5..." \
 https://openam.example.com:8443/openam/sts-tokengen/B663D248CE4C3B63A74220=
00B03B8F5E0F8E443B</strong>
<em class=3D"computeroutput">{
 "_id":"B663D248CE4C3B63A7422000B03B8F5E0F8E443B",
 "_rev":"B663D248CE4C3B63A7422000B03B8F5E0F8E443B",
 "result":"token with id B663D248CE4C3B63A7422000B03B8F5E0F8E443B successfu=
lly removed."
}</em></pre></div></div><div class=3D"section" id=3D"query-validate-cancel-=
rest-sts-instance"><div class=3D"titlepage"><div><div><h3 class=3D"title"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#query-validate-cancel-rest-sts-instance">7.3.2.&nb=
sp;Validating and Cancelling Tokens by Invoking a REST STS Instance</a></h3=
></div></div></div><p>
    REST STS users can validate and cancel tokens by making an HTTP POST ca=
ll to
    a REST STS instance's endpoint.
   </p><p>
    To validate a token, use the <code class=3D"literal">validate</code> ac=
tion. The
    following example validates an OpenID Connect token previously issued b=
y
    the <code class=3D"literal">username-transformer</code> REST STS instan=
ce:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request POST \
 --header "iPlanetDirectoryPro: AQIC5..." \
 --header "Content-Type: application/json" \
 --data '{
    "validated_token_state": {
        "token_type": "OPENIDCONNECT",
        "oidc_id_token": "eyAidHlwIjogIkpXVCIsIC..."
    }
 }' \
 https://openam.example.com:8443/openam/rest-sts/username-transformer?_acti=
on=3Dvalidate</strong>
<em class=3D"computeroutput">{
 "token_valid":true
}</em></pre><p>
    To cancel a token, use the <code class=3D"literal">cancel</code> action=
. The
    following example cancels an OpenID Connect token previously issued by
    the <code class=3D"literal">username-transformer</code> REST STS instan=
ce:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ommand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-=
files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight"=
>$ <strong class=3D"userinput">curl \
 --request POST \
 --header "iPlanetDirectoryPro: AQIC5..." \
 --header "Content-Type: application/json" \
 --data '{
    "cancelled_token_state": {
        "token_type": "OPENIDCONNECT",
        "oidc_id_token": "eyAidHlwIjogIkpXVCIsIC..."
    }
 }' \
 https://openam.example.com:8443/openam/rest-sts/username-transformer?_acti=
on=3Dcancel</strong>
<em class=3D"computeroutput">{
 "result":"OPENIDCONNECT token cancelled successfully."
}</em></pre></div><div class=3D"section" id=3D"query-validate-cancel-soap-s=
ts-instance"><div class=3D"titlepage"><div><div><h3 class=3D"title"><a clas=
s=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#query-validate-cancel-soap-sts-instance">7.3.3.&nbsp;Val=
idating and Cancelling Tokens by Invoking a SOAP STS Instance</a></h3></div=
></div></div><p>
    The source code for the <code class=3D"literal">validateToken</code> an=
d
    <code class=3D"literal">cancelToken</code> methods in the
    <code class=3D"literal">org.forgerock.openam.sts.soap.SoapSTSConsumer</=
code>
    class provides information needed to construct WS-Trust 1.4-compliant c=
alls
    for validating and cancelling tokens.
   </p><p>
    Locate the
    <code class=3D"literal">org.forgerock.openam.sts.soap.SoapSTSConsumer</=
code> class
    under <code class=3D"literal">openam-sts/openam-soap-sts/openam-soap-st=
s-client</code>
    in the OpenAM source code.
   </p></div></div><div class=3D"section" id=3D"sts-custom-token-types"><di=
v class=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><=
a class=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#sts-custom-token-types">7.4.&nbsp;Extending STS to=
 Support Custom Token Types</a></h2></div></div></div><p>
   OpenAM supports token transformations to and from a variety of token
   types, including username, SAML v2.0, OpenID Connect, and X.509. In addi=
tion
   to these supported token types, REST STS instances can use custom token =
types
   as the input or output token, or both, in a token transformation. When y=
ou
   configure a REST STS instance to support a token transformation that tak=
es a
   custom token type, you can also configure a custom validator and provide=
r
   class for the custom token type. OpenAM uses custom validator classes to
   validate custom tokens and custom provider classes to produce custom tok=
ens.
  </p><p>
   Specify custom token validator and provider classes in the OpenAM consol=
e
   by configuring the Custom Token Validators and Custom Token Providers
   properties under Realms &gt; <em class=3D"replaceable">Realm Name</em> &=
gt; STS
   &gt; <em class=3D"replaceable">REST STS Instance Name</em>.
  </p><p>
   A custom validator class can be used in transformations that produce sta=
ndard
   STS output tokens, such as SAML v2.0 tokens or OpenID Connect tokens, an=
d in
   transformations that produce custom output token types.
  </p><p>
   A custom provider class can be used in token transformations that take
   standard STS input tokens, such as username tokens or OpenAM SSO tokens,=
 and
   in transformations that take custom input token types.
  </p><p>
   Before a REST STS instance can use a custom token type validator or prov=
ider
   class, you must bundle the class into the OpenAM <code class=3D"literal"=
>.war</code> file
   and restart OpenAM.
  </p><p>
   OpenAM invokes a single instance of a validator or provider class to run=
 all
   concurrently dispatched token transformations that use the custom token =
type.
   Because there is only a single instance of the class, you must code cust=
om
   validator and provider classes to be thread-safe.
  </p><div class=3D"section" id=3D"sts-consume-rest-custom-validator"><div =
class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link" hr=
ef=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html=
#sts-consume-rest-custom-validator">7.4.1.&nbsp;Developing Custom Token Typ=
e Validator Classes</a></h3></div></div></div><p>
    To create a custom token type validator class, implement the
    <code class=3D"literal">org.forgerock.openam.sts.rest.token.validator.R=
estTokenTransformValidator</code>
    class.
   </p><p>
    Custom token type validator classes implement the
    <code class=3D"literal">validateToken</code> method. This method takes =
a
    <code class=3D"literal">RestTokenValidatorParameters</code> object as i=
nput. Note that
    the generic type of <code class=3D"literal">RestTokenValidatorParameter=
s</code> is
    <code class=3D"literal">org.forgerock.json.fluent.JsonValue</code>. As =
a result of using
    this type, custom validator classes can access the JSON representation
    of the input token passed to the REST STS instance in the
    <code class=3D"literal">input_token_state</code> JSON key.
   </p><p>
    The <code class=3D"literal">validateToken</code> method returns an
    <code class=3D"literal">org.forgerock.openam.sts.rest.token.validator.R=
estTokenTransformValidatorResult</code>
    object. At a minimum, this object contains the OpenAM SSO token
    corresponding to the validated principal. It can also contain additiona=
l
    information specified as a JSON value, allowing a custom validator to p=
ass
    extra state to a custom provider in a token transformation.
   </p></div><div class=3D"section" id=3D"sts-consume-rest-custom-provider"=
><div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-li=
nk" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#sts-consume-rest-custom-provider">7.4.2.&nbsp;Developing Custom Toke=
n Type Provider Classes</a></h3></div></div></div><p>
    To create a custom token type provider class, implement the
    <code class=3D"literal">org.forgerock.openam.sts.rest.token.provider.Re=
stTokenProvider</code>
    class.
   </p><p>
    Custom token type provider classes implement the
    <code class=3D"literal">createToken</code> method. This method takes an
    <code class=3D"literal">org.forgerock.openam.sts.rest.token.provider.Cu=
stomRestTokenProviderParameters</code>
    object as input. This object gives the custom provider access to the
    following information:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      The principal returned by the
      <code class=3D"literal">RestTokenTransformValidator</code>
     </p></li><li class=3D"listitem"><p>
      The OpenAM SSO token corresponding to the validated principal
     </p></li><li class=3D"listitem"><p>
      Any additional state returned in the
      <code class=3D"literal">RestTokenValidatorResult</code> object
     </p></li><li class=3D"listitem"><p>
      The type of input token validated by the
      <code class=3D"literal">RestTokenTransformValidator</code> in the tok=
en transformation
     </p></li><li class=3D"listitem"><p>
      The <code class=3D"literal">JsonValue</code> corresponding to this va=
lidated token,
      as specified by the <code class=3D"literal">input_token_state</code> =
object in the
      transformation request
     </p></li><li class=3D"listitem"><p>
      The <code class=3D"literal">JsonValue</code> corresponding to the
      <code class=3D"literal">token_output_state</code> object specified in=
 the token
      transformation request (which can provide additional information
      pertinent to the creation of the output token)
     </p></li></ul></div><p>
    The <code class=3D"literal">createToken</code> method returns a string =
representation
    of the custom token in a format that can be transmitted across HTTP in
    JSON. It should be base64-encoded if binary.
   </p></div><div class=3D"section" id=3D"sts-consume-rest-custom-using"><d=
iv class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link"=
 href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.h=
tml#sts-consume-rest-custom-using">7.4.3.&nbsp;Using Custom Token Type Vali=
dators and Providers</a></h3></div></div></div><p>
    This section provides an example of how to use custom token type
    validators and providers.
   </p><p>
    The example assumes that you already configured a token transformation
    by completing the following tasks:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      Implementing the <code class=3D"literal">RestTokenTransformValidator<=
/code> interface
      to create a custom token type validator
     </p></li><li class=3D"listitem"><p>
      Implementing the <code class=3D"literal">RestTokenProvider</code> int=
erface to create
      a custom token type provider
     </p></li><li class=3D"listitem"><p>
      Bundling the two classes into the OpenAM <code class=3D"literal">.war=
</code> file
     </p></li><li class=3D"listitem"><p>
      Restarting OpenAM
     </p></li><li class=3D"listitem"><p>
      Publishing a REST STS instance with a custom token type named
      <code class=3D"literal">CUSTOM</code>, specifying the custom validato=
r and provider
      classes in the instance's configuration
     </p></li></ul></div><p>
    To transform a <code class=3D"literal">CUSTOM</code> token to an OpenID=
 Connect token,
    you might specify a JSON payload similar to the following:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"input_token_state"</span>:
        {
            <span class=3D"hljs-string">"token_type"</span>: <span class=3D=
"hljs-string">"CUSTOM"</span>,
            <span class=3D"hljs-string">"extra_stuff"</span>: <span class=
=3D"hljs-string">"very_useful_state"</span>
        },
    <span class=3D"hljs-string">"output_token_state"</span>:
        {
            <span class=3D"hljs-string">"token_type"</span>: <span class=3D=
"hljs-string">"OPENIDCONNECT"</span>,
            <span class=3D"hljs-string">"nonce"</span>: <span class=3D"hljs=
-string">"1234"</span>,
            <span class=3D"hljs-string">"allow_access"</span>: <span class=
=3D"hljs-literal">true</span>
        }
}
   </pre><p>
    With the preceding JSON payload, OpenAM passes a
    <code class=3D"literal">JsonValue</code> instance to the
    <code class=3D"literal">validateToken</code> method of the custom token=
 type validator
    class as follows:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"token_type"</span>: <span class=3D"hljs-st=
ring">"CUSTOM"</span>,
    <span class=3D"hljs-string">"extra_stuff"</span>: <span class=3D"hljs-s=
tring">"very_useful_state"</span>
}
   </pre><p>
    To transform a username token to a <code class=3D"literal">CUSTOM</code=
> token, you
    might specify a JSON payload similar to the following:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"input_token_state"</span>:
        {
            <span class=3D"hljs-string">"token_type"</span>: <span class=3D=
"hljs-string">"USERNAME"</span>,
            <span class=3D"hljs-string">"username"</span>: <span class=3D"h=
ljs-string">"unt_user17458687"</span>,
            <span class=3D"hljs-string">"password"</span>: <span class=3D"h=
ljs-string">"password"</span>
        },
    <span class=3D"hljs-string">"output_token_state"</span>:
        {
            <span class=3D"hljs-string">"token_type"</span>: <span class=3D=
"hljs-string">"CUSTOM"</span>,
            <span class=3D"hljs-string">"extra_stuff_for_custom"</span>: <s=
pan class=3D"hljs-string">"some_useful_information"</span>
        }
}
   </pre><p>
    With the preceding JSON payload, OpenAM passes the following informatio=
n
    to the <code class=3D"literal">createToken</code> method of the custom =
token type
    provider:
   </p><div class=3D"itemizedlist"><ul class=3D"itemizedlist" style=3D"list=
-style-type: disc; "><li class=3D"listitem"><p>
      The principal returned by the <code class=3D"literal">USERNAME</code>=
 token validator:
      <code class=3D"literal">unt_user17458687</code>.
     </p></li><li class=3D"listitem"><p>
      The OpenAM SSO token corresponding to this authenticated principal.
     </p></li><li class=3D"listitem"><p>
      Additional state returned by the token validator, if any. Because the
      <code class=3D"literal">USERNAME</code> token validator does not retu=
rn any additional
      state, the additional state for this example would be null.
     </p></li><li class=3D"listitem"><p>
      The input token type: <code class=3D"literal">CUSTOM</code>
     </p></li><li class=3D"listitem"><p>
      A <code class=3D"literal">JsonValue</code> representation of the foll=
owing:
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint javascript=
 hljs">{
    <span class=3D"hljs-string">"token_type"</span>: <span class=3D"hljs-st=
ring">"USERNAME"</span>,
    <span class=3D"hljs-string">"username"</span>: <span class=3D"hljs-stri=
ng">"unt_user17458687"</span>,
    <span class=3D"hljs-string">"password"</span>: <span class=3D"hljs-stri=
ng">"password"</span>
}
</pre><p>
     </p></li><li class=3D"listitem"><p>
      A <code class=3D"literal">JsonValue</code> representation of the foll=
owing:
</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy code=
 to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa-fi=
les-o"></span></span></div><pre class=3D"codelisting prettyprint javascript=
 hljs">{
    <span class=3D"hljs-string">"token_type"</span>: <span class=3D"hljs-st=
ring">"CUSTOM"</span>,
    <span class=3D"hljs-string">"extra_stuff_for_custom"</span>: <span clas=
s=3D"hljs-string">"some_useful_information"</span>
}
</pre><p>
     </p></li></ul></div><p>
    To transform a <code class=3D"literal">CUSTOM</code> token to a
    <code class=3D"literal">CUSTOM</code> token, you might specify a JSON p=
ayload similar to
    the following:
   </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy c=
ode to clipboard"><span class=3D"btn-copy-codelisting"><span class=3D"fa fa=
-files-o"></span></span></div><pre class=3D"codelisting prettyprint javascr=
ipt hljs">{
    <span class=3D"hljs-string">"input_token_state"</span>:
        {
            <span class=3D"hljs-string">"token_type"</span>: <span class=3D=
"hljs-string">"CUSTOM"</span>,
            <span class=3D"hljs-string">"extra_stuff"</span>: <span class=
=3D"hljs-string">"very_useful_state"</span>
        },
    <span class=3D"hljs-string">"output_token_state"</span>:
        {
            <span class=3D"hljs-string">"token_type"</span>: <span class=3D=
"hljs-string">"CUSTOM"</span>,
            <span class=3D"hljs-string">"extra_stuff_for_custom"</span>: <s=
pan class=3D"hljs-string">"some_useful_information"</span>
        }
}
   </pre><p>
    The input to the custom validator and provider would be similar to the
    preceding examples, with the possible addition of any additional state =
that
    the custom validator returned from the <code class=3D"literal">validate=
Token</code>
    method.
   </p></div></div><div class=3D"footnotes"><br><hr class=3D"footnote-hr"><=
div id=3D"ftn.d15472e21342" class=3D"footnote"><p><a href=3D"https://backst=
age.forgerock.com/docs/openam/13.5/dev-guide/index.html#d15472e21342" class=
=3D"para"><sup class=3D"para">[2] </sup></a>
        The SOAP STS client SDK has a dependency on Apache CXF classes, whi=
ch is
        not present in the OpenAM client SDK. Therefore, the two SDKs are n=
ot
        bundled together.
       </p></div></div></div><div lang=3D"" class=3D"chapter" id=3D"chap-sa=
e"><div class=3D"titlepage"><div><div><h1 class=3D"title"><a class=3D"self-=
link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#chap-sae">Chapter&nbsp;8.&nbsp;Using Secure Attribute Exchange</a>=
</h1></div></div></div><a class=3D"indexterm" name=3D"d15472e21807"></a><p>
  Most deployments can rely on OpenAM to handle authentication and provide
  identity assertions. OpenAM supports a wide variety of
  authentication scenarios out of the box, but OpenAM also makes it possibl=
e to
  add custom authentication modules. Furthermore, OpenIG lets you integrate
  legacy systems into your access management deployment.
 </p><p>
  In a deployment where you need OpenAM to act as a SAML v2.0 gateway to a
  legacy application that serves as an identity provider, you can use OpenA=
M
  Secure Attribute Exchange (SAE). On the identity provider side, SAE lets
  OpenAM retrieve the information needed to create assertions from an exter=
nal
  authentication service, bypassing OpenAM authentication and trusting the
  external service as the authoritative source of authentication. On the se=
rvice
  provider side, SAE lets OpenAM securely provide attributes to an applicat=
ion
  that makes its own policy decision based on the attributes rather than re=
ly on
  OpenAM for the policy decision.
 </p><div class=3D"mediaobject" align=3D"center" id=3D"figure-sae"><a class=
=3D"fancybox cboxElement" href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/dev-guide/images/sae.png"><img class=3D"img-responsive center-block=
" data-toggle=3D"tooltip" src=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/images/thumb_sae.png" align=3D"middle" height=3D"394" alt=
=3D"External applications use SAE to participate in federation." title=3D""=
 data-original-title=3D"External applications use SAE to communicate with O=
penAM providers.
   The providers in turn use SAML v2.0 to communicate with other
   providers."></a></div><p>
  When you use SAE on the identity provider side, an external application
  acts as the authoritative source of authentication. After a user authenti=
cates
  successfully, the application tells OpenAM to create a session by sending
  a secure HTTP GET or POST to OpenAM that asserts the identity of the user=
.
  OpenAM processes the assertion to create a session for the user. If the u=
ser
  is already authenticated and comes back to access the application, the
  application sends a secure HTTP POST to OpenAM to assert both the user's
  identity and also any necessary attributes related to the user. OpenAM
  processes the assertion to create the session for the user and populate t=
he
  attributes in the user's session. When the user logs out, the external
  authentication application can initiate single logout from the identity
  provider OpenAM server by sending the <code class=3D"literal">sun.cmd=3Dl=
ogout</code>
  attribute to OpenAM using SAE.
 </p><p>
  On the service provider side, OpenAM communicates using SAML v2.0 with
  OpenAM on the identity provider side. OpenAM can use SAE to transmit
  attributes to an application through a secure HTTP POST.
 </p><p>
  SAE relies either on shared keys and symmetric encryption, or on public
  and private keys and asymmetric encryption to protect attributes communic=
ated
  between OpenAM and external applications.
 </p><p>
  OpenAM ships with sample JSPs that demonstrate secure attribute
  exchange. To try the sample, you must set up an OpenAM Circle of
  Trust to include an identity provider and a service provider, install the=
 SDK
  sample web application on each provider, and then configure the providers
  appropriately as described in this chapter to secure communications with =
the
  sample SAE applications on both the identity provider and service provide=
r
  sides.
 </p><div class=3D"section" id=3D"sae-install-prerequisites"><div class=3D"=
titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a class=3D"=
self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gui=
de/index.html#sae-install-prerequisites">8.1.&nbsp;Installing the Samples</=
a></h2></div></div></div><p>Set up an OpenAM server as an identity provider=
, and another as a
  service provider, connecting the two in a circle of trust called
  <code class=3D"literal">samplesaml2cot</code>. Configure both the hosted =
providers and
  also the remote providers as described in <a href=3D"https://backstage.fo=
rgerock.com/docs/openam/13.5/admin-guide/index.html#saml2-providers-and-cot=
s" class=3D"olink">"Configuring Identity Providers, Service Providers, and =
Circles of Trust"</a> in the <em>Administration Guide</em>. This chapter as=
sumes you set up the hosted
  identity provider at <code class=3D"literal">http://idp.example.com:8080/=
openam</code> and
  the hosted service provider at
  <code class=3D"literal">http://sp.example.com:8080/openam</code>. Use Rea=
lms &gt;
  <em class=3D"replaceable">Realm Name</em> &gt;
  Test Federation Connectivity in the OpenAM console to make sure Federatio=
n is
  working before you add secure attribute exchange applications that rely o=
n
  functioning SAML v2.0 communications between the providers.</p><p>Set up =
the sample web application as described in <a class=3D"xref" href=3D"https:=
//backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#install-sdk=
-samples" title=3D"2.2.1.&nbsp;Installing OpenAM Client SDK Samples">"Insta=
lling OpenAM Client SDK Samples"</a>, both on the identity provider side
  and also on the service provider side. The SAE samples are found under
  <code class=3D"filename">/saml2/sae</code> where you installed the sample=
s.
  <code class=3D"filename">saeIDPApp.jsp</code> is the identity provider si=
de external
  application. <code class=3D"filename">saeSPApp.jsp</code> is the service =
provider side
  external application.</p></div><div class=3D"section" id=3D"sae-security-=
prerequisites"><div class=3D"titlepage"><div><div><h2 class=3D"title" style=
=3D"clear: both"><a class=3D"self-link" href=3D"https://backstage.forgerock=
.com/docs/openam/13.5/dev-guide/index.html#sae-security-prerequisites">8.2.=
&nbsp;Preparing to Secure SAE Communications</a></h2></div></div></div><p>I=
n order for SAE to be secure, you must both set up a trust
  relationship between the application on the identity provider side and
  the OpenAM server acting as identity provider, and sets up a trust
  relationship between the application on the service provider side and
  the OpenAM server acting as the service provider. These trust
  relationships can be based on a shared secret and symmetric encryption,
  or on public and private key pairs and asymmetric encryption. The trust
  relationships on either side are independent. For example, you can use a
   shared secret on the identity provider side and
  certificates on the service provider side if you chose.</p><p>When using =
symmetric encryption, you must define a shared secret
  string used both for the application and the provider. The sample uses
  <code class=3D"literal">secret12</code> as the shared secret. To simplify
  configuration, the sample uses the same shared secret, and thus
  symmetric encryption, for both trust relationships.</p><p>When using symm=
etric encryption, you must also use the encoded
  version of your shared secret. To get the encoded version of a shared
  secret string, use the <code class=3D"filename">encode.jsp</code> page on=
 the
  provider, as in
  <code class=3D"literal">http://idp.example.com:8080/openam/encode.jsp</co=
de> and
  <code class=3D"literal">http://sp.example.com:8080/openam/encode.jsp</cod=
e>. An
  encoded version of <code class=3D"literal">secret12</code> looks somethin=
g like
  <code class=3D"literal">AQICEcFhDWmb6sVmMuCJuVh43306HVacDte9</code>.</p><=
p>When using asymmetric encryption, you must obtain a public-private
  key pair for the application, and store the keys in a keystore on the
  application side. Also store the public key from OpenAM which is acting
  as the provider in the application's keystore. Make note of the
  certificate aliases for your application's private key, and for OpenAM's
  public key. Also note the path to the keystore for your application,
  the keystore password, and the private key password.</p></div><div class=
=3D"section" id=3D"sae-secure-idp"><div class=3D"titlepage"><div><div><h2 c=
lass=3D"title" style=3D"clear: both"><a class=3D"self-link" href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sae-secure-i=
dp">8.3.&nbsp;Securing the Identity Provider Side</a></h2></div></div></div=
><p>This configuration uses the default sample settings with a shared
  secret of <code class=3D"literal">secret12</code>, without encryption of =
the
  attributes:</p><div class=3D"orderedlist"><ol class=3D"orderedlist" type=
=3D"1"><li class=3D"listitem"><p>Log in as <code class=3D"literal">amadmin<=
/code> to the OpenAM server console
    where you set up the hosted identity provider (IDP).</p></li><li class=
=3D"listitem"><p>The sample includes a <code class=3D"literal">branch</code=
> attribute not
    found in user profiles by default. Therefore, under Realms &gt;
    <em class=3D"replaceable">Realm Name</em> &gt; Authentication &gt; Sett=
ings
    &gt; User Profile, set User Profile to Ignored, and then save your work=
.</p></li><li class=3D"listitem"><div class=3D"itemizedlist"><p>Under Feder=
ation &gt; Entity Providers, click the name for the
     Hosted IDP in order to access the IDP configuration:</p><ul class=3D"i=
temizedlist" style=3D"list-style-type: disc; "><li class=3D"listitem"><p>Un=
der Assertion Processing &gt; Attribute Mapper, add both
      <code class=3D"literal">mail=3Dmail</code> and <code class=3D"literal=
">branch=3Dbranch</code> to
      the attribute map, and then Save your work.</p></li><li class=3D"list=
item"><p>Under Advanced &gt; SAE Configuration, make sure the IDP URL
      reflects an endpoint on the IDP such as
      <code class=3D"literal">http://idp.example.com:8080/openam/idpsaehand=
ler/metaAlias/idp</code>,
      and then Save your work.</p></li><li class=3D"listitem"><p>Also under=
 Advanced &gt; SAE Configuration &gt; Application
      Security Configuration, add the URL value for the kind of encryption =
you
      are using, and then Save your work.</p><p>When using the defaults, th=
e value is something like
      <code class=3D"literal">url=3Dhttp://idp.example.com:8080/samples/sam=
l2/sae/saeIDPApp.jsp|type=3Dsymmetric|secret=3D<em class=3D"replaceable">en=
coded-secret</em></code>, where the OpenAM SDK sample web
      application is deployed on the IDP side with context root
      <code class=3D"literal">/samples</code> and the
      <em class=3D"replaceable">encoded-secret</em> is something like
      <code class=3D"literal">AQICEcFhDWmb6sVmMuCJuVh43306HVacDte9</code>.<=
/p><p>If you use a different mechanism to secure the communications
      between the SAE application and the provider, read the online help in=
 the
      console to see how to construct your URL value.</p></li></ul></div></=
li><li class=3D"listitem"><div class=3D"itemizedlist"><p>Under Federation &=
gt; Entity Providers, click the name for the
     Remote SP in order to access the SP configuration on the IDP side:</p>=
<ul class=3D"itemizedlist" style=3D"list-style-type: disc; "><li class=3D"l=
istitem"><p>Under Assertion Processing &gt; Attribute Mapper, add both
      <code class=3D"literal">mail=3Dmail</code> and <code class=3D"literal=
">branch=3Dbranch</code> to
      the attribute map, and then Save your work.</p></li><li class=3D"list=
item"><p>Under Advanced &gt; SAE Configuration, make sure the SP URL
      reflects an endpoint on the SP, such as
      <code class=3D"literal">http://sp.example.com:8080/openam/spsaehandle=
r/metaAlias/sp</code>,
      and then Save your work.</p></li><li class=3D"listitem"><p>Also under=
 Advanced &gt; SAE Configuration, add the URL to the
      sample SAE application as the SP Logout URL, such as
      <code class=3D"literal">http://sp.example.com:8080/samples/saml2/sae/=
saeSPApp.jsp</code>,
      and then Save your work.</p></li></ul></div></li></ol></div></div><di=
v class=3D"section" id=3D"sae-secure-sp"><div class=3D"titlepage"><div><div=
><h2 class=3D"title" style=3D"clear: both"><a class=3D"self-link" href=3D"h=
ttps://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sae-se=
cure-sp">8.4.&nbsp;Securing the Service Provider Side</a></h2></div></div><=
/div><p>This configuration uses the default sample setting of symmetric
  encryption, with a shared secret of <code class=3D"literal">secret12</cod=
e>.</p><div class=3D"orderedlist"><p>Login as <code class=3D"literal">amadm=
in</code> to the OpenAM server console where
   you set up the hosted service provider (SP):</p><ol class=3D"orderedlist=
" type=3D"1"><li class=3D"listitem"><p>The sample includes a <code class=3D=
"literal">branch</code> attribute not
    found in user profiles by default. Therefore, under Realms &gt;
    <em class=3D"replaceable">Realm Name</em> &gt; Authentication &gt; Sett=
ings
    &gt; User Profile, set User Profile to Ignored, and then Save your work=
.</p></li><li class=3D"listitem"><div class=3D"itemizedlist"><p>Under Feder=
ation &gt; Entity Providers, click the name for the
     Hosted SP in order to access the SP configuration:</p><ul class=3D"ite=
mizedlist" style=3D"list-style-type: disc; "><li class=3D"listitem"><p>Unde=
r Assertion Processing &gt; Attribute Mapper, add both
      <code class=3D"literal">mail=3Dmail</code> and <code class=3D"literal=
">branch=3Dbranch</code> to
      the attribute map, and then Save your work.</p></li><li class=3D"list=
item"><p>Also under Assertion Processing &gt; Attribute Mapper &gt; Auto
      Federation, select Enabled, set the Attribute to <code class=3D"liter=
al">mail</code>,
      and then Save your work.</p></li><li class=3D"listitem"><p>Under Adva=
nced &gt; SAE Configuration, make sure the SP URL
      reflects an endpoint on the SP such as
      <code class=3D"literal">http://sp.example.com:8080/openam/spsaehandle=
r/metaAlias/sp</code>,
      and then Save your work.</p></li><li class=3D"listitem"><p>Furthermor=
e, under Advanced &gt; SAE Configuration, add the URL to
      the sample SAE application as the SP Logout URL such as
      <code class=3D"literal">http://sp.example.com:8080/samples/saml2/sae/=
saeSPApp.jsp</code>,
      and then Save your work.</p></li><li class=3D"listitem"><p>Also under=
 Advanced &gt; SAE Configuration &gt; Application Security
      Configuration, add the URL value for the kind of encryption you are u=
sing,
      and then Save your work.</p><p>When using the defaults, the value is =
something like
      <code class=3D"literal">url=3Dhttp://sp.example.com:8080/samples/saml=
2/sae/saeSPApp.jsp|type=3Dsymmetric|secret=3D<em class=3D"replaceable">enco=
ded-secret</em></code>, where the OpenAM SDK sample web
      application is deployed on the IDP side with context root
      <code class=3D"literal">/samples</code> and the
      <em class=3D"replaceable">encoded-secret</em> is something like
      <code class=3D"literal">AQICkX24RbZboAVgr2FG1kWoqRv1zM2a6KEH</code>.<=
/p><p>If you use a different mechanism to secure the communications
      between the SAE application and the provider, read the online help in=
 the
      console to see how to construct your URL value.</p></li></ul></div></=
li></ol></div></div><div class=3D"section" id=3D"sae-trying-it-out"><div cl=
ass=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a cl=
ass=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/=
dev-guide/index.html#sae-trying-it-out">8.5.&nbsp;Trying It Out</a></h2></d=
iv></div></div><p>After completing the setup described above, navigate to t=
he IDP side
  SAE application, for example at
  <code class=3D"literal">http://idp.example.com:8080/samples/saml2/sae/sae=
IDPApp.jsp</code>.</p><div class=3D"variablelist"><p>Make sure you set at l=
east the "SP App URL" and "SAE URL on IDP end"
   to fit your configuration. For example if you used the settings above th=
en
   use the following values:</p><dl class=3D"variablelist"><dt><span class=
=3D"term">SP App URL</span></dt><dd><p><code class=3D"literal">http://sp.ex=
ample.com:8080/samples/saml2/sae/saeSPApp.jsp</code></p></dd><dt><span clas=
s=3D"term">SAE URL on IDP end</span></dt><dd><p><code class=3D"literal">htt=
p://idp.example.com:8080/openam/idpsaehandler/metaAlias/idp</code></p></dd>=
</dl></div><p>Check the settings, and then click Generate URL to open the S=
ecure
  Attributes Exchange IDP APP SAMPLE page.</p><p>Click the <code class=3D"l=
iteral">ssourl</code> link in the page to start the
  exchange.</p><p>The resulting web page shows the attributes exchanged, in=
cluding the
  mail and branch values used. The text of that page is something like the
  following:</p><div class=3D"zero-clipboard hidden-xs hidden-print" title=
=3D"Copy code to clipboard"><span class=3D"btn-copy-codelisting"><span clas=
s=3D"fa fa-files-o"></span></span></div><pre class=3D"codelisting prettypri=
nt none hljs groovy">SAE SP APP SAMPLE

Secure <span class=3D"hljs-string">Attrs :</span>
mail            testuser<span class=3D"hljs-meta">@foo</span>.com
sun.idpentityid <span class=3D"hljs-string">http:</span><span class=3D"hljs=
-comment">//idp.example.com:8080/openam</span>
sun.spentityid  <span class=3D"hljs-string">http:</span><span class=3D"hljs=
-comment">//sp.example.com:8080/openam</span>
branch          mainbranch
sun.authlevel   <span class=3D"hljs-number">0</span></pre></div></div><div =
lang=3D"en" class=3D"appendix" id=3D"appendix-deprecated-apis"><div class=
=3D"titlepage"><div><div><h1 class=3D"title"><a class=3D"self-link" href=3D=
"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#appe=
ndix-deprecated-apis">Appendix&nbsp;A.&nbsp;Deprecated REST APIs</a></h1></=
div></div></div><p>
  This appendix provides information about REST APIs
  deprecated in OpenAM 13.5.2-15.
 </p><div class=3D"section" id=3D"deprecated-session-apis-auth"><div class=
=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a class=
=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#deprecated-session-apis-auth">A.1.&nbsp;Deprecated Sessio=
n Information APIs</a></h2></div></div></div><p>
   Interface Stability: <a href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/admin-guide/index.html#interface-stability" class=3D"olink">Deprec=
ated</a>
  </p><p>
   To check the maximum remaining time (in seconds) of a session,
   perform an HTTP POST to the resource URL,
   <code class=3D"literal">/json/sessions/</code>,
   using the <code class=3D"literal">getMaxTime</code> action
   as shown in the following example:
  </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy co=
mmand to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa fa-f=
iles-o"></span></span></div><pre class=3D"cmdline prettyprint nohighlight">=
$ <strong class=3D"userinput">curl \
 --request POST \
 --header "Content-Type: application/json" \
 --header "iplanetDirectoryPro: AQIC5w...NTcy*" \
 http://openam.example.com:8080/openam/json/sessions/?_action=3DgetMaxTime&=
amp;tokenId=3DBXCCq...NX*1*
  </strong>
<em class=3D"computeroutput">{"maxtime":7022}</em></pre><p>
   The <code class=3D"literal">getMaxTime</code> action has been deprecated=
 in favor of
   <code class=3D"literal">getTimeLeft</code>. For more information, see
   <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#rest-api-session-information" title=3D"2.1.9.2.&nbs=
p;Obtaining Information About Sessions">"Obtaining Information About Sessio=
ns"</a>.
  </p></div><div class=3D"section" id=3D"deprecated-self-service"><div clas=
s=3D"titlepage"><div><div><h2 class=3D"title" style=3D"clear: both"><a clas=
s=3D"self-link" href=3D"https://backstage.forgerock.com/docs/openam/13.5/de=
v-guide/index.html#deprecated-self-service">A.2.&nbsp;Deprecated Self-Servi=
ce APIs</a></h2></div></div></div><p>
  Interface Stability: <a href=3D"https://backstage.forgerock.com/docs/open=
am/13.5/admin-guide/index.html#interface-stability" class=3D"olink">Depreca=
ted</a>
 </p><p>
   For information about the new self-service APIs, see
   <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#sec-rest-user-services" title=3D"2.1.15.&nbsp;RESTf=
ul User Self-Service">"RESTful User Self-Service"</a>.
  </p><div class=3D"section" id=3D"deprecated-rest-api-self-registration"><=
div class=3D"titlepage"><div><div><h3 class=3D"title"><a class=3D"self-link=
" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.=
html#deprecated-rest-api-self-registration">A.2.1.&nbsp;Legacy User Self-Re=
gistration</a></h3></div></div></div><p>
    The OpenAM REST API for users provides an action for self-registration.
    The feature works by sending an email to the user in response to RESTfu=
l
    HTTP POST requesting registration with an email address. When the user =
clicks
    the link received by mail, an application intercepts the HTTP GET,
    transforms the query string values into an HTTP POST to confirm the ope=
ration.
    OpenAM responds to the application with a JSON object that the applicat=
ion
    can further use to request creation of the user account to complete the
    transaction.
   </p><div class=3D"procedure" id=3D"setup-user-self-registration"><div cl=
ass=3D"procedure-inner"><div class=3D"procedure-title"><a class=3D"self-lin=
k" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index=
.html#setup-user-self-registration">To Set Up Legacy User Self-Registration=
</a></div><ol class=3D"procedure" type=3D"1"><li class=3D"step"><p>Configur=
e the Email Service.</p><p>You must configure the Email Service to send mai=
l
      notifications to users who self-register. To configure these globally
      in OpenAM console, navigate to Configure &gt; Global Services, and th=
en click Email
      Service.
     </p><p>Alternatively, you can configure them for an individual realm u=
nder
      Realms &gt; <em class=3D"replaceable">Realm Name</em> &gt; Services.<=
/p></li><li class=3D"step"><p>Configure Legacy User Self Service.</p><p>
      You must enable self-registration in the User Self Service
      service. To configure these globally, in OpenAM console navigate to
      Configure &gt; Global Services, and then click Legacy User Self Servi=
ce. On the Legacy
      User Self Service page, click the <code class=3D"literal">Enabled</co=
de> checkbox next
      to Legacy Self-Service REST Endpoint, and Self-Registration for Users=
,
      and then click Save.
     </p><p>
      At this point users can self-register.
      The starting screen for self-registration is
      at <code class=3D"literal">/XUI/#register/</code>
      under the base URL where OpenAM is installed.
      The default confirmation URI is <code class=3D"literal">/XUI/confirm.=
html</code>.
     </p></li><li class=3D"step"><p>Perform an HTTP POST on <code class=3D"=
literal">/json/users?_action=3Dregister</code>
      with the new user's mail.</p><div class=3D"panel panel-info"><div cla=
ss=3D"panel-heading"><h3 class=3D"panel-title">Note</h3></div><div class=3D=
"panel-body"><p>In OpenAM 13, the <code class=3D"literal">/users</code> end=
point was updated
      to version 3.0. Request API resource version 2.0 in the REST API call=
s to get the
      behavior provided in previous versions of OpenAM.</p></div></div><p>
      To use a subject and message other than those configured in the Email=
 Service,
      you can optionally set the mail subject and message content
      by including "subject" and "message" strings in the JSON data.

      For example, the following POST results in a mail with
      subject <code class=3D"literal">Confirm registration with OpenAM</cod=
e>
      and content <code class=3D"literal">Follow this link to confirm your =
registration</code>
      in addition to the confirmation link.
     </p><p>
      Notice that authentication is not required.
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "Accept-API-Version: protocol=3D1.0,resource=3D2.0" \
--data \
'{
    "email": "newuser@example.com",
    "subject": "Confirm registration with OpenAM",
    "message": "Follow this link to confirm your registration"
}' \
https://openam.example.com:8443/openam/json/users?_action=3Dregister</stron=
g>
<em class=3D"computeroutput">{}</em></pre><p>On success, the response is an=
 empty JSON object <code class=3D"literal">{}</code>
      as shown in the example.</p></li><li class=3D"step"><p>
      The user receives an email message that includes a URL
      similar to the following example, but all on one line.
      The user has self-registered in the root realm:
     </p><pre class=3D"literallayout">https://openam.example.com:8443/opena=
m/XUI/confirm.html?
      confirmationId=3Df4x0Dh6iZCXtX8nhiSb3xahNxrg%3D
      &amp;email=3Dnewuser%40example.com
      &amp;tokenId=3DyA26LZ6SxFEgNuF86%2FSIXfimGlg%3D
      &amp;realm=3D/</pre></li><li class=3D"step"><p>Intercept the HTTP GET=
 request to this URL when the user clicks the
      link.</p><p>Your application must use the confirmation link to constr=
uct an HTTP
      POST to <code class=3D"literal">/json/users?_action=3Dconfirm</code> =
from the query string
      parameters as shown in the following example:</p><div class=3D"zero-c=
lipboard hidden-xs hidden-print" title=3D"Copy command to clipboard"><span =
class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></di=
v><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=3D"userinp=
ut">curl \
--request POST \
--header "Content-Type: application/json" \
--header "Accept-API-Version: protocol=3D1.0,resource=3D2.0" \
--data \
'{
    "email": "newuser@example.com",
    "tokenId": "yA26LZ6SxFEgNuF86/SIXfimGlg=3D",
    "confirmationId": "f4x0Dh6iZCXtX8nhiSb3xahNxrg=3D"
}' \
https://openam.example.com:8443/openam/json/users?_action=3Dconfirm</strong=
>
<em class=3D"computeroutput">{
    "email": "newuser@example.com",
    "tokenId": "yA26LZ6SxFEgNuF86/SIXfimGlg=3D",
    "confirmationId": "f4x0Dh6iZCXtX8nhiSb3xahNxrg=3D"
}</em></pre><p>The response is a further confirmation that the account can =
be
      created.</p></li><li class=3D"step"><p>Using the confirmation, your a=
pplication must make an authenticated
      HTTP POST to <code class=3D"literal">/json/users?_action=3DanonymousC=
reate</code> to
      create the user as shown in the following example:</p><div class=3D"z=
ero-clipboard hidden-xs hidden-print" title=3D"Copy code to clipboard"><spa=
n class=3D"btn-copy-codelisting"><span class=3D"fa fa-files-o"></span></spa=
n></div><pre class=3D"codelisting prettyprint nohighlight">$ curl \
--request POST \
--header "Content-Type: application/json" \
--header "Accept-API-Version: protocol=3D1.0,resource=3D2.0" \
--data \
'{
    "email": "newuser@example.com",
    "tokenId": "yA26LZ6SxFEgNuF86/SIXfimGlg=3D",
    "confirmationId": "f4x0Dh6iZCXtX8nhiSb3xahNxrg=3D",
    "username": "newuser",
    "userpassword": "password"
}' \
https://openam.example.com:8443/openam/json/users?_action=3DanonymousCreate
{
    "username": "newuser",
    "realm": "/",
    "uid": [
        "newuser"
    ],
    "mail": [
        "newuser@example.com"
    ],
    "sn": [
        "newuser"
    ],
    "cn": [
        "newuser"
    ],
    "inetUserStatus": [
        "Active"
    ],
    "dn": [
        "uid=3Dnewuser,ou=3Dpeople,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ],
    "objectClass": [
        "devicePrintProfilesContainer",
        "person",
        "sunIdentityServerLibertyPPService",
        "inetorgperson",
        "sunFederationManagerDataStore",
        "iPlanetPreferences",
        "iplanet-am-auth-configuration-service",
        "organizationalperson",
        "sunFMSAML2NameIdentifier",
        "inetuser",
        "forgerock-am-dashboard-service",
        "iplanet-am-managed-person",
        "iplanet-am-user-service",
        "sunAMAuthAccountLockout",
        "top"
    ],
    "universalid": [
        "id=3Dnewuser,ou=3Duser,dc=3Dopenam,dc=3Dforgerock,dc=3Dorg"
    ]
}</pre><p>At this point, the user is registered, active, and can authentica=
te
      with OpenAM.</p></li></ol></div></div></div><div class=3D"section" id=
=3D"deprecated-rest-api-password-reset"><div class=3D"titlepage"><div><div>=
<h3 class=3D"title"><a class=3D"self-link" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#deprecated-rest-api-password-=
reset">A.2.2.&nbsp;Legacy Forgotten Password Reset</a></h3></div></div></di=
v><p>
    The OpenAM REST API provides an action
    for handling forgotten passwords
    as long as the user has a valid email address in their profile.
    This is an alternative to the password reset capability described in
    <a href=3D"https://backstage.forgerock.com/docs/openam/13.5/admin-guide=
/index.html#chap-usr-selfservices" class=3D"olink">"Configuring User Self-S=
ervice Features"</a> in the <em>Administration Guide</em>.
   </p><div class=3D"panel panel-success"><div class=3D"panel-heading"><h3 =
class=3D"panel-title">Tip</h3></div><div class=3D"panel-body"><p>If the cur=
rent password is known, use the
    <a class=3D"xref" href=3D"https://backstage.forgerock.com/docs/openam/1=
3.5/dev-guide/index.html#rest-api-change-password" title=3D"2.1.16.1.7.&nbs=
p;Changing Passwords">"Changing Passwords"</a>
    feature to change a password.</p></div></div><p>An example follows, sho=
wing the steps in more detail.</p><div class=3D"procedure" id=3D"setup-lega=
cy-forgotten-password-reset"><div class=3D"procedure-inner"><div class=3D"p=
rocedure-title"><a class=3D"self-link" href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#setup-legacy-forgotten-password-r=
eset">To Set Up Legacy Forgotten Password Reset</a></div><ol class=3D"proce=
dure" type=3D"1"><li class=3D"step"><p>Configure Legacy User Self Service.<=
/p><p>
      You must enable Forgotten Password Reset in the Legacy User Self Serv=
ice
      service. To configure this globally in the OpenAM console, navigate t=
o
      Configure &gt; Global Services, and then click Legacy User Self Servi=
ce. On the Legacy
      User Self Service page, click the <code class=3D"literal">Enabled</co=
de> checkbox next
      to Legacy Self-Service REST Endpoint, and Forgot Password for Users,
      and then click Save.
     </p></li><li class=3D"step"><p>Configure the Email Service.</p><p>In p=
articular, you must configure the Email Service to send mail
      allowing the user to reset the forgotten password.</p><p>To configure=
 the service globally in the OpenAM Console, navigate to Configure &gt;
      Global Services, and then click Email Service.</p><p>Alternatively, y=
ou can configure it for an individual realm under
      Realms &gt; <em class=3D"replaceable">Realm Name</em> &gt; Services.<=
/p><p>
      At this point users with mail addresses can reset their forgotten pas=
swords.
      The starting screen for forgotten password reset is
      at <code class=3D"literal">/XUI/#forgotPassword/</code>
      under the base URL where OpenAM is installed.
      The default confirmation URI is <code class=3D"literal">/XUI/confirm.=
html</code>.
     </p><p>
      The steps that follow show how to use the REST API directly.
     </p></li><li class=3D"step"><p>
      Perform an HTTP POST on <code class=3D"literal">/json/users?_action=
=3DforgotPassword</code>
      with the user's ID.
     </p><div class=3D"panel panel-info"><div class=3D"panel-heading"><h3 c=
lass=3D"panel-title">Note</h3></div><div class=3D"panel-body"><p>In OpenAM =
13, the <code class=3D"literal">/users</code> endpoint was updated
      to version 3.0. Request API resource version 2.0 in the REST API call=
s to get the
      behavior provided in previous versions of OpenAM.</p></div></div><p>
      To use a subject and message other than those configured in the Email=
 Service,
      you can optionally set the mail subject and message content
      by including "subject" and "message" strings in the JSON data.

      For example, the following POST results in a mail with
      subject <code class=3D"literal">Reset your forgotten password with Op=
enAM</code>
      and content <code class=3D"literal">Follow this link to reset your pa=
ssword</code>
      in addition to the confirmation link.
     </p><p>
      Notice that authentication is not required.
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "Accept-API-Version: protocol=3D1.0,resource=3D2.0" \
--data '{
    "username": "demo",
    "subject": "Reset your forgotten password with OpenAM",
    "message": "Follow this link to reset your password"
}' \
https://openam.example.com:8443/openam/json/users/?_action=3DforgotPassword=
</strong>
<em class=3D"computeroutput">{}</em></pre><p>Note that you can also use the=
 <code class=3D"literal">email</code> attribute
      to locate the user. If both <code class=3D"literal">username</code> a=
nd <code class=3D"literal">mail</code>
      attributes are used, then a request error is issued. If more
      than one account has been registered with the same email address,
      the password reset process does not start.</p><div class=3D"zero-clip=
board hidden-xs hidden-print" title=3D"Copy command to clipboard"><span cla=
ss=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></div><=
pre class=3D"cmdline prettyprint nohighlight">$ <strong class=3D"userinput"=
>curl \
--request POST \
--header "Content-Type: application/json" \
--header "Accept-API-Version: protocol=3D1.0,resource=3D2.0" \
--data '{
    "email": "demo@example.com",
    "subject": "Reset your forgotten password with OpenAM",
    "message": "Follow this link to reset your password"
}' \
https://openam.example.com:8443/openam/json/users/?_action=3DforgotPassword=
</strong>
<em class=3D"computeroutput">{}</em></pre><p>On success, the response is an=
 empty JSON object <code class=3D"literal">{}</code>
      as shown in the example.</p><p>OpenAM looks up the email address in t=
he user profile, and sends an
      email message that includes a URL as in the following example,
      but all on one line.</p><pre class=3D"literallayout">https://openam.e=
xample.com:8443/openam/json/XUI/confirm.html
      ?confirmationId=3DsdfsfeM+URcWVQ7vvCDnx4N5Vut7SBIY=3D
      &amp;tokenId=3Dvkm+5v58cTs1yQcQl5HCQGOsuQk=3D
      &amp;username=3Ddemo&amp;realm=3D/</pre></li><li class=3D"step"><p>In=
tercept the HTTP GET request to this URL when the user clicks the
      link.</p><p>Your application must use the confirmation link to constr=
uct an HTTP
      POST to <code class=3D"literal">/json/users?_action=3Dconfirm</code> =
from the query string
      parameters as shown in the following example:</p><div class=3D"zero-c=
lipboard hidden-xs hidden-print" title=3D"Copy command to clipboard"><span =
class=3D"btn-copy-cmdline"><span class=3D"fa fa-files-o"></span></span></di=
v><pre class=3D"cmdline prettyprint nohighlight">$ <strong class=3D"userinp=
ut">curl \
--request POST \
--header "Content-Type: application/json" \
--header "Accept-API-Version: protocol=3D1.0,resource=3D2.0" \
--data \
'{
    "username":"demo",
    "tokenId":"vkm+5v58cTs1yQcQl5HCQGOsuQk=3D",
    "confirmationId":"sdfsfeM+URcWVQ7vvCDnx4N5Vut7SBIY=3D"
}' \
https://openam.example.com:8443/openam/json/users?_action=3Dconfirm</strong=
>
<em class=3D"computeroutput">{
    "username": "demo",
    "tokenId": "vkm+5v58cTs1yQcQl5HCQGOsuQk=3D",
    "confirmationId": "sdfsfeM+URcWVQ7vvCDnx4N5Vut7SBIY=3D"
}</em></pre><p>The response is a further confirmation that the request is
      valid, has not expired, and the password can be reset.</p></li><li cl=
ass=3D"step"><p>Using the confirmation, your application must construct an =
HTTP
      POST to <code class=3D"literal">/json/users?_action=3DforgotPasswordR=
eset</code> to
      reset the password as shown in the following example.</p><p>Your POST=
 includes the new password as the value of the "userpassword"
      field in the JSON payload. You can also use the <code class=3D"litera=
l">email</code>
      attribute instead of <code class=3D"literal">username</code>.
     </p><div class=3D"zero-clipboard hidden-xs hidden-print" title=3D"Copy=
 command to clipboard"><span class=3D"btn-copy-cmdline"><span class=3D"fa f=
a-files-o"></span></span></div><pre class=3D"cmdline prettyprint nohighligh=
t">$ <strong class=3D"userinput">curl \
--request POST \
--header "Content-Type: application/json" \
--header "Accept-API-Version: protocol=3D1.0,resource=3D2.0" \
--data '{
    "username":"demo",
    "userpassword":"password",
    "tokenId":"vkm+5v58cTs1yQcQl5HCQGOsuQk=3D",
    "confirmationId":"sdfsfeM+URcWVQ7vvCDnx4N5Vut7SBIY=3D"
}' \
https://openam.example.com:8443/openam/json/users?_action=3DforgotPasswordR=
eset</strong>
<em class=3D"computeroutput">{}</em></pre><p>On success or failure, the RES=
T call returns an empty message, so that
      information is not leaked.
     </p><p>At this point the user can authenticate with the new password.<=
/p></li></ol></div></div></div></div></div><div class=3D"index" id=3D"index=
"><div class=3D"titlepage"><div><div><h1 class=3D"title"><a class=3D"self-l=
ink" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/ind=
ex.html#index">Index</a></h1></div></div></div><div xmlns:xlink=3D"http://w=
ww.w3.org/1999/xlink" class=3D"index"><div class=3D"indexdiv"><h3>A</h3><dl=
><dt id=3D"ientry-d15472e10804">Authentication</dt><dd><dl><dt>Java API, <a=
 class=3D"indexterm" href=3D"https://backstage.forgerock.com/docs/openam/13=
.5/dev-guide/index.html#sec-authentication">Authenticating Using OpenAM Jav=
a SDK</a></dt><dt>Post authentication plugins, <a class=3D"indexterm" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
ec-post-auth">Creating a Post Authentication Plugin</a></dt></dl></dd></dl>=
</div><div class=3D"indexdiv"><h3>D</h3><dl><dt id=3D"ientry-d15472e8737">D=
ashboard services, <a class=3D"indexterm" href=3D"https://backstage.forgero=
ck.com/docs/openam/13.5/dev-guide/index.html#rest-dashboard">Displaying Das=
hboard Applications</a></dt></dl></div><div class=3D"indexdiv"><h3>F</h3><d=
l><dt id=3D"ientry-d15472e17267">Fedlets</dt><dd><dl><dt>Java</dt><dd><dl><=
dt>Manual, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#sec-fedlet-unconfigured">Configuring J=
ava Fedlets By Hand</a></dt><dt>Wizard, <a class=3D"indexterm" href=3D"http=
s://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-fedle=
t-java">Using Fedlets in Java Web Applications</a></dt></dl></dd><dt>SAML v=
2.0, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#chap-fedlets">Building SAML v2.0 Service Pro=
viders With Fedlets</a></dt></dl></dd></dl></div><div class=3D"indexdiv"><h=
3>I</h3><dl><dt id=3D"ientry-d15472e10452">Installing</dt><dd><dl><dt>C SDK=
, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#sec-csdk">Using the OpenAM C SDK</a></dt><dt>Ja=
va SDK samples, <a class=3D"indexterm" href=3D"https://backstage.forgerock.=
com/docs/openam/13.5/dev-guide/index.html#install-sdk-samples">Installing O=
penAM Client SDK Samples</a></dt></dl></dd></dl></div><div class=3D"indexdi=
v"><h3>O</h3><dl><dt id=3D"ientry-d15472e6643">OAuth 2.0, <a class=3D"index=
term" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#sec-oauth2-scopes">Customizing OAuth 2.0 Scope Handling</a></dt><d=
d><dl><dt>REST API, <a class=3D"indexterm" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#rest-api-oauth2">OAuth 2.0</a=
></dt></dl></dd><dt id=3D"ientry-d15472e7790">OpenID Connect 1.0</dt><dd><d=
l><dt>API, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#rest-api-openid-connect">OpenID Connec=
t 1.0</a></dt></dl></dd></dl></div><div class=3D"indexdiv"><h3>P</h3><dl><d=
t id=3D"ientry-d15472e9231">Passwords</dt><dd><dl><dt>Change, <a class=3D"i=
ndexterm" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#rest-api-change-password">Changing Passwords</a></dt><dt>Reset=
, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/docs/opena=
m/13.5/dev-guide/index.html#rest-api-change-password">Changing Passwords</a=
></dt></dl></dd><dt id=3D"ientry-d15472e2714">Policy</dt><dd><dl><dt>Java A=
PI, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/docs/ope=
nam/13.5/dev-guide/index.html#sec-policy-decisions">Requesting Policy Decis=
ions Using OpenAM Java SDK</a></dt><dt>REST API, <a class=3D"indexterm" hre=
f=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#=
rest-api-authz">About the REST Policy Endpoints</a></dt></dl></dd></dl></di=
v><div class=3D"indexdiv"><h3>R</h3><dl><dt id=3D"ientry-d15472e9335">Realm=
 data</dt><dd><dl><dt>REST access, <a class=3D"indexterm" href=3D"https://b=
ackstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-api-crud-=
realm">Realm Management</a></dt></dl></dd><dt id=3D"ientry-d15472e1013">Rea=
lms</dt><dd><dl><dt>REST, <a class=3D"indexterm" href=3D"https://backstage.=
forgerock.com/docs/openam/13.5/dev-guide/index.html#realms-rest">Specifying=
 Realms in REST API Calls</a></dt></dl></dd><dt id=3D"ientry-d15472e10305">=
Recording</dt><dd><dl><dt>Using the REST API, <a class=3D"indexterm" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
ec-rest-api-recording">RESTful Troubleshooting Information Recording</a></d=
t></dl></dd><dt id=3D"ientry-d15472e3331">Resource Types, <a class=3D"index=
term" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/in=
dex.html#rest-api-authz-resource-types">Managing Resource Types</a></dt><dt=
 id=3D"ientry-d15472e2706">REST API, <a class=3D"indexterm" href=3D"https:/=
/backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-rest-aut=
hz-policy">RESTful Authorization and Policy Management Services</a>, <a cla=
ss=3D"indexterm" href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/index.html#sec-rest-oauth2-oidc">RESTful OAuth 2.0, OpenID Connect=
 1.0 and UMA 1.0 Services</a>, <a class=3D"indexterm" href=3D"https://backs=
tage.forgerock.com/docs/openam/13.5/dev-guide/index.html#sec-rest-identity-=
realm-mgmt">RESTful Identity and Realm Management Services</a></dt></dl></d=
iv><div class=3D"indexdiv"><h3>S</h3><dl><dt id=3D"ientry-d15472e9706">Scri=
pts, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/docs/op=
enam/13.5/dev-guide/index.html#chap-scripting">Scripting OpenAM</a></dt><dd=
><dl><dt>API, <a class=3D"indexterm" href=3D"https://backstage.forgerock.co=
m/docs/openam/13.5/dev-guide/index.html#scripting-api">The Scripting API</a=
></dt><dt>Managing, <a class=3D"indexterm" href=3D"https://backstage.forger=
ock.com/docs/openam/13.5/dev-guide/index.html#sec-manage-scripts-rest">REST=
ful Script Management</a></dt><dt>OIDC Claims, <a class=3D"indexterm" href=
=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#s=
ec-scripted-oidc-claims">Default OIDC Claims Script</a></dt><dt>Policy Cond=
itions, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#sec-scripted-policy-condition">Default Po=
licy Condition Script</a></dt><dt>Server-side Authentication, <a class=3D"i=
ndexterm" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guid=
e/index.html#sec-scripted-auth-module">Default Server-side Authentication S=
cript</a></dt></dl></dd><dt id=3D"ientry-d15472e21807">Secure Attribute Exc=
hange (SAE), <a class=3D"indexterm" href=3D"https://backstage.forgerock.com=
/docs/openam/13.5/dev-guide/index.html#chap-sae">Using Secure Attribute Exc=
hange</a></dt><dt id=3D"ientry-d15472e20543">Security Token Service, <a cla=
ss=3D"indexterm" href=3D"https://backstage.forgerock.com/docs/openam/13.5/d=
ev-guide/index.html#chap-sts">Working With the Security Token Service</a></=
dt><dt id=3D"ientry-d15472e10974">Session tokens</dt><dd><dl><dt>Java API, =
<a class=3D"indexterm" href=3D"https://backstage.forgerock.com/docs/openam/=
13.5/dev-guide/index.html#sec-session">Handling Single Sign-On Using OpenAM=
 Java SDK</a></dt></dl></dd></dl></div><div class=3D"indexdiv"><h3>T</h3><d=
l><dt id=3D"ientry-d15472e8786">Two-step verification</dt><dd><dl><dt>reset=
ting device profile, <a class=3D"indexterm" href=3D"https://backstage.forge=
rock.com/docs/openam/13.5/dev-guide/index.html#rest-api-device-profile-rese=
t">Resetting Device Profiles</a></dt></dl></dd></dl></div><div class=3D"ind=
exdiv"><h3>U</h3><dl><dt id=3D"ientry-d15472e13643">UMA</dt><dd><dl><dt>Ext=
ending, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/docs=
/openam/13.5/dev-guide/index.html#sec-uma-extension-points">Extending UMA W=
orkflow with Extension Points</a></dt></dl></dd><dt id=3D"ientry-d15472e886=
0">User data</dt><dd><dl><dt>Custom profile attributes, <a class=3D"indexte=
rm" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#sec-custom-attr">Customizing Profile Attributes</a></dt><dt>Custom r=
epository, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/d=
ocs/openam/13.5/dev-guide/index.html#sec-identity-repo-spi">Customizing Ide=
ntity Data Storage</a></dt><dt>REST access, <a class=3D"indexterm" href=3D"=
https://backstage.forgerock.com/docs/openam/13.5/dev-guide/index.html#rest-=
api-crud-identity">Identity Management</a></dt></dl></dd><dt id=3D"ientry-d=
15472e8168">User self-service</dt><dd><dl><dt>REST API, <a class=3D"indexte=
rm" href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-guide/inde=
x.html#sec-rest-user-services">RESTful User Self-Service</a></dt></dl></dd>=
<dt id=3D"ientry-d15472e8043">User-Managed Access (UMA)</dt><dd><dl><dt>RES=
T API, <a class=3D"indexterm" href=3D"https://backstage.forgerock.com/docs/=
openam/13.5/dev-guide/index.html#sec-rest-uma">User-Managed Access (UMA)</a=
></dt></dl></dd></dl></div></div></div></div><a href=3D"https://backstage.f=
orgerock.com/docs/openam/13.5/dev-guide/index.html#" class=3D"back-to-top h=
idden-xs hidden-print" data-placement=3D"left" title=3D"Back to top"><butto=
n type=3D"button" class=3D"btn btn-primary btn-default"><span class=3D"glyp=
hicon glyphicon-chevron-up"></span></button></a></div></div><div class=3D"t=
itlepage modal fade hidden-print" id=3D"aboutModal"><div class=3D"modal-dia=
log modal-lg"><div class=3D"modal-content"><div class=3D"modal-header"><but=
ton type=3D"button" class=3D"close" data-dismiss=3D"modal" aria-label=3D"Cl=
ose"><span aria-hidden=3D"true">X</span></button><div id=3D"about-subtitle"=
>OpenAM 13.5</div><div id=3D"about-title">Developer's Guide</div></div><div=
 class=3D"modal-body"><div id=3D"about-authorgroup"><div class=3D"author"><=
h3 class=3D"author"><span class=3D"firstname">Mark</span> <span class=3D"su=
rname">Craig</span></h3></div><div class=3D"author"><h3 class=3D"author"><s=
pan class=3D"firstname">David</span> <span class=3D"surname">Goldsmith</spa=
n></h3></div><div class=3D"author"><h3 class=3D"author"><span class=3D"firs=
tname">Gene</span> <span class=3D"surname">Hirayama</span></h3></div><div c=
lass=3D"author"><h3 class=3D"author"><span class=3D"firstname">Mike</span> =
<span class=3D"surname">Jang</span></h3></div><div class=3D"author"><h3 cla=
ss=3D"author"><span class=3D"firstname">Chris</span> <span class=3D"surname=
">Lee</span></h3></div><div class=3D"author"><h3 class=3D"author"><span cla=
ss=3D"firstname">Peter</span> <span class=3D"surname">Major</span></h3><div=
 lang=3D"" class=3D"affiliation"><span class=3D"orgname">ForgeRock AS<br></=
span><div class=3D"address"><p><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"street">201&nbsp;Mission&nbsp;St</sp=
an><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"otheraddr">Suite&nbsp;2900</span><br=
>
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"city">San&nbsp;Francisco</span>,&nbs=
p;<span class=3D"state">CA</span>&nbsp;<span class=3D"postcode">94105</span=
><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"country">USA</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<span class=3D"phone">+1&nbsp;415-599-1100&nbsp;(US=
)</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;<code class=3D"uri">www.forgerock.com</code><br>
&nbsp;&nbsp;&nbsp;</p></div></div></div></div><div id=3D"about-abstract">Gu=
ide to developing OpenAM client applications and service providers.
   OpenAM provides open source Authentication, Authorization, Entitlement a=
nd
   Federation software.</div><div id=3D"about-buildRevision">Build Number:
            <span>13.5.2-15</span></div><div id=3D"about-buildDateTime">Bui=
ld Date:
            <span>2019-10-15T14:45:10.764679</span></div><a id=3D"about-leg=
alnotice" href=3D"https://backstage.forgerock.com/knowledge/backstagehelp/a=
rticle/a81642400" target=3D"_blank">Legal Notice (Documentation)</a><div cl=
ass=3D"about-copyright">
          Copyright =C2=A9 2011-2018&nbsp;ForgeRock AS.</div></div></div></=
div></div><div id=3D"alternateBar" class=3D"alert alert-warning alert-dismi=
ssible" style=3D"display: block;"><button type=3D"button" class=3D"close" d=
ata-dismiss=3D"alert" aria-label=3D"Close"><span aria-hidden=3D"true">=C3=
=97</span></button><div class=3D"mr-1">Read a different version of <i id=3D=
"current-title">Developer's Guide</i>:</div><span id=3D"alternate-titles"><=
a class=3D"alert-link" href=3D"https://backstage.forgerock.com/docs/openam/=
13/dev-guide/#">13</a></span></div><backstage-site-footer theme=3D"dark"><t=
emplate shadowmode=3D"open"><footer class=3D"dark svelte-8cb204"><div id=3D=
"backstage-site-footer" class=3D"svelte-8cb204 backstage-site-footer-contai=
ner"><a href=3D"https://backstage.forgerock.com/" class=3D"logo svelte-8cb2=
04">&nbsp;</a> <div class=3D"link-list-container svelte-8cb204"><div class=
=3D"link-list svelte-8cb204"><div class=3D"mb-2 svelte-8cb204"><a href=3D"h=
ttps://backstage.forgerock.com/downloads/" class=3D"link svelte-8cb204">Dow=
nloads</a></div> <div><div><a href=3D"https://backstage.forgerock.com/downl=
oads/browse/am/latest" class=3D"sublink svelte-8cb204">PingAM</a></div> <di=
v><a href=3D"https://backstage.forgerock.com/downloads/browse/dj/latest" cl=
ass=3D"sublink svelte-8cb204">PingDS</a></div> <div><a href=3D"https://back=
stage.forgerock.com/downloads/browse/idm/latest" class=3D"sublink svelte-8c=
b204">PingIDM</a></div> <div><a href=3D"https://backstage.forgerock.com/dow=
nloads/browse/ig/latest" class=3D"sublink svelte-8cb204">PingGateway</a></d=
iv> <div><a href=3D"https://backstage.forgerock.com/downloads/browse/iot/la=
test" class=3D"sublink svelte-8cb204">ForgeRock IoT</a></div> <div><a href=
=3D"https://backstage.forgerock.com/downloads/browse/identity-cloud/latest"=
 class=3D"sublink svelte-8cb204">PingOne Advanced Identity Cloud</a></div><=
/div></div> <div class=3D"link-list svelte-8cb204"><div class=3D"mb-2 svelt=
e-8cb204"><a href=3D"https://backstage.forgerock.com/docs" class=3D"link sv=
elte-8cb204">Docs</a></div> <div><div><a href=3D"https://backstage.forgeroc=
k.com/docs/openam" class=3D"sublink svelte-8cb204">PingAM</a></div> <div><a=
 href=3D"https://backstage.forgerock.com/docs/opendj" class=3D"sublink svel=
te-8cb204">PingDS</a></div> <div><a href=3D"https://backstage.forgerock.com=
/docs/openidm" class=3D"sublink svelte-8cb204">PingIDM</a></div> <div><a hr=
ef=3D"https://backstage.forgerock.com/docs/openig" class=3D"sublink svelte-=
8cb204">PingGateway</a></div> <div><a href=3D"https://backstage.forgerock.c=
om/docs/iot" class=3D"sublink svelte-8cb204">ForgeRock IoT</a></div> <div><=
a href=3D"https://backstage.forgerock.com/docs/idcloud/latest" class=3D"sub=
link svelte-8cb204">PingOne Advanced Identity Cloud</a></div></div></div> <=
div class=3D"link-list svelte-8cb204"><div class=3D"mb-2 svelte-8cb204"><a =
href=3D"https://backstage.forgerock.com/knowledge/kb" class=3D"link svelte-=
8cb204">Knowledge Base</a></div> <div><div><a href=3D"https://backstage.for=
gerock.com/knowledge/kb/home/identity-cloud" class=3D"sublink svelte-8cb204=
">PingOne Advanced Identity Cloud</a></div> <div><a href=3D"https://backsta=
ge.forgerock.com/knowledge/kb/home" class=3D"sublink svelte-8cb204">Ping Id=
entity Platform</a></div> <div><a href=3D"https://backstage.forgerock.com/k=
nowledge/backstagehelp/home" class=3D"sublink svelte-8cb204">Backstage Help=
</a></div></div></div> <div class=3D"link-list svelte-8cb204"><div class=3D=
"mb-2 svelte-8cb204"><a href=3D"https://backstage.forgerock.com/university"=
 class=3D"link svelte-8cb204">Training</a></div> <div><div><a href=3D"https=
://backstage.forgerock.com/university/cloud-learning" class=3D"sublink svel=
te-8cb204">Cloud Learning</a></div> <div><a href=3D"https://backstage.forge=
rock.com/university/events" class=3D"sublink svelte-8cb204">Events</a></div=
> <div><a href=3D"https://backstage.forgerock.com/university/courses" class=
=3D"sublink svelte-8cb204">Courses</a></div> <div><a href=3D"https://backst=
age.forgerock.com/university/certification" class=3D"sublink svelte-8cb204"=
>Certification</a></div></div></div> <div class=3D"link-list svelte-8cb204"=
><div class=3D"mb-2 svelte-8cb204"><a href=3D"https://backstage.forgerock.c=
om/support" class=3D"link svelte-8cb204">Support</a></div> <div><div><a hre=
f=3D"https://backstage.forgerock.com/support/tickets" class=3D"sublink svel=
te-8cb204">Tickets</a></div> <div><a href=3D"https://backstage.forgerock.co=
m/support/issues" class=3D"sublink svelte-8cb204">Issue tracking</a></div> =
<div><a href=3D"https://backstage.forgerock.com/cloudstorage" class=3D"subl=
ink svelte-8cb204">Cloud Storage</a></div></div></div>  <div class=3D"link-=
list svelte-8cb204"><div class=3D"mb-2 svelte-8cb204"><a href=3D"https://co=
mmunity.forgerock.com/" class=3D"link svelte-8cb204">Community</a></div> <d=
iv><div><a href=3D"https://backstage.forgerock.com/community/events" class=
=3D"sublink svelte-8cb204">Events</a></div> <div><a href=3D"https://backsta=
ge.forgerock.com/community/developers" class=3D"sublink svelte-8cb204">Deve=
lopers</a></div> <div><a href=3D"https://community.forgerock.com/tag/blog" =
class=3D"sublink svelte-8cb204">Blogs</a></div> <div><a href=3D"https://com=
munity.forgerock.com/tag/video" class=3D"sublink svelte-8cb204">Videos</a><=
/div> <div><a href=3D"https://community.forgerock.com/" class=3D"sublink sv=
elte-8cb204">Discussions</a></div> <div><a href=3D"https://backstage.forger=
ock.com/marketplace" class=3D"sublink svelte-8cb204">Marketplace</a></div><=
/div></div> <div class=3D"link-list svelte-8cb204"><div class=3D"mb-2 svelt=
e-8cb204"><a href=3D"https://www.pingidentity.com/" class=3D"link svelte-8c=
b204">PingIdentity.com</a></div> <div><div><a href=3D"https://docs.pingiden=
tity.com/" class=3D"sublink svelte-8cb204">Documentation</a></div> <div><a =
href=3D"https://support.pingidentity.com/s/knowledge-base" class=3D"sublink=
 svelte-8cb204">Knowledge Base</a></div> <div><a href=3D"https://backstage.=
forgerock.com/university/" class=3D"sublink svelte-8cb204">Training</a></di=
v> <div><a href=3D"https://support.pingidentity.com/s/" class=3D"sublink sv=
elte-8cb204">Support</a></div> <div><a href=3D"https://support.pingidentity=
.com/s/community-home" class=3D"sublink svelte-8cb204">Community</a></div> =
<div><a href=3D"https://developer.pingidentity.com/en.html" class=3D"sublin=
k svelte-8cb204">Developer</a></div></div></div> <div class=3D"link-list sv=
elte-8cb204"><div class=3D"mb-2 svelte-8cb204"><a href=3D"https://backstage=
.forgerock.com/account" class=3D"link svelte-8cb204">Account</a></div> <div=
><div><a href=3D"https://sso.forgerock.com/openam/UI/Login?goto=3Dhttps%3A%=
2F%2Fbackstage.forgerock.com%2Fdocs%2Fopenam%2F13.5%2Fdev-guide%2Findex.htm=
l/" class=3D"sublink svelte-8cb204">Sign In</a></div> <div><a href=3D"https=
://backstage.forgerock.com/account/register?next=3Dhttps%3A%2F%2Fbackstage.=
forgerock.com%2Fdocs%2Fopenam%2F13.5%2Fdev-guide%2Findex.html" class=3D"sub=
link svelte-8cb204">Register</a></div></div></div> <div class=3D"link-list =
svelte-8cb204"><div><a href=3D"https://www.forgerock.com/contact" class=3D"=
link svelte-8cb204">Contact Sales</a></div></div></div> <hr class=3D"svelte=
-8cb204"> <div class=3D"copyright svelte-8cb204"><p data-testid=3D"copyrigh=
t" class=3D"svelte-8cb204">Copyright =C2=A9 2010-2024 Ping Identity, all ri=
ghts reserved.</p> <div><a class=3D"sublink svelte-8cb204" href=3D"mailto:b=
ackstagehelp@forgerock.com">Report a problem</a> <a class=3D"sublink svelte=
-8cb204" href=3D"https://www.forgerock.com/privacy-policy">Privacy
                    Policy</a> <a class=3D"sublink svelte-8cb204" href=3D"h=
ttps://backstage.forgerock.com/knowledge/kb?t=3DivdHRCWKIWYFhelnhNcirCqPXTu=
itloS">Help</a> <backstage-cookie-settings><template shadowmode=3D"open"></=
template><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev-gu=
ide/index.html" class=3D"sublink svelte-8cb204">Cookie Settings</a></backst=
age-cookie-settings></div></div></div></footer></template></backstage-site-=
footer><div id=3D"cboxOverlay" style=3D"display: none;"></div><div id=3D"co=
lorbox" class=3D"" role=3D"dialog" tabindex=3D"-1" style=3D"display: none;"=
><div id=3D"cboxWrapper"><div><div id=3D"cboxTopLeft" style=3D"float: left;=
"></div><div id=3D"cboxTopCenter" style=3D"float: left;"></div><div id=3D"c=
boxTopRight" style=3D"float: left;"></div></div><div style=3D"clear: left;"=
><div id=3D"cboxMiddleLeft" style=3D"float: left;"></div><div id=3D"cboxCon=
tent" style=3D"float: left;"><div id=3D"cboxTitle" style=3D"float: left;"><=
/div><div id=3D"cboxCurrent" style=3D"float: left;"></div><button type=3D"b=
utton" id=3D"cboxPrevious"></button><button type=3D"button" id=3D"cboxNext"=
></button><button type=3D"button" id=3D"cboxSlideshow"></button><div id=3D"=
cboxLoadingOverlay" style=3D"float: left;"></div><div id=3D"cboxLoadingGrap=
hic" style=3D"float: left;"></div></div><div id=3D"cboxMiddleRight" style=
=3D"float: left;"></div></div><div style=3D"clear: left;"><div id=3D"cboxBo=
ttomLeft" style=3D"float: left;"></div><div id=3D"cboxBottomCenter" style=
=3D"float: left;"></div><div id=3D"cboxBottomRight" style=3D"float: left;">=
</div></div></div><div style=3D"position: absolute; width: 9999px; visibili=
ty: hidden; display: none; max-width: none;"></div></div><link rel=3D"impor=
t" href=3D"https://cdn.forgerock.com/backstage-web-components/latest/backst=
age-site-header.html"><link rel=3D"import" href=3D"https://cdn.forgerock.co=
m/backstage-web-components/latest/backstage-site-footer.html"><link rel=3D"=
stylesheet" type=3D"text/css" media=3D"print" href=3D"https://cdn.forgerock=
.com/docs-ui/prod/fr-docs-styles.print.css"><div data-notify=3D"container" =
class=3D"col-xs-11 col-sm-4 alert alert-danger animated fadeInRight" role=
=3D"alert" data-notify-position=3D"top-right" style=3D"display: inline-bloc=
k; margin: 0px auto; position: fixed; transition: 0.5s ease-in-out; z-index=
: 1031; top: 65px; right: 15px; animation-iteration-count: 1;"><button type=
=3D"button" aria-hidden=3D"true" class=3D"close" data-notify=3D"dismiss" st=
yle=3D"position: absolute; right: 10px; top: 5px; z-index: 1033;">=C3=97</b=
utton><span data-notify=3D"icon" class=3D"glyphicon glyphicon-ban-circle"><=
/span> <span data-notify=3D"title"><strong>No longer supported</strong></sp=
an> <span data-notify=3D"message"><p>This version of the product is no long=
er supported.</p>
<p>For more information, see the following articles:</p>
<ul>
    <li><a href=3D"https://backstage.forgerock.com/knowledge/kb/article/a88=
380700" id=3D"eoslAlertEOSLURL" class=3D"alert-link" target=3D"_blank">Forg=
eRock End of Service Life (EOSL) policy</a></li>
    <li><a href=3D"https://backstage.forgerock.com/knowledge/kb/article/a18=
529200" id=3D"eoslAlertVersionsURL" class=3D"alert-link" target=3D"_blank">=
Checking your product versions are supported</a></li>
</ul></span><a href=3D"https://backstage.forgerock.com/docs/openam/13.5/dev=
-guide/index.html#" target=3D"_blank" data-notify=3D"url"></a></div><iframe=
 name=3D"__uspapiLocator" tabindex=3D"-1" role=3D"presentation" aria-hidden=
=3D"true" title=3D"Blank" style=3D"display: none; position: absolute; width=
: 1px; height: 1px; top: -9999px;"></iframe><iframe tabindex=3D"-1" role=3D=
"presentation" aria-hidden=3D"true" title=3D"Blank" src=3D"cid:frame-3EDD8F=
ACD1963C8B47BC1195A8A7527C@mhtml.blink" style=3D"position: absolute; width:=
 1px; height: 1px; top: -9999px;"></iframe><img id=3D"CookiebotSessionPixel=
" src=3D"https://imgsct.cookiebot.com/1.gif?dgi=3Deb963ed3-1ab0-4cd7-bc4d-1=
02ff4d46a54" alt=3D"Cookiebot session tracker icon loaded" data-cookieconse=
nt=3D"ignore" style=3D"display: none;"><div><div dir=3D"ltr" id=3D"Cookiebo=
tWidget" lang=3D"en"><button class=3D"CookiebotWidget-logo" aria-label=3D"O=
pen widget" lang=3D"en"><svg width=3D"24" height=3D"24" viewBox=3D"0 0 24 2=
4" xmlns=3D"http://www.w3.org/2000/svg"><g fill-rule=3D"evenodd"><circle cx=
=3D"12" cy=3D"12" r=3D"12"></circle><path d=3D"M15.094 13.978c-1.146 0-1.94=
6-.813-1.946-1.978s.8-1.978 1.946-1.978c1.145 0 1.945.813 1.945 1.978s-.8 1=
.978-1.945 1.978M9.07 10.022h3.883l-.094.09c-.537.515-.844 1.203-.844 1.888=
 0 1.738 1.294 3 3.079 3 1.786 0 3.082-1.262 3.082-3s-1.296-3-3.082-3H9.079=
C7.295 9 6 10.262 6 12s1.295 3 3.079 3h2.144v-1.022H9.07c-1.136 0-1.932-.81=
3-1.937-1.978 0-1.146.815-1.978 1.937-1.978" fill=3D"#000"></path></g></svg=
></button><div id=3D"CookiebotWidget-widgetContent"></div></div><div id=3D"=
CookiebotWidgetUnderlay"></div></div></body></html>
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-8d188cc1-9fbf-4972-a81b-546bf81b93a9@mhtml.blink

@charset "utf-8";

#mttContainer { white-space: pre-line; left: 0px !important; top: 0px !impo=
rtant; width: 1000px !important; margin: 0px 0px 0px -500px !important; pos=
ition: fixed !important; z-index: 100000200 !important; background: none !i=
mportant; pointer-events: none !important; display: inline-block !important=
; visibility: visible !important; }

.tippy-box[data-theme~=3D"custom"], .tippy-content * { white-space: pre-lin=
e; font-size: 18px !important; text-align: center !important; overflow-wrap=
: break-word !important; color: rgb(255, 255, 255) !important; font-family:=
 -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Can=
tarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif !important;=
 }

.tippy-box[data-theme~=3D"custom"] { border: 1px solid rgba(255, 255, 255, =
0); max-width: 200px !important; backdrop-filter: blur(4px) !important; bac=
kground-color: rgba(0, 0, 0, 0.72) !important; }

[data-tippy-root] { display: inline-block !important; visibility: visible !=
important; position: absolute !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"top"] > .tippy-arrow:=
:before { border-top-color: rgba(0, 0, 0, 0.72) !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"bottom"] > .tippy-arr=
ow::before { border-bottom-color: rgba(0, 0, 0, 0.72) !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"left"] > .tippy-arrow=
::before { border-left-color: rgba(0, 0, 0, 0.72) !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"right"] > .tippy-arro=
w::before { border-right-color: rgba(0, 0, 0, 0.72) !important; }

.mtt-highlight { background-color: rgba(33, 220, 109, 0.25) !important; pos=
ition: absolute !important; z-index: 100000100 !important; pointer-events: =
none !important; display: inline !important; border-radius: 3px !important;=
 }

.mtt-image { width: 180px !important; border-radius: 3px !important; }

.ocr_text_div { position: absolute; opacity: 0.5; border: 2px solid cornflo=
werblue; color: transparent !important; background: none !important; border=
-radius: 3px !important; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-64d42b4a-c32a-4094-9478-0e6f09deb104@mhtml.blink

@charset "utf-8";

#ytp-caption-window-container .ytp-caption-segment { cursor: text !importan=
t; user-select: text !important; font-family: -apple-system, BlinkMacSystem=
Font, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sa=
ns", "Helvetica Neue", sans-serif !important; }

.caption-visual-line { display: flex !important; align-items: stretch !impo=
rtant; }

.captions-text .caption-visual-line:first-of-type::after { content: "=E2=A3=
=BF=E2=A3=BF"; background-color: rgba(0, 0, 0, 0.72); display: inline-block=
; vertical-align: top; opacity: 0; transition: opacity 0.7s ease-in-out; }

.captions-text:hover .caption-visual-line:first-of-type::after { opacity: 1=
; }

.ytp-pause-overlay { display: none !important; }

.ytp-expand-pause-overlay .caption-window { display: block !important; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-23f002bc-bb42-4aaa-8c72-6f263001f8a6@mhtml.blink

@charset "utf-8";

.cookieconsent-optin, .cookieconsent-optin-preferences, .cookieconsent-opti=
n-statistics, .cookieconsent-optin-marketing { display: initial; }

.cookieconsent-optout-preferences, .cookieconsent-optout-statistics, .cooki=
econsent-optout-marketing, .cookieconsent-optout { display: none; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-12f73708-efad-462a-a3b2-ece9a4a09eaa@mhtml.blink

@charset "utf-8";

a#CybotCookiebotDialogPoweredbyCybot, div#CybotCookiebotDialogPoweredByText=
, .CookiebotWidget-main-logo { display: none !important; }

#CookiebotWidget-btn-withdraw { border: 1px solid !important; border-radius=
: 0px !important; color: rgb(179, 40, 45) !important; }

#CookiebotWidget-btn-change { background-color: rgb(179, 40, 45) !important=
; border: 1px solid !important; border-radius: 0px !important; }

.CookiebotWidget-show-consent-details { color: rgb(179, 40, 45) !important;=
 }

.Cookiebotwidget-consent-icon svg { fill: rgb(179, 40, 45) !important; }

#CookiebotWidget { font-family: Gotham, helvetica, sans-serif !important; r=
ight: 15px !important; left: unset !important; background-color: rgb(255, 2=
55, 255) !important; }

.CookiebotWidget-logo { width: 100%; height: 100%; left: 2px; position: abs=
olute !important; background-image: url("https://www.pingidentity.com/conte=
nt/dam/picr/ico/48x48/Ico-Capabilities-Administration-48x48.svg") !importan=
t; background-repeat: no-repeat !important; background-size: 70% !important=
; background-position: center center !important; }

.CookiebotWidget-logo svg { display: none !important; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.pingidentity.com/content/dam/picr/ico/48x48/Ico-Capabilities-Administration-48x48.svg

<svg width=3D"49" height=3D"49" viewBox=3D"0 0 49 49" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg">
<g clip-path=3D"url(#clip0_2_298)">
<path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M39.4597 4.84424H0.4=
93652V13.1894H2.99365V7.34424H36.9597V20.316H39.4597V4.84424ZM2.99365 17.76=
4H0.493652V43.5672H28.0833V41.0672H9.14391C9.42718 38.6384 10.5303 36.3589 =
12.2966 34.6101C14.3636 32.5636 17.1697 31.4116 20.0982 31.4116C21.4918 31.=
4116 23.5025 31.6921 24.7956 32.2869L25.8404 30.0156C24.0946 29.2126 21.683=
4 28.9116 20.0982 28.9116C16.5146 28.9116 13.0753 30.321 10.5376 32.8336C8.=
29832 35.0507 6.92298 37.9669 6.63016 41.0672H2.99365V17.764ZM20.0982 12.89=
79C16.8667 12.8979 14.1765 15.6184 14.1765 19.0627C14.1765 22.507 16.8667 2=
5.2275 20.0982 25.2275C23.3297 25.2275 26.0198 22.507 26.0198 19.0627C26.01=
98 15.6184 23.3297 12.8979 20.0982 12.8979ZM11.6765 19.0627C11.6765 14.3169=
 15.4081 10.3979 20.0982 10.3979C24.7883 10.3979 28.5198 14.3169 28.5198 19=
.0627C28.5198 23.8085 24.7883 27.7275 20.0982 27.7275C15.4081 27.7275 11.67=
65 23.8085 11.6765 19.0627Z" fill=3D"#051727"/>
<path fill-rule=3D"evenodd" clip-rule=3D"evenodd" d=3D"M41.2824 23.0342H33.=
9759V25.5146C33.6389 25.6769 33.3132 25.8616 33.0009 26.0675L30.8575 24.829=
L27.2031 31.153L29.2615 32.34C29.2404 32.5819 29.2297 32.8248 29.2295 33.06=
78L29.2295 33.0694C29.2296 33.2358 29.2348 33.4021 29.2448 33.5682L27.2064 =
34.7461L30.8605 41.0676L32.8101 39.9414C33.1783 40.1994 33.5667 40.4272 33.=
9715 40.6229V42.8641H41.278V40.6227C41.6824 40.4271 42.0704 40.1993 42.4383=
 39.9414L44.3892 41.0673L48.043 34.7461L46.0062 33.5691C46.0168 33.4026 46.=
0223 33.2358 46.0229 33.0688L45.0229 33.0656L46.0229 33.0637C46.0224 32.820=
9 46.0115 32.5783 45.9901 32.3367L48.0478 31.1501L44.3936 24.8263L42.2496 2=
6.0642C41.9398 25.8594 41.6167 25.6753 41.2824 25.5134V23.0342ZM43.9273 31.=
9759C43.9901 32.3355 44.0221 32.6998 44.0229 33.0649C44.0218 33.3662 43.999=
2 33.6671 43.9554 33.9652L43.8567 34.6368L45.3105 35.477L43.6578 38.3361L42=
.2555 37.5267L41.7194 37.9749C41.1817 38.4244 40.5734 38.7821 39.9192 39.03=
36L39.278 39.28V40.8641H35.9715V39.2799L35.3301 39.0335C34.6753 38.782 34.0=
665 38.4242 33.5282 37.9746L32.992 37.5267L31.5914 38.3357L29.939 35.477L31=
.391 34.6379L31.2944 33.968C31.2515 33.67 31.2298 33.3694 31.2295 33.0684C3=
1.2298 32.7028 31.2614 32.3379 31.3239 31.9777L31.4433 31.2894L29.9363 30.4=
204L31.5885 27.5613L33.1447 28.4605L33.6768 28.0433C34.1788 27.6495 34.7371=
 27.3334 35.333 27.1056L35.9759 26.8598V25.0342H39.2824V26.855L39.9229 27.1=
017C40.5161 27.3303 41.0718 27.6463 41.5715 28.0394L42.1036 28.458L43.6622 =
27.558L45.3146 30.4175L43.8069 31.2869L43.9273 31.9759ZM39.6542 33.0674C39.=
6542 34.1807 38.7517 35.0831 37.6385 35.0831C36.5253 35.0831 35.6228 34.180=
7 35.6228 33.0674C35.6228 31.9542 36.5253 31.0518 37.6385 31.0518C38.7517 3=
1.0518 39.6542 31.9542 39.6542 33.0674ZM37.6385 37.0831C39.8563 37.0831 41.=
6542 35.2852 41.6542 33.0674C41.6542 30.8496 39.8563 29.0518 37.6385 29.051=
8C35.4207 29.0518 33.6228 30.8496 33.6228 33.0674C33.6228 35.2852 35.4207 3=
7.0831 37.6385 37.0831Z" fill=3D"#B3282D"/>
</g>
<defs>
<clipPath id=3D"clip0_2_298">
<rect width=3D"48" height=3D"48" fill=3D"white" transform=3D"translate(0.27=
2461 0.273438)"/>
</clipPath>
</defs>
</svg>=0A
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-76b2e914-ced1-415d-9765-b8a7edd5f195@mhtml.blink

@charset "utf-8";

@keyframes CookiebotWidgetFadeIn {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

#CookiebotWidget { overflow-wrap: break-word; left: 15px; bottom: 15px; ani=
mation: 0.3s ease-in 0s 1 normal none running CookiebotWidgetFadeIn; backgr=
ound-color: rgb(255, 255, 255); border-radius: 40px; box-shadow: rgba(0, 0,=
 0, 0.15) 0px 4px 16px; font-family: Helvetica, Arial, sans-serif; line-hei=
ght: 1.5; min-height: 48px; min-width: 48px; opacity: 0; pointer-events: no=
ne; position: fixed; transition: 0.2s ease-in; word-break: break-word; z-in=
dex: 2147483631; }

#CookiebotWidget, #CookiebotWidget * { background: transparent; box-sizing:=
 border-box; color: rgb(20, 20, 20); font-size: 15px; letter-spacing: 0.1px=
; margin: 0px; outline: 0px; padding: 0px; }

#CookiebotWidget * { font-family: inherit; }

#CookiebotWidget button, #CookiebotWidget li, #CookiebotWidget strong, #Coo=
kiebotWidget svg, #CookiebotWidget ul { border: none; cursor: inherit; font=
-weight: inherit; line-height: 1.5; }

#CookiebotWidget:not(.CookiebotWidget-inactive) { opacity: 1; pointer-event=
s: all; transition: opacity 0.3s ease-in, border-radius 0.2s ease-in; }

#CookiebotWidget.CookiebotWidget-open { overflow: hidden; }

#CookiebotWidget:not(.CookiebotWidget-open):hover { box-shadow: rgba(0, 0, =
0, 0.3) 0px 4px 18px; }

#CookiebotWidget + #CookiebotWidgetUnderlay { background: rgb(0, 0, 0); hei=
ght: 100vh; left: 0px; opacity: 0; pointer-events: none; position: fixed; t=
op: 0px; visibility: hidden; width: 100vw; z-index: 2147483630; }

#CookiebotWidget:not(.CookiebotWidget-open) .CookiebotWidget-logo { cursor:=
 pointer; }

#CookiebotWidget .CookiebotWidget-logo { display: block; transition: opacit=
y 0.3s, transform 0.3s; }

#CookiebotWidget .CookiebotWidget-logo svg { display: block; height: 44px; =
transition: 0.3s; width: 44px; }

#CookiebotWidget:not(.CookiebotWidget-open) button.CookiebotWidget-logo svg=
 { height: 48px; transition: 0.2s; width: 48px; }

#CookiebotWidget .CookiebotWidget-logo svg circle { fill: rgb(255, 255, 255=
); }

#CookiebotWidget .CookiebotWidget-logo svg path { fill: rgb(20, 20, 20); }

#CookiebotWidget #CookiebotWidget-widgetContent { display: flex; max-height=
: 0px; max-width: 0px; overflow: hidden; transition: 0.2s ease-in; }

#CookiebotWidget.CookiebotWidget-open #CookiebotWidget-widgetContent { max-=
height: 1000px; max-width: 1000px; }

#CookiebotWidget.CookiebotWidget-open .CookiebotWidget-contents { max-heigh=
t: calc(-15px + 100vh); min-height: 360px; }

#CookiebotWidget :focus-visible, #CookiebotWidget:not(.CookiebotWidget-open=
) .Cookiebotwidget-logo { outline: rgb(16, 50, 207) solid 2px; outline-offs=
et: 1px; }

@media screen and (max-width: 600px) {
  #CookiebotWidget:not(.CookiebotWidget-inactive) { bottom: 10px; left: 10p=
x; }
  #CookiebotWidget :focus-visible, #CookiebotWidget:not(.CookiebotWidget-op=
en) .Cookiebotwidget-logo { outline: 0px; }
}

@media screen and (min-width: 601px) {
  #CookiebotWidget + #CookiebotWidgetUnderlay { display: none; }
}
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.forgerock.com/docs-ui/prod/fr-docs-styles.screen.css

@charset "utf-8";

@import url("https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-aw=
esome.min.css");

@import url("https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.=
min.css");

@import url("https://cdnjs.cloudflare.com/ajax/libs/jquery.colorbox/1.4.33/=
example1/colorbox.css");

.hljs { display: block; overflow-x: auto; padding: 0.5em; background: rgb(2=
40, 240, 240); }

.hljs, .hljs-subst { color: rgb(68, 68, 68); }

.hljs-comment { color: rgb(136, 136, 136); }

.hljs-keyword, .hljs-attribute, .hljs-selector-tag, .hljs-meta-keyword, .hl=
js-doctag, .hljs-name { font-weight: bold; }

.hljs-type, .hljs-string, .hljs-number, .hljs-selector-id, .hljs-selector-c=
lass, .hljs-quote, .hljs-template-tag, .hljs-deletion { color: rgb(136, 0, =
0); }

.hljs-title, .hljs-section { color: rgb(136, 0, 0); font-weight: bold; }

.hljs-regexp, .hljs-symbol, .hljs-variable, .hljs-template-variable, .hljs-=
link, .hljs-selector-attr, .hljs-selector-pseudo { color: rgb(188, 96, 96);=
 }

.hljs-literal { color: rgb(120, 169, 96); }

.hljs-built_in, .hljs-bullet, .hljs-code, .hljs-addition { color: rgb(57, 1=
15, 0); }

.hljs-meta { color: rgb(31, 113, 153); }

.hljs-meta-string { color: rgb(77, 153, 191); }

.hljs-emphasis { font-style: italic; }

.hljs-strong { font-weight: bold; }

.tippy-box[data-animation=3D"fade"][data-state=3D"hidden"] { opacity: 0; }

[data-tippy-root] { max-width: calc(-10px + 100vw); }

.tippy-box { position: relative; background-color: rgb(51, 51, 51); color: =
rgb(255, 255, 255); border-radius: 4px; font-size: 14px; line-height: 1.4; =
white-space: normal; outline: 0px; transition-property: transform, visibili=
ty, opacity; }

.tippy-box[data-placement^=3D"top"] > .tippy-arrow { bottom: 0px; }

.tippy-box[data-placement^=3D"top"] > .tippy-arrow::before { bottom: -7px; =
left: 0px; border-width: 8px 8px 0px; border-top-color: initial; transform-=
origin: center top; }

.tippy-box[data-placement^=3D"bottom"] > .tippy-arrow { top: 0px; }

.tippy-box[data-placement^=3D"bottom"] > .tippy-arrow::before { top: -7px; =
left: 0px; border-width: 0px 8px 8px; border-bottom-color: initial; transfo=
rm-origin: center bottom; }

.tippy-box[data-placement^=3D"left"] > .tippy-arrow { right: 0px; }

.tippy-box[data-placement^=3D"left"] > .tippy-arrow::before { border-width:=
 8px 0px 8px 8px; border-left-color: initial; right: -7px; transform-origin=
: left center; }

.tippy-box[data-placement^=3D"right"] > .tippy-arrow { left: 0px; }

.tippy-box[data-placement^=3D"right"] > .tippy-arrow::before { left: -7px; =
border-width: 8px 8px 8px 0px; border-right-color: initial; transform-origi=
n: right center; }

.tippy-box[data-inertia][data-state=3D"visible"] { transition-timing-functi=
on: cubic-bezier(0.54, 1.5, 0.38, 1.11); }

.tippy-arrow { width: 16px; height: 16px; color: rgb(51, 51, 51); }

.tippy-arrow::before { content: ""; position: absolute; border-color: trans=
parent; border-style: solid; }

.tippy-content { position: relative; padding: 5px 9px; z-index: 1; }

:root { --backstage-site-footer-position: relative; }

.panel-warning { border-color: brown; }

.panel-warning > .panel-heading { background-color: brown; border-color: br=
own; color: rgb(255, 255, 255); }

.strong, .bold { font-weight: bold !important; }

.guilabel { font-weight: bold !important; }

.strike { text-decoration: line-through rgb(187, 61, 17); color: rgb(78, 88=
, 98); }

.fa.deprecated { color: rgb(187, 61, 17); font-size: 1.2em; }

.preface > .titlepage + p:first-of-type, .preface > .indexterm + p:first-of=
-type, .preface > .titlepage + .itemizedlist > p:first-child, .preface > .i=
ndexterm + .itemizedlist > p:first-child { font-size: 1.8rem; font-weight: =
300; line-height: 1.4; margin-bottom: 15px; }

.animated { animation-duration: 1s; animation-fill-mode: both; }

@keyframes fadeInRight {=20
  0% { opacity: 0; transform: translate3d(100%, 0px, 0px); }
  100% { opacity: 1; transform: none; }
}

.fadeInRight { animation-name: fadeInRight; }

@keyframes fadeOutRight {=20
  0% { opacity: 1; }
  100% { opacity: 0; transform: translate3d(100%, 0px, 0px); }
}

.fadeOutRight { animation-name: fadeOutRight; }

[data-notify=3D"container"] { width: 320px; padding: 5px 10px; font-size: 1=
.2rem; }

[data-notify=3D"title"] { font-size: 1.4rem; margin: 0px 0px 5px 3px; displ=
ay: inline-block; }

[data-notify=3D"message"] > .alert-link { font-weight: 500; }

[data-notify=3D"message"] > p { margin: 0px 0px 4px; }

#main-content .olink, #main-content .xref, #main-content .link { text-decor=
ation: underline dotted; }

#main-content .olink, #main-content .xref, #main-content .link { color: rgb=
(43, 110, 166); }

#main-content .olink:visited, #main-content .xref:visited, #main-content .l=
ink:visited { color: rgb(43, 110, 166); }

#main-content .olink:hover, #main-content .xref:hover, #main-content .link:=
hover { color: rgb(77, 149, 209); text-decoration: none; }

#main-content .olink:active, #main-content .olink:focus, #main-content .xre=
f:active, #main-content .xref:focus, #main-content .link:active, #main-cont=
ent .link:focus { color: rgb(77, 149, 209); }

#main-content .olink:hover, #main-content .xref:hover, #main-content .link:=
hover { text-decoration: underline dotted; }

#main-content a[href^=3D"../resources/"]::after { content: "=EF=80=99"; col=
or: rgb(43, 110, 166); display: inline-block; font-family: "Glyphicons Half=
lings", FontAwesome, Symbol, ZapfDingbats; font-size: 90%; font-style: norm=
al; line-height: 1; padding-left: 2px; position: relative; top: 0px; }

#main-content .self-link { color: rgb(0, 0, 0); }

#main-content .self-link:visited { color: rgb(0, 0, 0); }

#main-content .self-link:hover { color: rgb(0, 0, 0); text-decoration: none=
; }

#main-content .self-link:active, #main-content .self-link:focus { color: rg=
b(0, 0, 0); }

#main-content .self-link:hover::after { content: "=EE=85=84"; color: rgb(43=
, 110, 166); display: inline-block; font-family: "Glyphicons Halflings", Fo=
ntAwesome, Symbol, ZapfDingbats; font-size: 75%; font-style: normal; line-h=
eight: 1; padding-left: 5px; position: relative; top: 1px; }

.dl-horizontal { border-top: 1px dotted rgba(30, 63, 75, 0.75); padding-top=
: 10px; }

.dl-horizontal dt { white-space: normal; padding: 0px 3px 0px 0px; width: 2=
00px; }

.dl-horizontal dd { border-bottom: 1px dotted rgba(30, 63, 75, 0.75); margi=
n-bottom: 18px; margin-left: 210px; }

.variablelist dt { margin: 0px 0px 5px 15px; padding-top: 10px; }

.variablelist dd { margin: 5px 0px 5px 30px; }

.variablelist dd > div > dl.variablelist { border-bottom: none; }

.variablelist > dl { border-top: 1px dotted rgba(30, 63, 75, 0.75); border-=
bottom: 1px dotted rgba(30, 63, 75, 0.75); margin-bottom: 10px; }

.variablelist > dt:not(:first-of-type) { border-top: 1px dotted rgba(30, 63=
, 75, 0.75); }

.simplelist { margin-bottom: 10px; font-size: 1.4rem; }

html { font-size: 62.5%; height: 100%; }

body { color: rgb(33, 37, 41); font-family: "Helvetica Neue", Helvetica, Ar=
ial, sans-serif; font-size: 1.4rem; font-weight: 400; line-height: 1.42857;=
 position: relative; min-height: 100%; margin-bottom: 0px !important; }

#doc-content { margin-top: 100px; min-height: 60rem; }

#doc-content :not(td):not(li):not(sup):not(.co):not(tr)[id]::before { displ=
ay: block; content: " "; margin-top: -100px; height: 100px; visibility: hid=
den; }

#doc-content-abstract { border-left: 5px solid rgb(187, 61, 17); color: rgb=
(102, 102, 102); font-size: 18px; font-weight: 400; padding: 4px 0px 1px 10=
px; margin-top: 24px; }

#doc-content-abstract p { margin-bottom: 9px; font-style: italic; }

.footnotes > .footnote { font-size: 0.9em; color: rgb(52, 58, 64); }

#alternateBar { bottom: -20px; padding: 5px 15px; position: fixed; text-ali=
gn: center; width: 100%; display: none; z-index: 99; }

.mr-1 { display: inline-block; margin-right: 20px; }

#alternate-titles > a { color: rgb(102, 81, 44); font-weight: bold; margin-=
right: 15px; }

.alert-dismissible .close { color: inherit; position: relative; right: 0px;=
 top: -2px; }

.back-to-top { position: fixed; bottom: 55px; right: 5px; display: none; }

.back-to-top .btn-primary { background-color: rgb(187, 61, 17); border-colo=
r: rgb(140, 46, 13); }

.back-to-top .btn-primary:hover { background-color: rgb(210, 69, 19); borde=
r-color: rgb(164, 53, 15); }

.itemizedlist-title, .variablelist-title, .table-title, .figure-title, .exa=
mple-title { font-size: 1.7rem; font-weight: 700; margin: 12px 0px 6px; }

.figure-title { margin: 16px 0px 4px; text-align: center; font-style: itali=
c; }

.table-title { text-align: center; font-style: italic; }

.variablelist-title { margin: 10px 0px; text-decoration: underline; }

div.procedure-title, div.table-title { margin: 6px 0px 8px; }

.procedure-title > a, .procedure-title > a:hover { font-size: 1.7rem; font-=
weight: 700; }

.calloutlist-title { font-style: italic; margin: 4px 0px 6px; font-weight: =
bold; }

div h5, div h6, div h7 { font-size: 1.7rem; }

#sidebar { max-height: calc(-150px + 100vh); }

#sidebar.affix { position: fixed; top: 116px; }

#sidebar.affix-top { position: fixed; top: 116px; }

#sidebar.affix-bottom { position: absolute; }

#sidebar { overflow: hidden auto; }

#sidebar .btn-primary.latestUpdate { margin-bottom: 1em; }

#sidebar .displayVersion { font-size: 12px; padding: 2px 0px 9px 2px; }

#sidebar .displayVersion .updatelabel { font-style: italic; font-weight: bo=
ld; color: rgb(119, 119, 119); }

#sidebar .input-group-btn i { color: rgb(187, 61, 17); }

#sidebar .input-group-btn .caret { color: rgb(187, 61, 17); }

#sidebar #secondHeaderSearchForm { padding-right: 1em; }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:focus, .dropdown=
-menu > .active > a:hover { background-color: rgb(187, 61, 17); }

.eosl { background-color: rgb(187, 61, 17); }

#sidebar .nav a { color: rgb(52, 58, 64); font-size: 1.3rem; font-weight: 4=
00; margin-right: 10px; padding: 2px 10px 2px 2px; border-right: 2px solid =
rgba(0, 0, 0, 0); }

#sidebar .nav a:hover { color: rgb(187, 61, 17); border-right: 2px solid rg=
b(187, 61, 17); }

#sidebar .nav ul.nav { display: none; padding-left: 1rem; }

#sidebar .nav .active > ul.nav { display: block; }

#sidebar .nav .active > a { color: rgb(187, 61, 17); border-right: 2px soli=
d rgb(187, 61, 17); font-weight: bold; }

#sidebar .nav .nav .nav a { font-size: 1.2rem; }

#sidebar .nav .nav .nav .nav a { font-size: 1.1rem; }

.nav.navbar-nav.navbar-right { padding-right: 15px; }

.navbar-right.navbar-form { margin-top: 0px; margin-bottom: 0px; }

.navbar-default .btn-link { padding: 15px 3px; color: rgba(30, 63, 75, 0.75=
) !important; }

.navbar-secondary { box-shadow: rgba(0, 0, 0, 0.14) 0px 0px 4px, rgba(0, 0,=
 0, 0.28) 0px 4px 8px; top: 50px; }

.navbar-secondary .navbar-brand { color: rgb(187, 61, 17); font-size: 1.8re=
m; padding: 16px 14px 0px 16px; font-weight: bold; }

.navbar-secondary .navbar-brand a { color: rgb(187, 61, 17); font-weight: b=
old; }

.navbar-secondary .navbar-brand a:hover { text-decoration: none; color: rgb=
(242, 148, 115); }

.navbar-secondary .navbar-text { font-size: 1.8rem; margin: 0px; padding: 1=
8px 0px 0px 2px; line-height: 1em; }

.navbar-secondary .navbar-text a { color: rgb(0, 0, 0); background-color: i=
nherit; }

.navbar-secondary .navbar-text a:hover { text-decoration: underline; color:=
 rgb(77, 77, 77); }

.navfooter { margin: 30px 0px 12px; border-top: 1px dotted; padding-top: 10=
px; color: rgb(77, 77, 77); }

.navfooter a { color: rgb(43, 110, 166); font-size: 0.8em; background-color=
: inherit; }

.navfooter a:hover { text-decoration: none; color: rgb(187, 61, 17); }

.navbar-default .btn-link:hover { text-decoration: none !important; }

.toolbar-icon { cursor: pointer; display: inline-block; margin: 0px; }

.toolbar-icon a { color: rgba(30, 63, 75, 0.75); padding: 10px 0px; }

.toolbar-icon a:hover { color: rgba(75, 154, 183, 0.75); text-decoration: n=
one !important; }

.toolbar-icon i.fa-envelope-open-o { display: none; }

.toolbar-icon .toolbar-text { margin: 1px 2px 0px 3px; font-size: 0.9em; }

#secondHeaderSearchForm { display: inline-block; width: 100%; padding-top: =
3px; margin-bottom: 0px; }

#secondHeaderSearchForm .toolbar-icons { display: inline-block; vertical-al=
ign: middle; color: rgba(30, 63, 75, 0.75) !important; }

#secondHeaderSearchForm .toolbar-icons .toolbar-icon { cursor: pointer; dis=
play: inline-block; margin: 0px 0px 0px 5px; }

#secondHeaderSearchForm .toolbar-icons .toolbar-icon a { color: rgba(30, 63=
, 75, 0.75); }

#secondHeaderSearchForm .toolbar-icons .toolbar-icon a:hover { color: rgba(=
30, 63, 75, 0.75); text-decoration: none !important; }

#secondHeaderSearchForm .toolbar-icons .toolbar-icon i.fa-envelope-open-o {=
 display: none; }

#secondHeaderSearchForm .toolbar-icons .toolbar-icon .toolbar-text { margin=
: 1px 2px 0px 3px; font-size: 0.9em; }

.dropdown-menu { min-width: initial !important; }

.dropdown-menu > li { font-size: 1.2rem; padding: 0px 10px; }

.dropdown-menu > li > a { padding: 1px 10px 2px 5px; }

.dropdown-menu > li.dropdown-header { font-style: italic; padding: 2px 10px=
 1px; }

.st-custom-button i.fa { width: 18px; text-align: center; }

.st-custom-button i.fa.fa-facebook { color: rgb(59, 89, 152); }

.st-custom-button i.fa.fa-linkedin { color: rgb(0, 123, 182); }

.st-custom-button i.fa.fa-twitter { color: rgb(0, 172, 237); }

code { font-size: 0.9375em; padding: 0px; color: rgb(52, 58, 64); backgroun=
d-color: rgba(0, 0, 0, 0); }

code.literal, code.filename { white-space: pre-line; overflow-wrap: break-w=
ord; word-break: break-word; background-clip: padding-box; border-radius: 3=
px; border: 1px solid rgb(223, 225, 230); background-color: rgb(244, 245, 2=
47); margin: 0px 2px -1px; padding: 0px 3px; }

.replaceable { color: rgb(0, 187, 134); font-weight: 700; }

.command { font-family: Menlo, Monaco, Consolas, "Courier New", monospace; =
font-size: 0.9375em; }

.command > strong { font-weight: 600; }

.literallayout { background-color: rgb(245, 245, 245); border-radius: 4px; =
font-family: Menlo, Monaco, Consolas, "Courier New", monospace; font-size: =
0.9375em; max-width: 100%; padding: 2px 4px; border: 1px solid rgb(220, 220=
, 220); margin: 0px 0px 10px; overflow-wrap: break-word; white-space: norma=
l; }

.literallayout > p { margin: 2px 4px; }

.literallayout .literal { background-color: rgba(0, 0, 0, 0); }

.btn-copy-cmdline, .btn-copy-codelisting { background-color: rgb(255, 255, =
255); color: rgb(123, 138, 139); display: block; font-size: 0.9375em; paddi=
ng: 1px 3px 3px; position: absolute; right: 1px; top: 1px; border-left: 1px=
 solid rgb(220, 220, 220); border-bottom: 1px solid rgb(220, 220, 220); bor=
der-radius: 0px 2px 0px 4px; }

pre.prettyprint { border: 1px solid rgb(220, 220, 220); padding: 8px 26px 8=
px 8px; font-size: 0.9375em; font-family: Menlo, Monaco, Consolas, "Courier=
 New", monospace; white-space: pre-wrap; word-break: keep-all; }

.zero-clipboard { display: block; position: relative; }

.zero-clipboard > span { cursor: pointer; }

.zero-clipboard > span:hover { color: rgba(30, 63, 75, 0.75); }

.zeroclipboard-is-hover { background-color: rgba(30, 63, 75, 0.75); border-=
color: rgba(30, 63, 75, 0.75); color: rgb(255, 255, 255); cursor: pointer; =
}

.ui-effects-transfer { border: 1px dotted rgb(0, 0, 0); background-color: r=
gba(30, 63, 75, 0.75); opacity: 0.4; }

.hljs { background: rgb(245, 245, 245) !important; }

div.procedure-inner { border-color: rgb(119, 136, 153); background-color: r=
gba(253, 253, 255, 0.7); border-style: dotted dotted dotted solid; border-w=
idth: 1px 1px 1px 6px; margin: 15px 0px 10px; padding: 8px 15px 10px 10px; =
}

a.fancybox { text-decoration: none; }

a.fancybox > img { cursor: zoom-in; }

#cboxTitle { color: rgb(33, 37, 41); font-size: 1.4rem; font-weight: 400; }

#cboxOverlay { background: none 0px 0px repeat scroll rgba(30, 63, 75, 0.75=
); }

img.img-responsive { margin-bottom: 20px; }

.co > img { height: 1.2em; margin-bottom: 0.2em; }

tr.question > :first-child { padding-right: 15px; }

tr.question { border-top: 1px dotted rgb(119, 136, 153); }

tr.question td { font-weight: bold; padding-top: 10px; }

.qandaset table { font-size: 14px; table-layout: fixed; }

.qandaset table colgroup > col:first-child { width: 5%; }

.refnamediv h2 { display: none; }

.refsect1 h2, .refsynopsisdiv h2 { font-size: 28px !important; font-weight:=
 400 !important; }

.refsect2 h3, .refsynopsisdiv h3 { font-size: 26px !important; font-weight:=
 400 !important; }

.refnamediv p { font-size: 30px !important; font-weight: 500 !important; }

.indexdiv > h3 { border-bottom: 2px dotted rgb(211, 211, 211); padding-bott=
om: 5px; }

.indexdiv > dl { margin-left: 30px; }

.indexdiv dl { margin-bottom: 5px; }

.indexdiv dt { margin: 5px 0px 2px; }

.indexdiv dd { margin-left: 35px; }

.indexdiv .indexterm { font-weight: 200; }

.fr-alt { color: var(--link-font-color); cursor: help; }

.tippy-box[data-theme~=3D"fr-tips"] { background-color: rgb(0, 0, 0); color=
: rgb(255, 255, 255); font-size: 12px; }

.tippy-box[data-theme~=3D"fr-tips"] .tippy-arrow { color: rgb(0, 0, 0); }

body.modal-open { overflow-y: scroll; }

.modal-dialog { margin-top: 65px; }

.modal-header { cursor: move; }

#aboutModal .modal-body { font-size: 12px; }

#aboutModal .modal-header, #aboutModal .modal-body { padding: 10px 15px 5px=
; }

#aboutModal #about-title { margin: 0px; font-size: 24px !important; font-we=
ight: 500 !important; }

#aboutModal #about-subtitle { color: rgb(119, 119, 119); font-size: 15px; f=
ont-style: italic; font-weight: 400; margin: 0px; }

#aboutModal #about-authorgroup { margin: 0px 0px 8px; }

#aboutModal div.author { margin: 4px 10px 5px 0px; }

#aboutModal h3.author { margin: 0px; font-style: italic; font-size: 12px !i=
mportant; font-weight: 100 !important; }

#aboutModal #about-abstract { margin: 10px 0px; font-size: 16px !important;=
 font-weight: 200 !important; }

#aboutModal #about-buildRevision { font-weight: 300; margin: 5px 0px; }

#aboutModal #about-buildRevision > span { font-weight: 400; color: rgb(119,=
 119, 119); }

#aboutModal #about-buildDateTime { font-weight: 300; margin: 5px 0px; }

#aboutModal #about-buildDateTime > span { font-weight: 400; color: rgb(119,=
 119, 119); }

#aboutModal #about-legalnotice { font-weight: 400; }

#aboutModal .affiliation { display: none; }

#aboutModal .about-copyright { color: rgb(119, 119, 119); font-size: 14px; =
margin: 15px 0px 5px; }

.author { display: inline; }

.table { font-size: 1.4rem; table-layout: fixed; }

.calloutlist > table { width: 100%; }

.calloutlist > table tr > td img[src$=3D".svg"] { height: 1.2em; margin-bot=
tom: 0.2em; }

th[align=3D"center"] { text-align: center; }

.table-striped td > :last-child { margin-bottom: 2px !important; }

.fr-multi-screen { padding-left: 6px; border-bottom: none !important; }

.fr-multi-screen > li.active > a { background-color: rgb(245, 245, 245) !im=
portant; }

.fr-multi-screen > li > a { padding: 1px 6px 2px; font-size: 0.8em; }

blockquote { position: relative; display: inline-block; font-size: 1.4rem; =
font-weight: 400; font-style: italic; margin: 0px 4em; border-left: none; c=
olor: rgb(123, 138, 139); }

blockquote::before { position: absolute; content: open-quote; font-size: 4e=
m; margin-left: -0.6em; margin-top: -0.4em; color: rgb(43, 110, 166); }

blockquote::after { position: absolute; content: close-quote; font-size: 4e=
m; right: 0.2em; bottom: 0px; margin-bottom: -0.6em; color: rgb(43, 110, 16=
6); }

table.blockquote { margin: 0px 0px 0px 2em; width: auto !important; }

table.blockquote > tbody > tr:nth-of-type(1) > td:nth-of-type(2) { position=
: relative; color: rgb(123, 138, 139); font-style: italic; }

table.blockquote > tbody > tr:nth-of-type(1) > td:nth-of-type(2)::before { =
position: absolute; content: open-quote; font-size: 4em; margin-left: -0.6e=
m; margin-top: -0.4em; color: rgb(43, 110, 166); }

table.blockquote > tbody > tr:nth-of-type(1) > td:nth-of-type(2)::after { p=
osition: absolute; content: close-quote; font-size: 4em; bottom: 0px; right=
: 0px; margin-right: -0.6em; margin-bottom: -0.6em; color: rgb(43, 110, 166=
); }

div.blockquote { margin-bottom: 1.5em; }

.attribution { padding-top: 0.5em; display: inline-block; }

.fr-link-collapse { display: block; cursor: n-resize !important; }

.fr-link-collapse::before { display: inline-block; font-family: FontAwesome=
; color: rgb(119, 136, 153); font-size: 12px; content: "=EF=81=A7"; transit=
ion: 0.3s; transform: rotate(45deg); backface-visibility: hidden; margin-ri=
ght: 5px !important; }

.fr-link-collapse.collapsed { cursor: help !important; }

.fr-link-collapse.collapsed::before { transform: rotate(0deg); transition: =
0.3s; }

.fr-div-collapse { opacity: 0.4; }

.fr-div-collapse.collapse { padding-top: 1em; transition: opacity 0.4s ease=
-in-out; display: block; overflow-x: hidden; margin-left: 1em; padding-left=
: 2em; font-style: italic; height: 0px !important; overflow-y: scroll !impo=
rtant; }

.fr-div-collapse.in { transition: opacity 0.4s linear; border: 1px dashed r=
gba(43, 110, 166, 0.4); border-radius: 1em; margin: 1em; padding: 1.4em 2em=
 1em; opacity: 1; font-style: inherit; height: initial !important; }

#fr-expand-content { padding-top: 116px; text-align: right; float: right; }

#fr-expand-content .fr-link-collapse::before, #fr-expand-content .fr-link-c=
ollapse.collapsed::before { color: rgb(255, 255, 255); }

#fr-expand-content > a.badge:focus, #fr-expand-content > a.badge:hover { ba=
ckground: rgb(43, 110, 166); transition: background 0.3s linear; }

.fr-expand-link { display: inline-block; min-width: 8.5em; text-align: left=
; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css

@charset "utf-8";

@font-face { font-family: FontAwesome; src: url("../fonts/fontawesome-webfo=
nt.woff2?v=3D4.7.0") format("woff2"), url("../fonts/fontawesome-webfont.wof=
f?v=3D4.7.0") format("woff"), url("../fonts/fontawesome-webfont.ttf?v=3D4.7=
.0") format("truetype"); font-weight: normal; font-style: normal; }

.fa { display: inline-block; font-style: normal; font-variant: normal; font=
-size-adjust: none; font-kerning: auto; font-optical-sizing: auto; font-fea=
ture-settings: normal; font-variation-settings: normal; font-weight: normal=
; font-stretch: normal; line-height: 1; font-family: FontAwesome; font-size=
: inherit; text-rendering: auto; -webkit-font-smoothing: antialiased; }

.fa-lg { font-size: 1.33333em; line-height: 0.75em; vertical-align: -15%; }

.fa-2x { font-size: 2em; }

.fa-3x { font-size: 3em; }

.fa-4x { font-size: 4em; }

.fa-5x { font-size: 5em; }

.fa-fw { width: 1.28571em; text-align: center; }

.fa-ul { padding-left: 0px; margin-left: 2.14286em; list-style-type: none; =
}

.fa-ul > li { position: relative; }

.fa-li { position: absolute; left: -2.14286em; width: 2.14286em; top: 0.142=
857em; text-align: center; }

.fa-li.fa-lg { left: -1.85714em; }

.fa-border { padding: 0.2em 0.25em 0.15em; border: 0.08em solid rgb(238, 23=
8, 238); border-radius: 0.1em; }

.fa-pull-left { float: left; }

.fa-pull-right { float: right; }

.fa.fa-pull-left { margin-right: 0.3em; }

.fa.fa-pull-right { margin-left: 0.3em; }

.pull-right { float: right; }

.pull-left { float: left; }

.fa.pull-left { margin-right: 0.3em; }

.fa.pull-right { margin-left: 0.3em; }

.fa-spin { animation: 2s linear 0s infinite normal none running fa-spin; }

.fa-pulse { animation: 1s steps(8) 0s infinite normal none running fa-spin;=
 }

@-webkit-keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}

@keyframes fa-spin {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(359deg); }
}

.fa-rotate-90 { transform: rotate(90deg); }

.fa-rotate-180 { transform: rotate(180deg); }

.fa-rotate-270 { transform: rotate(270deg); }

.fa-flip-horizontal { transform: scale(-1, 1); }

.fa-flip-vertical { transform: scale(1, -1); }

:root .fa-rotate-90, :root .fa-rotate-180, :root .fa-rotate-270, :root .fa-=
flip-horizontal, :root .fa-flip-vertical { filter: none; }

.fa-stack { position: relative; display: inline-block; width: 2em; height: =
2em; line-height: 2em; vertical-align: middle; }

.fa-stack-1x, .fa-stack-2x { position: absolute; left: 0px; width: 100%; te=
xt-align: center; }

.fa-stack-1x { line-height: inherit; }

.fa-stack-2x { font-size: 2em; }

.fa-inverse { color: rgb(255, 255, 255); }

.fa-glass::before { content: "=EF=80=80"; }

.fa-music::before { content: "=EF=80=81"; }

.fa-search::before { content: "=EF=80=82"; }

.fa-envelope-o::before { content: "=EF=80=83"; }

.fa-heart::before { content: "=EF=80=84"; }

.fa-star::before { content: "=EF=80=85"; }

.fa-star-o::before { content: "=EF=80=86"; }

.fa-user::before { content: "=EF=80=87"; }

.fa-film::before { content: "=EF=80=88"; }

.fa-th-large::before { content: "=EF=80=89"; }

.fa-th::before { content: "=EF=80=8A"; }

.fa-th-list::before { content: "=EF=80=8B"; }

.fa-check::before { content: "=EF=80=8C"; }

.fa-remove::before, .fa-close::before, .fa-times::before { content: "=EF=80=
=8D"; }

.fa-search-plus::before { content: "=EF=80=8E"; }

.fa-search-minus::before { content: "=EF=80=90"; }

.fa-power-off::before { content: "=EF=80=91"; }

.fa-signal::before { content: "=EF=80=92"; }

.fa-gear::before, .fa-cog::before { content: "=EF=80=93"; }

.fa-trash-o::before { content: "=EF=80=94"; }

.fa-home::before { content: "=EF=80=95"; }

.fa-file-o::before { content: "=EF=80=96"; }

.fa-clock-o::before { content: "=EF=80=97"; }

.fa-road::before { content: "=EF=80=98"; }

.fa-download::before { content: "=EF=80=99"; }

.fa-arrow-circle-o-down::before { content: "=EF=80=9A"; }

.fa-arrow-circle-o-up::before { content: "=EF=80=9B"; }

.fa-inbox::before { content: "=EF=80=9C"; }

.fa-play-circle-o::before { content: "=EF=80=9D"; }

.fa-rotate-right::before, .fa-repeat::before { content: "=EF=80=9E"; }

.fa-refresh::before { content: "=EF=80=A1"; }

.fa-list-alt::before { content: "=EF=80=A2"; }

.fa-lock::before { content: "=EF=80=A3"; }

.fa-flag::before { content: "=EF=80=A4"; }

.fa-headphones::before { content: "=EF=80=A5"; }

.fa-volume-off::before { content: "=EF=80=A6"; }

.fa-volume-down::before { content: "=EF=80=A7"; }

.fa-volume-up::before { content: "=EF=80=A8"; }

.fa-qrcode::before { content: "=EF=80=A9"; }

.fa-barcode::before { content: "=EF=80=AA"; }

.fa-tag::before { content: "=EF=80=AB"; }

.fa-tags::before { content: "=EF=80=AC"; }

.fa-book::before { content: "=EF=80=AD"; }

.fa-bookmark::before { content: "=EF=80=AE"; }

.fa-print::before { content: "=EF=80=AF"; }

.fa-camera::before { content: "=EF=80=B0"; }

.fa-font::before { content: "=EF=80=B1"; }

.fa-bold::before { content: "=EF=80=B2"; }

.fa-italic::before { content: "=EF=80=B3"; }

.fa-text-height::before { content: "=EF=80=B4"; }

.fa-text-width::before { content: "=EF=80=B5"; }

.fa-align-left::before { content: "=EF=80=B6"; }

.fa-align-center::before { content: "=EF=80=B7"; }

.fa-align-right::before { content: "=EF=80=B8"; }

.fa-align-justify::before { content: "=EF=80=B9"; }

.fa-list::before { content: "=EF=80=BA"; }

.fa-dedent::before, .fa-outdent::before { content: "=EF=80=BB"; }

.fa-indent::before { content: "=EF=80=BC"; }

.fa-video-camera::before { content: "=EF=80=BD"; }

.fa-photo::before, .fa-image::before, .fa-picture-o::before { content: "=EF=
=80=BE"; }

.fa-pencil::before { content: "=EF=81=80"; }

.fa-map-marker::before { content: "=EF=81=81"; }

.fa-adjust::before { content: "=EF=81=82"; }

.fa-tint::before { content: "=EF=81=83"; }

.fa-edit::before, .fa-pencil-square-o::before { content: "=EF=81=84"; }

.fa-share-square-o::before { content: "=EF=81=85"; }

.fa-check-square-o::before { content: "=EF=81=86"; }

.fa-arrows::before { content: "=EF=81=87"; }

.fa-step-backward::before { content: "=EF=81=88"; }

.fa-fast-backward::before { content: "=EF=81=89"; }

.fa-backward::before { content: "=EF=81=8A"; }

.fa-play::before { content: "=EF=81=8B"; }

.fa-pause::before { content: "=EF=81=8C"; }

.fa-stop::before { content: "=EF=81=8D"; }

.fa-forward::before { content: "=EF=81=8E"; }

.fa-fast-forward::before { content: "=EF=81=90"; }

.fa-step-forward::before { content: "=EF=81=91"; }

.fa-eject::before { content: "=EF=81=92"; }

.fa-chevron-left::before { content: "=EF=81=93"; }

.fa-chevron-right::before { content: "=EF=81=94"; }

.fa-plus-circle::before { content: "=EF=81=95"; }

.fa-minus-circle::before { content: "=EF=81=96"; }

.fa-times-circle::before { content: "=EF=81=97"; }

.fa-check-circle::before { content: "=EF=81=98"; }

.fa-question-circle::before { content: "=EF=81=99"; }

.fa-info-circle::before { content: "=EF=81=9A"; }

.fa-crosshairs::before { content: "=EF=81=9B"; }

.fa-times-circle-o::before { content: "=EF=81=9C"; }

.fa-check-circle-o::before { content: "=EF=81=9D"; }

.fa-ban::before { content: "=EF=81=9E"; }

.fa-arrow-left::before { content: "=EF=81=A0"; }

.fa-arrow-right::before { content: "=EF=81=A1"; }

.fa-arrow-up::before { content: "=EF=81=A2"; }

.fa-arrow-down::before { content: "=EF=81=A3"; }

.fa-mail-forward::before, .fa-share::before { content: "=EF=81=A4"; }

.fa-expand::before { content: "=EF=81=A5"; }

.fa-compress::before { content: "=EF=81=A6"; }

.fa-plus::before { content: "=EF=81=A7"; }

.fa-minus::before { content: "=EF=81=A8"; }

.fa-asterisk::before { content: "=EF=81=A9"; }

.fa-exclamation-circle::before { content: "=EF=81=AA"; }

.fa-gift::before { content: "=EF=81=AB"; }

.fa-leaf::before { content: "=EF=81=AC"; }

.fa-fire::before { content: "=EF=81=AD"; }

.fa-eye::before { content: "=EF=81=AE"; }

.fa-eye-slash::before { content: "=EF=81=B0"; }

.fa-warning::before, .fa-exclamation-triangle::before { content: "=EF=81=B1=
"; }

.fa-plane::before { content: "=EF=81=B2"; }

.fa-calendar::before { content: "=EF=81=B3"; }

.fa-random::before { content: "=EF=81=B4"; }

.fa-comment::before { content: "=EF=81=B5"; }

.fa-magnet::before { content: "=EF=81=B6"; }

.fa-chevron-up::before { content: "=EF=81=B7"; }

.fa-chevron-down::before { content: "=EF=81=B8"; }

.fa-retweet::before { content: "=EF=81=B9"; }

.fa-shopping-cart::before { content: "=EF=81=BA"; }

.fa-folder::before { content: "=EF=81=BB"; }

.fa-folder-open::before { content: "=EF=81=BC"; }

.fa-arrows-v::before { content: "=EF=81=BD"; }

.fa-arrows-h::before { content: "=EF=81=BE"; }

.fa-bar-chart-o::before, .fa-bar-chart::before { content: "=EF=82=80"; }

.fa-twitter-square::before { content: "=EF=82=81"; }

.fa-facebook-square::before { content: "=EF=82=82"; }

.fa-camera-retro::before { content: "=EF=82=83"; }

.fa-key::before { content: "=EF=82=84"; }

.fa-gears::before, .fa-cogs::before { content: "=EF=82=85"; }

.fa-comments::before { content: "=EF=82=86"; }

.fa-thumbs-o-up::before { content: "=EF=82=87"; }

.fa-thumbs-o-down::before { content: "=EF=82=88"; }

.fa-star-half::before { content: "=EF=82=89"; }

.fa-heart-o::before { content: "=EF=82=8A"; }

.fa-sign-out::before { content: "=EF=82=8B"; }

.fa-linkedin-square::before { content: "=EF=82=8C"; }

.fa-thumb-tack::before { content: "=EF=82=8D"; }

.fa-external-link::before { content: "=EF=82=8E"; }

.fa-sign-in::before { content: "=EF=82=90"; }

.fa-trophy::before { content: "=EF=82=91"; }

.fa-github-square::before { content: "=EF=82=92"; }

.fa-upload::before { content: "=EF=82=93"; }

.fa-lemon-o::before { content: "=EF=82=94"; }

.fa-phone::before { content: "=EF=82=95"; }

.fa-square-o::before { content: "=EF=82=96"; }

.fa-bookmark-o::before { content: "=EF=82=97"; }

.fa-phone-square::before { content: "=EF=82=98"; }

.fa-twitter::before { content: "=EF=82=99"; }

.fa-facebook-f::before, .fa-facebook::before { content: "=EF=82=9A"; }

.fa-github::before { content: "=EF=82=9B"; }

.fa-unlock::before { content: "=EF=82=9C"; }

.fa-credit-card::before { content: "=EF=82=9D"; }

.fa-feed::before, .fa-rss::before { content: "=EF=82=9E"; }

.fa-hdd-o::before { content: "=EF=82=A0"; }

.fa-bullhorn::before { content: "=EF=82=A1"; }

.fa-bell::before { content: "=EF=83=B3"; }

.fa-certificate::before { content: "=EF=82=A3"; }

.fa-hand-o-right::before { content: "=EF=82=A4"; }

.fa-hand-o-left::before { content: "=EF=82=A5"; }

.fa-hand-o-up::before { content: "=EF=82=A6"; }

.fa-hand-o-down::before { content: "=EF=82=A7"; }

.fa-arrow-circle-left::before { content: "=EF=82=A8"; }

.fa-arrow-circle-right::before { content: "=EF=82=A9"; }

.fa-arrow-circle-up::before { content: "=EF=82=AA"; }

.fa-arrow-circle-down::before { content: "=EF=82=AB"; }

.fa-globe::before { content: "=EF=82=AC"; }

.fa-wrench::before { content: "=EF=82=AD"; }

.fa-tasks::before { content: "=EF=82=AE"; }

.fa-filter::before { content: "=EF=82=B0"; }

.fa-briefcase::before { content: "=EF=82=B1"; }

.fa-arrows-alt::before { content: "=EF=82=B2"; }

.fa-group::before, .fa-users::before { content: "=EF=83=80"; }

.fa-chain::before, .fa-link::before { content: "=EF=83=81"; }

.fa-cloud::before { content: "=EF=83=82"; }

.fa-flask::before { content: "=EF=83=83"; }

.fa-cut::before, .fa-scissors::before { content: "=EF=83=84"; }

.fa-copy::before, .fa-files-o::before { content: "=EF=83=85"; }

.fa-paperclip::before { content: "=EF=83=86"; }

.fa-save::before, .fa-floppy-o::before { content: "=EF=83=87"; }

.fa-square::before { content: "=EF=83=88"; }

.fa-navicon::before, .fa-reorder::before, .fa-bars::before { content: "=EF=
=83=89"; }

.fa-list-ul::before { content: "=EF=83=8A"; }

.fa-list-ol::before { content: "=EF=83=8B"; }

.fa-strikethrough::before { content: "=EF=83=8C"; }

.fa-underline::before { content: "=EF=83=8D"; }

.fa-table::before { content: "=EF=83=8E"; }

.fa-magic::before { content: "=EF=83=90"; }

.fa-truck::before { content: "=EF=83=91"; }

.fa-pinterest::before { content: "=EF=83=92"; }

.fa-pinterest-square::before { content: "=EF=83=93"; }

.fa-google-plus-square::before { content: "=EF=83=94"; }

.fa-google-plus::before { content: "=EF=83=95"; }

.fa-money::before { content: "=EF=83=96"; }

.fa-caret-down::before { content: "=EF=83=97"; }

.fa-caret-up::before { content: "=EF=83=98"; }

.fa-caret-left::before { content: "=EF=83=99"; }

.fa-caret-right::before { content: "=EF=83=9A"; }

.fa-columns::before { content: "=EF=83=9B"; }

.fa-unsorted::before, .fa-sort::before { content: "=EF=83=9C"; }

.fa-sort-down::before, .fa-sort-desc::before { content: "=EF=83=9D"; }

.fa-sort-up::before, .fa-sort-asc::before { content: "=EF=83=9E"; }

.fa-envelope::before { content: "=EF=83=A0"; }

.fa-linkedin::before { content: "=EF=83=A1"; }

.fa-rotate-left::before, .fa-undo::before { content: "=EF=83=A2"; }

.fa-legal::before, .fa-gavel::before { content: "=EF=83=A3"; }

.fa-dashboard::before, .fa-tachometer::before { content: "=EF=83=A4"; }

.fa-comment-o::before { content: "=EF=83=A5"; }

.fa-comments-o::before { content: "=EF=83=A6"; }

.fa-flash::before, .fa-bolt::before { content: "=EF=83=A7"; }

.fa-sitemap::before { content: "=EF=83=A8"; }

.fa-umbrella::before { content: "=EF=83=A9"; }

.fa-paste::before, .fa-clipboard::before { content: "=EF=83=AA"; }

.fa-lightbulb-o::before { content: "=EF=83=AB"; }

.fa-exchange::before { content: "=EF=83=AC"; }

.fa-cloud-download::before { content: "=EF=83=AD"; }

.fa-cloud-upload::before { content: "=EF=83=AE"; }

.fa-user-md::before { content: "=EF=83=B0"; }

.fa-stethoscope::before { content: "=EF=83=B1"; }

.fa-suitcase::before { content: "=EF=83=B2"; }

.fa-bell-o::before { content: "=EF=82=A2"; }

.fa-coffee::before { content: "=EF=83=B4"; }

.fa-cutlery::before { content: "=EF=83=B5"; }

.fa-file-text-o::before { content: "=EF=83=B6"; }

.fa-building-o::before { content: "=EF=83=B7"; }

.fa-hospital-o::before { content: "=EF=83=B8"; }

.fa-ambulance::before { content: "=EF=83=B9"; }

.fa-medkit::before { content: "=EF=83=BA"; }

.fa-fighter-jet::before { content: "=EF=83=BB"; }

.fa-beer::before { content: "=EF=83=BC"; }

.fa-h-square::before { content: "=EF=83=BD"; }

.fa-plus-square::before { content: "=EF=83=BE"; }

.fa-angle-double-left::before { content: "=EF=84=80"; }

.fa-angle-double-right::before { content: "=EF=84=81"; }

.fa-angle-double-up::before { content: "=EF=84=82"; }

.fa-angle-double-down::before { content: "=EF=84=83"; }

.fa-angle-left::before { content: "=EF=84=84"; }

.fa-angle-right::before { content: "=EF=84=85"; }

.fa-angle-up::before { content: "=EF=84=86"; }

.fa-angle-down::before { content: "=EF=84=87"; }

.fa-desktop::before { content: "=EF=84=88"; }

.fa-laptop::before { content: "=EF=84=89"; }

.fa-tablet::before { content: "=EF=84=8A"; }

.fa-mobile-phone::before, .fa-mobile::before { content: "=EF=84=8B"; }

.fa-circle-o::before { content: "=EF=84=8C"; }

.fa-quote-left::before { content: "=EF=84=8D"; }

.fa-quote-right::before { content: "=EF=84=8E"; }

.fa-spinner::before { content: "=EF=84=90"; }

.fa-circle::before { content: "=EF=84=91"; }

.fa-mail-reply::before, .fa-reply::before { content: "=EF=84=92"; }

.fa-github-alt::before { content: "=EF=84=93"; }

.fa-folder-o::before { content: "=EF=84=94"; }

.fa-folder-open-o::before { content: "=EF=84=95"; }

.fa-smile-o::before { content: "=EF=84=98"; }

.fa-frown-o::before { content: "=EF=84=99"; }

.fa-meh-o::before { content: "=EF=84=9A"; }

.fa-gamepad::before { content: "=EF=84=9B"; }

.fa-keyboard-o::before { content: "=EF=84=9C"; }

.fa-flag-o::before { content: "=EF=84=9D"; }

.fa-flag-checkered::before { content: "=EF=84=9E"; }

.fa-terminal::before { content: "=EF=84=A0"; }

.fa-code::before { content: "=EF=84=A1"; }

.fa-mail-reply-all::before, .fa-reply-all::before { content: "=EF=84=A2"; }

.fa-star-half-empty::before, .fa-star-half-full::before, .fa-star-half-o::b=
efore { content: "=EF=84=A3"; }

.fa-location-arrow::before { content: "=EF=84=A4"; }

.fa-crop::before { content: "=EF=84=A5"; }

.fa-code-fork::before { content: "=EF=84=A6"; }

.fa-unlink::before, .fa-chain-broken::before { content: "=EF=84=A7"; }

.fa-question::before { content: "=EF=84=A8"; }

.fa-info::before { content: "=EF=84=A9"; }

.fa-exclamation::before { content: "=EF=84=AA"; }

.fa-superscript::before { content: "=EF=84=AB"; }

.fa-subscript::before { content: "=EF=84=AC"; }

.fa-eraser::before { content: "=EF=84=AD"; }

.fa-puzzle-piece::before { content: "=EF=84=AE"; }

.fa-microphone::before { content: "=EF=84=B0"; }

.fa-microphone-slash::before { content: "=EF=84=B1"; }

.fa-shield::before { content: "=EF=84=B2"; }

.fa-calendar-o::before { content: "=EF=84=B3"; }

.fa-fire-extinguisher::before { content: "=EF=84=B4"; }

.fa-rocket::before { content: "=EF=84=B5"; }

.fa-maxcdn::before { content: "=EF=84=B6"; }

.fa-chevron-circle-left::before { content: "=EF=84=B7"; }

.fa-chevron-circle-right::before { content: "=EF=84=B8"; }

.fa-chevron-circle-up::before { content: "=EF=84=B9"; }

.fa-chevron-circle-down::before { content: "=EF=84=BA"; }

.fa-html5::before { content: "=EF=84=BB"; }

.fa-css3::before { content: "=EF=84=BC"; }

.fa-anchor::before { content: "=EF=84=BD"; }

.fa-unlock-alt::before { content: "=EF=84=BE"; }

.fa-bullseye::before { content: "=EF=85=80"; }

.fa-ellipsis-h::before { content: "=EF=85=81"; }

.fa-ellipsis-v::before { content: "=EF=85=82"; }

.fa-rss-square::before { content: "=EF=85=83"; }

.fa-play-circle::before { content: "=EF=85=84"; }

.fa-ticket::before { content: "=EF=85=85"; }

.fa-minus-square::before { content: "=EF=85=86"; }

.fa-minus-square-o::before { content: "=EF=85=87"; }

.fa-level-up::before { content: "=EF=85=88"; }

.fa-level-down::before { content: "=EF=85=89"; }

.fa-check-square::before { content: "=EF=85=8A"; }

.fa-pencil-square::before { content: "=EF=85=8B"; }

.fa-external-link-square::before { content: "=EF=85=8C"; }

.fa-share-square::before { content: "=EF=85=8D"; }

.fa-compass::before { content: "=EF=85=8E"; }

.fa-toggle-down::before, .fa-caret-square-o-down::before { content: "=EF=85=
=90"; }

.fa-toggle-up::before, .fa-caret-square-o-up::before { content: "=EF=85=91"=
; }

.fa-toggle-right::before, .fa-caret-square-o-right::before { content: "=EF=
=85=92"; }

.fa-euro::before, .fa-eur::before { content: "=EF=85=93"; }

.fa-gbp::before { content: "=EF=85=94"; }

.fa-dollar::before, .fa-usd::before { content: "=EF=85=95"; }

.fa-rupee::before, .fa-inr::before { content: "=EF=85=96"; }

.fa-cny::before, .fa-rmb::before, .fa-yen::before, .fa-jpy::before { conten=
t: "=EF=85=97"; }

.fa-ruble::before, .fa-rouble::before, .fa-rub::before { content: "=EF=85=
=98"; }

.fa-won::before, .fa-krw::before { content: "=EF=85=99"; }

.fa-bitcoin::before, .fa-btc::before { content: "=EF=85=9A"; }

.fa-file::before { content: "=EF=85=9B"; }

.fa-file-text::before { content: "=EF=85=9C"; }

.fa-sort-alpha-asc::before { content: "=EF=85=9D"; }

.fa-sort-alpha-desc::before { content: "=EF=85=9E"; }

.fa-sort-amount-asc::before { content: "=EF=85=A0"; }

.fa-sort-amount-desc::before { content: "=EF=85=A1"; }

.fa-sort-numeric-asc::before { content: "=EF=85=A2"; }

.fa-sort-numeric-desc::before { content: "=EF=85=A3"; }

.fa-thumbs-up::before { content: "=EF=85=A4"; }

.fa-thumbs-down::before { content: "=EF=85=A5"; }

.fa-youtube-square::before { content: "=EF=85=A6"; }

.fa-youtube::before { content: "=EF=85=A7"; }

.fa-xing::before { content: "=EF=85=A8"; }

.fa-xing-square::before { content: "=EF=85=A9"; }

.fa-youtube-play::before { content: "=EF=85=AA"; }

.fa-dropbox::before { content: "=EF=85=AB"; }

.fa-stack-overflow::before { content: "=EF=85=AC"; }

.fa-instagram::before { content: "=EF=85=AD"; }

.fa-flickr::before { content: "=EF=85=AE"; }

.fa-adn::before { content: "=EF=85=B0"; }

.fa-bitbucket::before { content: "=EF=85=B1"; }

.fa-bitbucket-square::before { content: "=EF=85=B2"; }

.fa-tumblr::before { content: "=EF=85=B3"; }

.fa-tumblr-square::before { content: "=EF=85=B4"; }

.fa-long-arrow-down::before { content: "=EF=85=B5"; }

.fa-long-arrow-up::before { content: "=EF=85=B6"; }

.fa-long-arrow-left::before { content: "=EF=85=B7"; }

.fa-long-arrow-right::before { content: "=EF=85=B8"; }

.fa-apple::before { content: "=EF=85=B9"; }

.fa-windows::before { content: "=EF=85=BA"; }

.fa-android::before { content: "=EF=85=BB"; }

.fa-linux::before { content: "=EF=85=BC"; }

.fa-dribbble::before { content: "=EF=85=BD"; }

.fa-skype::before { content: "=EF=85=BE"; }

.fa-foursquare::before { content: "=EF=86=80"; }

.fa-trello::before { content: "=EF=86=81"; }

.fa-female::before { content: "=EF=86=82"; }

.fa-male::before { content: "=EF=86=83"; }

.fa-gittip::before, .fa-gratipay::before { content: "=EF=86=84"; }

.fa-sun-o::before { content: "=EF=86=85"; }

.fa-moon-o::before { content: "=EF=86=86"; }

.fa-archive::before { content: "=EF=86=87"; }

.fa-bug::before { content: "=EF=86=88"; }

.fa-vk::before { content: "=EF=86=89"; }

.fa-weibo::before { content: "=EF=86=8A"; }

.fa-renren::before { content: "=EF=86=8B"; }

.fa-pagelines::before { content: "=EF=86=8C"; }

.fa-stack-exchange::before { content: "=EF=86=8D"; }

.fa-arrow-circle-o-right::before { content: "=EF=86=8E"; }

.fa-arrow-circle-o-left::before { content: "=EF=86=90"; }

.fa-toggle-left::before, .fa-caret-square-o-left::before { content: "=EF=86=
=91"; }

.fa-dot-circle-o::before { content: "=EF=86=92"; }

.fa-wheelchair::before { content: "=EF=86=93"; }

.fa-vimeo-square::before { content: "=EF=86=94"; }

.fa-turkish-lira::before, .fa-try::before { content: "=EF=86=95"; }

.fa-plus-square-o::before { content: "=EF=86=96"; }

.fa-space-shuttle::before { content: "=EF=86=97"; }

.fa-slack::before { content: "=EF=86=98"; }

.fa-envelope-square::before { content: "=EF=86=99"; }

.fa-wordpress::before { content: "=EF=86=9A"; }

.fa-openid::before { content: "=EF=86=9B"; }

.fa-institution::before, .fa-bank::before, .fa-university::before { content=
: "=EF=86=9C"; }

.fa-mortar-board::before, .fa-graduation-cap::before { content: "=EF=86=9D"=
; }

.fa-yahoo::before { content: "=EF=86=9E"; }

.fa-google::before { content: "=EF=86=A0"; }

.fa-reddit::before { content: "=EF=86=A1"; }

.fa-reddit-square::before { content: "=EF=86=A2"; }

.fa-stumbleupon-circle::before { content: "=EF=86=A3"; }

.fa-stumbleupon::before { content: "=EF=86=A4"; }

.fa-delicious::before { content: "=EF=86=A5"; }

.fa-digg::before { content: "=EF=86=A6"; }

.fa-pied-piper-pp::before { content: "=EF=86=A7"; }

.fa-pied-piper-alt::before { content: "=EF=86=A8"; }

.fa-drupal::before { content: "=EF=86=A9"; }

.fa-joomla::before { content: "=EF=86=AA"; }

.fa-language::before { content: "=EF=86=AB"; }

.fa-fax::before { content: "=EF=86=AC"; }

.fa-building::before { content: "=EF=86=AD"; }

.fa-child::before { content: "=EF=86=AE"; }

.fa-paw::before { content: "=EF=86=B0"; }

.fa-spoon::before { content: "=EF=86=B1"; }

.fa-cube::before { content: "=EF=86=B2"; }

.fa-cubes::before { content: "=EF=86=B3"; }

.fa-behance::before { content: "=EF=86=B4"; }

.fa-behance-square::before { content: "=EF=86=B5"; }

.fa-steam::before { content: "=EF=86=B6"; }

.fa-steam-square::before { content: "=EF=86=B7"; }

.fa-recycle::before { content: "=EF=86=B8"; }

.fa-automobile::before, .fa-car::before { content: "=EF=86=B9"; }

.fa-cab::before, .fa-taxi::before { content: "=EF=86=BA"; }

.fa-tree::before { content: "=EF=86=BB"; }

.fa-spotify::before { content: "=EF=86=BC"; }

.fa-deviantart::before { content: "=EF=86=BD"; }

.fa-soundcloud::before { content: "=EF=86=BE"; }

.fa-database::before { content: "=EF=87=80"; }

.fa-file-pdf-o::before { content: "=EF=87=81"; }

.fa-file-word-o::before { content: "=EF=87=82"; }

.fa-file-excel-o::before { content: "=EF=87=83"; }

.fa-file-powerpoint-o::before { content: "=EF=87=84"; }

.fa-file-photo-o::before, .fa-file-picture-o::before, .fa-file-image-o::bef=
ore { content: "=EF=87=85"; }

.fa-file-zip-o::before, .fa-file-archive-o::before { content: "=EF=87=86"; =
}

.fa-file-sound-o::before, .fa-file-audio-o::before { content: "=EF=87=87"; =
}

.fa-file-movie-o::before, .fa-file-video-o::before { content: "=EF=87=88"; =
}

.fa-file-code-o::before { content: "=EF=87=89"; }

.fa-vine::before { content: "=EF=87=8A"; }

.fa-codepen::before { content: "=EF=87=8B"; }

.fa-jsfiddle::before { content: "=EF=87=8C"; }

.fa-life-bouy::before, .fa-life-buoy::before, .fa-life-saver::before, .fa-s=
upport::before, .fa-life-ring::before { content: "=EF=87=8D"; }

.fa-circle-o-notch::before { content: "=EF=87=8E"; }

.fa-ra::before, .fa-resistance::before, .fa-rebel::before { content: "=EF=
=87=90"; }

.fa-ge::before, .fa-empire::before { content: "=EF=87=91"; }

.fa-git-square::before { content: "=EF=87=92"; }

.fa-git::before { content: "=EF=87=93"; }

.fa-y-combinator-square::before, .fa-yc-square::before, .fa-hacker-news::be=
fore { content: "=EF=87=94"; }

.fa-tencent-weibo::before { content: "=EF=87=95"; }

.fa-qq::before { content: "=EF=87=96"; }

.fa-wechat::before, .fa-weixin::before { content: "=EF=87=97"; }

.fa-send::before, .fa-paper-plane::before { content: "=EF=87=98"; }

.fa-send-o::before, .fa-paper-plane-o::before { content: "=EF=87=99"; }

.fa-history::before { content: "=EF=87=9A"; }

.fa-circle-thin::before { content: "=EF=87=9B"; }

.fa-header::before { content: "=EF=87=9C"; }

.fa-paragraph::before { content: "=EF=87=9D"; }

.fa-sliders::before { content: "=EF=87=9E"; }

.fa-share-alt::before { content: "=EF=87=A0"; }

.fa-share-alt-square::before { content: "=EF=87=A1"; }

.fa-bomb::before { content: "=EF=87=A2"; }

.fa-soccer-ball-o::before, .fa-futbol-o::before { content: "=EF=87=A3"; }

.fa-tty::before { content: "=EF=87=A4"; }

.fa-binoculars::before { content: "=EF=87=A5"; }

.fa-plug::before { content: "=EF=87=A6"; }

.fa-slideshare::before { content: "=EF=87=A7"; }

.fa-twitch::before { content: "=EF=87=A8"; }

.fa-yelp::before { content: "=EF=87=A9"; }

.fa-newspaper-o::before { content: "=EF=87=AA"; }

.fa-wifi::before { content: "=EF=87=AB"; }

.fa-calculator::before { content: "=EF=87=AC"; }

.fa-paypal::before { content: "=EF=87=AD"; }

.fa-google-wallet::before { content: "=EF=87=AE"; }

.fa-cc-visa::before { content: "=EF=87=B0"; }

.fa-cc-mastercard::before { content: "=EF=87=B1"; }

.fa-cc-discover::before { content: "=EF=87=B2"; }

.fa-cc-amex::before { content: "=EF=87=B3"; }

.fa-cc-paypal::before { content: "=EF=87=B4"; }

.fa-cc-stripe::before { content: "=EF=87=B5"; }

.fa-bell-slash::before { content: "=EF=87=B6"; }

.fa-bell-slash-o::before { content: "=EF=87=B7"; }

.fa-trash::before { content: "=EF=87=B8"; }

.fa-copyright::before { content: "=EF=87=B9"; }

.fa-at::before { content: "=EF=87=BA"; }

.fa-eyedropper::before { content: "=EF=87=BB"; }

.fa-paint-brush::before { content: "=EF=87=BC"; }

.fa-birthday-cake::before { content: "=EF=87=BD"; }

.fa-area-chart::before { content: "=EF=87=BE"; }

.fa-pie-chart::before { content: "=EF=88=80"; }

.fa-line-chart::before { content: "=EF=88=81"; }

.fa-lastfm::before { content: "=EF=88=82"; }

.fa-lastfm-square::before { content: "=EF=88=83"; }

.fa-toggle-off::before { content: "=EF=88=84"; }

.fa-toggle-on::before { content: "=EF=88=85"; }

.fa-bicycle::before { content: "=EF=88=86"; }

.fa-bus::before { content: "=EF=88=87"; }

.fa-ioxhost::before { content: "=EF=88=88"; }

.fa-angellist::before { content: "=EF=88=89"; }

.fa-cc::before { content: "=EF=88=8A"; }

.fa-shekel::before, .fa-sheqel::before, .fa-ils::before { content: "=EF=88=
=8B"; }

.fa-meanpath::before { content: "=EF=88=8C"; }

.fa-buysellads::before { content: "=EF=88=8D"; }

.fa-connectdevelop::before { content: "=EF=88=8E"; }

.fa-dashcube::before { content: "=EF=88=90"; }

.fa-forumbee::before { content: "=EF=88=91"; }

.fa-leanpub::before { content: "=EF=88=92"; }

.fa-sellsy::before { content: "=EF=88=93"; }

.fa-shirtsinbulk::before { content: "=EF=88=94"; }

.fa-simplybuilt::before { content: "=EF=88=95"; }

.fa-skyatlas::before { content: "=EF=88=96"; }

.fa-cart-plus::before { content: "=EF=88=97"; }

.fa-cart-arrow-down::before { content: "=EF=88=98"; }

.fa-diamond::before { content: "=EF=88=99"; }

.fa-ship::before { content: "=EF=88=9A"; }

.fa-user-secret::before { content: "=EF=88=9B"; }

.fa-motorcycle::before { content: "=EF=88=9C"; }

.fa-street-view::before { content: "=EF=88=9D"; }

.fa-heartbeat::before { content: "=EF=88=9E"; }

.fa-venus::before { content: "=EF=88=A1"; }

.fa-mars::before { content: "=EF=88=A2"; }

.fa-mercury::before { content: "=EF=88=A3"; }

.fa-intersex::before, .fa-transgender::before { content: "=EF=88=A4"; }

.fa-transgender-alt::before { content: "=EF=88=A5"; }

.fa-venus-double::before { content: "=EF=88=A6"; }

.fa-mars-double::before { content: "=EF=88=A7"; }

.fa-venus-mars::before { content: "=EF=88=A8"; }

.fa-mars-stroke::before { content: "=EF=88=A9"; }

.fa-mars-stroke-v::before { content: "=EF=88=AA"; }

.fa-mars-stroke-h::before { content: "=EF=88=AB"; }

.fa-neuter::before { content: "=EF=88=AC"; }

.fa-genderless::before { content: "=EF=88=AD"; }

.fa-facebook-official::before { content: "=EF=88=B0"; }

.fa-pinterest-p::before { content: "=EF=88=B1"; }

.fa-whatsapp::before { content: "=EF=88=B2"; }

.fa-server::before { content: "=EF=88=B3"; }

.fa-user-plus::before { content: "=EF=88=B4"; }

.fa-user-times::before { content: "=EF=88=B5"; }

.fa-hotel::before, .fa-bed::before { content: "=EF=88=B6"; }

.fa-viacoin::before { content: "=EF=88=B7"; }

.fa-train::before { content: "=EF=88=B8"; }

.fa-subway::before { content: "=EF=88=B9"; }

.fa-medium::before { content: "=EF=88=BA"; }

.fa-yc::before, .fa-y-combinator::before { content: "=EF=88=BB"; }

.fa-optin-monster::before { content: "=EF=88=BC"; }

.fa-opencart::before { content: "=EF=88=BD"; }

.fa-expeditedssl::before { content: "=EF=88=BE"; }

.fa-battery-4::before, .fa-battery::before, .fa-battery-full::before { cont=
ent: "=EF=89=80"; }

.fa-battery-3::before, .fa-battery-three-quarters::before { content: "=EF=
=89=81"; }

.fa-battery-2::before, .fa-battery-half::before { content: "=EF=89=82"; }

.fa-battery-1::before, .fa-battery-quarter::before { content: "=EF=89=83"; =
}

.fa-battery-0::before, .fa-battery-empty::before { content: "=EF=89=84"; }

.fa-mouse-pointer::before { content: "=EF=89=85"; }

.fa-i-cursor::before { content: "=EF=89=86"; }

.fa-object-group::before { content: "=EF=89=87"; }

.fa-object-ungroup::before { content: "=EF=89=88"; }

.fa-sticky-note::before { content: "=EF=89=89"; }

.fa-sticky-note-o::before { content: "=EF=89=8A"; }

.fa-cc-jcb::before { content: "=EF=89=8B"; }

.fa-cc-diners-club::before { content: "=EF=89=8C"; }

.fa-clone::before { content: "=EF=89=8D"; }

.fa-balance-scale::before { content: "=EF=89=8E"; }

.fa-hourglass-o::before { content: "=EF=89=90"; }

.fa-hourglass-1::before, .fa-hourglass-start::before { content: "=EF=89=91"=
; }

.fa-hourglass-2::before, .fa-hourglass-half::before { content: "=EF=89=92";=
 }

.fa-hourglass-3::before, .fa-hourglass-end::before { content: "=EF=89=93"; =
}

.fa-hourglass::before { content: "=EF=89=94"; }

.fa-hand-grab-o::before, .fa-hand-rock-o::before { content: "=EF=89=95"; }

.fa-hand-stop-o::before, .fa-hand-paper-o::before { content: "=EF=89=96"; }

.fa-hand-scissors-o::before { content: "=EF=89=97"; }

.fa-hand-lizard-o::before { content: "=EF=89=98"; }

.fa-hand-spock-o::before { content: "=EF=89=99"; }

.fa-hand-pointer-o::before { content: "=EF=89=9A"; }

.fa-hand-peace-o::before { content: "=EF=89=9B"; }

.fa-trademark::before { content: "=EF=89=9C"; }

.fa-registered::before { content: "=EF=89=9D"; }

.fa-creative-commons::before { content: "=EF=89=9E"; }

.fa-gg::before { content: "=EF=89=A0"; }

.fa-gg-circle::before { content: "=EF=89=A1"; }

.fa-tripadvisor::before { content: "=EF=89=A2"; }

.fa-odnoklassniki::before { content: "=EF=89=A3"; }

.fa-odnoklassniki-square::before { content: "=EF=89=A4"; }

.fa-get-pocket::before { content: "=EF=89=A5"; }

.fa-wikipedia-w::before { content: "=EF=89=A6"; }

.fa-safari::before { content: "=EF=89=A7"; }

.fa-chrome::before { content: "=EF=89=A8"; }

.fa-firefox::before { content: "=EF=89=A9"; }

.fa-opera::before { content: "=EF=89=AA"; }

.fa-internet-explorer::before { content: "=EF=89=AB"; }

.fa-tv::before, .fa-television::before { content: "=EF=89=AC"; }

.fa-contao::before { content: "=EF=89=AD"; }

.fa-500px::before { content: "=EF=89=AE"; }

.fa-amazon::before { content: "=EF=89=B0"; }

.fa-calendar-plus-o::before { content: "=EF=89=B1"; }

.fa-calendar-minus-o::before { content: "=EF=89=B2"; }

.fa-calendar-times-o::before { content: "=EF=89=B3"; }

.fa-calendar-check-o::before { content: "=EF=89=B4"; }

.fa-industry::before { content: "=EF=89=B5"; }

.fa-map-pin::before { content: "=EF=89=B6"; }

.fa-map-signs::before { content: "=EF=89=B7"; }

.fa-map-o::before { content: "=EF=89=B8"; }

.fa-map::before { content: "=EF=89=B9"; }

.fa-commenting::before { content: "=EF=89=BA"; }

.fa-commenting-o::before { content: "=EF=89=BB"; }

.fa-houzz::before { content: "=EF=89=BC"; }

.fa-vimeo::before { content: "=EF=89=BD"; }

.fa-black-tie::before { content: "=EF=89=BE"; }

.fa-fonticons::before { content: "=EF=8A=80"; }

.fa-reddit-alien::before { content: "=EF=8A=81"; }

.fa-edge::before { content: "=EF=8A=82"; }

.fa-credit-card-alt::before { content: "=EF=8A=83"; }

.fa-codiepie::before { content: "=EF=8A=84"; }

.fa-modx::before { content: "=EF=8A=85"; }

.fa-fort-awesome::before { content: "=EF=8A=86"; }

.fa-usb::before { content: "=EF=8A=87"; }

.fa-product-hunt::before { content: "=EF=8A=88"; }

.fa-mixcloud::before { content: "=EF=8A=89"; }

.fa-scribd::before { content: "=EF=8A=8A"; }

.fa-pause-circle::before { content: "=EF=8A=8B"; }

.fa-pause-circle-o::before { content: "=EF=8A=8C"; }

.fa-stop-circle::before { content: "=EF=8A=8D"; }

.fa-stop-circle-o::before { content: "=EF=8A=8E"; }

.fa-shopping-bag::before { content: "=EF=8A=90"; }

.fa-shopping-basket::before { content: "=EF=8A=91"; }

.fa-hashtag::before { content: "=EF=8A=92"; }

.fa-bluetooth::before { content: "=EF=8A=93"; }

.fa-bluetooth-b::before { content: "=EF=8A=94"; }

.fa-percent::before { content: "=EF=8A=95"; }

.fa-gitlab::before { content: "=EF=8A=96"; }

.fa-wpbeginner::before { content: "=EF=8A=97"; }

.fa-wpforms::before { content: "=EF=8A=98"; }

.fa-envira::before { content: "=EF=8A=99"; }

.fa-universal-access::before { content: "=EF=8A=9A"; }

.fa-wheelchair-alt::before { content: "=EF=8A=9B"; }

.fa-question-circle-o::before { content: "=EF=8A=9C"; }

.fa-blind::before { content: "=EF=8A=9D"; }

.fa-audio-description::before { content: "=EF=8A=9E"; }

.fa-volume-control-phone::before { content: "=EF=8A=A0"; }

.fa-braille::before { content: "=EF=8A=A1"; }

.fa-assistive-listening-systems::before { content: "=EF=8A=A2"; }

.fa-asl-interpreting::before, .fa-american-sign-language-interpreting::befo=
re { content: "=EF=8A=A3"; }

.fa-deafness::before, .fa-hard-of-hearing::before, .fa-deaf::before { conte=
nt: "=EF=8A=A4"; }

.fa-glide::before { content: "=EF=8A=A5"; }

.fa-glide-g::before { content: "=EF=8A=A6"; }

.fa-signing::before, .fa-sign-language::before { content: "=EF=8A=A7"; }

.fa-low-vision::before { content: "=EF=8A=A8"; }

.fa-viadeo::before { content: "=EF=8A=A9"; }

.fa-viadeo-square::before { content: "=EF=8A=AA"; }

.fa-snapchat::before { content: "=EF=8A=AB"; }

.fa-snapchat-ghost::before { content: "=EF=8A=AC"; }

.fa-snapchat-square::before { content: "=EF=8A=AD"; }

.fa-pied-piper::before { content: "=EF=8A=AE"; }

.fa-first-order::before { content: "=EF=8A=B0"; }

.fa-yoast::before { content: "=EF=8A=B1"; }

.fa-themeisle::before { content: "=EF=8A=B2"; }

.fa-google-plus-circle::before, .fa-google-plus-official::before { content:=
 "=EF=8A=B3"; }

.fa-fa::before, .fa-font-awesome::before { content: "=EF=8A=B4"; }

.fa-handshake-o::before { content: "=EF=8A=B5"; }

.fa-envelope-open::before { content: "=EF=8A=B6"; }

.fa-envelope-open-o::before { content: "=EF=8A=B7"; }

.fa-linode::before { content: "=EF=8A=B8"; }

.fa-address-book::before { content: "=EF=8A=B9"; }

.fa-address-book-o::before { content: "=EF=8A=BA"; }

.fa-vcard::before, .fa-address-card::before { content: "=EF=8A=BB"; }

.fa-vcard-o::before, .fa-address-card-o::before { content: "=EF=8A=BC"; }

.fa-user-circle::before { content: "=EF=8A=BD"; }

.fa-user-circle-o::before { content: "=EF=8A=BE"; }

.fa-user-o::before { content: "=EF=8B=80"; }

.fa-id-badge::before { content: "=EF=8B=81"; }

.fa-drivers-license::before, .fa-id-card::before { content: "=EF=8B=82"; }

.fa-drivers-license-o::before, .fa-id-card-o::before { content: "=EF=8B=83"=
; }

.fa-quora::before { content: "=EF=8B=84"; }

.fa-free-code-camp::before { content: "=EF=8B=85"; }

.fa-telegram::before { content: "=EF=8B=86"; }

.fa-thermometer-4::before, .fa-thermometer::before, .fa-thermometer-full::b=
efore { content: "=EF=8B=87"; }

.fa-thermometer-3::before, .fa-thermometer-three-quarters::before { content=
: "=EF=8B=88"; }

.fa-thermometer-2::before, .fa-thermometer-half::before { content: "=EF=8B=
=89"; }

.fa-thermometer-1::before, .fa-thermometer-quarter::before { content: "=EF=
=8B=8A"; }

.fa-thermometer-0::before, .fa-thermometer-empty::before { content: "=EF=8B=
=8B"; }

.fa-shower::before { content: "=EF=8B=8C"; }

.fa-bathtub::before, .fa-s15::before, .fa-bath::before { content: "=EF=8B=
=8D"; }

.fa-podcast::before { content: "=EF=8B=8E"; }

.fa-window-maximize::before { content: "=EF=8B=90"; }

.fa-window-minimize::before { content: "=EF=8B=91"; }

.fa-window-restore::before { content: "=EF=8B=92"; }

.fa-times-rectangle::before, .fa-window-close::before { content: "=EF=8B=93=
"; }

.fa-times-rectangle-o::before, .fa-window-close-o::before { content: "=EF=
=8B=94"; }

.fa-bandcamp::before { content: "=EF=8B=95"; }

.fa-grav::before { content: "=EF=8B=96"; }

.fa-etsy::before { content: "=EF=8B=97"; }

.fa-imdb::before { content: "=EF=8B=98"; }

.fa-ravelry::before { content: "=EF=8B=99"; }

.fa-eercast::before { content: "=EF=8B=9A"; }

.fa-microchip::before { content: "=EF=8B=9B"; }

.fa-snowflake-o::before { content: "=EF=8B=9C"; }

.fa-superpowers::before { content: "=EF=8B=9D"; }

.fa-wpexplorer::before { content: "=EF=8B=9E"; }

.fa-meetup::before { content: "=EF=8B=A0"; }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; margin: 0px; overflow: visible; clip: auto; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css

@charset "utf-8";

html { font-family: sans-serif; text-size-adjust: 100%; }

body { margin: 0px; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, =
menu, nav, section, summary { display: block; }

audio, canvas, progress, video { display: inline-block; vertical-align: bas=
eline; }

audio:not([controls]) { display: none; height: 0px; }

[hidden], template { display: none; }

a { background-color: transparent; }

a:active, a:hover { outline: 0px; }

abbr[title] { border-bottom: 1px dotted; }

b, strong { font-weight: 700; }

dfn { font-style: italic; }

h1 { margin: 0.67em 0px; font-size: 2em; }

mark { color: rgb(0, 0, 0); background: rgb(255, 255, 0); }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

figure { margin: 1em 40px; }

hr { height: 0px; box-sizing: content-box; }

pre { overflow: auto; }

code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

button, input, optgroup, select, textarea { margin: 0px; font: inherit; col=
or: inherit; }

button { overflow: visible; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { appearance: button; cursor: pointer; }

button[disabled], html input[disabled] { cursor: default; }

input { line-height: normal; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { height: auto; }

input[type=3D"search"] { box-sizing: content-box; appearance: textfield; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { appearance: none; }

fieldset { padding: 0.35em 0.625em 0.75em; margin: 0px 2px; border: 1px sol=
id silver; }

legend { padding: 0px; border: 0px; }

textarea { overflow: auto; }

optgroup { font-weight: 700; }

table { border-spacing: 0px; border-collapse: collapse; }

td, th { padding: 0px; }

@media print {
  *, ::after, ::before { color: rgb(0, 0, 0) !important; text-shadow: none =
!important; background: 0px 0px !important; box-shadow: none !important; }
  a, a:visited { text-decoration: underline; }
  a[href]::after { content: " (" attr(href) ")"; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  a[href^=3D"javascript:"]::after, a[href^=3D"#"]::after { content: ""; }
  blockquote, pre { border: 1px solid rgb(153, 153, 153); break-inside: avo=
id; }
  thead { display: table-header-group; }
  img, tr { break-inside: avoid; }
  img { max-width: 100% !important; }
  h2, h3, p { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  .navbar { display: none; }
  .btn > .caret, .dropup > .btn > .caret { border-top-color: rgb(0, 0, 0) !=
important; }
  .label { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .table-bordered td, .table-bordered th { border: 1px solid rgb(221, 221, =
221) !important; }
}

@font-face { font-family: "Glyphicons Halflings"; src: url("../fonts/glyphi=
cons-halflings-regular.woff2") format("woff2"), url("../fonts/glyphicons-ha=
lflings-regular.woff") format("woff"), url("../fonts/glyphicons-halflings-r=
egular.ttf") format("truetype"); }

.glyphicon { position: relative; top: 1px; display: inline-block; font-fami=
ly: "Glyphicons Halflings"; font-style: normal; font-weight: 400; line-heig=
ht: 1; -webkit-font-smoothing: antialiased; }

.glyphicon-asterisk::before { content: "*"; }

.glyphicon-plus::before { content: "+"; }

.glyphicon-eur::before, .glyphicon-euro::before { content: "=E2=82=AC"; }

.glyphicon-minus::before { content: "=E2=88=92"; }

.glyphicon-cloud::before { content: "=E2=98=81"; }

.glyphicon-envelope::before { content: "=E2=9C=89"; }

.glyphicon-pencil::before { content: "=E2=9C=8F"; }

.glyphicon-glass::before { content: "=EE=80=81"; }

.glyphicon-music::before { content: "=EE=80=82"; }

.glyphicon-search::before { content: "=EE=80=83"; }

.glyphicon-heart::before { content: "=EE=80=85"; }

.glyphicon-star::before { content: "=EE=80=86"; }

.glyphicon-star-empty::before { content: "=EE=80=87"; }

.glyphicon-user::before { content: "=EE=80=88"; }

.glyphicon-film::before { content: "=EE=80=89"; }

.glyphicon-th-large::before { content: "=EE=80=90"; }

.glyphicon-th::before { content: "=EE=80=91"; }

.glyphicon-th-list::before { content: "=EE=80=92"; }

.glyphicon-ok::before { content: "=EE=80=93"; }

.glyphicon-remove::before { content: "=EE=80=94"; }

.glyphicon-zoom-in::before { content: "=EE=80=95"; }

.glyphicon-zoom-out::before { content: "=EE=80=96"; }

.glyphicon-off::before { content: "=EE=80=97"; }

.glyphicon-signal::before { content: "=EE=80=98"; }

.glyphicon-cog::before { content: "=EE=80=99"; }

.glyphicon-trash::before { content: "=EE=80=A0"; }

.glyphicon-home::before { content: "=EE=80=A1"; }

.glyphicon-file::before { content: "=EE=80=A2"; }

.glyphicon-time::before { content: "=EE=80=A3"; }

.glyphicon-road::before { content: "=EE=80=A4"; }

.glyphicon-download-alt::before { content: "=EE=80=A5"; }

.glyphicon-download::before { content: "=EE=80=A6"; }

.glyphicon-upload::before { content: "=EE=80=A7"; }

.glyphicon-inbox::before { content: "=EE=80=A8"; }

.glyphicon-play-circle::before { content: "=EE=80=A9"; }

.glyphicon-repeat::before { content: "=EE=80=B0"; }

.glyphicon-refresh::before { content: "=EE=80=B1"; }

.glyphicon-list-alt::before { content: "=EE=80=B2"; }

.glyphicon-lock::before { content: "=EE=80=B3"; }

.glyphicon-flag::before { content: "=EE=80=B4"; }

.glyphicon-headphones::before { content: "=EE=80=B5"; }

.glyphicon-volume-off::before { content: "=EE=80=B6"; }

.glyphicon-volume-down::before { content: "=EE=80=B7"; }

.glyphicon-volume-up::before { content: "=EE=80=B8"; }

.glyphicon-qrcode::before { content: "=EE=80=B9"; }

.glyphicon-barcode::before { content: "=EE=81=80"; }

.glyphicon-tag::before { content: "=EE=81=81"; }

.glyphicon-tags::before { content: "=EE=81=82"; }

.glyphicon-book::before { content: "=EE=81=83"; }

.glyphicon-bookmark::before { content: "=EE=81=84"; }

.glyphicon-print::before { content: "=EE=81=85"; }

.glyphicon-camera::before { content: "=EE=81=86"; }

.glyphicon-font::before { content: "=EE=81=87"; }

.glyphicon-bold::before { content: "=EE=81=88"; }

.glyphicon-italic::before { content: "=EE=81=89"; }

.glyphicon-text-height::before { content: "=EE=81=90"; }

.glyphicon-text-width::before { content: "=EE=81=91"; }

.glyphicon-align-left::before { content: "=EE=81=92"; }

.glyphicon-align-center::before { content: "=EE=81=93"; }

.glyphicon-align-right::before { content: "=EE=81=94"; }

.glyphicon-align-justify::before { content: "=EE=81=95"; }

.glyphicon-list::before { content: "=EE=81=96"; }

.glyphicon-indent-left::before { content: "=EE=81=97"; }

.glyphicon-indent-right::before { content: "=EE=81=98"; }

.glyphicon-facetime-video::before { content: "=EE=81=99"; }

.glyphicon-picture::before { content: "=EE=81=A0"; }

.glyphicon-map-marker::before { content: "=EE=81=A2"; }

.glyphicon-adjust::before { content: "=EE=81=A3"; }

.glyphicon-tint::before { content: "=EE=81=A4"; }

.glyphicon-edit::before { content: "=EE=81=A5"; }

.glyphicon-share::before { content: "=EE=81=A6"; }

.glyphicon-check::before { content: "=EE=81=A7"; }

.glyphicon-move::before { content: "=EE=81=A8"; }

.glyphicon-step-backward::before { content: "=EE=81=A9"; }

.glyphicon-fast-backward::before { content: "=EE=81=B0"; }

.glyphicon-backward::before { content: "=EE=81=B1"; }

.glyphicon-play::before { content: "=EE=81=B2"; }

.glyphicon-pause::before { content: "=EE=81=B3"; }

.glyphicon-stop::before { content: "=EE=81=B4"; }

.glyphicon-forward::before { content: "=EE=81=B5"; }

.glyphicon-fast-forward::before { content: "=EE=81=B6"; }

.glyphicon-step-forward::before { content: "=EE=81=B7"; }

.glyphicon-eject::before { content: "=EE=81=B8"; }

.glyphicon-chevron-left::before { content: "=EE=81=B9"; }

.glyphicon-chevron-right::before { content: "=EE=82=80"; }

.glyphicon-plus-sign::before { content: "=EE=82=81"; }

.glyphicon-minus-sign::before { content: "=EE=82=82"; }

.glyphicon-remove-sign::before { content: "=EE=82=83"; }

.glyphicon-ok-sign::before { content: "=EE=82=84"; }

.glyphicon-question-sign::before { content: "=EE=82=85"; }

.glyphicon-info-sign::before { content: "=EE=82=86"; }

.glyphicon-screenshot::before { content: "=EE=82=87"; }

.glyphicon-remove-circle::before { content: "=EE=82=88"; }

.glyphicon-ok-circle::before { content: "=EE=82=89"; }

.glyphicon-ban-circle::before { content: "=EE=82=90"; }

.glyphicon-arrow-left::before { content: "=EE=82=91"; }

.glyphicon-arrow-right::before { content: "=EE=82=92"; }

.glyphicon-arrow-up::before { content: "=EE=82=93"; }

.glyphicon-arrow-down::before { content: "=EE=82=94"; }

.glyphicon-share-alt::before { content: "=EE=82=95"; }

.glyphicon-resize-full::before { content: "=EE=82=96"; }

.glyphicon-resize-small::before { content: "=EE=82=97"; }

.glyphicon-exclamation-sign::before { content: "=EE=84=81"; }

.glyphicon-gift::before { content: "=EE=84=82"; }

.glyphicon-leaf::before { content: "=EE=84=83"; }

.glyphicon-fire::before { content: "=EE=84=84"; }

.glyphicon-eye-open::before { content: "=EE=84=85"; }

.glyphicon-eye-close::before { content: "=EE=84=86"; }

.glyphicon-warning-sign::before { content: "=EE=84=87"; }

.glyphicon-plane::before { content: "=EE=84=88"; }

.glyphicon-calendar::before { content: "=EE=84=89"; }

.glyphicon-random::before { content: "=EE=84=90"; }

.glyphicon-comment::before { content: "=EE=84=91"; }

.glyphicon-magnet::before { content: "=EE=84=92"; }

.glyphicon-chevron-up::before { content: "=EE=84=93"; }

.glyphicon-chevron-down::before { content: "=EE=84=94"; }

.glyphicon-retweet::before { content: "=EE=84=95"; }

.glyphicon-shopping-cart::before { content: "=EE=84=96"; }

.glyphicon-folder-close::before { content: "=EE=84=97"; }

.glyphicon-folder-open::before { content: "=EE=84=98"; }

.glyphicon-resize-vertical::before { content: "=EE=84=99"; }

.glyphicon-resize-horizontal::before { content: "=EE=84=A0"; }

.glyphicon-hdd::before { content: "=EE=84=A1"; }

.glyphicon-bullhorn::before { content: "=EE=84=A2"; }

.glyphicon-bell::before { content: "=EE=84=A3"; }

.glyphicon-certificate::before { content: "=EE=84=A4"; }

.glyphicon-thumbs-up::before { content: "=EE=84=A5"; }

.glyphicon-thumbs-down::before { content: "=EE=84=A6"; }

.glyphicon-hand-right::before { content: "=EE=84=A7"; }

.glyphicon-hand-left::before { content: "=EE=84=A8"; }

.glyphicon-hand-up::before { content: "=EE=84=A9"; }

.glyphicon-hand-down::before { content: "=EE=84=B0"; }

.glyphicon-circle-arrow-right::before { content: "=EE=84=B1"; }

.glyphicon-circle-arrow-left::before { content: "=EE=84=B2"; }

.glyphicon-circle-arrow-up::before { content: "=EE=84=B3"; }

.glyphicon-circle-arrow-down::before { content: "=EE=84=B4"; }

.glyphicon-globe::before { content: "=EE=84=B5"; }

.glyphicon-wrench::before { content: "=EE=84=B6"; }

.glyphicon-tasks::before { content: "=EE=84=B7"; }

.glyphicon-filter::before { content: "=EE=84=B8"; }

.glyphicon-briefcase::before { content: "=EE=84=B9"; }

.glyphicon-fullscreen::before { content: "=EE=85=80"; }

.glyphicon-dashboard::before { content: "=EE=85=81"; }

.glyphicon-paperclip::before { content: "=EE=85=82"; }

.glyphicon-heart-empty::before { content: "=EE=85=83"; }

.glyphicon-link::before { content: "=EE=85=84"; }

.glyphicon-phone::before { content: "=EE=85=85"; }

.glyphicon-pushpin::before { content: "=EE=85=86"; }

.glyphicon-usd::before { content: "=EE=85=88"; }

.glyphicon-gbp::before { content: "=EE=85=89"; }

.glyphicon-sort::before { content: "=EE=85=90"; }

.glyphicon-sort-by-alphabet::before { content: "=EE=85=91"; }

.glyphicon-sort-by-alphabet-alt::before { content: "=EE=85=92"; }

.glyphicon-sort-by-order::before { content: "=EE=85=93"; }

.glyphicon-sort-by-order-alt::before { content: "=EE=85=94"; }

.glyphicon-sort-by-attributes::before { content: "=EE=85=95"; }

.glyphicon-sort-by-attributes-alt::before { content: "=EE=85=96"; }

.glyphicon-unchecked::before { content: "=EE=85=97"; }

.glyphicon-expand::before { content: "=EE=85=98"; }

.glyphicon-collapse-down::before { content: "=EE=85=99"; }

.glyphicon-collapse-up::before { content: "=EE=85=A0"; }

.glyphicon-log-in::before { content: "=EE=85=A1"; }

.glyphicon-flash::before { content: "=EE=85=A2"; }

.glyphicon-log-out::before { content: "=EE=85=A3"; }

.glyphicon-new-window::before { content: "=EE=85=A4"; }

.glyphicon-record::before { content: "=EE=85=A5"; }

.glyphicon-save::before { content: "=EE=85=A6"; }

.glyphicon-open::before { content: "=EE=85=A7"; }

.glyphicon-saved::before { content: "=EE=85=A8"; }

.glyphicon-import::before { content: "=EE=85=A9"; }

.glyphicon-export::before { content: "=EE=85=B0"; }

.glyphicon-send::before { content: "=EE=85=B1"; }

.glyphicon-floppy-disk::before { content: "=EE=85=B2"; }

.glyphicon-floppy-saved::before { content: "=EE=85=B3"; }

.glyphicon-floppy-remove::before { content: "=EE=85=B4"; }

.glyphicon-floppy-save::before { content: "=EE=85=B5"; }

.glyphicon-floppy-open::before { content: "=EE=85=B6"; }

.glyphicon-credit-card::before { content: "=EE=85=B7"; }

.glyphicon-transfer::before { content: "=EE=85=B8"; }

.glyphicon-cutlery::before { content: "=EE=85=B9"; }

.glyphicon-header::before { content: "=EE=86=80"; }

.glyphicon-compressed::before { content: "=EE=86=81"; }

.glyphicon-earphone::before { content: "=EE=86=82"; }

.glyphicon-phone-alt::before { content: "=EE=86=83"; }

.glyphicon-tower::before { content: "=EE=86=84"; }

.glyphicon-stats::before { content: "=EE=86=85"; }

.glyphicon-sd-video::before { content: "=EE=86=86"; }

.glyphicon-hd-video::before { content: "=EE=86=87"; }

.glyphicon-subtitles::before { content: "=EE=86=88"; }

.glyphicon-sound-stereo::before { content: "=EE=86=89"; }

.glyphicon-sound-dolby::before { content: "=EE=86=90"; }

.glyphicon-sound-5-1::before { content: "=EE=86=91"; }

.glyphicon-sound-6-1::before { content: "=EE=86=92"; }

.glyphicon-sound-7-1::before { content: "=EE=86=93"; }

.glyphicon-copyright-mark::before { content: "=EE=86=94"; }

.glyphicon-registration-mark::before { content: "=EE=86=95"; }

.glyphicon-cloud-download::before { content: "=EE=86=97"; }

.glyphicon-cloud-upload::before { content: "=EE=86=98"; }

.glyphicon-tree-conifer::before { content: "=EE=86=99"; }

.glyphicon-tree-deciduous::before { content: "=EE=88=80"; }

.glyphicon-cd::before { content: "=EE=88=81"; }

.glyphicon-save-file::before { content: "=EE=88=82"; }

.glyphicon-open-file::before { content: "=EE=88=83"; }

.glyphicon-level-up::before { content: "=EE=88=84"; }

.glyphicon-copy::before { content: "=EE=88=85"; }

.glyphicon-paste::before { content: "=EE=88=86"; }

.glyphicon-alert::before { content: "=EE=88=89"; }

.glyphicon-equalizer::before { content: "=EE=88=90"; }

.glyphicon-king::before { content: "=EE=88=91"; }

.glyphicon-queen::before { content: "=EE=88=92"; }

.glyphicon-pawn::before { content: "=EE=88=93"; }

.glyphicon-bishop::before { content: "=EE=88=94"; }

.glyphicon-knight::before { content: "=EE=88=95"; }

.glyphicon-baby-formula::before { content: "=EE=88=96"; }

.glyphicon-tent::before { content: "=E2=9B=BA"; }

.glyphicon-blackboard::before { content: "=EE=88=98"; }

.glyphicon-bed::before { content: "=EE=88=99"; }

.glyphicon-apple::before { content: "=EF=A3=BF"; }

.glyphicon-erase::before { content: "=EE=88=A1"; }

.glyphicon-hourglass::before { content: "=E2=8C=9B"; }

.glyphicon-lamp::before { content: "=EE=88=A3"; }

.glyphicon-duplicate::before { content: "=EE=88=A4"; }

.glyphicon-piggy-bank::before { content: "=EE=88=A5"; }

.glyphicon-scissors::before { content: "=EE=88=A6"; }

.glyphicon-bitcoin::before { content: "=EE=88=A7"; }

.glyphicon-btc::before { content: "=EE=88=A7"; }

.glyphicon-xbt::before { content: "=EE=88=A7"; }

.glyphicon-yen::before { content: "=C2=A5"; }

.glyphicon-jpy::before { content: "=C2=A5"; }

.glyphicon-ruble::before { content: "=E2=82=BD"; }

.glyphicon-rub::before { content: "=E2=82=BD"; }

.glyphicon-scale::before { content: "=EE=88=B0"; }

.glyphicon-ice-lolly::before { content: "=EE=88=B1"; }

.glyphicon-ice-lolly-tasted::before { content: "=EE=88=B2"; }

.glyphicon-education::before { content: "=EE=88=B3"; }

.glyphicon-option-horizontal::before { content: "=EE=88=B4"; }

.glyphicon-option-vertical::before { content: "=EE=88=B5"; }

.glyphicon-menu-hamburger::before { content: "=EE=88=B6"; }

.glyphicon-modal-window::before { content: "=EE=88=B7"; }

.glyphicon-oil::before { content: "=EE=88=B8"; }

.glyphicon-grain::before { content: "=EE=88=B9"; }

.glyphicon-sunglasses::before { content: "=EE=89=80"; }

.glyphicon-text-size::before { content: "=EE=89=81"; }

.glyphicon-text-color::before { content: "=EE=89=82"; }

.glyphicon-text-background::before { content: "=EE=89=83"; }

.glyphicon-object-align-top::before { content: "=EE=89=84"; }

.glyphicon-object-align-bottom::before { content: "=EE=89=85"; }

.glyphicon-object-align-horizontal::before { content: "=EE=89=86"; }

.glyphicon-object-align-left::before { content: "=EE=89=87"; }

.glyphicon-object-align-vertical::before { content: "=EE=89=88"; }

.glyphicon-object-align-right::before { content: "=EE=89=89"; }

.glyphicon-triangle-right::before { content: "=EE=89=90"; }

.glyphicon-triangle-left::before { content: "=EE=89=91"; }

.glyphicon-triangle-bottom::before { content: "=EE=89=92"; }

.glyphicon-triangle-top::before { content: "=EE=89=93"; }

.glyphicon-console::before { content: "=EE=89=94"; }

.glyphicon-superscript::before { content: "=EE=89=95"; }

.glyphicon-subscript::before { content: "=EE=89=96"; }

.glyphicon-menu-left::before { content: "=EE=89=97"; }

.glyphicon-menu-right::before { content: "=EE=89=98"; }

.glyphicon-menu-down::before { content: "=EE=89=99"; }

.glyphicon-menu-up::before { content: "=EE=89=A0"; }

* { box-sizing: border-box; }

::after, ::before { box-sizing: border-box; }

html { font-size: 10px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

body { font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; font-si=
ze: 14px; line-height: 1.42857; color: rgb(51, 51, 51); background-color: r=
gb(255, 255, 255); }

button, input, select, textarea { font-family: inherit; font-size: inherit;=
 line-height: inherit; }

a { color: rgb(51, 122, 183); text-decoration: none; }

a:focus, a:hover { color: rgb(35, 82, 124); text-decoration: underline; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

figure { margin: 0px; }

img { vertical-align: middle; }

.carousel-inner > .item > a > img, .carousel-inner > .item > img, .img-resp=
onsive, .thumbnail a > img, .thumbnail > img { display: block; max-width: 1=
00%; height: auto; }

.img-rounded { border-radius: 6px; }

.img-thumbnail { display: inline-block; max-width: 100%; height: auto; padd=
ing: 4px; line-height: 1.42857; background-color: rgb(255, 255, 255); borde=
r: 1px solid rgb(221, 221, 221); border-radius: 4px; transition: 0.2s ease-=
in-out; }

.img-circle { border-radius: 50%; }

hr { margin-top: 20px; margin-bottom: 20px; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgb(238, 238, 238); }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; margin: 0px; overflow: visible; clip: auto; }

[role=3D"button"] { cursor: pointer; }

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 { font-family: inherit=
; font-weight: 500; line-height: 1.1; color: inherit; }

.h1 .small, .h1 small, .h2 .small, .h2 small, .h3 .small, .h3 small, .h4 .s=
mall, .h4 small, .h5 .small, .h5 small, .h6 .small, .h6 small, h1 .small, h=
1 small, h2 .small, h2 small, h3 .small, h3 small, h4 .small, h4 small, h5 =
.small, h5 small, h6 .small, h6 small { font-weight: 400; line-height: 1; c=
olor: rgb(119, 119, 119); }

.h1, .h2, .h3, h1, h2, h3 { margin-top: 20px; margin-bottom: 10px; }

.h1 .small, .h1 small, .h2 .small, .h2 small, .h3 .small, .h3 small, h1 .sm=
all, h1 small, h2 .small, h2 small, h3 .small, h3 small { font-size: 65%; }

.h4, .h5, .h6, h4, h5, h6 { margin-top: 10px; margin-bottom: 10px; }

.h4 .small, .h4 small, .h5 .small, .h5 small, .h6 .small, .h6 small, h4 .sm=
all, h4 small, h5 .small, h5 small, h6 .small, h6 small { font-size: 75%; }

.h1, h1 { font-size: 36px; }

.h2, h2 { font-size: 30px; }

.h3, h3 { font-size: 24px; }

.h4, h4 { font-size: 18px; }

.h5, h5 { font-size: 14px; }

.h6, h6 { font-size: 12px; }

p { margin: 0px 0px 10px; }

.lead { margin-bottom: 20px; font-size: 16px; font-weight: 300; line-height=
: 1.4; }

@media (min-width: 768px) {
  .lead { font-size: 21px; }
}

.small, small { font-size: 85%; }

.mark, mark { padding: 0.2em; background-color: rgb(252, 248, 227); }

.text-left { text-align: left; }

.text-right { text-align: right; }

.text-center { text-align: center; }

.text-justify { text-align: justify; }

.text-nowrap { white-space: nowrap; }

.text-lowercase { text-transform: lowercase; }

.text-uppercase { text-transform: uppercase; }

.text-capitalize { text-transform: capitalize; }

.text-muted { color: rgb(119, 119, 119); }

.text-primary { color: rgb(51, 122, 183); }

a.text-primary:focus, a.text-primary:hover { color: rgb(40, 96, 144); }

.text-success { color: rgb(60, 118, 61); }

a.text-success:focus, a.text-success:hover { color: rgb(43, 84, 44); }

.text-info { color: rgb(49, 112, 143); }

a.text-info:focus, a.text-info:hover { color: rgb(36, 82, 105); }

.text-warning { color: rgb(138, 109, 59); }

a.text-warning:focus, a.text-warning:hover { color: rgb(102, 81, 44); }

.text-danger { color: rgb(169, 68, 66); }

a.text-danger:focus, a.text-danger:hover { color: rgb(132, 53, 52); }

.bg-primary { color: rgb(255, 255, 255); background-color: rgb(51, 122, 183=
); }

a.bg-primary:focus, a.bg-primary:hover { background-color: rgb(40, 96, 144)=
; }

.bg-success { background-color: rgb(223, 240, 216); }

a.bg-success:focus, a.bg-success:hover { background-color: rgb(193, 226, 17=
9); }

.bg-info { background-color: rgb(217, 237, 247); }

a.bg-info:focus, a.bg-info:hover { background-color: rgb(175, 217, 238); }

.bg-warning { background-color: rgb(252, 248, 227); }

a.bg-warning:focus, a.bg-warning:hover { background-color: rgb(247, 236, 18=
1); }

.bg-danger { background-color: rgb(242, 222, 222); }

a.bg-danger:focus, a.bg-danger:hover { background-color: rgb(228, 185, 185)=
; }

.page-header { padding-bottom: 9px; margin: 40px 0px 20px; border-bottom: 1=
px solid rgb(238, 238, 238); }

ol, ul { margin-top: 0px; margin-bottom: 10px; }

ol ol, ol ul, ul ol, ul ul { margin-bottom: 0px; }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; margin-left: -5px; list-style: none; }

.list-inline > li { display: inline-block; padding-right: 5px; padding-left=
: 5px; }

dl { margin-top: 0px; margin-bottom: 20px; }

dd, dt { line-height: 1.42857; }

dt { font-weight: 700; }

dd { margin-left: 0px; }

@media (min-width: 768px) {
  .dl-horizontal dt { float: left; width: 160px; overflow: hidden; clear: l=
eft; text-align: right; text-overflow: ellipsis; white-space: nowrap; }
  .dl-horizontal dd { margin-left: 180px; }
}

abbr[data-original-title], abbr[title] { cursor: help; border-bottom: 1px d=
otted rgb(119, 119, 119); }

.initialism { font-size: 90%; text-transform: uppercase; }

blockquote { padding: 10px 20px; margin: 0px 0px 20px; font-size: 17.5px; b=
order-left: 5px solid rgb(238, 238, 238); }

blockquote ol:last-child, blockquote p:last-child, blockquote ul:last-child=
 { margin-bottom: 0px; }

blockquote .small, blockquote footer, blockquote small { display: block; fo=
nt-size: 80%; line-height: 1.42857; color: rgb(119, 119, 119); }

blockquote .small::before, blockquote footer::before, blockquote small::bef=
ore { content: "=E2=80=94=C2=A0"; }

.blockquote-reverse, blockquote.pull-right { padding-right: 15px; padding-l=
eft: 0px; text-align: right; border-right: 5px solid rgb(238, 238, 238); bo=
rder-left: 0px; }

.blockquote-reverse .small::before, .blockquote-reverse footer::before, .bl=
ockquote-reverse small::before, blockquote.pull-right .small::before, block=
quote.pull-right footer::before, blockquote.pull-right small::before { cont=
ent: ""; }

.blockquote-reverse .small::after, .blockquote-reverse footer::after, .bloc=
kquote-reverse small::after, blockquote.pull-right .small::after, blockquot=
e.pull-right footer::after, blockquote.pull-right small::after { content: "=
=C2=A0=E2=80=94"; }

address { margin-bottom: 20px; font-style: normal; line-height: 1.42857; }

code, kbd, pre, samp { font-family: Menlo, Monaco, Consolas, "Courier New",=
 monospace; }

code { padding: 2px 4px; font-size: 90%; color: rgb(199, 37, 78); backgroun=
d-color: rgb(249, 242, 244); border-radius: 4px; }

kbd { padding: 2px 4px; font-size: 90%; color: rgb(255, 255, 255); backgrou=
nd-color: rgb(51, 51, 51); border-radius: 3px; box-shadow: rgba(0, 0, 0, 0.=
25) 0px -1px 0px inset; }

kbd kbd { padding: 0px; font-size: 100%; font-weight: 700; box-shadow: none=
; }

pre { display: block; padding: 9.5px; margin: 0px 0px 10px; font-size: 13px=
; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; over=
flow-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px so=
lid rgb(204, 204, 204); border-radius: 4px; }

pre code { padding: 0px; font-size: inherit; color: inherit; white-space: p=
re-wrap; background-color: transparent; border-radius: 0px; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { padding-right: 15px; padding-left: 15px; margin-right: auto; m=
argin-left: auto; }

@media (min-width: 768px) {
  .container { width: 750px; }
}

@media (min-width: 992px) {
  .container { width: 970px; }
}

@media (min-width: 1200px) {
  .container { width: 1170px; }
}

.container-fluid { padding-right: 15px; padding-left: 15px; margin-right: a=
uto; margin-left: auto; }

.row { margin-right: -15px; margin-left: -15px; }

.col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-l=
g-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-md-1, .col=
-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5,=
 .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-sm-1, .col-sm-10, .col-sm=
-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .co=
l-sm-7, .col-sm-8, .col-sm-9, .col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12=
, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs=
-8, .col-xs-9 { position: relative; min-height: 1px; padding-right: 15px; p=
adding-left: 15px; }

.col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12, .col-xs-2, .col-xs-3, .col-x=
s-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9 { float: left; }

.col-xs-12 { width: 100%; }

.col-xs-11 { width: 91.6667%; }

.col-xs-10 { width: 83.3333%; }

.col-xs-9 { width: 75%; }

.col-xs-8 { width: 66.6667%; }

.col-xs-7 { width: 58.3333%; }

.col-xs-6 { width: 50%; }

.col-xs-5 { width: 41.6667%; }

.col-xs-4 { width: 33.3333%; }

.col-xs-3 { width: 25%; }

.col-xs-2 { width: 16.6667%; }

.col-xs-1 { width: 8.33333%; }

.col-xs-pull-12 { right: 100%; }

.col-xs-pull-11 { right: 91.6667%; }

.col-xs-pull-10 { right: 83.3333%; }

.col-xs-pull-9 { right: 75%; }

.col-xs-pull-8 { right: 66.6667%; }

.col-xs-pull-7 { right: 58.3333%; }

.col-xs-pull-6 { right: 50%; }

.col-xs-pull-5 { right: 41.6667%; }

.col-xs-pull-4 { right: 33.3333%; }

.col-xs-pull-3 { right: 25%; }

.col-xs-pull-2 { right: 16.6667%; }

.col-xs-pull-1 { right: 8.33333%; }

.col-xs-pull-0 { right: auto; }

.col-xs-push-12 { left: 100%; }

.col-xs-push-11 { left: 91.6667%; }

.col-xs-push-10 { left: 83.3333%; }

.col-xs-push-9 { left: 75%; }

.col-xs-push-8 { left: 66.6667%; }

.col-xs-push-7 { left: 58.3333%; }

.col-xs-push-6 { left: 50%; }

.col-xs-push-5 { left: 41.6667%; }

.col-xs-push-4 { left: 33.3333%; }

.col-xs-push-3 { left: 25%; }

.col-xs-push-2 { left: 16.6667%; }

.col-xs-push-1 { left: 8.33333%; }

.col-xs-push-0 { left: auto; }

.col-xs-offset-12 { margin-left: 100%; }

.col-xs-offset-11 { margin-left: 91.6667%; }

.col-xs-offset-10 { margin-left: 83.3333%; }

.col-xs-offset-9 { margin-left: 75%; }

.col-xs-offset-8 { margin-left: 66.6667%; }

.col-xs-offset-7 { margin-left: 58.3333%; }

.col-xs-offset-6 { margin-left: 50%; }

.col-xs-offset-5 { margin-left: 41.6667%; }

.col-xs-offset-4 { margin-left: 33.3333%; }

.col-xs-offset-3 { margin-left: 25%; }

.col-xs-offset-2 { margin-left: 16.6667%; }

.col-xs-offset-1 { margin-left: 8.33333%; }

.col-xs-offset-0 { margin-left: 0px; }

@media (min-width: 768px) {
  .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col=
-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9 { float: left;=
 }
  .col-sm-12 { width: 100%; }
  .col-sm-11 { width: 91.6667%; }
  .col-sm-10 { width: 83.3333%; }
  .col-sm-9 { width: 75%; }
  .col-sm-8 { width: 66.6667%; }
  .col-sm-7 { width: 58.3333%; }
  .col-sm-6 { width: 50%; }
  .col-sm-5 { width: 41.6667%; }
  .col-sm-4 { width: 33.3333%; }
  .col-sm-3 { width: 25%; }
  .col-sm-2 { width: 16.6667%; }
  .col-sm-1 { width: 8.33333%; }
  .col-sm-pull-12 { right: 100%; }
  .col-sm-pull-11 { right: 91.6667%; }
  .col-sm-pull-10 { right: 83.3333%; }
  .col-sm-pull-9 { right: 75%; }
  .col-sm-pull-8 { right: 66.6667%; }
  .col-sm-pull-7 { right: 58.3333%; }
  .col-sm-pull-6 { right: 50%; }
  .col-sm-pull-5 { right: 41.6667%; }
  .col-sm-pull-4 { right: 33.3333%; }
  .col-sm-pull-3 { right: 25%; }
  .col-sm-pull-2 { right: 16.6667%; }
  .col-sm-pull-1 { right: 8.33333%; }
  .col-sm-pull-0 { right: auto; }
  .col-sm-push-12 { left: 100%; }
  .col-sm-push-11 { left: 91.6667%; }
  .col-sm-push-10 { left: 83.3333%; }
  .col-sm-push-9 { left: 75%; }
  .col-sm-push-8 { left: 66.6667%; }
  .col-sm-push-7 { left: 58.3333%; }
  .col-sm-push-6 { left: 50%; }
  .col-sm-push-5 { left: 41.6667%; }
  .col-sm-push-4 { left: 33.3333%; }
  .col-sm-push-3 { left: 25%; }
  .col-sm-push-2 { left: 16.6667%; }
  .col-sm-push-1 { left: 8.33333%; }
  .col-sm-push-0 { left: auto; }
  .col-sm-offset-12 { margin-left: 100%; }
  .col-sm-offset-11 { margin-left: 91.6667%; }
  .col-sm-offset-10 { margin-left: 83.3333%; }
  .col-sm-offset-9 { margin-left: 75%; }
  .col-sm-offset-8 { margin-left: 66.6667%; }
  .col-sm-offset-7 { margin-left: 58.3333%; }
  .col-sm-offset-6 { margin-left: 50%; }
  .col-sm-offset-5 { margin-left: 41.6667%; }
  .col-sm-offset-4 { margin-left: 33.3333%; }
  .col-sm-offset-3 { margin-left: 25%; }
  .col-sm-offset-2 { margin-left: 16.6667%; }
  .col-sm-offset-1 { margin-left: 8.33333%; }
  .col-sm-offset-0 { margin-left: 0px; }
}

@media (min-width: 992px) {
  .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col=
-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9 { float: left;=
 }
  .col-md-12 { width: 100%; }
  .col-md-11 { width: 91.6667%; }
  .col-md-10 { width: 83.3333%; }
  .col-md-9 { width: 75%; }
  .col-md-8 { width: 66.6667%; }
  .col-md-7 { width: 58.3333%; }
  .col-md-6 { width: 50%; }
  .col-md-5 { width: 41.6667%; }
  .col-md-4 { width: 33.3333%; }
  .col-md-3 { width: 25%; }
  .col-md-2 { width: 16.6667%; }
  .col-md-1 { width: 8.33333%; }
  .col-md-pull-12 { right: 100%; }
  .col-md-pull-11 { right: 91.6667%; }
  .col-md-pull-10 { right: 83.3333%; }
  .col-md-pull-9 { right: 75%; }
  .col-md-pull-8 { right: 66.6667%; }
  .col-md-pull-7 { right: 58.3333%; }
  .col-md-pull-6 { right: 50%; }
  .col-md-pull-5 { right: 41.6667%; }
  .col-md-pull-4 { right: 33.3333%; }
  .col-md-pull-3 { right: 25%; }
  .col-md-pull-2 { right: 16.6667%; }
  .col-md-pull-1 { right: 8.33333%; }
  .col-md-pull-0 { right: auto; }
  .col-md-push-12 { left: 100%; }
  .col-md-push-11 { left: 91.6667%; }
  .col-md-push-10 { left: 83.3333%; }
  .col-md-push-9 { left: 75%; }
  .col-md-push-8 { left: 66.6667%; }
  .col-md-push-7 { left: 58.3333%; }
  .col-md-push-6 { left: 50%; }
  .col-md-push-5 { left: 41.6667%; }
  .col-md-push-4 { left: 33.3333%; }
  .col-md-push-3 { left: 25%; }
  .col-md-push-2 { left: 16.6667%; }
  .col-md-push-1 { left: 8.33333%; }
  .col-md-push-0 { left: auto; }
  .col-md-offset-12 { margin-left: 100%; }
  .col-md-offset-11 { margin-left: 91.6667%; }
  .col-md-offset-10 { margin-left: 83.3333%; }
  .col-md-offset-9 { margin-left: 75%; }
  .col-md-offset-8 { margin-left: 66.6667%; }
  .col-md-offset-7 { margin-left: 58.3333%; }
  .col-md-offset-6 { margin-left: 50%; }
  .col-md-offset-5 { margin-left: 41.6667%; }
  .col-md-offset-4 { margin-left: 33.3333%; }
  .col-md-offset-3 { margin-left: 25%; }
  .col-md-offset-2 { margin-left: 16.6667%; }
  .col-md-offset-1 { margin-left: 8.33333%; }
  .col-md-offset-0 { margin-left: 0px; }
}

@media (min-width: 1200px) {
  .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col=
-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9 { float: left;=
 }
  .col-lg-12 { width: 100%; }
  .col-lg-11 { width: 91.6667%; }
  .col-lg-10 { width: 83.3333%; }
  .col-lg-9 { width: 75%; }
  .col-lg-8 { width: 66.6667%; }
  .col-lg-7 { width: 58.3333%; }
  .col-lg-6 { width: 50%; }
  .col-lg-5 { width: 41.6667%; }
  .col-lg-4 { width: 33.3333%; }
  .col-lg-3 { width: 25%; }
  .col-lg-2 { width: 16.6667%; }
  .col-lg-1 { width: 8.33333%; }
  .col-lg-pull-12 { right: 100%; }
  .col-lg-pull-11 { right: 91.6667%; }
  .col-lg-pull-10 { right: 83.3333%; }
  .col-lg-pull-9 { right: 75%; }
  .col-lg-pull-8 { right: 66.6667%; }
  .col-lg-pull-7 { right: 58.3333%; }
  .col-lg-pull-6 { right: 50%; }
  .col-lg-pull-5 { right: 41.6667%; }
  .col-lg-pull-4 { right: 33.3333%; }
  .col-lg-pull-3 { right: 25%; }
  .col-lg-pull-2 { right: 16.6667%; }
  .col-lg-pull-1 { right: 8.33333%; }
  .col-lg-pull-0 { right: auto; }
  .col-lg-push-12 { left: 100%; }
  .col-lg-push-11 { left: 91.6667%; }
  .col-lg-push-10 { left: 83.3333%; }
  .col-lg-push-9 { left: 75%; }
  .col-lg-push-8 { left: 66.6667%; }
  .col-lg-push-7 { left: 58.3333%; }
  .col-lg-push-6 { left: 50%; }
  .col-lg-push-5 { left: 41.6667%; }
  .col-lg-push-4 { left: 33.3333%; }
  .col-lg-push-3 { left: 25%; }
  .col-lg-push-2 { left: 16.6667%; }
  .col-lg-push-1 { left: 8.33333%; }
  .col-lg-push-0 { left: auto; }
  .col-lg-offset-12 { margin-left: 100%; }
  .col-lg-offset-11 { margin-left: 91.6667%; }
  .col-lg-offset-10 { margin-left: 83.3333%; }
  .col-lg-offset-9 { margin-left: 75%; }
  .col-lg-offset-8 { margin-left: 66.6667%; }
  .col-lg-offset-7 { margin-left: 58.3333%; }
  .col-lg-offset-6 { margin-left: 50%; }
  .col-lg-offset-5 { margin-left: 41.6667%; }
  .col-lg-offset-4 { margin-left: 33.3333%; }
  .col-lg-offset-3 { margin-left: 25%; }
  .col-lg-offset-2 { margin-left: 16.6667%; }
  .col-lg-offset-1 { margin-left: 8.33333%; }
  .col-lg-offset-0 { margin-left: 0px; }
}

table { background-color: transparent; }

caption { padding-top: 8px; padding-bottom: 8px; color: rgb(119, 119, 119);=
 text-align: left; }

th { text-align: left; }

.table { width: 100%; max-width: 100%; margin-bottom: 20px; }

.table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > t=
d, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr =
> th { padding: 8px; line-height: 1.42857; vertical-align: top; border-top:=
 1px solid rgb(221, 221, 221); }

.table > thead > tr > th { vertical-align: bottom; border-bottom: 2px solid=
 rgb(221, 221, 221); }

.table > caption + thead > tr:first-child > td, .table > caption + thead > =
tr:first-child > th, .table > colgroup + thead > tr:first-child > td, .tabl=
e > colgroup + thead > tr:first-child > th, .table > thead:first-child > tr=
:first-child > td, .table > thead:first-child > tr:first-child > th { borde=
r-top: 0px; }

.table > tbody + tbody { border-top: 2px solid rgb(221, 221, 221); }

.table .table { background-color: rgb(255, 255, 255); }

.table-condensed > tbody > tr > td, .table-condensed > tbody > tr > th, .ta=
ble-condensed > tfoot > tr > td, .table-condensed > tfoot > tr > th, .table=
-condensed > thead > tr > td, .table-condensed > thead > tr > th { padding:=
 5px; }

.table-bordered { border: 1px solid rgb(221, 221, 221); }

.table-bordered > tbody > tr > td, .table-bordered > tbody > tr > th, .tabl=
e-bordered > tfoot > tr > td, .table-bordered > tfoot > tr > th, .table-bor=
dered > thead > tr > td, .table-bordered > thead > tr > th { border: 1px so=
lid rgb(221, 221, 221); }

.table-bordered > thead > tr > td, .table-bordered > thead > tr > th { bord=
er-bottom-width: 2px; }

.table-striped > tbody > tr:nth-of-type(2n+1) { background-color: rgb(249, =
249, 249); }

.table-hover > tbody > tr:hover { background-color: rgb(245, 245, 245); }

table col[class*=3D"col-"] { position: static; display: table-column; float=
: none; }

table td[class*=3D"col-"], table th[class*=3D"col-"] { position: static; di=
splay: table-cell; float: none; }

.table > tbody > tr.active > td, .table > tbody > tr.active > th, .table > =
tbody > tr > td.active, .table > tbody > tr > th.active, .table > tfoot > t=
r.active > td, .table > tfoot > tr.active > th, .table > tfoot > tr > td.ac=
tive, .table > tfoot > tr > th.active, .table > thead > tr.active > td, .ta=
ble > thead > tr.active > th, .table > thead > tr > td.active, .table > the=
ad > tr > th.active { background-color: rgb(245, 245, 245); }

.table-hover > tbody > tr.active:hover > td, .table-hover > tbody > tr.acti=
ve:hover > th, .table-hover > tbody > tr:hover > .active, .table-hover > tb=
ody > tr > td.active:hover, .table-hover > tbody > tr > th.active:hover { b=
ackground-color: rgb(232, 232, 232); }

.table > tbody > tr.success > td, .table > tbody > tr.success > th, .table =
> tbody > tr > td.success, .table > tbody > tr > th.success, .table > tfoot=
 > tr.success > td, .table > tfoot > tr.success > th, .table > tfoot > tr >=
 td.success, .table > tfoot > tr > th.success, .table > thead > tr.success =
> td, .table > thead > tr.success > th, .table > thead > tr > td.success, .=
table > thead > tr > th.success { background-color: rgb(223, 240, 216); }

.table-hover > tbody > tr.success:hover > td, .table-hover > tbody > tr.suc=
cess:hover > th, .table-hover > tbody > tr:hover > .success, .table-hover >=
 tbody > tr > td.success:hover, .table-hover > tbody > tr > th.success:hove=
r { background-color: rgb(208, 233, 198); }

.table > tbody > tr.info > td, .table > tbody > tr.info > th, .table > tbod=
y > tr > td.info, .table > tbody > tr > th.info, .table > tfoot > tr.info >=
 td, .table > tfoot > tr.info > th, .table > tfoot > tr > td.info, .table >=
 tfoot > tr > th.info, .table > thead > tr.info > td, .table > thead > tr.i=
nfo > th, .table > thead > tr > td.info, .table > thead > tr > th.info { ba=
ckground-color: rgb(217, 237, 247); }

.table-hover > tbody > tr.info:hover > td, .table-hover > tbody > tr.info:h=
over > th, .table-hover > tbody > tr:hover > .info, .table-hover > tbody > =
tr > td.info:hover, .table-hover > tbody > tr > th.info:hover { background-=
color: rgb(196, 227, 243); }

.table > tbody > tr.warning > td, .table > tbody > tr.warning > th, .table =
> tbody > tr > td.warning, .table > tbody > tr > th.warning, .table > tfoot=
 > tr.warning > td, .table > tfoot > tr.warning > th, .table > tfoot > tr >=
 td.warning, .table > tfoot > tr > th.warning, .table > thead > tr.warning =
> td, .table > thead > tr.warning > th, .table > thead > tr > td.warning, .=
table > thead > tr > th.warning { background-color: rgb(252, 248, 227); }

.table-hover > tbody > tr.warning:hover > td, .table-hover > tbody > tr.war=
ning:hover > th, .table-hover > tbody > tr:hover > .warning, .table-hover >=
 tbody > tr > td.warning:hover, .table-hover > tbody > tr > th.warning:hove=
r { background-color: rgb(250, 242, 204); }

.table > tbody > tr.danger > td, .table > tbody > tr.danger > th, .table > =
tbody > tr > td.danger, .table > tbody > tr > th.danger, .table > tfoot > t=
r.danger > td, .table > tfoot > tr.danger > th, .table > tfoot > tr > td.da=
nger, .table > tfoot > tr > th.danger, .table > thead > tr.danger > td, .ta=
ble > thead > tr.danger > th, .table > thead > tr > td.danger, .table > the=
ad > tr > th.danger { background-color: rgb(242, 222, 222); }

.table-hover > tbody > tr.danger:hover > td, .table-hover > tbody > tr.dang=
er:hover > th, .table-hover > tbody > tr:hover > .danger, .table-hover > tb=
ody > tr > td.danger:hover, .table-hover > tbody > tr > th.danger:hover { b=
ackground-color: rgb(235, 204, 204); }

.table-responsive { min-height: 0.01%; overflow-x: auto; }

@media screen and (max-width: 767px) {
  .table-responsive { width: 100%; margin-bottom: 15px; overflow-y: hidden;=
 border: 1px solid rgb(221, 221, 221); }
  .table-responsive > .table { margin-bottom: 0px; }
  .table-responsive > .table > tbody > tr > td, .table-responsive > .table =
> tbody > tr > th, .table-responsive > .table > tfoot > tr > td, .table-res=
ponsive > .table > tfoot > tr > th, .table-responsive > .table > thead > tr=
 > td, .table-responsive > .table > thead > tr > th { white-space: nowrap; =
}
  .table-responsive > .table-bordered { border: 0px; }
  .table-responsive > .table-bordered > tbody > tr > td:first-child, .table=
-responsive > .table-bordered > tbody > tr > th:first-child, .table-respons=
ive > .table-bordered > tfoot > tr > td:first-child, .table-responsive > .t=
able-bordered > tfoot > tr > th:first-child, .table-responsive > .table-bor=
dered > thead > tr > td:first-child, .table-responsive > .table-bordered > =
thead > tr > th:first-child { border-left: 0px; }
  .table-responsive > .table-bordered > tbody > tr > td:last-child, .table-=
responsive > .table-bordered > tbody > tr > th:last-child, .table-responsiv=
e > .table-bordered > tfoot > tr > td:last-child, .table-responsive > .tabl=
e-bordered > tfoot > tr > th:last-child, .table-responsive > .table-bordere=
d > thead > tr > td:last-child, .table-responsive > .table-bordered > thead=
 > tr > th:last-child { border-right: 0px; }
  .table-responsive > .table-bordered > tbody > tr:last-child > td, .table-=
responsive > .table-bordered > tbody > tr:last-child > th, .table-responsiv=
e > .table-bordered > tfoot > tr:last-child > td, .table-responsive > .tabl=
e-bordered > tfoot > tr:last-child > th { border-bottom: 0px; }
}

fieldset { min-width: 0px; padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; padding: 0px; margin-bottom: 20px; fo=
nt-size: 21px; line-height: inherit; color: rgb(51, 51, 51); border-width: =
0px 0px 1px; border-top-style: initial; border-right-style: initial; border=
-left-style: initial; border-top-color: initial; border-right-color: initia=
l; border-left-color: initial; border-image: initial; border-bottom-style: =
solid; border-bottom-color: rgb(229, 229, 229); }

label { display: inline-block; max-width: 100%; margin-bottom: 5px; font-we=
ight: 700; }

input[type=3D"search"] { box-sizing: border-box; }

input[type=3D"checkbox"], input[type=3D"radio"] { margin: 4px 0px 0px; line=
-height: normal; }

input[type=3D"file"] { display: block; }

input[type=3D"range"] { display: block; width: 100%; }

select[multiple], select[size] { height: auto; }

input[type=3D"file"]:focus, input[type=3D"checkbox"]:focus, input[type=3D"r=
adio"]:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: =
-2px; }

output { display: block; padding-top: 7px; font-size: 14px; line-height: 1.=
42857; color: rgb(85, 85, 85); }

.form-control { display: block; width: 100%; height: 34px; padding: 6px 12p=
x; font-size: 14px; line-height: 1.42857; color: rgb(85, 85, 85); backgroun=
d-color: rgb(255, 255, 255); background-image: none; border: 1px solid rgb(=
204, 204, 204); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.075) 0px 1p=
x 1px inset; transition: border-color 0.15s ease-in-out, box-shadow 0.15s e=
ase-in-out; }

.form-control:focus { border-color: rgb(102, 175, 233); outline: 0px; box-s=
hadow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgba(102, 175, 233, 0.6) 0px=
 0px 8px; }

.form-control::-webkit-input-placeholder { color: rgb(153, 153, 153); }

.form-control[disabled], .form-control[readonly], fieldset[disabled] .form-=
control { background-color: rgb(238, 238, 238); opacity: 1; }

.form-control[disabled], fieldset[disabled] .form-control { cursor: not-all=
owed; }

textarea.form-control { height: auto; }

input[type=3D"search"] { appearance: none; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type=3D"date"].form-control, input[type=3D"time"].form-control, inp=
ut[type=3D"datetime-local"].form-control, input[type=3D"month"].form-contro=
l { line-height: 34px; }
  .input-group-sm input[type=3D"date"], .input-group-sm input[type=3D"time"=
], .input-group-sm input[type=3D"datetime-local"], .input-group-sm input[ty=
pe=3D"month"], input[type=3D"date"].input-sm, input[type=3D"time"].input-sm=
, input[type=3D"datetime-local"].input-sm, input[type=3D"month"].input-sm {=
 line-height: 30px; }
  .input-group-lg input[type=3D"date"], .input-group-lg input[type=3D"time"=
], .input-group-lg input[type=3D"datetime-local"], .input-group-lg input[ty=
pe=3D"month"], input[type=3D"date"].input-lg, input[type=3D"time"].input-lg=
, input[type=3D"datetime-local"].input-lg, input[type=3D"month"].input-lg {=
 line-height: 46px; }
}

.form-group { margin-bottom: 15px; }

.checkbox, .radio { position: relative; display: block; margin-top: 10px; m=
argin-bottom: 10px; }

.checkbox label, .radio label { min-height: 20px; padding-left: 20px; margi=
n-bottom: 0px; font-weight: 400; cursor: pointer; }

.checkbox input[type=3D"checkbox"], .checkbox-inline input[type=3D"checkbox=
"], .radio input[type=3D"radio"], .radio-inline input[type=3D"radio"] { pos=
ition: absolute; margin-left: -20px; }

.checkbox + .checkbox, .radio + .radio { margin-top: -5px; }

.checkbox-inline, .radio-inline { position: relative; display: inline-block=
; padding-left: 20px; margin-bottom: 0px; font-weight: 400; vertical-align:=
 middle; cursor: pointer; }

.checkbox-inline + .checkbox-inline, .radio-inline + .radio-inline { margin=
-top: 0px; margin-left: 10px; }

fieldset[disabled] input[type=3D"checkbox"], fieldset[disabled] input[type=
=3D"radio"], input[type=3D"checkbox"].disabled, input[type=3D"checkbox"][di=
sabled], input[type=3D"radio"].disabled, input[type=3D"radio"][disabled] { =
cursor: not-allowed; }

.checkbox-inline.disabled, .radio-inline.disabled, fieldset[disabled] .chec=
kbox-inline, fieldset[disabled] .radio-inline { cursor: not-allowed; }

.checkbox.disabled label, .radio.disabled label, fieldset[disabled] .checkb=
ox label, fieldset[disabled] .radio label { cursor: not-allowed; }

.form-control-static { min-height: 34px; padding-top: 7px; padding-bottom: =
7px; margin-bottom: 0px; }

.form-control-static.input-lg, .form-control-static.input-sm { padding-righ=
t: 0px; padding-left: 0px; }

.input-sm { height: 30px; padding: 5px 10px; font-size: 12px; line-height: =
1.5; border-radius: 3px; }

select.input-sm { height: 30px; line-height: 30px; }

select[multiple].input-sm, textarea.input-sm { height: auto; }

.form-group-sm .form-control { height: 30px; padding: 5px 10px; font-size: =
12px; line-height: 1.5; border-radius: 3px; }

.form-group-sm select.form-control { height: 30px; line-height: 30px; }

.form-group-sm select[multiple].form-control, .form-group-sm textarea.form-=
control { height: auto; }

.form-group-sm .form-control-static { height: 30px; min-height: 32px; paddi=
ng: 6px 10px; font-size: 12px; line-height: 1.5; }

.input-lg { height: 46px; padding: 10px 16px; font-size: 18px; line-height:=
 1.33333; border-radius: 6px; }

select.input-lg { height: 46px; line-height: 46px; }

select[multiple].input-lg, textarea.input-lg { height: auto; }

.form-group-lg .form-control { height: 46px; padding: 10px 16px; font-size:=
 18px; line-height: 1.33333; border-radius: 6px; }

.form-group-lg select.form-control { height: 46px; line-height: 46px; }

.form-group-lg select[multiple].form-control, .form-group-lg textarea.form-=
control { height: auto; }

.form-group-lg .form-control-static { height: 46px; min-height: 38px; paddi=
ng: 11px 16px; font-size: 18px; line-height: 1.33333; }

.has-feedback { position: relative; }

.has-feedback .form-control { padding-right: 42.5px; }

.form-control-feedback { position: absolute; top: 0px; right: 0px; z-index:=
 2; display: block; width: 34px; height: 34px; line-height: 34px; text-alig=
n: center; pointer-events: none; }

.form-group-lg .form-control + .form-control-feedback, .input-group-lg + .f=
orm-control-feedback, .input-lg + .form-control-feedback { width: 46px; hei=
ght: 46px; line-height: 46px; }

.form-group-sm .form-control + .form-control-feedback, .input-group-sm + .f=
orm-control-feedback, .input-sm + .form-control-feedback { width: 30px; hei=
ght: 30px; line-height: 30px; }

.has-success .checkbox, .has-success .checkbox-inline, .has-success .contro=
l-label, .has-success .help-block, .has-success .radio, .has-success .radio=
-inline, .has-success.checkbox label, .has-success.checkbox-inline label, .=
has-success.radio label, .has-success.radio-inline label { color: rgb(60, 1=
18, 61); }

.has-success .form-control { border-color: rgb(60, 118, 61); box-shadow: rg=
ba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-success .form-control:focus { border-color: rgb(43, 84, 44); box-shado=
w: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(103, 177, 104) 0px 0px 6px; =
}

.has-success .input-group-addon { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(60, 118, 61); }

.has-success .form-control-feedback { color: rgb(60, 118, 61); }

.has-warning .checkbox, .has-warning .checkbox-inline, .has-warning .contro=
l-label, .has-warning .help-block, .has-warning .radio, .has-warning .radio=
-inline, .has-warning.checkbox label, .has-warning.checkbox-inline label, .=
has-warning.radio label, .has-warning.radio-inline label { color: rgb(138, =
109, 59); }

.has-warning .form-control { border-color: rgb(138, 109, 59); box-shadow: r=
gba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-warning .form-control:focus { border-color: rgb(102, 81, 44); box-shad=
ow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(192, 161, 107) 0px 0px 6px;=
 }

.has-warning .input-group-addon { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(138, 109, 59); }

.has-warning .form-control-feedback { color: rgb(138, 109, 59); }

.has-error .checkbox, .has-error .checkbox-inline, .has-error .control-labe=
l, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .ha=
s-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio =
label, .has-error.radio-inline label { color: rgb(169, 68, 66); }

.has-error .form-control { border-color: rgb(169, 68, 66); box-shadow: rgba=
(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-error .form-control:focus { border-color: rgb(132, 53, 52); box-shadow=
: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(206, 132, 131) 0px 0px 6px; }

.has-error .input-group-addon { color: rgb(169, 68, 66); background-color: =
rgb(242, 222, 222); border-color: rgb(169, 68, 66); }

.has-error .form-control-feedback { color: rgb(169, 68, 66); }

.has-feedback label ~ .form-control-feedback { top: 25px; }

.has-feedback label.sr-only ~ .form-control-feedback { top: 0px; }

.help-block { display: block; margin-top: 5px; margin-bottom: 10px; color: =
rgb(115, 115, 115); }

@media (min-width: 768px) {
  .form-inline .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .form-inline .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .form-inline .form-control-static { display: inline-block; }
  .form-inline .input-group { display: inline-table; vertical-align: middle=
; }
  .form-inline .input-group .form-control, .form-inline .input-group .input=
-group-addon, .form-inline .input-group .input-group-btn { width: auto; }
  .form-inline .input-group > .form-control { width: 100%; }
  .form-inline .control-label { margin-bottom: 0px; vertical-align: middle;=
 }
  .form-inline .checkbox, .form-inline .radio { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; vertical-align: middle; }
  .form-inline .checkbox label, .form-inline .radio label { padding-left: 0=
px; }
  .form-inline .checkbox input[type=3D"checkbox"], .form-inline .radio inpu=
t[type=3D"radio"] { position: relative; margin-left: 0px; }
  .form-inline .has-feedback .form-control-feedback { top: 0px; }
}

.form-horizontal .checkbox, .form-horizontal .checkbox-inline, .form-horizo=
ntal .radio, .form-horizontal .radio-inline { padding-top: 7px; margin-top:=
 0px; margin-bottom: 0px; }

.form-horizontal .checkbox, .form-horizontal .radio { min-height: 27px; }

.form-horizontal .form-group { margin-right: -15px; margin-left: -15px; }

@media (min-width: 768px) {
  .form-horizontal .control-label { padding-top: 7px; margin-bottom: 0px; t=
ext-align: right; }
}

.form-horizontal .has-feedback .form-control-feedback { right: 15px; }

@media (min-width: 768px) {
  .form-horizontal .form-group-lg .control-label { padding-top: 11px; font-=
size: 18px; }
}

@media (min-width: 768px) {
  .form-horizontal .form-group-sm .control-label { padding-top: 6px; font-s=
ize: 12px; }
}

.btn { display: inline-block; padding: 6px 12px; margin-bottom: 0px; font-s=
ize: 14px; font-weight: 400; line-height: 1.42857; text-align: center; whit=
e-space: nowrap; vertical-align: middle; touch-action: manipulation; cursor=
: pointer; user-select: none; background-image: none; border: 1px solid tra=
nsparent; border-radius: 4px; }

.btn.active.focus, .btn.active:focus, .btn.focus, .btn:active.focus, .btn:a=
ctive:focus, .btn:focus { outline: -webkit-focus-ring-color auto 5px; outli=
ne-offset: -2px; }

.btn.focus, .btn:focus, .btn:hover { color: rgb(51, 51, 51); text-decoratio=
n: none; }

.btn.active, .btn:active { background-image: none; outline: 0px; box-shadow=
: rgba(0, 0, 0, 0.125) 0px 3px 5px inset; }

.btn.disabled, .btn[disabled], fieldset[disabled] .btn { cursor: not-allowe=
d; box-shadow: none; opacity: 0.65; }

a.btn.disabled, fieldset[disabled] a.btn { pointer-events: none; }

.btn-default { color: rgb(51, 51, 51); background-color: rgb(255, 255, 255)=
; border-color: rgb(204, 204, 204); }

.btn-default.focus, .btn-default:focus { color: rgb(51, 51, 51); background=
-color: rgb(230, 230, 230); border-color: rgb(140, 140, 140); }

.btn-default:hover { color: rgb(51, 51, 51); background-color: rgb(230, 230=
, 230); border-color: rgb(173, 173, 173); }

.btn-default.active, .btn-default:active, .open > .dropdown-toggle.btn-defa=
ult { color: rgb(51, 51, 51); background-color: rgb(230, 230, 230); border-=
color: rgb(173, 173, 173); }

.btn-default.active.focus, .btn-default.active:focus, .btn-default.active:h=
over, .btn-default:active.focus, .btn-default:active:focus, .btn-default:ac=
tive:hover, .open > .dropdown-toggle.btn-default.focus, .open > .dropdown-t=
oggle.btn-default:focus, .open > .dropdown-toggle.btn-default:hover { color=
: rgb(51, 51, 51); background-color: rgb(212, 212, 212); border-color: rgb(=
140, 140, 140); }

.btn-default.active, .btn-default:active, .open > .dropdown-toggle.btn-defa=
ult { background-image: none; }

.btn-default.disabled.focus, .btn-default.disabled:focus, .btn-default.disa=
bled:hover, .btn-default[disabled].focus, .btn-default[disabled]:focus, .bt=
n-default[disabled]:hover, fieldset[disabled] .btn-default.focus, fieldset[=
disabled] .btn-default:focus, fieldset[disabled] .btn-default:hover { backg=
round-color: rgb(255, 255, 255); border-color: rgb(204, 204, 204); }

.btn-default .badge { color: rgb(255, 255, 255); background-color: rgb(51, =
51, 51); }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(51, 122, 18=
3); border-color: rgb(46, 109, 164); }

.btn-primary.focus, .btn-primary:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(40, 96, 144); border-color: rgb(18, 43, 64); }

.btn-primary:hover { color: rgb(255, 255, 255); background-color: rgb(40, 9=
6, 144); border-color: rgb(32, 77, 116); }

.btn-primary.active, .btn-primary:active, .open > .dropdown-toggle.btn-prim=
ary { color: rgb(255, 255, 255); background-color: rgb(40, 96, 144); border=
-color: rgb(32, 77, 116); }

.btn-primary.active.focus, .btn-primary.active:focus, .btn-primary.active:h=
over, .btn-primary:active.focus, .btn-primary:active:focus, .btn-primary:ac=
tive:hover, .open > .dropdown-toggle.btn-primary.focus, .open > .dropdown-t=
oggle.btn-primary:focus, .open > .dropdown-toggle.btn-primary:hover { color=
: rgb(255, 255, 255); background-color: rgb(32, 77, 116); border-color: rgb=
(18, 43, 64); }

.btn-primary.active, .btn-primary:active, .open > .dropdown-toggle.btn-prim=
ary { background-image: none; }

.btn-primary.disabled.focus, .btn-primary.disabled:focus, .btn-primary.disa=
bled:hover, .btn-primary[disabled].focus, .btn-primary[disabled]:focus, .bt=
n-primary[disabled]:hover, fieldset[disabled] .btn-primary.focus, fieldset[=
disabled] .btn-primary:focus, fieldset[disabled] .btn-primary:hover { backg=
round-color: rgb(51, 122, 183); border-color: rgb(46, 109, 164); }

.btn-primary .badge { color: rgb(51, 122, 183); background-color: rgb(255, =
255, 255); }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(92, 184, 92=
); border-color: rgb(76, 174, 76); }

.btn-success.focus, .btn-success:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(68, 157, 68); border-color: rgb(37, 86, 37); }

.btn-success:hover { color: rgb(255, 255, 255); background-color: rgb(68, 1=
57, 68); border-color: rgb(57, 132, 57); }

.btn-success.active, .btn-success:active, .open > .dropdown-toggle.btn-succ=
ess { color: rgb(255, 255, 255); background-color: rgb(68, 157, 68); border=
-color: rgb(57, 132, 57); }

.btn-success.active.focus, .btn-success.active:focus, .btn-success.active:h=
over, .btn-success:active.focus, .btn-success:active:focus, .btn-success:ac=
tive:hover, .open > .dropdown-toggle.btn-success.focus, .open > .dropdown-t=
oggle.btn-success:focus, .open > .dropdown-toggle.btn-success:hover { color=
: rgb(255, 255, 255); background-color: rgb(57, 132, 57); border-color: rgb=
(37, 86, 37); }

.btn-success.active, .btn-success:active, .open > .dropdown-toggle.btn-succ=
ess { background-image: none; }

.btn-success.disabled.focus, .btn-success.disabled:focus, .btn-success.disa=
bled:hover, .btn-success[disabled].focus, .btn-success[disabled]:focus, .bt=
n-success[disabled]:hover, fieldset[disabled] .btn-success.focus, fieldset[=
disabled] .btn-success:focus, fieldset[disabled] .btn-success:hover { backg=
round-color: rgb(92, 184, 92); border-color: rgb(76, 174, 76); }

.btn-success .badge { color: rgb(92, 184, 92); background-color: rgb(255, 2=
55, 255); }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(91, 192, 222);=
 border-color: rgb(70, 184, 218); }

.btn-info.focus, .btn-info:focus { color: rgb(255, 255, 255); background-co=
lor: rgb(49, 176, 213); border-color: rgb(27, 109, 133); }

.btn-info:hover { color: rgb(255, 255, 255); background-color: rgb(49, 176,=
 213); border-color: rgb(38, 154, 188); }

.btn-info.active, .btn-info:active, .open > .dropdown-toggle.btn-info { col=
or: rgb(255, 255, 255); background-color: rgb(49, 176, 213); border-color: =
rgb(38, 154, 188); }

.btn-info.active.focus, .btn-info.active:focus, .btn-info.active:hover, .bt=
n-info:active.focus, .btn-info:active:focus, .btn-info:active:hover, .open =
> .dropdown-toggle.btn-info.focus, .open > .dropdown-toggle.btn-info:focus,=
 .open > .dropdown-toggle.btn-info:hover { color: rgb(255, 255, 255); backg=
round-color: rgb(38, 154, 188); border-color: rgb(27, 109, 133); }

.btn-info.active, .btn-info:active, .open > .dropdown-toggle.btn-info { bac=
kground-image: none; }

.btn-info.disabled.focus, .btn-info.disabled:focus, .btn-info.disabled:hove=
r, .btn-info[disabled].focus, .btn-info[disabled]:focus, .btn-info[disabled=
]:hover, fieldset[disabled] .btn-info.focus, fieldset[disabled] .btn-info:f=
ocus, fieldset[disabled] .btn-info:hover { background-color: rgb(91, 192, 2=
22); border-color: rgb(70, 184, 218); }

.btn-info .badge { color: rgb(91, 192, 222); background-color: rgb(255, 255=
, 255); }

.btn-warning { color: rgb(255, 255, 255); background-color: rgb(240, 173, 7=
8); border-color: rgb(238, 162, 54); }

.btn-warning.focus, .btn-warning:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(236, 151, 31); border-color: rgb(152, 95, 13); }

.btn-warning:hover { color: rgb(255, 255, 255); background-color: rgb(236, =
151, 31); border-color: rgb(213, 133, 18); }

.btn-warning.active, .btn-warning:active, .open > .dropdown-toggle.btn-warn=
ing { color: rgb(255, 255, 255); background-color: rgb(236, 151, 31); borde=
r-color: rgb(213, 133, 18); }

.btn-warning.active.focus, .btn-warning.active:focus, .btn-warning.active:h=
over, .btn-warning:active.focus, .btn-warning:active:focus, .btn-warning:ac=
tive:hover, .open > .dropdown-toggle.btn-warning.focus, .open > .dropdown-t=
oggle.btn-warning:focus, .open > .dropdown-toggle.btn-warning:hover { color=
: rgb(255, 255, 255); background-color: rgb(213, 133, 18); border-color: rg=
b(152, 95, 13); }

.btn-warning.active, .btn-warning:active, .open > .dropdown-toggle.btn-warn=
ing { background-image: none; }

.btn-warning.disabled.focus, .btn-warning.disabled:focus, .btn-warning.disa=
bled:hover, .btn-warning[disabled].focus, .btn-warning[disabled]:focus, .bt=
n-warning[disabled]:hover, fieldset[disabled] .btn-warning.focus, fieldset[=
disabled] .btn-warning:focus, fieldset[disabled] .btn-warning:hover { backg=
round-color: rgb(240, 173, 78); border-color: rgb(238, 162, 54); }

.btn-warning .badge { color: rgb(240, 173, 78); background-color: rgb(255, =
255, 255); }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(217, 83, 79)=
; border-color: rgb(212, 63, 58); }

.btn-danger.focus, .btn-danger:focus { color: rgb(255, 255, 255); backgroun=
d-color: rgb(201, 48, 44); border-color: rgb(118, 28, 25); }

.btn-danger:hover { color: rgb(255, 255, 255); background-color: rgb(201, 4=
8, 44); border-color: rgb(172, 41, 37); }

.btn-danger.active, .btn-danger:active, .open > .dropdown-toggle.btn-danger=
 { color: rgb(255, 255, 255); background-color: rgb(201, 48, 44); border-co=
lor: rgb(172, 41, 37); }

.btn-danger.active.focus, .btn-danger.active:focus, .btn-danger.active:hove=
r, .btn-danger:active.focus, .btn-danger:active:focus, .btn-danger:active:h=
over, .open > .dropdown-toggle.btn-danger.focus, .open > .dropdown-toggle.b=
tn-danger:focus, .open > .dropdown-toggle.btn-danger:hover { color: rgb(255=
, 255, 255); background-color: rgb(172, 41, 37); border-color: rgb(118, 28,=
 25); }

.btn-danger.active, .btn-danger:active, .open > .dropdown-toggle.btn-danger=
 { background-image: none; }

.btn-danger.disabled.focus, .btn-danger.disabled:focus, .btn-danger.disable=
d:hover, .btn-danger[disabled].focus, .btn-danger[disabled]:focus, .btn-dan=
ger[disabled]:hover, fieldset[disabled] .btn-danger.focus, fieldset[disable=
d] .btn-danger:focus, fieldset[disabled] .btn-danger:hover { background-col=
or: rgb(217, 83, 79); border-color: rgb(212, 63, 58); }

.btn-danger .badge { color: rgb(217, 83, 79); background-color: rgb(255, 25=
5, 255); }

.btn-link { font-weight: 400; color: rgb(51, 122, 183); border-radius: 0px;=
 }

.btn-link, .btn-link.active, .btn-link:active, .btn-link[disabled], fieldse=
t[disabled] .btn-link { background-color: transparent; box-shadow: none; }

.btn-link, .btn-link:active, .btn-link:focus, .btn-link:hover { border-colo=
r: transparent; }

.btn-link:focus, .btn-link:hover { color: rgb(35, 82, 124); text-decoration=
: underline; background-color: transparent; }

.btn-link[disabled]:focus, .btn-link[disabled]:hover, fieldset[disabled] .b=
tn-link:focus, fieldset[disabled] .btn-link:hover { color: rgb(119, 119, 11=
9); text-decoration: none; }

.btn-group-lg > .btn, .btn-lg { padding: 10px 16px; font-size: 18px; line-h=
eight: 1.33333; border-radius: 6px; }

.btn-group-sm > .btn, .btn-sm { padding: 5px 10px; font-size: 12px; line-he=
ight: 1.5; border-radius: 3px; }

.btn-group-xs > .btn, .btn-xs { padding: 1px 5px; font-size: 12px; line-hei=
ght: 1.5; border-radius: 3px; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 5px; }

input[type=3D"button"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"submit"].btn-block { width: 100%; }

.fade { opacity: 0; transition: opacity 0.15s linear; }

.fade.in { opacity: 1; }

.collapse { display: none; }

.collapse.in { display: block; }

tr.collapse.in { display: table-row; }

tbody.collapse.in { display: table-row-group; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
-timing-function: ease; transition-duration: 0.35s; transition-property: he=
ight, visibility; }

.caret { display: inline-block; width: 0px; height: 0px; margin-left: 2px; =
vertical-align: middle; border-top: 4px dashed; border-right: 4px solid tra=
nsparent; border-left: 4px solid transparent; }

.dropdown, .dropup { position: relative; }

.dropdown-toggle:focus { outline: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 160px; padding: 5px 0px; margin: 2px =
0px 0px; font-size: 14px; text-align: left; list-style: none; background-co=
lor: rgb(255, 255, 255); background-clip: padding-box; border: 1px solid rg=
ba(0, 0, 0, 0.15); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.176) 0px=
 6px 12px; }

.dropdown-menu.pull-right { right: 0px; left: auto; }

.dropdown-menu .divider { height: 1px; margin: 9px 0px; overflow: hidden; b=
ackground-color: rgb(229, 229, 229); }

.dropdown-menu > li > a { display: block; padding: 3px 20px; clear: both; f=
ont-weight: 400; line-height: 1.42857; color: rgb(51, 51, 51); white-space:=
 nowrap; }

.dropdown-menu > li > a:focus, .dropdown-menu > li > a:hover { color: rgb(3=
8, 38, 38); text-decoration: none; background-color: rgb(245, 245, 245); }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:focus, .dropdown=
-menu > .active > a:hover { color: rgb(255, 255, 255); text-decoration: non=
e; background-color: rgb(51, 122, 183); outline: 0px; }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:focus, .drop=
down-menu > .disabled > a:hover { color: rgb(119, 119, 119); }

.dropdown-menu > .disabled > a:focus, .dropdown-menu > .disabled > a:hover =
{ text-decoration: none; cursor: not-allowed; background-color: transparent=
; background-image: none; }

.open > .dropdown-menu { display: block; }

.open > a { outline: 0px; }

.dropdown-menu-right { right: 0px; left: auto; }

.dropdown-menu-left { right: auto; left: 0px; }

.dropdown-header { display: block; padding: 3px 20px; font-size: 12px; line=
-height: 1.42857; color: rgb(119, 119, 119); white-space: nowrap; }

.dropdown-backdrop { position: fixed; inset: 0px; z-index: 990; }

.pull-right > .dropdown-menu { right: 0px; left: auto; }

.dropup .caret, .navbar-fixed-bottom .dropdown .caret { content: ""; border=
-top: 0px; border-bottom: 4px dashed; }

.dropup .dropdown-menu, .navbar-fixed-bottom .dropdown .dropdown-menu { top=
: auto; bottom: 100%; margin-bottom: 2px; }

@media (min-width: 768px) {
  .navbar-right .dropdown-menu { right: 0px; left: auto; }
  .navbar-right .dropdown-menu-left { right: auto; left: 0px; }
}

.btn-group, .btn-group-vertical { position: relative; display: inline-block=
; vertical-align: middle; }

.btn-group-vertical > .btn, .btn-group > .btn { position: relative; float: =
left; }

.btn-group-vertical > .btn.active, .btn-group-vertical > .btn:active, .btn-=
group-vertical > .btn:focus, .btn-group-vertical > .btn:hover, .btn-group >=
 .btn.active, .btn-group > .btn:active, .btn-group > .btn:focus, .btn-group=
 > .btn:hover { z-index: 2; }

.btn-group .btn + .btn, .btn-group .btn + .btn-group, .btn-group .btn-group=
 + .btn, .btn-group .btn-group + .btn-group { margin-left: -1px; }

.btn-toolbar { margin-left: -5px; }

.btn-toolbar .btn, .btn-toolbar .btn-group, .btn-toolbar .input-group { flo=
at: left; }

.btn-toolbar > .btn, .btn-toolbar > .btn-group, .btn-toolbar > .input-group=
 { margin-left: 5px; }

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) =
{ border-radius: 0px; }

.btn-group > .btn:first-child { margin-left: 0px; }

.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) { bord=
er-top-right-radius: 0px; border-bottom-right-radius: 0px; }

.btn-group > .btn:last-child:not(:first-child), .btn-group > .dropdown-togg=
le:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.btn-group > .btn-group { float: left; }

.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn { border-=
radius: 0px; }

.btn-group > .btn-group:first-child:not(:last-child) > .btn:last-child, .bt=
n-group > .btn-group:first-child:not(:last-child) > .dropdown-toggle { bord=
er-top-right-radius: 0px; border-bottom-right-radius: 0px; }

.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child { b=
order-top-left-radius: 0px; border-bottom-left-radius: 0px; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine: 0px; }

.btn-group > .btn + .dropdown-toggle { padding-right: 8px; padding-left: 8p=
x; }

.btn-group > .btn-lg + .dropdown-toggle { padding-right: 12px; padding-left=
: 12px; }

.btn-group.open .dropdown-toggle { box-shadow: rgba(0, 0, 0, 0.125) 0px 3px=
 5px inset; }

.btn-group.open .dropdown-toggle.btn-link { box-shadow: none; }

.btn .caret { margin-left: 0px; }

.btn-lg .caret { border-width: 5px 5px 0px; }

.dropup .btn-lg .caret { border-width: 0px 5px 5px; }

.btn-group-vertical > .btn, .btn-group-vertical > .btn-group, .btn-group-ve=
rtical > .btn-group > .btn { display: block; float: none; width: 100%; max-=
width: 100%; }

.btn-group-vertical > .btn-group > .btn { float: none; }

.btn-group-vertical > .btn + .btn, .btn-group-vertical > .btn + .btn-group,=
 .btn-group-vertical > .btn-group + .btn, .btn-group-vertical > .btn-group =
+ .btn-group { margin-top: -1px; margin-left: 0px; }

.btn-group-vertical > .btn:not(:first-child):not(:last-child) { border-radi=
us: 0px; }

.btn-group-vertical > .btn:first-child:not(:last-child) { border-radius: 4p=
x 4px 0px 0px; }

.btn-group-vertical > .btn:last-child:not(:first-child) { border-radius: 0p=
x 0px 4px 4px; }

.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn =
{ border-radius: 0px; }

.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-c=
hild, .btn-group-vertical > .btn-group:first-child:not(:last-child) > .drop=
down-toggle { border-bottom-right-radius: 0px; border-bottom-left-radius: 0=
px; }

.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-=
child { border-top-left-radius: 0px; border-top-right-radius: 0px; }

.btn-group-justified { display: table; width: 100%; table-layout: fixed; bo=
rder-collapse: separate; }

.btn-group-justified > .btn, .btn-group-justified > .btn-group { display: t=
able-cell; float: none; width: 1%; }

.btn-group-justified > .btn-group .btn { width: 100%; }

.btn-group-justified > .btn-group .dropdown-menu { left: auto; }

[data-toggle=3D"buttons"] > .btn input[type=3D"checkbox"], [data-toggle=3D"=
buttons"] > .btn input[type=3D"radio"], [data-toggle=3D"buttons"] > .btn-gr=
oup > .btn input[type=3D"checkbox"], [data-toggle=3D"buttons"] > .btn-group=
 > .btn input[type=3D"radio"] { position: absolute; clip: rect(0px, 0px, 0p=
x, 0px); pointer-events: none; }

.input-group { position: relative; display: table; border-collapse: separat=
e; }

.input-group[class*=3D"col-"] { float: none; padding-right: 0px; padding-le=
ft: 0px; }

.input-group .form-control { position: relative; z-index: 2; float: left; w=
idth: 100%; margin-bottom: 0px; }

.input-group .form-control:focus { z-index: 3; }

.input-group-lg > .form-control, .input-group-lg > .input-group-addon, .inp=
ut-group-lg > .input-group-btn > .btn { height: 46px; padding: 10px 16px; f=
ont-size: 18px; line-height: 1.33333; border-radius: 6px; }

select.input-group-lg > .form-control, select.input-group-lg > .input-group=
-addon, select.input-group-lg > .input-group-btn > .btn { height: 46px; lin=
e-height: 46px; }

select[multiple].input-group-lg > .form-control, select[multiple].input-gro=
up-lg > .input-group-addon, select[multiple].input-group-lg > .input-group-=
btn > .btn, textarea.input-group-lg > .form-control, textarea.input-group-l=
g > .input-group-addon, textarea.input-group-lg > .input-group-btn > .btn {=
 height: auto; }

.input-group-sm > .form-control, .input-group-sm > .input-group-addon, .inp=
ut-group-sm > .input-group-btn > .btn { height: 30px; padding: 5px 10px; fo=
nt-size: 12px; line-height: 1.5; border-radius: 3px; }

select.input-group-sm > .form-control, select.input-group-sm > .input-group=
-addon, select.input-group-sm > .input-group-btn > .btn { height: 30px; lin=
e-height: 30px; }

select[multiple].input-group-sm > .form-control, select[multiple].input-gro=
up-sm > .input-group-addon, select[multiple].input-group-sm > .input-group-=
btn > .btn, textarea.input-group-sm > .form-control, textarea.input-group-s=
m > .input-group-addon, textarea.input-group-sm > .input-group-btn > .btn {=
 height: auto; }

.input-group .form-control, .input-group-addon, .input-group-btn { display:=
 table-cell; }

.input-group .form-control:not(:first-child):not(:last-child), .input-group=
-addon:not(:first-child):not(:last-child), .input-group-btn:not(:first-chil=
d):not(:last-child) { border-radius: 0px; }

.input-group-addon, .input-group-btn { width: 1%; white-space: nowrap; vert=
ical-align: middle; }

.input-group-addon { padding: 6px 12px; font-size: 14px; font-weight: 400; =
line-height: 1; color: rgb(85, 85, 85); text-align: center; background-colo=
r: rgb(238, 238, 238); border: 1px solid rgb(204, 204, 204); border-radius:=
 4px; }

.input-group-addon.input-sm { padding: 5px 10px; font-size: 12px; border-ra=
dius: 3px; }

.input-group-addon.input-lg { padding: 10px 16px; font-size: 18px; border-r=
adius: 6px; }

.input-group-addon input[type=3D"checkbox"], .input-group-addon input[type=
=3D"radio"] { margin-top: 0px; }

.input-group .form-control:first-child, .input-group-addon:first-child, .in=
put-group-btn:first-child > .btn, .input-group-btn:first-child > .btn-group=
 > .btn, .input-group-btn:first-child > .dropdown-toggle, .input-group-btn:=
last-child > .btn-group:not(:last-child) > .btn, .input-group-btn:last-chil=
d > .btn:not(:last-child):not(.dropdown-toggle) { border-top-right-radius: =
0px; border-bottom-right-radius: 0px; }

.input-group-addon:first-child { border-right: 0px; }

.input-group .form-control:last-child, .input-group-addon:last-child, .inpu=
t-group-btn:first-child > .btn-group:not(:first-child) > .btn, .input-group=
-btn:first-child > .btn:not(:first-child), .input-group-btn:last-child > .b=
tn, .input-group-btn:last-child > .btn-group > .btn, .input-group-btn:last-=
child > .dropdown-toggle { border-top-left-radius: 0px; border-bottom-left-=
radius: 0px; }

.input-group-addon:last-child { border-left: 0px; }

.input-group-btn { position: relative; font-size: 0px; white-space: nowrap;=
 }

.input-group-btn > .btn { position: relative; }

.input-group-btn > .btn + .btn { margin-left: -1px; }

.input-group-btn > .btn:active, .input-group-btn > .btn:focus, .input-group=
-btn > .btn:hover { z-index: 2; }

.input-group-btn:first-child > .btn, .input-group-btn:first-child > .btn-gr=
oup { margin-right: -1px; }

.input-group-btn:last-child > .btn, .input-group-btn:last-child > .btn-grou=
p { z-index: 2; margin-left: -1px; }

.nav { padding-left: 0px; margin-bottom: 0px; list-style: none; }

.nav > li { position: relative; display: block; }

.nav > li > a { position: relative; display: block; padding: 10px 15px; }

.nav > li > a:focus, .nav > li > a:hover { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.nav > li.disabled > a { color: rgb(119, 119, 119); }

.nav > li.disabled > a:focus, .nav > li.disabled > a:hover { color: rgb(119=
, 119, 119); text-decoration: none; cursor: not-allowed; background-color: =
transparent; }

.nav .open > a, .nav .open > a:focus, .nav .open > a:hover { background-col=
or: rgb(238, 238, 238); border-color: rgb(51, 122, 183); }

.nav .nav-divider { height: 1px; margin: 9px 0px; overflow: hidden; backgro=
und-color: rgb(229, 229, 229); }

.nav > li > a > img { max-width: none; }

.nav-tabs { border-bottom: 1px solid rgb(221, 221, 221); }

.nav-tabs > li { float: left; margin-bottom: -1px; }

.nav-tabs > li > a { margin-right: 2px; line-height: 1.42857; border: 1px s=
olid transparent; border-radius: 4px 4px 0px 0px; }

.nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(221, 221, 221); }

.nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.=
active > a:hover { color: rgb(85, 85, 85); cursor: default; background-colo=
r: rgb(255, 255, 255); border-width: 1px; border-style: solid; border-color=
: rgb(221, 221, 221) rgb(221, 221, 221) transparent; border-image: initial;=
 }

.nav-tabs.nav-justified { width: 100%; border-bottom: 0px; }

.nav-tabs.nav-justified > li { float: none; }

.nav-tabs.nav-justified > li > a { margin-bottom: 5px; text-align: center; =
}

.nav-tabs.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto;=
 }

@media (min-width: 768px) {
  .nav-tabs.nav-justified > li { display: table-cell; width: 1%; }
  .nav-tabs.nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs.nav-justified > li > a { margin-right: 0px; border-radius: 4px; }

.nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active > =
a:focus, .nav-tabs.nav-justified > .active > a:hover { border: 1px solid rg=
b(221, 221, 221); }

@media (min-width: 768px) {
  .nav-tabs.nav-justified > li > a { border-bottom: 1px solid rgb(221, 221,=
 221); border-radius: 4px 4px 0px 0px; }
  .nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active =
> a:focus, .nav-tabs.nav-justified > .active > a:hover { border-bottom-colo=
r: rgb(255, 255, 255); }
}

.nav-pills > li { float: left; }

.nav-pills > li > a { border-radius: 4px; }

.nav-pills > li + li { margin-left: 2px; }

.nav-pills > li.active > a, .nav-pills > li.active > a:focus, .nav-pills > =
li.active > a:hover { color: rgb(255, 255, 255); background-color: rgb(51, =
122, 183); }

.nav-stacked > li { float: none; }

.nav-stacked > li + li { margin-top: 2px; margin-left: 0px; }

.nav-justified { width: 100%; }

.nav-justified > li { float: none; }

.nav-justified > li > a { margin-bottom: 5px; text-align: center; }

.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto; }

@media (min-width: 768px) {
  .nav-justified > li { display: table-cell; width: 1%; }
  .nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs-justified { border-bottom: 0px; }

.nav-tabs-justified > li > a { margin-right: 0px; border-radius: 4px; }

.nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:focus,=
 .nav-tabs-justified > .active > a:hover { border: 1px solid rgb(221, 221, =
221); }

@media (min-width: 768px) {
  .nav-tabs-justified > li > a { border-bottom: 1px solid rgb(221, 221, 221=
); border-radius: 4px 4px 0px 0px; }
  .nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:focu=
s, .nav-tabs-justified > .active > a:hover { border-bottom-color: rgb(255, =
255, 255); }
}

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-left-radius: 0px; b=
order-top-right-radius: 0px; }

.navbar { position: relative; min-height: 50px; margin-bottom: 20px; border=
: 1px solid transparent; }

@media (min-width: 768px) {
  .navbar { border-radius: 4px; }
}

@media (min-width: 768px) {
  .navbar-header { float: left; }
}

.navbar-collapse { padding-right: 15px; padding-left: 15px; overflow-x: vis=
ible; border-top: 1px solid transparent; box-shadow: rgba(255, 255, 255, 0.=
1) 0px 1px 0px inset; }

.navbar-collapse.in { overflow-y: auto; }

@media (min-width: 768px) {
  .navbar-collapse { width: auto; border-top: 0px; box-shadow: none; }
  .navbar-collapse.collapse { padding-bottom: 0px; display: block !importan=
t; height: auto !important; overflow: visible !important; }
  .navbar-collapse.in { overflow-y: visible; }
  .navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse=
, .navbar-static-top .navbar-collapse { padding-right: 0px; padding-left: 0=
px; }
}

.navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse {=
 max-height: 340px; }

@media (max-device-width: 480px) and (orientation: landscape) {
  .navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse=
 { max-height: 200px; }
}

.container-fluid > .navbar-collapse, .container-fluid > .navbar-header, .co=
ntainer > .navbar-collapse, .container > .navbar-header { margin-right: -15=
px; margin-left: -15px; }

@media (min-width: 768px) {
  .container-fluid > .navbar-collapse, .container-fluid > .navbar-header, .=
container > .navbar-collapse, .container > .navbar-header { margin-right: 0=
px; margin-left: 0px; }
}

.navbar-static-top { z-index: 1000; border-width: 0px 0px 1px; }

@media (min-width: 768px) {
  .navbar-static-top { border-radius: 0px; }
}

.navbar-fixed-bottom, .navbar-fixed-top { position: fixed; right: 0px; left=
: 0px; z-index: 1030; }

@media (min-width: 768px) {
  .navbar-fixed-bottom, .navbar-fixed-top { border-radius: 0px; }
}

.navbar-fixed-top { top: 0px; border-width: 0px 0px 1px; }

.navbar-fixed-bottom { bottom: 0px; margin-bottom: 0px; border-width: 1px 0=
px 0px; }

.navbar-brand { float: left; height: 50px; padding: 15px; font-size: 18px; =
line-height: 20px; }

.navbar-brand:focus, .navbar-brand:hover { text-decoration: none; }

.navbar-brand > img { display: block; }

@media (min-width: 768px) {
  .navbar > .container .navbar-brand, .navbar > .container-fluid .navbar-br=
and { margin-left: -15px; }
}

.navbar-toggle { position: relative; float: right; padding: 9px 10px; margi=
n-top: 8px; margin-right: 15px; margin-bottom: 8px; background-color: trans=
parent; background-image: none; border: 1px solid transparent; border-radiu=
s: 4px; }

.navbar-toggle:focus { outline: 0px; }

.navbar-toggle .icon-bar { display: block; width: 22px; height: 2px; border=
-radius: 1px; }

.navbar-toggle .icon-bar + .icon-bar { margin-top: 4px; }

@media (min-width: 768px) {
  .navbar-toggle { display: none; }
}

.navbar-nav { margin: 7.5px -15px; }

.navbar-nav > li > a { padding-top: 10px; padding-bottom: 10px; line-height=
: 20px; }

@media (max-width: 767px) {
  .navbar-nav .open .dropdown-menu { position: static; float: none; width: =
auto; margin-top: 0px; background-color: transparent; border: 0px; box-shad=
ow: none; }
  .navbar-nav .open .dropdown-menu .dropdown-header, .navbar-nav .open .dro=
pdown-menu > li > a { padding: 5px 15px 5px 25px; }
  .navbar-nav .open .dropdown-menu > li > a { line-height: 20px; }
  .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-nav .open .dropd=
own-menu > li > a:hover { background-image: none; }
}

@media (min-width: 768px) {
  .navbar-nav { float: left; margin: 0px; }
  .navbar-nav > li { float: left; }
  .navbar-nav > li > a { padding-top: 15px; padding-bottom: 15px; }
}

.navbar-form { padding: 10px 15px; margin: 8px -15px; border-top: 1px solid=
 transparent; border-bottom: 1px solid transparent; box-shadow: rgba(255, 2=
55, 255, 0.1) 0px 1px 0px inset, rgba(255, 255, 255, 0.1) 0px 1px 0px; }

@media (min-width: 768px) {
  .navbar-form .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .navbar-form .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .navbar-form .form-control-static { display: inline-block; }
  .navbar-form .input-group { display: inline-table; vertical-align: middle=
; }
  .navbar-form .input-group .form-control, .navbar-form .input-group .input=
-group-addon, .navbar-form .input-group .input-group-btn { width: auto; }
  .navbar-form .input-group > .form-control { width: 100%; }
  .navbar-form .control-label { margin-bottom: 0px; vertical-align: middle;=
 }
  .navbar-form .checkbox, .navbar-form .radio { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; vertical-align: middle; }
  .navbar-form .checkbox label, .navbar-form .radio label { padding-left: 0=
px; }
  .navbar-form .checkbox input[type=3D"checkbox"], .navbar-form .radio inpu=
t[type=3D"radio"] { position: relative; margin-left: 0px; }
  .navbar-form .has-feedback .form-control-feedback { top: 0px; }
}

@media (max-width: 767px) {
  .navbar-form .form-group { margin-bottom: 5px; }
  .navbar-form .form-group:last-child { margin-bottom: 0px; }
}

@media (min-width: 768px) {
  .navbar-form { width: auto; padding-top: 0px; padding-bottom: 0px; margin=
-right: 0px; margin-left: 0px; border: 0px; box-shadow: none; }
}

.navbar-nav > li > .dropdown-menu { margin-top: 0px; border-top-left-radius=
: 0px; border-top-right-radius: 0px; }

.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu { margin-bottom: 0px=
; border-radius: 4px 4px 0px 0px; }

.navbar-btn { margin-top: 8px; margin-bottom: 8px; }

.navbar-btn.btn-sm { margin-top: 10px; margin-bottom: 10px; }

.navbar-btn.btn-xs { margin-top: 14px; margin-bottom: 14px; }

.navbar-text { margin-top: 15px; margin-bottom: 15px; }

@media (min-width: 768px) {
  .navbar-text { float: left; margin-right: 15px; margin-left: 15px; }
}

@media (min-width: 768px) {
  .navbar-left { float: left !important; }
  .navbar-right { float: right !important; margin-right: -15px; }
  .navbar-right ~ .navbar-right { margin-right: 0px; }
}

.navbar-default { background-color: rgb(248, 248, 248); border-color: rgb(2=
31, 231, 231); }

.navbar-default .navbar-brand { color: rgb(119, 119, 119); }

.navbar-default .navbar-brand:focus, .navbar-default .navbar-brand:hover { =
color: rgb(94, 94, 94); background-color: transparent; }

.navbar-default .navbar-text { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a:focus, .navbar-default .navbar-nav > l=
i > a:hover { color: rgb(51, 51, 51); background-color: transparent; }

.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .a=
ctive > a:focus, .navbar-default .navbar-nav > .active > a:hover { color: r=
gb(85, 85, 85); background-color: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > =
.disabled > a:focus, .navbar-default .navbar-nav > .disabled > a:hover { co=
lor: rgb(204, 204, 204); background-color: transparent; }

.navbar-default .navbar-toggle { border-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle:focus, .navbar-default .navbar-toggle:hover =
{ background-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle .icon-bar { background-color: rgb(136, 136, =
136); }

.navbar-default .navbar-collapse, .navbar-default .navbar-form { border-col=
or: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .ope=
n > a:focus, .navbar-default .navbar-nav > .open > a:hover { color: rgb(85,=
 85, 85); background-color: rgb(231, 231, 231); }

@media (max-width: 767px) {
  .navbar-default .navbar-nav .open .dropdown-menu > li > a { color: rgb(11=
9, 119, 119); }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-=
default .navbar-nav .open .dropdown-menu > li > a:hover { color: rgb(51, 51=
, 51); background-color: transparent; }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-d=
efault .navbar-nav .open .dropdown-menu > .active > a:focus, .navbar-defaul=
t .navbar-nav .open .dropdown-menu > .active > a:hover { color: rgb(85, 85,=
 85); background-color: rgb(231, 231, 231); }
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-default .navbar-nav .open .dropdown-menu > .disabled > a:focus, .navbar-de=
fault .navbar-nav .open .dropdown-menu > .disabled > a:hover { color: rgb(2=
04, 204, 204); background-color: transparent; }
}

.navbar-default .navbar-link { color: rgb(119, 119, 119); }

.navbar-default .navbar-link:hover { color: rgb(51, 51, 51); }

.navbar-default .btn-link { color: rgb(119, 119, 119); }

.navbar-default .btn-link:focus, .navbar-default .btn-link:hover { color: r=
gb(51, 51, 51); }

.navbar-default .btn-link[disabled]:focus, .navbar-default .btn-link[disabl=
ed]:hover, fieldset[disabled] .navbar-default .btn-link:focus, fieldset[dis=
abled] .navbar-default .btn-link:hover { color: rgb(204, 204, 204); }

.navbar-inverse { background-color: rgb(34, 34, 34); border-color: rgb(8, 8=
, 8); }

.navbar-inverse .navbar-brand { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-brand:focus, .navbar-inverse .navbar-brand:hover { =
color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-text { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-nav > li > a { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-nav > li > a:focus, .navbar-inverse .navbar-nav > l=
i > a:hover { color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .a=
ctive > a:focus, .navbar-inverse .navbar-nav > .active > a:hover { color: r=
gb(255, 255, 255); background-color: rgb(8, 8, 8); }

.navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > =
.disabled > a:focus, .navbar-inverse .navbar-nav > .disabled > a:hover { co=
lor: rgb(68, 68, 68); background-color: transparent; }

.navbar-inverse .navbar-toggle { border-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle:focus, .navbar-inverse .navbar-toggle:hover =
{ background-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle .icon-bar { background-color: rgb(255, 255, =
255); }

.navbar-inverse .navbar-collapse, .navbar-inverse .navbar-form { border-col=
or: rgb(16, 16, 16); }

.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .ope=
n > a:focus, .navbar-inverse .navbar-nav > .open > a:hover { color: rgb(255=
, 255, 255); background-color: rgb(8, 8, 8); }

@media (max-width: 767px) {
  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header { bor=
der-color: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu .divider { background-co=
lor: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a { color: rgb(15=
7, 157, 157); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-=
inverse .navbar-nav .open .dropdown-menu > li > a:hover { color: rgb(255, 2=
55, 255); background-color: transparent; }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-i=
nverse .navbar-nav .open .dropdown-menu > .active > a:focus, .navbar-invers=
e .navbar-nav .open .dropdown-menu > .active > a:hover { color: rgb(255, 25=
5, 255); background-color: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-inverse .navbar-nav .open .dropdown-menu > .disabled > a:focus, .navbar-in=
verse .navbar-nav .open .dropdown-menu > .disabled > a:hover { color: rgb(6=
8, 68, 68); background-color: transparent; }
}

.navbar-inverse .navbar-link { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-link:hover { color: rgb(255, 255, 255); }

.navbar-inverse .btn-link { color: rgb(157, 157, 157); }

.navbar-inverse .btn-link:focus, .navbar-inverse .btn-link:hover { color: r=
gb(255, 255, 255); }

.navbar-inverse .btn-link[disabled]:focus, .navbar-inverse .btn-link[disabl=
ed]:hover, fieldset[disabled] .navbar-inverse .btn-link:focus, fieldset[dis=
abled] .navbar-inverse .btn-link:hover { color: rgb(68, 68, 68); }

.breadcrumb { padding: 8px 15px; margin-bottom: 20px; list-style: none; bac=
kground-color: rgb(245, 245, 245); border-radius: 4px; }

.breadcrumb > li { display: inline-block; }

.breadcrumb > li + li::before { padding: 0px 5px; color: rgb(204, 204, 204)=
; content: "/=C2=A0"; }

.breadcrumb > .active { color: rgb(119, 119, 119); }

.pagination { display: inline-block; padding-left: 0px; margin: 20px 0px; b=
order-radius: 4px; }

.pagination > li { display: inline; }

.pagination > li > a, .pagination > li > span { position: relative; float: =
left; padding: 6px 12px; margin-left: -1px; line-height: 1.42857; color: rg=
b(51, 122, 183); text-decoration: none; background-color: rgb(255, 255, 255=
); border: 1px solid rgb(221, 221, 221); }

.pagination > li:first-child > a, .pagination > li:first-child > span { mar=
gin-left: 0px; border-top-left-radius: 4px; border-bottom-left-radius: 4px;=
 }

.pagination > li:last-child > a, .pagination > li:last-child > span { borde=
r-top-right-radius: 4px; border-bottom-right-radius: 4px; }

.pagination > li > a:focus, .pagination > li > a:hover, .pagination > li > =
span:focus, .pagination > li > span:hover { z-index: 2; color: rgb(35, 82, =
124); background-color: rgb(238, 238, 238); border-color: rgb(221, 221, 221=
); }

.pagination > .active > a, .pagination > .active > a:focus, .pagination > .=
active > a:hover, .pagination > .active > span, .pagination > .active > spa=
n:focus, .pagination > .active > span:hover { z-index: 3; color: rgb(255, 2=
55, 255); cursor: default; background-color: rgb(51, 122, 183); border-colo=
r: rgb(51, 122, 183); }

.pagination > .disabled > a, .pagination > .disabled > a:focus, .pagination=
 > .disabled > a:hover, .pagination > .disabled > span, .pagination > .disa=
bled > span:focus, .pagination > .disabled > span:hover { color: rgb(119, 1=
19, 119); cursor: not-allowed; background-color: rgb(255, 255, 255); border=
-color: rgb(221, 221, 221); }

.pagination-lg > li > a, .pagination-lg > li > span { padding: 10px 16px; f=
ont-size: 18px; line-height: 1.33333; }

.pagination-lg > li:first-child > a, .pagination-lg > li:first-child > span=
 { border-top-left-radius: 6px; border-bottom-left-radius: 6px; }

.pagination-lg > li:last-child > a, .pagination-lg > li:last-child > span {=
 border-top-right-radius: 6px; border-bottom-right-radius: 6px; }

.pagination-sm > li > a, .pagination-sm > li > span { padding: 5px 10px; fo=
nt-size: 12px; line-height: 1.5; }

.pagination-sm > li:first-child > a, .pagination-sm > li:first-child > span=
 { border-top-left-radius: 3px; border-bottom-left-radius: 3px; }

.pagination-sm > li:last-child > a, .pagination-sm > li:last-child > span {=
 border-top-right-radius: 3px; border-bottom-right-radius: 3px; }

.pager { padding-left: 0px; margin: 20px 0px; text-align: center; list-styl=
e: none; }

.pager li { display: inline; }

.pager li > a, .pager li > span { display: inline-block; padding: 5px 14px;=
 background-color: rgb(255, 255, 255); border: 1px solid rgb(221, 221, 221)=
; border-radius: 15px; }

.pager li > a:focus, .pager li > a:hover { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.pager .next > a, .pager .next > span { float: right; }

.pager .previous > a, .pager .previous > span { float: left; }

.pager .disabled > a, .pager .disabled > a:focus, .pager .disabled > a:hove=
r, .pager .disabled > span { color: rgb(119, 119, 119); cursor: not-allowed=
; background-color: rgb(255, 255, 255); }

.label { display: inline; padding: 0.2em 0.6em 0.3em; font-size: 75%; font-=
weight: 700; line-height: 1; color: rgb(255, 255, 255); text-align: center;=
 white-space: nowrap; vertical-align: baseline; border-radius: 0.25em; }

a.label:focus, a.label:hover { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.label:empty { display: none; }

.btn .label { position: relative; top: -1px; }

.label-default { background-color: rgb(119, 119, 119); }

.label-default[href]:focus, .label-default[href]:hover { background-color: =
rgb(94, 94, 94); }

.label-primary { background-color: rgb(51, 122, 183); }

.label-primary[href]:focus, .label-primary[href]:hover { background-color: =
rgb(40, 96, 144); }

.label-success { background-color: rgb(92, 184, 92); }

.label-success[href]:focus, .label-success[href]:hover { background-color: =
rgb(68, 157, 68); }

.label-info { background-color: rgb(91, 192, 222); }

.label-info[href]:focus, .label-info[href]:hover { background-color: rgb(49=
, 176, 213); }

.label-warning { background-color: rgb(240, 173, 78); }

.label-warning[href]:focus, .label-warning[href]:hover { background-color: =
rgb(236, 151, 31); }

.label-danger { background-color: rgb(217, 83, 79); }

.label-danger[href]:focus, .label-danger[href]:hover { background-color: rg=
b(201, 48, 44); }

.badge { display: inline-block; min-width: 10px; padding: 3px 7px; font-siz=
e: 12px; font-weight: 700; line-height: 1; color: rgb(255, 255, 255); text-=
align: center; white-space: nowrap; vertical-align: middle; background-colo=
r: rgb(119, 119, 119); border-radius: 10px; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.btn-group-xs > .btn .badge, .btn-xs .badge { top: 0px; padding: 1px 5px; }

a.badge:focus, a.badge:hover { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.list-group-item.active > .badge, .nav-pills > .active > a > .badge { color=
: rgb(51, 122, 183); background-color: rgb(255, 255, 255); }

.list-group-item > .badge { float: right; }

.list-group-item > .badge + .badge { margin-right: 5px; }

.nav-pills > li > a > .badge { margin-left: 3px; }

.jumbotron { padding-top: 30px; padding-bottom: 30px; margin-bottom: 30px; =
color: inherit; background-color: rgb(238, 238, 238); }

.jumbotron .h1, .jumbotron h1 { color: inherit; }

.jumbotron p { margin-bottom: 15px; font-size: 21px; font-weight: 200; }

.jumbotron > hr { border-top-color: rgb(213, 213, 213); }

.container .jumbotron, .container-fluid .jumbotron { padding-right: 15px; p=
adding-left: 15px; border-radius: 6px; }

.jumbotron .container { max-width: 100%; }

@media screen and (min-width: 768px) {
  .jumbotron { padding-top: 48px; padding-bottom: 48px; }
  .container .jumbotron, .container-fluid .jumbotron { padding-right: 60px;=
 padding-left: 60px; }
  .jumbotron .h1, .jumbotron h1 { font-size: 63px; }
}

.thumbnail { display: block; padding: 4px; margin-bottom: 20px; line-height=
: 1.42857; background-color: rgb(255, 255, 255); border: 1px solid rgb(221,=
 221, 221); border-radius: 4px; transition: border 0.2s ease-in-out; }

.thumbnail a > img, .thumbnail > img { margin-right: auto; margin-left: aut=
o; }

a.thumbnail.active, a.thumbnail:focus, a.thumbnail:hover { border-color: rg=
b(51, 122, 183); }

.thumbnail .caption { padding: 9px; color: rgb(51, 51, 51); }

.alert { padding: 15px; margin-bottom: 20px; border: 1px solid transparent;=
 border-radius: 4px; }

.alert h4 { margin-top: 0px; color: inherit; }

.alert .alert-link { font-weight: 700; }

.alert > p, .alert > ul { margin-bottom: 0px; }

.alert > p + p { margin-top: 5px; }

.alert-dismissable, .alert-dismissible { padding-right: 35px; }

.alert-dismissable .close, .alert-dismissible .close { position: relative; =
top: -2px; right: -21px; color: inherit; }

.alert-success { color: rgb(60, 118, 61); background-color: rgb(223, 240, 2=
16); border-color: rgb(214, 233, 198); }

.alert-success hr { border-top-color: rgb(201, 226, 179); }

.alert-success .alert-link { color: rgb(43, 84, 44); }

.alert-info { color: rgb(49, 112, 143); background-color: rgb(217, 237, 247=
); border-color: rgb(188, 232, 241); }

.alert-info hr { border-top-color: rgb(166, 225, 236); }

.alert-info .alert-link { color: rgb(36, 82, 105); }

.alert-warning { color: rgb(138, 109, 59); background-color: rgb(252, 248, =
227); border-color: rgb(250, 235, 204); }

.alert-warning hr { border-top-color: rgb(247, 225, 181); }

.alert-warning .alert-link { color: rgb(102, 81, 44); }

.alert-danger { color: rgb(169, 68, 66); background-color: rgb(242, 222, 22=
2); border-color: rgb(235, 204, 209); }

.alert-danger hr { border-top-color: rgb(228, 185, 192); }

.alert-danger .alert-link { color: rgb(132, 53, 52); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

.progress { height: 20px; margin-bottom: 20px; overflow: hidden; background=
-color: rgb(245, 245, 245); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0=
.1) 0px 1px 2px inset; }

.progress-bar { float: left; width: 0px; height: 100%; font-size: 12px; lin=
e-height: 20px; color: rgb(255, 255, 255); text-align: center; background-c=
olor: rgb(51, 122, 183); box-shadow: rgba(0, 0, 0, 0.15) 0px -1px 0px inset=
; transition: width 0.6s; }

.progress-bar-striped, .progress-striped .progress-bar { background-image: =
linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, tran=
sparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, =
transparent 75%, transparent); background-size: 40px 40px; }

.progress-bar.active, .progress.active .progress-bar { animation: 2s linear=
 0s infinite normal none running progress-bar-stripes; }

.progress-bar-success { background-color: rgb(92, 184, 92); }

.progress-striped .progress-bar-success { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-info { background-color: rgb(91, 192, 222); }

.progress-striped .progress-bar-info { background-image: linear-gradient(45=
deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(=
255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, t=
ransparent); }

.progress-bar-warning { background-color: rgb(240, 173, 78); }

.progress-striped .progress-bar-warning { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-danger { background-color: rgb(217, 83, 79); }

.progress-striped .progress-bar-danger { background-image: linear-gradient(=
45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgb=
a(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%,=
 transparent); }

.media { margin-top: 15px; }

.media:first-child { margin-top: 0px; }

.media, .media-body { overflow: hidden; zoom: 1; }

.media-body { width: 10000px; }

.media-object { display: block; }

.media-object.img-thumbnail { max-width: none; }

.media-right, .media > .pull-right { padding-left: 10px; }

.media-left, .media > .pull-left { padding-right: 10px; }

.media-body, .media-left, .media-right { display: table-cell; vertical-alig=
n: top; }

.media-middle { vertical-align: middle; }

.media-bottom { vertical-align: bottom; }

.media-heading { margin-top: 0px; margin-bottom: 5px; }

.media-list { padding-left: 0px; list-style: none; }

.list-group { padding-left: 0px; margin-bottom: 20px; }

.list-group-item { position: relative; display: block; padding: 10px 15px; =
margin-bottom: -1px; background-color: rgb(255, 255, 255); border: 1px soli=
d rgb(221, 221, 221); }

.list-group-item:first-child { border-top-left-radius: 4px; border-top-righ=
t-radius: 4px; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 4px; border-bottom-left-radius: 4px; }

a.list-group-item, button.list-group-item { color: rgb(85, 85, 85); }

a.list-group-item .list-group-item-heading, button.list-group-item .list-gr=
oup-item-heading { color: rgb(51, 51, 51); }

a.list-group-item:focus, a.list-group-item:hover, button.list-group-item:fo=
cus, button.list-group-item:hover { color: rgb(85, 85, 85); text-decoration=
: none; background-color: rgb(245, 245, 245); }

button.list-group-item { width: 100%; text-align: left; }

.list-group-item.disabled, .list-group-item.disabled:focus, .list-group-ite=
m.disabled:hover { color: rgb(119, 119, 119); cursor: not-allowed; backgrou=
nd-color: rgb(238, 238, 238); }

.list-group-item.disabled .list-group-item-heading, .list-group-item.disabl=
ed:focus .list-group-item-heading, .list-group-item.disabled:hover .list-gr=
oup-item-heading { color: inherit; }

.list-group-item.disabled .list-group-item-text, .list-group-item.disabled:=
focus .list-group-item-text, .list-group-item.disabled:hover .list-group-it=
em-text { color: rgb(119, 119, 119); }

.list-group-item.active, .list-group-item.active:focus, .list-group-item.ac=
tive:hover { z-index: 2; color: rgb(255, 255, 255); background-color: rgb(5=
1, 122, 183); border-color: rgb(51, 122, 183); }

.list-group-item.active .list-group-item-heading, .list-group-item.active .=
list-group-item-heading > .small, .list-group-item.active .list-group-item-=
heading > small, .list-group-item.active:focus .list-group-item-heading, .l=
ist-group-item.active:focus .list-group-item-heading > .small, .list-group-=
item.active:focus .list-group-item-heading > small, .list-group-item.active=
:hover .list-group-item-heading, .list-group-item.active:hover .list-group-=
item-heading > .small, .list-group-item.active:hover .list-group-item-headi=
ng > small { color: inherit; }

.list-group-item.active .list-group-item-text, .list-group-item.active:focu=
s .list-group-item-text, .list-group-item.active:hover .list-group-item-tex=
t { color: rgb(199, 221, 239); }

.list-group-item-success { color: rgb(60, 118, 61); background-color: rgb(2=
23, 240, 216); }

a.list-group-item-success, button.list-group-item-success { color: rgb(60, =
118, 61); }

a.list-group-item-success .list-group-item-heading, button.list-group-item-=
success .list-group-item-heading { color: inherit; }

a.list-group-item-success:focus, a.list-group-item-success:hover, button.li=
st-group-item-success:focus, button.list-group-item-success:hover { color: =
rgb(60, 118, 61); background-color: rgb(208, 233, 198); }

a.list-group-item-success.active, a.list-group-item-success.active:focus, a=
.list-group-item-success.active:hover, button.list-group-item-success.activ=
e, button.list-group-item-success.active:focus, button.list-group-item-succ=
ess.active:hover { color: rgb(255, 255, 255); background-color: rgb(60, 118=
, 61); border-color: rgb(60, 118, 61); }

.list-group-item-info { color: rgb(49, 112, 143); background-color: rgb(217=
, 237, 247); }

a.list-group-item-info, button.list-group-item-info { color: rgb(49, 112, 1=
43); }

a.list-group-item-info .list-group-item-heading, button.list-group-item-inf=
o .list-group-item-heading { color: inherit; }

a.list-group-item-info:focus, a.list-group-item-info:hover, button.list-gro=
up-item-info:focus, button.list-group-item-info:hover { color: rgb(49, 112,=
 143); background-color: rgb(196, 227, 243); }

a.list-group-item-info.active, a.list-group-item-info.active:focus, a.list-=
group-item-info.active:hover, button.list-group-item-info.active, button.li=
st-group-item-info.active:focus, button.list-group-item-info.active:hover {=
 color: rgb(255, 255, 255); background-color: rgb(49, 112, 143); border-col=
or: rgb(49, 112, 143); }

.list-group-item-warning { color: rgb(138, 109, 59); background-color: rgb(=
252, 248, 227); }

a.list-group-item-warning, button.list-group-item-warning { color: rgb(138,=
 109, 59); }

a.list-group-item-warning .list-group-item-heading, button.list-group-item-=
warning .list-group-item-heading { color: inherit; }

a.list-group-item-warning:focus, a.list-group-item-warning:hover, button.li=
st-group-item-warning:focus, button.list-group-item-warning:hover { color: =
rgb(138, 109, 59); background-color: rgb(250, 242, 204); }

a.list-group-item-warning.active, a.list-group-item-warning.active:focus, a=
.list-group-item-warning.active:hover, button.list-group-item-warning.activ=
e, button.list-group-item-warning.active:focus, button.list-group-item-warn=
ing.active:hover { color: rgb(255, 255, 255); background-color: rgb(138, 10=
9, 59); border-color: rgb(138, 109, 59); }

.list-group-item-danger { color: rgb(169, 68, 66); background-color: rgb(24=
2, 222, 222); }

a.list-group-item-danger, button.list-group-item-danger { color: rgb(169, 6=
8, 66); }

a.list-group-item-danger .list-group-item-heading, button.list-group-item-d=
anger .list-group-item-heading { color: inherit; }

a.list-group-item-danger:focus, a.list-group-item-danger:hover, button.list=
-group-item-danger:focus, button.list-group-item-danger:hover { color: rgb(=
169, 68, 66); background-color: rgb(235, 204, 204); }

a.list-group-item-danger.active, a.list-group-item-danger.active:focus, a.l=
ist-group-item-danger.active:hover, button.list-group-item-danger.active, b=
utton.list-group-item-danger.active:focus, button.list-group-item-danger.ac=
tive:hover { color: rgb(255, 255, 255); background-color: rgb(169, 68, 66);=
 border-color: rgb(169, 68, 66); }

.list-group-item-heading { margin-top: 0px; margin-bottom: 5px; }

.list-group-item-text { margin-bottom: 0px; line-height: 1.3; }

.panel { margin-bottom: 20px; background-color: rgb(255, 255, 255); border:=
 1px solid transparent; border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.05)=
 0px 1px 1px; }

.panel-body { padding: 15px; }

.panel-heading { padding: 10px 15px; border-bottom: 1px solid transparent; =
border-top-left-radius: 3px; border-top-right-radius: 3px; }

.panel-heading > .dropdown .dropdown-toggle { color: inherit; }

.panel-title { margin-top: 0px; margin-bottom: 0px; font-size: 16px; color:=
 inherit; }

.panel-title > .small, .panel-title > .small > a, .panel-title > a, .panel-=
title > small, .panel-title > small > a { color: inherit; }

.panel-footer { padding: 10px 15px; background-color: rgb(245, 245, 245); b=
order-top: 1px solid rgb(221, 221, 221); border-bottom-right-radius: 3px; b=
order-bottom-left-radius: 3px; }

.panel > .list-group, .panel > .panel-collapse > .list-group { margin-botto=
m: 0px; }

.panel > .list-group .list-group-item, .panel > .panel-collapse > .list-gro=
up .list-group-item { border-width: 1px 0px; border-radius: 0px; }

.panel > .list-group:first-child .list-group-item:first-child, .panel > .pa=
nel-collapse > .list-group:first-child .list-group-item:first-child { borde=
r-top: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; }

.panel > .list-group:last-child .list-group-item:last-child, .panel > .pane=
l-collapse > .list-group:last-child .list-group-item:last-child { border-bo=
ttom: 0px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;=
 }

.panel > .panel-heading + .panel-collapse > .list-group .list-group-item:fi=
rst-child { border-top-left-radius: 0px; border-top-right-radius: 0px; }

.panel-heading + .list-group .list-group-item:first-child { border-top-widt=
h: 0px; }

.list-group + .panel-footer { border-top-width: 0px; }

.panel > .panel-collapse > .table, .panel > .table, .panel > .table-respons=
ive > .table { margin-bottom: 0px; }

.panel > .panel-collapse > .table caption, .panel > .table caption, .panel =
> .table-responsive > .table caption { padding-right: 15px; padding-left: 1=
5px; }

.panel > .table-responsive:first-child > .table:first-child, .panel > .tabl=
e:first-child { border-top-left-radius: 3px; border-top-right-radius: 3px; =
}

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child, .panel > .table-responsive:first-child > .table:firs=
t-child > thead:first-child > tr:first-child, .panel > .table:first-child >=
 tbody:first-child > tr:first-child, .panel > .table:first-child > thead:fi=
rst-child > tr:first-child { border-top-left-radius: 3px; border-top-right-=
radius: 3px; }

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child td:first-child, .panel > .table-responsive:first-chil=
d > .table:first-child > tbody:first-child > tr:first-child th:first-child,=
 .panel > .table-responsive:first-child > .table:first-child > thead:first-=
child > tr:first-child td:first-child, .panel > .table-responsive:first-chi=
ld > .table:first-child > thead:first-child > tr:first-child th:first-child=
, .panel > .table:first-child > tbody:first-child > tr:first-child td:first=
-child, .panel > .table:first-child > tbody:first-child > tr:first-child th=
:first-child, .panel > .table:first-child > thead:first-child > tr:first-ch=
ild td:first-child, .panel > .table:first-child > thead:first-child > tr:fi=
rst-child th:first-child { border-top-left-radius: 3px; }

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child td:last-child, .panel > .table-responsive:first-child=
 > .table:first-child > tbody:first-child > tr:first-child th:last-child, .=
panel > .table-responsive:first-child > .table:first-child > thead:first-ch=
ild > tr:first-child td:last-child, .panel > .table-responsive:first-child =
> .table:first-child > thead:first-child > tr:first-child th:last-child, .p=
anel > .table:first-child > tbody:first-child > tr:first-child td:last-chil=
d, .panel > .table:first-child > tbody:first-child > tr:first-child th:last=
-child, .panel > .table:first-child > thead:first-child > tr:first-child td=
:last-child, .panel > .table:first-child > thead:first-child > tr:first-chi=
ld th:last-child { border-top-right-radius: 3px; }

.panel > .table-responsive:last-child > .table:last-child, .panel > .table:=
last-child { border-bottom-right-radius: 3px; border-bottom-left-radius: 3p=
x; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child, .panel > .table-responsive:last-child > .table:last-chil=
d > tfoot:last-child > tr:last-child, .panel > .table:last-child > tbody:la=
st-child > tr:last-child, .panel > .table:last-child > tfoot:last-child > t=
r:last-child { border-bottom-right-radius: 3px; border-bottom-left-radius: =
3px; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child td:first-child, .panel > .table-responsive:last-child > .=
table:last-child > tbody:last-child > tr:last-child th:first-child, .panel =
> .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:=
last-child td:first-child, .panel > .table-responsive:last-child > .table:l=
ast-child > tfoot:last-child > tr:last-child th:first-child, .panel > .tabl=
e:last-child > tbody:last-child > tr:last-child td:first-child, .panel > .t=
able:last-child > tbody:last-child > tr:last-child th:first-child, .panel >=
 .table:last-child > tfoot:last-child > tr:last-child td:first-child, .pane=
l > .table:last-child > tfoot:last-child > tr:last-child th:first-child { b=
order-bottom-left-radius: 3px; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child td:last-child, .panel > .table-responsive:last-child > .t=
able:last-child > tbody:last-child > tr:last-child th:last-child, .panel > =
.table-responsive:last-child > .table:last-child > tfoot:last-child > tr:la=
st-child td:last-child, .panel > .table-responsive:last-child > .table:last=
-child > tfoot:last-child > tr:last-child th:last-child, .panel > .table:la=
st-child > tbody:last-child > tr:last-child td:last-child, .panel > .table:=
last-child > tbody:last-child > tr:last-child th:last-child, .panel > .tabl=
e:last-child > tfoot:last-child > tr:last-child td:last-child, .panel > .ta=
ble:last-child > tfoot:last-child > tr:last-child th:last-child { border-bo=
ttom-right-radius: 3px; }

.panel > .panel-body + .table, .panel > .panel-body + .table-responsive, .p=
anel > .table + .panel-body, .panel > .table-responsive + .panel-body { bor=
der-top: 1px solid rgb(221, 221, 221); }

.panel > .table > tbody:first-child > tr:first-child td, .panel > .table > =
tbody:first-child > tr:first-child th { border-top: 0px; }

.panel > .table-bordered, .panel > .table-responsive > .table-bordered { bo=
rder: 0px; }

.panel > .table-bordered > tbody > tr > td:first-child, .panel > .table-bor=
dered > tbody > tr > th:first-child, .panel > .table-bordered > tfoot > tr =
> td:first-child, .panel > .table-bordered > tfoot > tr > th:first-child, .=
panel > .table-bordered > thead > tr > td:first-child, .panel > .table-bord=
ered > thead > tr > th:first-child, .panel > .table-responsive > .table-bor=
dered > tbody > tr > td:first-child, .panel > .table-responsive > .table-bo=
rdered > tbody > tr > th:first-child, .panel > .table-responsive > .table-b=
ordered > tfoot > tr > td:first-child, .panel > .table-responsive > .table-=
bordered > tfoot > tr > th:first-child, .panel > .table-responsive > .table=
-bordered > thead > tr > td:first-child, .panel > .table-responsive > .tabl=
e-bordered > thead > tr > th:first-child { border-left: 0px; }

.panel > .table-bordered > tbody > tr > td:last-child, .panel > .table-bord=
ered > tbody > tr > th:last-child, .panel > .table-bordered > tfoot > tr > =
td:last-child, .panel > .table-bordered > tfoot > tr > th:last-child, .pane=
l > .table-bordered > thead > tr > td:last-child, .panel > .table-bordered =
> thead > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > th:last-child { border-right: 0px; }

.panel > .table-bordered > tbody > tr:first-child > td, .panel > .table-bor=
dered > tbody > tr:first-child > th, .panel > .table-bordered > thead > tr:=
first-child > td, .panel > .table-bordered > thead > tr:first-child > th, .=
panel > .table-responsive > .table-bordered > tbody > tr:first-child > td, =
.panel > .table-responsive > .table-bordered > tbody > tr:first-child > th,=
 .panel > .table-responsive > .table-bordered > thead > tr:first-child > td=
, .panel > .table-responsive > .table-bordered > thead > tr:first-child > t=
h { border-bottom: 0px; }

.panel > .table-bordered > tbody > tr:last-child > td, .panel > .table-bord=
ered > tbody > tr:last-child > th, .panel > .table-bordered > tfoot > tr:la=
st-child > td, .panel > .table-bordered > tfoot > tr:last-child > th, .pane=
l > .table-responsive > .table-bordered > tbody > tr:last-child > td, .pane=
l > .table-responsive > .table-bordered > tbody > tr:last-child > th, .pane=
l > .table-responsive > .table-bordered > tfoot > tr:last-child > td, .pane=
l > .table-responsive > .table-bordered > tfoot > tr:last-child > th { bord=
er-bottom: 0px; }

.panel > .table-responsive { margin-bottom: 0px; border: 0px; }

.panel-group { margin-bottom: 20px; }

.panel-group .panel { margin-bottom: 0px; border-radius: 4px; }

.panel-group .panel + .panel { margin-top: 5px; }

.panel-group .panel-heading { border-bottom: 0px; }

.panel-group .panel-heading + .panel-collapse > .list-group, .panel-group .=
panel-heading + .panel-collapse > .panel-body { border-top: 1px solid rgb(2=
21, 221, 221); }

.panel-group .panel-footer { border-top: 0px; }

.panel-group .panel-footer + .panel-collapse .panel-body { border-bottom: 1=
px solid rgb(221, 221, 221); }

.panel-default { border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading { color: rgb(51, 51, 51); background-color:=
 rgb(245, 245, 245); border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(221, 221, 221); }

.panel-default > .panel-heading .badge { color: rgb(245, 245, 245); backgro=
und-color: rgb(51, 51, 51); }

.panel-default > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(221, 221, 221); }

.panel-primary { border-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading { color: rgb(255, 255, 255); background-col=
or: rgb(51, 122, 183); border-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading .badge { color: rgb(51, 122, 183); backgrou=
nd-color: rgb(255, 255, 255); }

.panel-primary > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(51, 122, 183); }

.panel-success { border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(214, 233, 198); }

.panel-success > .panel-heading .badge { color: rgb(223, 240, 216); backgro=
und-color: rgb(60, 118, 61); }

.panel-success > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(214, 233, 198); }

.panel-info { border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading { color: rgb(49, 112, 143); background-color: =
rgb(217, 237, 247); border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading + .panel-collapse > .panel-body { border-top-c=
olor: rgb(188, 232, 241); }

.panel-info > .panel-heading .badge { color: rgb(217, 237, 247); background=
-color: rgb(49, 112, 143); }

.panel-info > .panel-footer + .panel-collapse > .panel-body { border-bottom=
-color: rgb(188, 232, 241); }

.panel-warning { border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading .badge { color: rgb(252, 248, 227); backgro=
und-color: rgb(138, 109, 59); }

.panel-warning > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(250, 235, 204); }

.panel-danger { border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading { color: rgb(169, 68, 66); background-color:=
 rgb(242, 222, 222); border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading + .panel-collapse > .panel-body { border-top=
-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading .badge { color: rgb(242, 222, 222); backgrou=
nd-color: rgb(169, 68, 66); }

.panel-danger > .panel-footer + .panel-collapse > .panel-body { border-bott=
om-color: rgb(235, 204, 209); }

.embed-responsive { position: relative; display: block; height: 0px; paddin=
g: 0px; overflow: hidden; }

.embed-responsive .embed-responsive-item, .embed-responsive embed, .embed-r=
esponsive iframe, .embed-responsive object, .embed-responsive video { posit=
ion: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;=
 border: 0px; }

.embed-responsive-16by9 { padding-bottom: 56.25%; }

.embed-responsive-4by3 { padding-bottom: 75%; }

.well { min-height: 20px; padding: 19px; margin-bottom: 20px; background-co=
lor: rgb(245, 245, 245); border: 1px solid rgb(227, 227, 227); border-radiu=
s: 4px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; }

.well blockquote { border-color: rgba(0, 0, 0, 0.15); }

.well-lg { padding: 24px; border-radius: 6px; }

.well-sm { padding: 9px; border-radius: 3px; }

.close { float: right; font-size: 21px; font-weight: 700; line-height: 1; c=
olor: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity: 0=
.2; }

.close:focus, .close:hover { color: rgb(0, 0, 0); text-decoration: none; cu=
rsor: pointer; opacity: 0.5; }

button.close { appearance: none; padding: 0px; cursor: pointer; background:=
 0px 0px; border: 0px; }

.modal-open { overflow: hidden; }

.modal { position: fixed; inset: 0px; z-index: 1050; display: none; overflo=
w: hidden; outline: 0px; }

.modal.fade .modal-dialog { transition: transform 0.3s ease-out; transform:=
 translate(0px, -25%); }

.modal.in .modal-dialog { transform: translate(0px, 0px); }

.modal-open .modal { overflow: hidden auto; }

.modal-dialog { position: relative; width: auto; margin: 10px; }

.modal-content { position: relative; background-color: rgb(255, 255, 255); =
background-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-=
radius: 6px; outline: 0px; box-shadow: rgba(0, 0, 0, 0.5) 0px 3px 9px; }

.modal-backdrop { position: fixed; inset: 0px; z-index: 1040; background-co=
lor: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.in { opacity: 0.5; }

.modal-header { padding: 15px; border-bottom: 1px solid rgb(229, 229, 229);=
 }

.modal-header .close { margin-top: -2px; }

.modal-title { margin: 0px; line-height: 1.42857; }

.modal-body { position: relative; padding: 15px; }

.modal-footer { padding: 15px; text-align: right; border-top: 1px solid rgb=
(229, 229, 229); }

.modal-footer .btn + .btn { margin-bottom: 0px; margin-left: 5px; }

.modal-footer .btn-group .btn + .btn { margin-left: -1px; }

.modal-footer .btn-block + .btn-block { margin-left: 0px; }

.modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; h=
eight: 50px; overflow: scroll; }

@media (min-width: 768px) {
  .modal-dialog { width: 600px; margin: 30px auto; }
  .modal-content { box-shadow: rgba(0, 0, 0, 0.5) 0px 5px 15px; }
  .modal-sm { width: 300px; }
}

@media (min-width: 992px) {
  .modal-lg { width: 900px; }
}

.tooltip { position: absolute; z-index: 1070; display: block; font-family: =
"Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 12px; font-style=
: normal; font-weight: 400; line-height: 1.42857; text-align: start; text-d=
ecoration: none; text-shadow: none; text-transform: none; letter-spacing: n=
ormal; word-break: normal; word-spacing: normal; overflow-wrap: normal; whi=
te-space: normal; opacity: 0; line-break: auto; }

.tooltip.in { opacity: 0.9; }

.tooltip.top { padding: 5px 0px; margin-top: -3px; }

.tooltip.right { padding: 0px 5px; margin-left: 3px; }

.tooltip.bottom { padding: 5px 0px; margin-top: 3px; }

.tooltip.left { padding: 0px 5px; margin-left: -3px; }

.tooltip-inner { max-width: 200px; padding: 3px 8px; color: rgb(255, 255, 2=
55); text-align: center; background-color: rgb(0, 0, 0); border-radius: 4px=
; }

.tooltip-arrow { position: absolute; width: 0px; height: 0px; border-color:=
 transparent; border-style: solid; }

.tooltip.top .tooltip-arrow { bottom: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-left .tooltip-arrow { right: 5px; bottom: 0px; margin-bottom: =
-5px; border-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-right .tooltip-arrow { bottom: 0px; left: 5px; margin-bottom: =
-5px; border-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.right .tooltip-arrow { top: 50%; left: 0px; margin-top: -5px; bord=
er-width: 5px 5px 5px 0px; border-right-color: rgb(0, 0, 0); }

.tooltip.left .tooltip-arrow { top: 50%; right: 0px; margin-top: -5px; bord=
er-width: 5px 0px 5px 5px; border-left-color: rgb(0, 0, 0); }

.tooltip.bottom .tooltip-arrow { top: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-left .tooltip-arrow { top: 0px; right: 5px; margin-top: -5p=
x; border-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-right .tooltip-arrow { top: 0px; left: 5px; margin-top: -5p=
x; border-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1060; display:=
 none; max-width: 276px; padding: 1px; font-family: "Helvetica Neue", Helve=
tica, Arial, sans-serif; font-size: 14px; font-style: normal; font-weight: =
400; line-height: 1.42857; text-align: start; text-decoration: none; text-s=
hadow: none; text-transform: none; letter-spacing: normal; word-break: norm=
al; word-spacing: normal; overflow-wrap: normal; white-space: normal; backg=
round-color: rgb(255, 255, 255); background-clip: padding-box; border: 1px =
solid rgba(0, 0, 0, 0.2); border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2=
) 0px 5px 10px; line-break: auto; }

.popover.top { margin-top: -10px; }

.popover.right { margin-left: 10px; }

.popover.bottom { margin-top: 10px; }

.popover.left { margin-left: -10px; }

.popover-title { padding: 8px 14px; margin: 0px; font-size: 14px; backgroun=
d-color: rgb(247, 247, 247); border-bottom: 1px solid rgb(235, 235, 235); b=
order-radius: 5px 5px 0px 0px; }

.popover-content { padding: 9px 14px; }

.popover > .arrow, .popover > .arrow::after { position: absolute; display: =
block; width: 0px; height: 0px; border-color: transparent; border-style: so=
lid; }

.popover > .arrow { border-width: 11px; }

.popover > .arrow::after { content: ""; border-width: 10px; }

.popover.top > .arrow { bottom: -11px; left: 50%; margin-left: -11px; borde=
r-top-color: rgba(0, 0, 0, 0.25); border-bottom-width: 0px; }

.popover.top > .arrow::after { bottom: 1px; margin-left: -10px; content: " =
"; border-top-color: rgb(255, 255, 255); border-bottom-width: 0px; }

.popover.right > .arrow { top: 50%; left: -11px; margin-top: -11px; border-=
right-color: rgba(0, 0, 0, 0.25); border-left-width: 0px; }

.popover.right > .arrow::after { bottom: -10px; left: 1px; content: " "; bo=
rder-right-color: rgb(255, 255, 255); border-left-width: 0px; }

.popover.bottom > .arrow { top: -11px; left: 50%; margin-left: -11px; borde=
r-top-width: 0px; border-bottom-color: rgba(0, 0, 0, 0.25); }

.popover.bottom > .arrow::after { top: 1px; margin-left: -10px; content: " =
"; border-top-width: 0px; border-bottom-color: rgb(255, 255, 255); }

.popover.left > .arrow { top: 50%; right: -11px; margin-top: -11px; border-=
right-width: 0px; border-left-color: rgba(0, 0, 0, 0.25); }

.popover.left > .arrow::after { right: 1px; bottom: -10px; content: " "; bo=
rder-right-width: 0px; border-left-color: rgb(255, 255, 255); }

.carousel { position: relative; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel-inner > .item { position: relative; display: none; transition: le=
ft 0.6s ease-in-out; }

.carousel-inner > .item > a > img, .carousel-inner > .item > img { line-hei=
ght: 1; }

@media (transform-3d), (-webkit-transform-3d) {
  .carousel-inner > .item { transition: transform 0.6s ease-in-out; backfac=
e-visibility: hidden; perspective: 1000px; }
  .carousel-inner > .item.active.right, .carousel-inner > .item.next { left=
: 0px; transform: translate3d(100%, 0px, 0px); }
  .carousel-inner > .item.active.left, .carousel-inner > .item.prev { left:=
 0px; transform: translate3d(-100%, 0px, 0px); }
  .carousel-inner > .item.active, .carousel-inner > .item.next.left, .carou=
sel-inner > .item.prev.right { left: 0px; transform: translate3d(0px, 0px, =
0px); }
}

.carousel-inner > .active, .carousel-inner > .next, .carousel-inner > .prev=
 { display: block; }

.carousel-inner > .active { left: 0px; }

.carousel-inner > .next, .carousel-inner > .prev { position: absolute; top:=
 0px; width: 100%; }

.carousel-inner > .next { left: 100%; }

.carousel-inner > .prev { left: -100%; }

.carousel-inner > .next.left, .carousel-inner > .prev.right { left: 0px; }

.carousel-inner > .active.left { left: -100%; }

.carousel-inner > .active.right { left: 100%; }

.carousel-control { position: absolute; top: 0px; bottom: 0px; left: 0px; w=
idth: 15%; font-size: 20px; color: rgb(255, 255, 255); text-align: center; =
text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; background-color: rgba(0, 0, 0=
, 0); opacity: 0.5; }

.carousel-control.left { background-image: linear-gradient(to right, rgba(0=
, 0, 0, 0.5) 0px, rgba(0, 0, 0, 0) 100%); background-repeat: repeat-x; }

.carousel-control.right { right: 0px; left: auto; background-image: linear-=
gradient(to right, rgba(0, 0, 0, 0) 0px, rgba(0, 0, 0, 0.5) 100%); backgrou=
nd-repeat: repeat-x; }

.carousel-control:focus, .carousel-control:hover { color: rgb(255, 255, 255=
); text-decoration: none; outline: 0px; opacity: 0.9; }

.carousel-control .glyphicon-chevron-left, .carousel-control .glyphicon-che=
vron-right, .carousel-control .icon-next, .carousel-control .icon-prev { po=
sition: absolute; top: 50%; z-index: 5; display: inline-block; margin-top: =
-10px; }

.carousel-control .glyphicon-chevron-left, .carousel-control .icon-prev { l=
eft: 50%; margin-left: -10px; }

.carousel-control .glyphicon-chevron-right, .carousel-control .icon-next { =
right: 50%; margin-right: -10px; }

.carousel-control .icon-next, .carousel-control .icon-prev { width: 20px; h=
eight: 20px; font-family: serif; line-height: 1; }

.carousel-control .icon-prev::before { content: "=E2=80=B9"; }

.carousel-control .icon-next::before { content: "=E2=80=BA"; }

.carousel-indicators { position: absolute; bottom: 10px; left: 50%; z-index=
: 15; width: 60%; padding-left: 0px; margin-left: -30%; text-align: center;=
 list-style: none; }

.carousel-indicators li { display: inline-block; width: 10px; height: 10px;=
 margin: 1px; text-indent: -999px; cursor: pointer; background-color: rgba(=
0, 0, 0, 0); border: 1px solid rgb(255, 255, 255); border-radius: 10px; }

.carousel-indicators .active { width: 12px; height: 12px; margin: 0px; back=
ground-color: rgb(255, 255, 255); }

.carousel-caption { position: absolute; right: 15%; bottom: 20px; left: 15%=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; }

.carousel-caption .btn { text-shadow: none; }

@media screen and (min-width: 768px) {
  .carousel-control .glyphicon-chevron-left, .carousel-control .glyphicon-c=
hevron-right, .carousel-control .icon-next, .carousel-control .icon-prev { =
width: 30px; height: 30px; margin-top: -10px; font-size: 30px; }
  .carousel-control .glyphicon-chevron-left, .carousel-control .icon-prev {=
 margin-left: -10px; }
  .carousel-control .glyphicon-chevron-right, .carousel-control .icon-next =
{ margin-right: -10px; }
  .carousel-caption { right: 20%; left: 20%; padding-bottom: 30px; }
  .carousel-indicators { bottom: 20px; }
}

.btn-group-vertical > .btn-group::after, .btn-group-vertical > .btn-group::=
before, .btn-toolbar::after, .btn-toolbar::before, .clearfix::after, .clear=
fix::before, .container-fluid::after, .container-fluid::before, .container:=
:after, .container::before, .dl-horizontal dd::after, .dl-horizontal dd::be=
fore, .form-horizontal .form-group::after, .form-horizontal .form-group::be=
fore, .modal-footer::after, .modal-footer::before, .modal-header::after, .m=
odal-header::before, .nav::after, .nav::before, .navbar-collapse::after, .n=
avbar-collapse::before, .navbar-header::after, .navbar-header::before, .nav=
bar::after, .navbar::before, .pager::after, .pager::before, .panel-body::af=
ter, .panel-body::before, .row::after, .row::before { display: table; conte=
nt: " "; }

.btn-group-vertical > .btn-group::after, .btn-toolbar::after, .clearfix::af=
ter, .container-fluid::after, .container::after, .dl-horizontal dd::after, =
.form-horizontal .form-group::after, .modal-footer::after, .modal-header::a=
fter, .nav::after, .navbar-collapse::after, .navbar-header::after, .navbar:=
:after, .pager::after, .panel-body::after, .row::after { clear: both; }

.center-block { display: block; margin-right: auto; margin-left: auto; }

.pull-right { float: right !important; }

.pull-left { float: left !important; }

.hide { display: none !important; }

.show { display: block !important; }

.invisible { visibility: hidden; }

.text-hide { font: 0px / 0 a; color: transparent; text-shadow: none; backgr=
ound-color: transparent; border: 0px; }

.hidden { display: none !important; }

.affix { position: fixed; }

.visible-lg, .visible-md, .visible-sm, .visible-xs { display: none !importa=
nt; }

.visible-lg-block, .visible-lg-inline, .visible-lg-inline-block, .visible-m=
d-block, .visible-md-inline, .visible-md-inline-block, .visible-sm-block, .=
visible-sm-inline, .visible-sm-inline-block, .visible-xs-block, .visible-xs=
-inline, .visible-xs-inline-block { display: none !important; }

@media (max-width: 767px) {
  .visible-xs { display: block !important; }
  table.visible-xs { display: table !important; }
  tr.visible-xs { display: table-row !important; }
  td.visible-xs, th.visible-xs { display: table-cell !important; }
}

@media (max-width: 767px) {
  .visible-xs-block { display: block !important; }
}

@media (max-width: 767px) {
  .visible-xs-inline { display: inline !important; }
}

@media (max-width: 767px) {
  .visible-xs-inline-block { display: inline-block !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm { display: block !important; }
  table.visible-sm { display: table !important; }
  tr.visible-sm { display: table-row !important; }
  td.visible-sm, th.visible-sm { display: table-cell !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-block { display: block !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline { display: inline !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline-block { display: inline-block !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md { display: block !important; }
  table.visible-md { display: table !important; }
  tr.visible-md { display: table-row !important; }
  td.visible-md, th.visible-md { display: table-cell !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-block { display: block !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline { display: inline !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline-block { display: inline-block !important; }
}

@media (min-width: 1200px) {
  .visible-lg { display: block !important; }
  table.visible-lg { display: table !important; }
  tr.visible-lg { display: table-row !important; }
  td.visible-lg, th.visible-lg { display: table-cell !important; }
}

@media (min-width: 1200px) {
  .visible-lg-block { display: block !important; }
}

@media (min-width: 1200px) {
  .visible-lg-inline { display: inline !important; }
}

@media (min-width: 1200px) {
  .visible-lg-inline-block { display: inline-block !important; }
}

@media (max-width: 767px) {
  .hidden-xs { display: none !important; }
}

@media (min-width: 768px) and (max-width: 991px) {
  .hidden-sm { display: none !important; }
}

@media (min-width: 992px) and (max-width: 1199px) {
  .hidden-md { display: none !important; }
}

@media (min-width: 1200px) {
  .hidden-lg { display: none !important; }
}

.visible-print { display: none !important; }

@media print {
  .visible-print { display: block !important; }
  table.visible-print { display: table !important; }
  tr.visible-print { display: table-row !important; }
  td.visible-print, th.visible-print { display: table-cell !important; }
}

.visible-print-block { display: none !important; }

@media print {
  .visible-print-block { display: block !important; }
}

.visible-print-inline { display: none !important; }

@media print {
  .visible-print-inline { display: inline !important; }
}

.visible-print-inline-block { display: none !important; }

@media print {
  .visible-print-inline-block { display: inline-block !important; }
}

@media print {
  .hidden-print { display: none !important; }
}
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdnjs.cloudflare.com/ajax/libs/jquery.colorbox/1.4.33/example1/colorbox.css

@charset "utf-8";

#colorbox, #cboxOverlay, #cboxWrapper { position: absolute; top: 0px; left:=
 0px; z-index: 9999; overflow: hidden; }

#cboxWrapper { max-width: none; }

#cboxOverlay { position: fixed; width: 100%; height: 100%; }

#cboxMiddleLeft, #cboxBottomLeft { clear: left; }

#cboxContent { position: relative; }

#cboxLoadedContent { overflow: auto; }

#cboxTitle { margin: 0px; }

#cboxLoadingOverlay, #cboxLoadingGraphic { position: absolute; top: 0px; le=
ft: 0px; width: 100%; height: 100%; }

#cboxPrevious, #cboxNext, #cboxClose, #cboxSlideshow { cursor: pointer; }

.cboxPhoto { float: left; margin: auto; border: 0px; display: block; max-wi=
dth: none; }

.cboxIframe { width: 100%; height: 100%; display: block; border: 0px; }

#colorbox, #cboxContent, #cboxLoadedContent { box-sizing: content-box; }

#cboxOverlay { background: url("images/overlay.png") 0px 0px repeat; }

#colorbox { outline: 0px; }

#cboxTopLeft { width: 21px; height: 21px; background: url("images/controls.=
png") -101px 0px no-repeat; }

#cboxTopRight { width: 21px; height: 21px; background: url("images/controls=
.png") -130px 0px no-repeat; }

#cboxBottomLeft { width: 21px; height: 21px; background: url("images/contro=
ls.png") -101px -29px no-repeat; }

#cboxBottomRight { width: 21px; height: 21px; background: url("images/contr=
ols.png") -130px -29px no-repeat; }

#cboxMiddleLeft { width: 21px; background: url("images/controls.png") left =
top repeat-y; }

#cboxMiddleRight { width: 21px; background: url("images/controls.png") righ=
t top repeat-y; }

#cboxTopCenter { height: 21px; background: url("images/border.png") 0px 0px=
 repeat-x; }

#cboxBottomCenter { height: 21px; background: url("images/border.png") 0px =
-29px repeat-x; }

#cboxContent { background: rgb(255, 255, 255); overflow: hidden; }

.cboxIframe { background: rgb(255, 255, 255); }

#cboxError { padding: 50px; border: 1px solid rgb(204, 204, 204); }

#cboxLoadedContent { margin-bottom: 28px; }

#cboxTitle { position: absolute; bottom: 4px; left: 0px; text-align: center=
; width: 100%; color: rgb(148, 148, 148); }

#cboxCurrent { position: absolute; bottom: 4px; left: 58px; color: rgb(148,=
 148, 148); }

#cboxLoadingOverlay { background: url("images/loading_background.png") cent=
er center no-repeat; }

#cboxLoadingGraphic { background: url("images/loading.gif") center center n=
o-repeat; }

#cboxPrevious, #cboxNext, #cboxSlideshow, #cboxClose { border: 0px; padding=
: 0px; margin: 0px; overflow: visible; width: auto; background: none; }

#cboxPrevious:active, #cboxNext:active, #cboxSlideshow:active, #cboxClose:a=
ctive { outline: 0px; }

#cboxSlideshow { position: absolute; bottom: 4px; right: 30px; color: rgb(0=
, 146, 239); }

#cboxPrevious { position: absolute; bottom: 0px; left: 0px; background: url=
("images/controls.png") -75px 0px no-repeat; width: 25px; height: 25px; tex=
t-indent: -9999px; }

#cboxPrevious:hover { background-position: -75px -25px; }

#cboxNext { position: absolute; bottom: 0px; left: 27px; background: url("i=
mages/controls.png") -50px 0px no-repeat; width: 25px; height: 25px; text-i=
ndent: -9999px; }

#cboxNext:hover { background-position: -50px -25px; }

#cboxClose { position: absolute; bottom: 0px; right: 0px; background: url("=
images/controls.png") -25px 0px no-repeat; width: 25px; height: 25px; text-=
indent: -9999px; }

#cboxClose:hover { background-position: -25px -25px; }

.cboxIE #cboxTopLeft, .cboxIE #cboxTopCenter, .cboxIE #cboxTopRight, .cboxI=
E #cboxBottomLeft, .cboxIE #cboxBottomCenter, .cboxIE #cboxBottomRight, .cb=
oxIE #cboxMiddleLeft, .cboxIE #cboxMiddleRight { }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_openam-apis-overview.png

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
p9b/A9oH3jGb/8PLAAAAAElFTkSuQmCC

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_oauth2-device-user-code.png

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
isDQBfexXiEMBMb4JCVtp9xyjinYbYJ7uqoQvrZ4lvysXw/5qxd+Jb8aNzRkO3lyoRB2IhRC0n4C
M7803TwcZrthuxOeGSSESiSaHJGINJavv+2fkw4I4Y4ieaT3+U4KXNOzhQiha6iEP7mGVHRVIXzh
44/k3//Zf5bJkyfLT/7xaf5+4wgKYSfCHxLpCDbyEqnm5hGZvModFLNY1hQHpl+rubTTtW2VFLvm
SbtalBnUvIp5OwPRqO5gltkugflGsneskv7Jq2RcimF48nJZsL9QavzdhPdlgSvfUCHE4Pkyu7NO
bmHuikIIb/DZMYPlL37yE/nDH/4g7/foIU/3fld/792XPHlQCDsRCiHpGCn+5kubHn3zjTQpjEfm
pAdlMtlzLKZnC9pHCVt9g08d6wp2UansRErwOV3eZGvp6rHgY8MJYfB0asHTrrVFCCPOlZocKOdj
FcLPPpbnkobL3z/ztM47KytL/vZf/ll+M3m09hSxzysLZ2i8x5LYh0LYiVAIScdZJZlldz2iZhMi
OwtDhjFYuqdlRh568c19ydsfZhWJVZl+Tyt8+k6amu5K9r5Q8fmi1BxZ5WmO3ezMkPOotihoIm6/
ED6IJIS+yB7hkk3+gf3Fj1MIlecHwfvL//ZfpaamRm7duiX/9//zp/L/PfcL+ZvfPic/G9BTnun+
e/kr9ffz08fJKwum01t8gqAQdiIUQvL9mS/j0jbJkn075Yt9W2XBlgjRpGFA9OkCfZwBx3r3IQZ4
ei99Mln+/O//h2RmZsqjR4/kf/k3/0Z69uol06ZPl3/3n/6DTJgyRQYNHiz/+em/l7995Xn5u3de
156kNy8Se1AIOxEKISFdn18nDZe/fuk38pe/eVb+y8+flnFJSdrj/JM/+RNJTU2VlpYW+aM/+iO5
efOmVFVV6b/Hjh8vf/aTv5TfThsXkh+JPSiEnQiFkJCuDTy6P/uH/ylTp02T3h9+KH/ykz+XZ372
My2Ey5cvl7Nnz+q/p06dKt9++6189913MmzYMKmrq5N/eOYZ+cfBfdhE+gRAIexEKISEdG1eWThd
/vg//gft6ZWXl8vAhAT5X//tvxWfz7OihpOamprk/n0zYcBvXnhenhnwAZtHnwAohJ0IhZCQrk23
+dPkL//xaZn1yRzdBFpRUSHjxo3TgoeUl5enP3NycvTnsmXLjCKq9Ovnn5dfDO9PIXwCoBB2IhRC
Qro2CJJ5pn8P+a8//6msT0nRAgdBtGnAgAH6s1evXvrzn/7pn/Qngmn++m//Vn41IZFC+ARAIexE
KISEdG3Qv/firAnyP999Q559/l/k2rVrVgN1evnll/Xn88r7Q7JCeOz4cflPP/kLeXH2xJA8SexB
IexEKISEdH3g0SH6E2MGx4wbJ5WVlVYHpV+/fvrT7RHeuXNHPviwt/zNi7/WTave/EjsQSHsRCiE
hMQGCJr52SAlbr/8R90casUwNzdXf2ZnZ+vf9GeffSafzJun5yL957FD5NVFM0PyIrEHhbAToRAS
EhvoJtI5E+WpPu/Lv/vT/6jFEHOOIqE/cMqUKTJ+/Hipra2V//cv/kKe7ttdeYNTQ/IhsQmFsBOh
EBISO6CJFP2Ff/f+m3rQ/LqU9bIpPV2+WPml/G9//H/K//5//bFMmDBBb8McpBw/+ORAIexEULn8
sRASO9j+wj/+q7+QZ178rfzytW7yP/75l/I3L/xK/ublf5H/47/8qfz7n/y5vDAzib/tJwTcRwph
J/Lixx/JqwytJiSmQH/hz4f0laf79dBNoOBXScPl1xMSddMp+hIZJPPk8Oqij7Wt9trvrkxMCWGv
pfPYj0BIjAEPoduCafLy3Cl6Im6AoBiA7/Cbpjf45ID7CVvttd9dmZgSwt0nj7EJhZAYBb9bi/s7
734kdtHLbykbDVvttd9dmZgSQjB41efy4uwJ/AERQkgXQkcKK9sMG+21212dmBPCRp9PVzTeOuCC
o8+QokgIIT88sL3oE4Qthk2GbYaN9trtrk7MCaEFrjfaodEpiwglQgghPzywwbDFsdYc6iZmhZAQ
Qgh5HFAICSGExDUUQkIIIXENhZAQQkhcQyEkhBAS11AICSGExDUUQkIIIXENhZAQQkhcQyEkhBAS
11AICSGExDUUQkIIIXENhZAQQkhcQyEkhBAS11AICSGExDX/P7VQs+BX04q3AAAAAElFTkSuQmCC

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_oauth2-device-consent.png

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

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_config-client-sdk-war.png

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
k8fv7r8DAAAAAElFTkSuQmCC

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_bjensen-with-custom-attribute.png

iVBORw0KGgoAAAANSUhEUgAAArwAAAESCAYAAAAfRAZAAAAACXBIWXMAABibAAAYmwFJdYOUAABt
7ElEQVR4XuzdCVzPh//AcWNsmDH3LnPMXDObuc/NmNswzNwiZ5EzOsgt902kSKQSotNR0n24RZES
SZRK9/36f77fzJXf/rMfv9/6/t7Px+P9sG+f8/uVefXx6VuJqYYrkZGRkZGRkZGRkdHUKfHyB2Rk
ZGRkZGRkZGQ0aSR4ZWRkZGRkZGRkNHokeGVkZGRkZGRkZDR6SkwxWIGMjIyMjIyMjIyMpk6JifpL
kZGRkZGRkZGRkdHUKaE9ZzEyMjIyMjIyMjIymjoltGctQEZGRkZGRkZGRkZTp8S4GUbIyMjIyMjI
yMjIaOqU0NKbj4yMjIyMjIyMjIymTol5S9cgIyMjIyMjIyMjo6lTAiGEEEIIITSYBK8QQgghhNBo
ErxCCCGEEEKjSfAKIYQQQgiNJsErhBBCCCE0mgSvEEIIIYTQaBK8QgghhBBCo0nwCiGEEEIIjSbB
K4QQQgghNJoErxBCCCH+iwrIyLgnI/NaU1CQ+/In0p+S4BVCCCHEf01BQT7R0TY8fHhcRuYvzd07
tuTmprz8qfSnJHiFEEII8V+jCt47dw5CfoiMzF+a2FgHCV4hhBBCFB8SvDKvOxK8QgghhChWJHhl
XnckeIUQQghRrEjwyrzuSPAKIYQQoliR4JV53ZHgFUIIIUSxIsEr87ojwSuEEEKIYuU/EbwZ6UFE
RJ7FN8iNYyeOYn3EFisHWw67HcbL34XrN87w+HFgke1k/pkjwSuEEEKIYuVtBm9mRjDhEV4cOOrA
zGXWaBnb02+aPR21bGk/5iC9dOwYNd+e6csOsMPalkuhHqSkBBXZj8w/ayR4hRBCCFGsvK3gTUkJ
5LSPG/NWWdNP14ZO2k700Q+mv9FV+i+IUOYm/Y2v01c/hC5TTtJ9kg3Tl+7HweUY8Ql+Rfb3wuT4
8ijWhcibTjxK9iHv5eX/cvx5ePsoVy4e4Eb0abKz/6lxHUha0gkirjkQHXOK7LyXl/93R4JXCCGE
EMXK2wje1NRAnD2cGK1vTrfJR5XQvUDv+dfoMv0c7Sf50mqcNy21ztJugi8/Tgump34ofeZfpruu
G7/NsGCvgwMP/yR6cxPssdg4CS2tMRw+a0tKbtF1ik4g0d7LMJnWj0EDfmDkDjPuJfm/Yr3/9AST
Fu/CGaeVWDnvJuaxEuG5Zwk9u4qZw/qxbPMKYrNf3ua/OxK8QgghhChW3nTwqm5j8Ao4oY7djuMd
6TbrIp2mBiqRe4YWYz3oN8ubZRbXMN17nZELA/h+zCn1svaT/eg68wI/TD7B4Om7sXd2JEUVf686
xh0zRv7SlBLvfslii+08yim6TtEJwN2gI3U/Kk29Fi0Yvtuc2OR/QvAGce+yGbN7f8m3/QfgEa2c
U84Zzrku5PdObdFbZES0BK8QQgghxN/3poP3Tow3hmttaDfans46Ieqruc1HnVTPt8PdmL3hPMmp
2aRl5GDmcINmw1yfLm859gwdpwTRYbwzkxZac/7K6SL7V03m3V2M7N9MCd6GLLEwIzHLm5vn9+Bx
Zi9XLu7DzXYZu7cvxMFtD3cTfcjL8yHq0h7WjGhKzQqlaDNyNPa+h0nPDFRfTb3uu5k1prosXjSJ
xVuX4nfdXQm6YPWx8pOPc9JxLe4+9kSH7WWHsk7IzcN4OG3E0/cg4RfMsdpuyO7dq7kYeZL7Eftx
2LOI3RYrOHvRiSxlHwU5/iREHeTwfhNW7DDEYs9KPAPtiE/zJy3RlVN7ZjC4aXlqNGqCgZ0VDx57
EXF+K2sXTsXCYScJqivYeco+7thz1Nq48DxXz8XadQ8xCT6Fr0ueLzHhNnh57Obcuf14Oa1hz/YF
HHQ0I+yeBzmveB3/7kjwCiGEEKJYeZPBq3o3hmMnHOk4fCOtx/vw/WhPvvnd5el8PeQ4M9cFPQ3e
HYfCaDL42AvrfDfylHrbDqP2sNlyH8nJRd+9oUjwprlgqT+IXj+049f+HWjdqBaf1qhBkzZtMbAy
417CUXZN60u7Oh/yful3qFK/ASM3beV+0imC1k9mdLevKfd+aUqUKEGJqp/RbehAjpx3UUdvZpgp
nVo0oE3Xrowd2o4ayjqr7Y3o+H0jOnXrwtBfWlK7RhU+/awev4wexMSRnWjyxSd8+nltuo8YxrFr
J4gNM0dn9I80/bImpWtU5fMv6tCpdz+Wm23nQuBaxrT5ks8qlaJEuQo0HzqcM1EnuOi6iDGdf2D2
suXEZPlzP3gHm7W60qxetcLzLPchdVu3ZcH2FYQ/8IXsk7hum8yvnVrRp28nfvj+S2rVqE6D75oz
dd0KrtzzLvI6/t2R4BVCCCFEsfImgzf2vg9Ga62p32uHOna/VmK2yaCjT6fRwMN0m+TCoh3nWLbr
PEPmnKLhgEMvrPP1YEe+G3GSxgOsGTdvF1euexY5TtHgPca6Aa34VAnBhu07oDNnFOP7NaJmxdLU
6DWBs9ccOGkxB60Otaj0fknaDujDquMHib6ylmG1q1K21Gf0HzuMhQu10OrZgPfLlKL5bwbcSfEn
5bIhZd97tzAyG7Zk1PhfsTuqpzx+h1KlqzNg0kj0p3SllrK8VJn3aNKtN3PnDqZ7o0p8UL0muvv2
EnR4Eu+WLU/jH7pjsGAsYwd/T4lSlWnRdSJ+16xYNbknLT9/n6qff8bUVQsIe3ACPytd2pSsTq+R
MwmLc8R+yQC+eqcCX32rPD99LWZN6Mb39SvzcZOOrLU9QEaWG3bzB9BYOY9aTb9hrO5Ipg5rxVcf
v0/ldv2x9HR8jW/u+/OR4BVCCCFEsfImg/da+EmG6G6jkRKxXw9ypFF/O/U0/MWWr/oe5Ms+NtTt
tf+Fqd/X5ul6f0yTX4/Q+NfD9NTehfuZI0WOUyR4M46xaWArPi9VA72Na7iTfJZzFr/SvE45SrT6
HZdLrkrsncVxTjtqV3qXmVZmPEwN5NaxMdT5uDzVWo7AK/QEuTm+3PaYQ+NK5ShZ7md84nxIvrqg
MHjfrcNka3NuRbsSHaCvBG9J3qvYEbc7XiRH72HKV+UoV7Eixo6HSE44hvX0bylfrSaTLPZx+9wG
9Cb1Y9JcHbZumcbvfZVzL1mR5j9qEZYeyF1luW6bijRq34bD189CricB1rp0eBK8F0PNWTL+G8p9
3IRJyzfyMMWX5EgLlo5vT4XS9RhvaEpcphsOhgNoWvIjBuvN5ErcGcKcdBnQ8iNKNO7G+uN2ZL/i
9+zvjASvEEIIIYqVNxm8QecdafXLAhoMdKRBP1Xk2qinXm9rek89jpn91RdmwiIP6vbc93S9p9Pv
IA0GHKF5/zXsP2RZ5Dj/MnhLN2Gd/R6Sc0O46TCO1l9VpETL4bhdclOC1wen2e3VwTvnwC7i04K4
bjuM2jXK8a3OUu49evKuEAmWDKj2IaXLtONUjPez4H2vEwHJhd9El3hhnjp436/cg4vpIWQ/dmVz
jypUqPIRlle9yEk5jfuKzurgnWi+l3CvxYwY2I7WbZryTad2tGjxxdPgvZERyL1zm5mpBG+Tjm05
HuFTJHjPXzJj4chGVG/ekVXHnnwBkO7CQZNB1C31OaP1F3M3/UnwvlsbnaVKAGeHEONpyO+dPlaC
tzsbjtu/sft4JXiFEEIIUay8yeD19rOjXgddvhro9MJV3No9rPhx7CFMtvlzyD2M1NRU9ZjZXuCL
7nuKXPVVX/ntf5T6XRZjZrm5yHH+NHjtlODNCSHKSZe2japQ4lsleC+8HLw7leANJPzQKGrXLE/N
DlM5f+es+p/8H11aSsvK5Sn1fmc8Yp+7wqsEb/DLwVupGxfTgp8Fb+WP2H3Zk5zHp3FdWhi8Yzdu
wUa/BWU+rETbkeMx278Ks9WDn13hfS54v1Zi2DnSt0jwXri8i0Vjvqb8Z82ZsWG3+m3YMuJs2ajX
lSpK4I6dv4yYjOeCd4kSvFlKmPouYXgXJa6/UoLXUYJXCCGEEP+j3mTw+vjbU6+9Dl/0OMhnXXY9
mx938mnnHXzcaTuTFroQHx+vnk17/fik8/YX130ytX5WwrezMTv3bilynD8L3jWvCF6XfxG8SVeX
8dMXlSldph79R0/BYudstAd9x/tK4NbsOZ1byf6k/NkVXiV4z/0/wTtm3UYsJten9EfVaD9rPi6H
TZjZ+5vC4O2iBG9mIHeDNzGteQWq1K2P7o4tRCeefBq8PZXgvX7vEJbGPaleqhJffdcDw8WzWWH4
K983qs4H9dtgvHcPadnPgneqErz3Xwre9Urwyi0NQgghhPif9CaDN+S8Iy17zeXjjjup2WE7Ndtv
eWGqt92ItqHj0+DdYOFDtTYbiqxXs/02air7+Obnhdg4WBQ5TvY9c0YN/JYSZZqwxHLXs+At8w3r
DlnxODeE2ydm0LZJNUq0HonrJfcXgnfeQXMS0pV4zTqJ08axdK5cnjIlK1O/TjXefbckjX/syVav
o2TnBJN+fVFh8JbrQXBqYfA+vmxYGLxVf+FSxnPBW+Uj9oSeVd/S4LpSCd7qNZlgbk6A5Qiali7D
B3Xq0alzU35q24R61cpRv8WPOF734EGoOUZ9lTAtXZZmfftz4pZrYfCWqkmvUXOJTPPhVsAG9Pt8
x6fvlKWyEs81qn1AtdpforXUhJC7XpDzJHhL10N3+RoeKNF/P3A5I7rVpUSTnqx3OiTBK4QQQoj/
TW8yeK+HuTJo/EJqtDGlRnszaiiB+/xUbbWecfqHiYuLU8/aXWeo0nJtkfVqtNuu/LqOrkNNOOlR
9Nzy005w5sR6dpqv5XyYO1k5Z7l6YiMHzNdzNfIUOXkhpMbY4mi/lJ1H93I3wZcC1U9a89+MjaUx
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
QmCC

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_register-sample-auth.png

iVBORw0KGgoAAAANSUhEUgAAArwAAAGLCAYAAAAlLUHLAAAACXBIWXMAABibAAAYmwFJdYOUAACA
AElEQVR4Xuydh1tT5+O337/Hb1sV99571dm67VBbRx11Vq1WrVqrrVatGxWULSgKyFKGgLL3ngmQ
hITshM3nPSMgskQF9Uc/93XdV6tJTra58+Q5z/l/NTU1oJRSSimltL/6/9r/BaWUUkoppf1JBi+l
lFJKKe3XMngppZRSSmm/lsFLKaWUUkr7tQxeSimllFLar2XwUkoppZTSfi2Dl1JKKaWU9msZvJRS
SimltF/L4KWUUkoppf1aBi+llFJKKe3XMngppZRSSmm/lsFLKaWUUkr7tQxeSimllFLar2XwUkop
pZTSfi2Dl1JKKaWU9msZvJRSSimltF/L4KWUUkoppf3aXgpeGwwGA6qrq1GtrYbFbu/kPD3TZjHD
aKiWt2U0w2p7923939YOi8UkPw4OLRZLJ+d7Wztu12CywGpvf75PSLsNVrPRcXsNMJt743HoXqvZ
DEPr42OF7VN+fCillFLarb0SvMaiMGzZ9B1mz/8Ss+d9ia03YmG22jqcryeWxbnj120rpG2tPuaJ
1JLqDuf5L6gvSYLzmR3yY+rw6C0/FGjfL/Ysqjz4Xjvy2nb3XLqLNJW5w3k/Fa3VZQj1+EO+vYu3
4+9bsTB2cr7e04xkX2f8vFx+fA7dfoi8qvd73CmllFL68eyV4NXnPsTiL2diwEAnyYGjp8A1tbLD
+XpiSaQrNn09TdrOzJ+vIbFQ2+E8/wUrMkLx+5Y5rY+p6Njvf0dwiqLDeXuuDcXxATiwbNRr2/3m
2CUklhs7Of+noVVXjAc39su3d/wK/Hojso+D14SX7n9hzST58dl07h6y1J/uFwJKKaWUdm+fBK/o
kDFHkWfpeN43WRJ1Vwje6dI2ZgnBm/QfDd7K9HCc2DT/tcf0f0OW4IJvLKpsHc/fI80qhHmdwxin
V9sU/VYI3qRPPXhv/iLf3jFC8F6OgqmT8/WeJsSLwTtZfnw2C8GbzeCllFJK/8/aZ8E7YOAwLDwV
1uG8b5LBK6tKf/oqeEeOxoDh4qjsEKw7eQfpSkOH8/dEbWESruxd2u55YvB2lMFLKaWU9if7MHgF
Bw3BxRhVh/N3J4NXtjV4RzjJtjyms/fBL7YQ1k4u071GZIR7YV3b58exbQZvexm8lFJKaX+y94PX
aQQGDxveGlWDR27Hyyprh8t0JYNXtu0I7/8GDcXnTkPx2SDxMR2Lo26hUBjfbqdAS1URHl75+dX2
hgzD54Pl54jB214GL6WUUtqf7P3g/fYSnj4+j7GjHNErBPCYX7xRZe5ZoL118NptsIhLVum0qNJo
oBGtqoK2Wg+TuYvlpOx22Gw2SXsPl1CzO84vX6bj6R1scx22d1harW3wDpm9Eht/+AZfzhgj/Xn6
jkt4WaCBvZPLda4NivQI/LpMDrhRC1Zi6y/78O2C0W8VvDarRVoyTis8vpoqLbTaKlRpdag2GGGx
2t7i9rRoh9VihkFfjaoqx3MnqNWJS4GZW5+7NwevvfX56dFz49Bu7+o5fdvgtQuvQRP01W1egxrh
NajTw2i2dP4apJRSSukHs/eDd9YZFGt0CDwwD4PEPwsOHj0RJx+mw9SDna16Hrx2mHRqFGQl47HX
TRzdvw3rVq3GcsFV69Zj+8HTuPMgHKl5ZdAazG1izI6q4nykxL9AbFwcsso0MFm7C1I7zAYtMuPj
pfPHJaYhV6nv5HyvX0ZbkoPkBPk6kvLK33qZttfm8M7ailNXbmD7j8vxufSYrsXd8HToexhSdrMG
Lx5dxHjpssOx/Kf9cHf7Fz/N7tkIr91iRGVZEeIjAnD9r+PY9v16rPp+C7Zu2oC1m37G0b+vw//p
SxQoVDCYezaabzXpUV6Sh+gn93H+1CF8t36N9NytWL0GW3b/iot3/fEioxBqnRDTQvA+7DJ47TBW
FiMjWXx+ElEqvPZ6Mt3DJtwnRX6S9PwkpmWiXN/2NdDz4DXrNSjOS0ewnwtOHNzR+hpcufY7bNn7
O254P0Fidgk0ehNsnVyeUkoppX1vnwRvgcaAGn0Kts+aLP/dwGEYM3UjArK1b/zQ71nwCkGpyIbP
xf0Y6Yhq0f8NGoKBQ4fjM8dP9aLjFqzGKbdQ5KuqHSFkQvjZg1gweph0+qJj3sit6Dr2amwmFCZ5
YWbL9YxbhB/PR3T/k7qtCp6/bMDkYeJlhmLJuWCUV7/dOq6vBe/UTbjs9wx3ft+LKUOHSn+38eID
4XE2dbhcR+3QKbJw85dl0uW+GL4Ie08EIC7gNjZOf3PwmnWVSAr3xJYFo4TH99Xj+sXQEcJjLd8W
2TGYsWQnXIJfolxr6Ha016QtR8yjm/hmyiQMbPP8DRK2OWio/LyIDhk3DXsu+iItNxN+N7oKXiOi
Lx/AkvHiZWbgenACdNaO19leg6oQHr/OlbY5fcUG+GXp2pzek+AVHteKPDy+eRRjB796HMTX4CDh
NdgyXUR05IzF+PXmY2RVaHsU45RSSintXfsueIW/VyW4YuZ4R8AMHY8Z228gt6r7SOtJ8OrKUnBp
5yx5u0JgfDFqKmYvXo5V677Dth3b8e33q7BgwVyMHj1SPs/oL7H1rDcyK/VSiCme38W3y2bIp83/
FZHZ5V2GiM2kRZzb3tZ4GTBwElZvvoh8Y9ejwtbKl9j77VfyCLfTXLhE58HQgwhr62vBO+EHXLmf
jKwnN/DNwiny3311BE8zlV3e7lZtRuS99MOaUeJtH4opy3+CW7wCKQG3sP4NwWvWKhB86yhGjW5Z
t3c4Js5ZhCUr1+KHXbvw0/Yf8dXy5Zg9ewaGOpY6GzJjKfbfCEShuvOVJMRtBt08jKmTxjq2ORZT
5i3B0pVrsHPXbuzYuUne5qzpcBJPHzkNc7f8geO/bZXP30nwPhWCd6EUvPPhHJyE6h481kZVCbyP
rpC2OWPlBvjnvl3wVpdnwvnQVxg8ZIh0nv8Nn4xZi5ZjxZpvsH3nTny/YTUWLlqAcWMdj92IWVh3
+DaSlbo3fumjlFJKae/ap8FbU2NFxPn1GO2IxSETZuKQayS03azP+6bgtekVUmhIo41C7A6Zvgw/
nnDBy/xKmB1TJqxmPfKSwvDPbz9h2tQJ8u2avAKH74RDqbfAVpWCg1vWYLA0YjkfN55mCJHUecAa
NSVw3jLVEWeys9Zsgf9rI4JttaM06hZWLZIPnjF0wQnEF6rfOnLaB+9lIXgNqkQc2dZyu2fgXEAi
qsyd3+4WLTolgq7ukLczdBLW7b+MQqMFaQHO+KG74LVU4anrCYwfL88bHjBkCpau2wnPiBSoDC3T
Fuww6ysQH+qJQ98vw6Sx8pebQdOX49DtMFS0nq9lm1pEu5/GnOmO52TkTCxZexz+MVnQWVruhx2m
6nLEB7tj7+qvMWGkGJTydj8T/LyT4I0UgnfRBwxem6EcHn+sx/AR8u0aOOlLrD10DTE54tQVx3ms
JpRkxeD6H7swe8Yk+f6OX4TtF/1RrGs/WkwppZTSvrSPg1cc0cvEHysXyKeJI4RzN8A9trTLkcnu
g9eG/MBTGDJc3iHus7FL8Mu9KFR3sh3pdlXmw+vKYUyfIo8mTl55EA9ii4XrrkbQ2d2YNUbezveX
AqHsNEJsUBdG4jtpdPSVQ2etwQmftM7vg12PJ//sxexxcgytO/8IpW8Y1e7MzoLXLNzusEuHMG+8
PHK98MA95FTIo9btLy9rg6rgJY4slaN1yKwVOHo/VYjvNwevOsUHy+dOkyJzwMCJ+Gr7FeRoupqH
bIW6OAE3fl2HiY4l1Kas2An3qAJY2pxPmxmITSsWOOYhT8GS/beRrtJ38WXACm1ZMq7sXoVxA8Xb
P0ya/uD00YPXhqLwi5g6ZZz83Iycj23XQ6Hr5DpETVVlCHL9Q4j88dL5xy/ehjshua89LpRSSint
W/s8eGvsVigS/fD1nJaRwolY8OPfSCir7rAd0W6D11SKv9dOxkDH/MgVRwOg7WQbba0Wounqrz84
5vrOxfEbT1ButqEs6hZWLHSMwn51BqmlVR3C0W41IS/8AoYK5xk0cixmL1uBmWOF7QybhR+PeqCi
k7Cy6jLwx5ZvMFy8vqEzcS08tc3oZc/tPHiFv0/1E6JxnhyN4zfgUXIxzF3svGa3VCM1+BImSfd9
FBasO4DnSjFs3xC81ircP/Y9JoyS56ZOX3kSicLl2j8+r2uFMjMCf/y4EIOl65uJn//wRGHLKK9N
j9B/D2LuhBHSNqcsO4HoPDWsXdx2WQsqsqNx7OsvpdsvPRYfO3jNSlzbvhgjh8qnLdrnBdUbdkg0
VObC/cwOjHE8LrtPe6L4LZeVo5RSSum72/fBWyPukV+NqLsHMU36wHfCkImzsedfXyj1HT/0uwve
quR7mD9uLP4nbmfqakSVdzYq214TUvzvYP1M+Wf0hbvPISpPA4s6Gfu/+VqeJzpwMbwTizqsImE1
VSHw9FcQj3A2fu5XuP44EGc2TBT+PBJfbf4NccqOI7eVSfexfqW8M9TQJccQnVPexQhm93YVvDWG
IlzZ+y3GSjvEOeHnu5Ftphi01Q6Dpgi39y6Rzjdw1FxsPxnk+ILQffDqcoOwZclcxw5lc3AlIh/m
niytZtHixcOrWDZRHjmfvv4QHiQppPsvPt7HNq2RvjwMGDgdp/3ioTF1fP7bazNpEON/AVMcgfmx
g1eb4Yu186bLXzgmLUegEO3dfxEQNSM38gF2zJN34py96Qgep1f04HKUUkop7Q0/SPCK8VVdmY3L
m1bK5xGcOH81bgRmdFjtoLvgTXPdhVGO9X3nnQjpcNmuNJa+wJn93+IL8brn7MLdZ+JPyjoEHP8J
00bJUw92ucagyvh6OBo1WTg8T7jMoFGYteIwUssK4Htus3T+Ccs24VZkcbtoMSHm1kksmSKvb7vm
Lx/kqzvuDNYTuwzeGitS7/+BRTPln9RHrfoLaQptx3iyW6BID8BX48THexgmLdwAj4RKx+ndB2/e
o9NY6Nj+hOXnkOXY2a/9beyoHarsaJzeLkf2gKkbcM43SXqeKpM8sWHlbOnvB808gGfpis6nhHTQ
irK0Zzi0zDEP9iMHb9b945g1Rf61YvYhH1Qae7b6hqkiHc6nNstfIqb/iH8epDqeT0oppZT2tR8o
eOXpAUVJAdjwlTyNYIDTBCz68TQi8tSvna/r4DXhyZE1GD5M/pn9O7dkqCoqoFQq32A5ygvicebI
T3LwTt0G19BMKTZKI65hsWPUbfyPN1GoabOcll2ItzQfTBFO+2zEFKw6EgiDWYPYB/9isvB3X4z9
CgcvPUV1m5/k7YZCXDiwGaOkFQvm4t/AeFS9w3QG0a6DV4g1xXPsWrXYMXVgAW7F5MPYbqc7cVQ9
4uZO+fJDJ2HJjssoNrac3l3wWvD8+l7MnihPPdh2Owqadl8EutOmF0Ly8hGMEq93xDKcdA5Hla0G
RWFX8M0iOVrnHnBBlqLzKS2daajIwd3TG+X78lGD14Rnf23DVMfc79VXn6K4rLyT11wnFqXi5rn9
cvBOWo9z3gk9/sJGKaWU0vfzgwWvqMWgwXOfs1gwRg6JwRNmY9d5dxRWvRol6zp4dXDfNAfDHMtf
jVq3CwcO/oq9vxx4gwexb9/PWLhInmYwYMz3uP44GQYhVC2qJOxdvlie1jBmPcLbzCkVj9yVcFs+
FO+wSXNwJqQYYgwWvgzEz3PEncbG4/t9F5CpffWzvC47BNvXy6ObwxccQXhqWQ9HMTvaXfDW2LXw
P7kVUxxrCS885Y9KfdvpHXYYVOk4vEjeUWro1IU46pvR5rZ0F7wGPP59A6Y5dtT7IygF1W8T7VY1
Qu785Vi3eDoOX/SF0lyD3IBLWLNAnlay7VoASrQ9mY4i2/2R1j5k8FbjwS9rMHG4/PcjV24VXl+H
OnnNtVd8De7G8uUL5fswahVOu0RD1+38ZUoppZT2lh80eMU93HXlWbh9bKNj7qwTxs1eh8ve8a0j
pV0HbzU8twnBO0S+3Lu7EOe8oqAR5+vaq/Hw2CZMHCmG4zicCMhqHSm1CeF2fbU4+jscE2ZtRpRS
jnJdSTKuHRLn9Tphzvd78Si1ZYRaiEjf81g7R14RYt0f7sgu7+pxeLPdBq9gRZwLFs1zLJc2fSti
itsc1MNuRWHkJUyQ7u9IzFi8D7EVbQOz++ANbA3eWbgdkwdjT+bvtl53NeLuX8Zycee+1uA1I/bG
b1gySR4Z3XItCMXank0FEO2T4FULwfv72wavHv6H17SuRPHuzsVvlx93utMjpZRSSnvfDxy8NdKR
y4pSgrHnmzmOD/+xmPv9CQSkKKXTexq8Kw/9iXPnzuOvt/Gvc/j70l3EZhTD1BLYz/7F3JnijmhO
mLLXFyqDHGLWiuf4WtwxbMhYTN9yB+qW9VUNCgS7/o6xA8WDLHyPs56OELWUw+v0HkyTdiabj3/8
YqF+wxq53fmm4LXr83Fq41LHiPdY/PY4o/UQyTazGh7b5kmXHTh6On74M/i1qRdvCt5XI7yTcSEs
G/q3GuHVIsLjAr4cKV5+Og4JwaswW5DscRrLZ8hzm3c4B6NU9zGD147q8hzc+Fk+eMm7Bu+y3Udx
9u9OXmfd+bfwGrx4G08TcqRfGTreNkoppZT2th8+eAWtRjVi/C5g+SQ5HD4XomzrGRdkqUzdBq+b
ELxDHcF7NqoEVRoNNG+jWg2NTg9zm2WkrJp4/LxonnxUtAm7EF8pz+MtDT8t/d2g0ZOx2zOtzdxe
I9LD3fG9eNuHzMTPpz1QZq6BsSQWx3eskS7jtPAQguLF9X473vee+qbgFaM1yeUwpk2QI3L82uso
c+xAZSgIwTwpWIdgzMyv4Zn2+jzpNwVvwGkheB3TTo48TIHubcLdWonA22ekuc/iSObhS49RbqlB
Yeg1rFskz5f+5q8HKFB3XOGiK63aIjy4vqdXg1dTkoKTX8sjzm8TvH5tgvfYoySUV6o7vs66U3wN
aqthsrx5hQpKKaWU9o4fJXjF4NCXZ+PeHzsd6+M6YeTUVbjkE42s53exeUVnwWvFs/PrMcJxdKtj
IaWdbLcL7Waoy0uQnZGB3GIlqk1tdsKy6+B3aC3GDhd3hpuAS7GlsNmtCDgs3oYhGDHxa/jnt11p
wY7KrGic3izOCR6OFbv+QEyJEQXhd7BpqbxT1urjd5Cu0He8HW/hm4NXiOzicGycN1PeGW/oHPjl
aKQwf+H8g3y5IWMxY+tVKE3tg7W74LUh2f0g5k2V1739+lQAKqt7Pt/WrM7BnbM75R3qRq3BGZcY
6O01KHp2A98skQ+LPPwH4fqKNB0u25W64lRc2+dY+eENwXtdCF7dG4PXhsr8WOx3BG3Pg9eKmJu7
hS8Z8g59v/gkw9DT0W+7BVqVQnoN5hSVQev4JYFSSimlfe9HCl5BmwVlqWH4bbMjZAaOxMyNx3D9
9nn8sFreVvtlyTK8D2LUaDk2Jmz0hL79NrvQqEyG87kDWLz0ayz55hQCo/PbjL7aUfr0PKY5jpw1
/69oWGz52CkG1KARGPvVWRS1OxSyRZOHuxd2Secfs3wXXCIzEPjvCcwbIUbzPJxxj0Rlh8h8O3sS
vDW2KngeWoVRUqw7Ye3VONjtxTg0XY5Vp/HTcOxxXifrAHcXvDUofXYVi+fKo7GDJ29HbLGmk210
pg3F8Y9xcJU8RWTw3K24HijvLFedG4Qfv1kk358x6+H3srB1Wkm3Cl9W8mMfYdN4+XnvPnhH4ajn
M5Qb3jB6ajUgJ8oZ4x07QPY8eGuQ8/g0Zk+TXyvjvrkJRQ+/DIhfBHxuHJVfg2uPwD0gg0dbo5RS
Sj+QHy94a8S5pjokPPoX386Ww+KzkRMxfuo0jBglx0374DUWBWHJhPHygSeGzcSDgp78LG5B5pNb
2LxAXjt1wrfHEZSkeG1dWasmDlvnzJCWjPpi3nkkp3hJR0r7bNgYrL0Y3TFMbFpEe13Gl+J5xq7C
4b9u4/CBLfK0iIV74RWTD0tPYq4bexS8Qqwrov7FlElygA2efwqRT29ghHiZgcMxbto+JLVZAeOV
3QevpSoFR1YscRwkYgy233kJg/kNEVkjLkmmgP/t34UAl7e7cu8pxBTLy4/ZzcW4un0DxknbHI0t
l4O7OJzz61q0pXhyfS+GSZfrPHifCsG7UApeJ2y78gjFVd1v16StgJ9jh7W3DV5T6TOs/3K2PKo+
bDrupVTC9sbn2orC2AfYu1R+nsYs3wv3qMIerm1MKaWU0vf1owavqLkqH15n90tr27YESIvtg7fG
poHLtikY5BiZm7LwIorf8PO1qSID107+1Dr3d9vZ28hRt4tAux6+++ZjhLjDmdNETJslrxU8aNQ4
3EhSddimNJL5IgAHlk/EgEEjMWLcFIwYIwf1179dQ3xpz9eY7cqeBa8QmcZsHJk1Q45tp/GYPG0S
BowTY30sVvz9tIvDDncfvOKRweLu7Mf0ieLya05wmjgbnsmK7sPOVo3MUHdsmCQvhTZgwtc4dvsp
dK3rA1uR7vcXls2WTx8yYRHuCl8MDN09f1Y9ciLdsXSivPKFZIfgtSPjwVmsnivPZR62+ARisiq6
HJG228woeOmBCeOF+zZaDtC3CV7xy473r0sxxjGPd+ys08h9w2GCLZpCeP+7H8Mdr8Hvfz2L5B4d
JZBSSimlveFHD94auw2q7Agc3fHqKGwtdgheIW7USc4YOkIeAf7f4AmYu/U68vWdbFfQUJkPt38O
YeIo+Sf+AV9ux/WwrE4jsDT0LMaNk6NJdgiGjtmDDGPnUxMMyhRc/n1Du9s8Bydvh6L8PacziPY0
eMWQjL26GSOlpdUct2OwEJRj58Enq6t5xG8KXvEn+ET8umhe6/Jxo6YshXeCopNtiQcVEcI0whPb
Zk+Uw1vwqx1HEFmoe20U06JNx4nvV0qj5wMGDsXISZvxIKEMlk6WPbNbjciP9sH6SVPw+UA5eMVt
D+0QvDWozn6CLd8ulu+701hsu+AHRVUnR7gTXmsa4bybpgpfVMRl0wbLU0HeKnjFHd7SPDBjuuPI
bwPHYOI3/yCnut11OTRpFXh86xSmjnG8tmavxx9+SR0OY00ppZTSvvPjB2+NOOpmQlrQVWxc6AhT
hx2DVz5iW9TVbfjfIPk8/xsyBlPmrsFVvyjklatQbdCjqrwYsY9csPubhRg6fIQ8BWLgPBz45xFK
u5jfadfEYf2USUJcOa5/0FAM3/u466NhWSoQdOsPTG9zewcs2AWXCPGwxZ2c/y3tefDWwFr0CPMm
jHPcT/G2D8eob52h7jKq3hy84lq+qrQHWDp9Cj6Ttit8ARg7CauO3kBkej7UajVUlRXITYrExd93
YuSYMRjoeE6mrd4K95iCTkLWhvLUh/hqScuSdMMxTNjmjrMeSMougc5ohEGrQk5CGC4f24RRY8ZK
UwdGTJqB5es2Ypr4fHcSvHabCt6//oRpQ+XrHzhiLEZvOAKf6Ayoq/XQaTSoKMvCg5u/Y/S4ccI2
h8JpxCQsmiePNr9d8Mqv1zjXQxg9Wh4BH+A0CqMnLcF5z3DkKCuF16ABOlUZksJ88OvGJRg2cqTj
uZmJrb+5CV/Qen7kOkoppZS+v59E8IraLQr4/XkQs1qibWDnwStqs5gQfnFL6/kGDBqCL4aOxOAR
o4WQER2FwUOH4/PBQxznmYltxz2Qo7F0M2/SAM8d0+HkmC7xmdMwnAwt6eR8LVqRHX4HPy14dXu/
+uUSYgvffzqD6NsEb429Ci4bpmDQYPl2fC48FqdCxSPDdXJeyR4Er7RdK6qyQrB+4sTWLwKfOQ3H
oOGjHI/zaAwePhJfOMkjpdJztmozfF+UwNohdl9tU5H4EAvmOV4v4u0dMkLYTufbHD51IX53j0LM
41uYL56/k+CVjixXGoMD337VOiI9YPAwDBz2apvia2LgEHkUfLgQ0P+GxcP7j7XSnzsL3jgheFd1
EbyiNqsZ0c77hS9U8tJm4heCDq/BYSPavAan4Fvh9ZxWYe7mNUgppZTSvrD3g3eJELxVbx+8oqay
l/h117ev4mmfELzFHYO3xZKXPti9rOWn5c4cibkrd8E7KhvVXY52vlIReh7DR8qjdp8PWY0odcfz
tFWbH4M/97RMxZiBozcCpMPotj/fu/ha8E4Tgte/m+AVLIs4hyGO+Bo0/AAy260s8bqvB++Ppy4j
vV3QvaZRgUdXDmGiYwpAZw6fPA8HLj9AXnfbaaNVlQ23k1sxcqRj9YV2fj5sLBZt/RvR2Spp3uzL
gOty8E4Qgte5ffA6tqnJwZ3fN2D8mJYIfd3/CRG8ZPcFvCzWvXZo4TlrNiK0uO1r1oL0gCvYsED8
xWEKfnMOQpmh84AvTw3AoVXynO/OHY6pC3/AneBUaHvwGqSUUkpp79srwfsxtdtt0CoLERMeDL/7
9/E45Ak8XV3h/egZ0vKUMDIyek+LDgUZ8Qh5eB/uHh6CnvB5FIyX6QXQGN7tZ3prdSWykp7D31PY
VngsIoL8EBCRjJLKdx8p16sVSH0RhQfeXgiJjoa/nx+CIhNQpu5kFLuXNAgB/SIiFPe9vBAQHgYv
1zvweBCGxKzS7nfMo5RSSmmf+38+eCmllFJKKe1OBi+llFJKKe3XMngppZRSSmm/lsFLKaWUUkr7
tQxeSimllFLar2XwUkoppZTSfi2Dl1JKKaWU9msZvJRSSimltF/L4KWUUkoppf1aBi+llFJKKe3X
MngppZRSSmm/lsFLKaWUUkr7tQxeSimllFLar2XwUkoppZTSfi2Dl1JKKaWU9msZvJRSSimltF/L
4KWUUkoppf1aBi+llFJKKe3XMngppZRSSmm/lsFLKaWUUkr7tQxeSimllFLar2XwUkoppZTSfi2D
l1JKKaWU9msZvJRSSimltF/bK8Frs9lgtVoppZRSSintNcXGbN+d7+J7B6/ZbEZVVRXKy8uhVCqh
UCgopZRSSil9Z8WmFNtSbEyxNdv359v6XsFrsVigUqlgMBjQ0NAAQgghhBBCegOxLcXGrKysfO/o
fa/gFatbvCGNjY3tbyMhhBBCCCHvhdiYYmuKzWm32zu0aE995+AVr1QsbnF+RXNzc/vbRwghhBBC
yHshNqbYmhUVFdJ/2/doT32v4BWvXJxMTAghhBBCSF8gtqY4n/ejBK945QxeQgghhBDSl7QEr7jv
WPse7akMXkIIIYQQ8snC4CWEEEIIIf0aBi8hhBBCCOnXMHgJIYQQQki/hsFLCCGEEEL6NQxeQggh
hBDSr2HwEkIIIYSQfg2DlxBCCCGE9GsYvIQQQgghpF/D4CUfDfHY1uJzX1ZWhpycHGRnZ1NKKaX0
Lc3Ly4NKpUJ9fX37j1rigMFLPhri856bmwulUomqqirodDpKKaWUvoVarRZqtRolJSUoLi5m9HYB
g5d8FJqamqQ3p/jiE5//2tpa6U1KKaWU0rdTbCqj0YjS0lIpfklHGLzko9DY2IiMjAzphSf+PyGE
EELeDXGKoBi+Go0GRUVF7U8mYPCSj4QYuWlpadIblBBCCCHvhxi9er0eBQUF7U8iYPCSj0RL8HJ0
lxBCCHl/xOA1GAwM3i5g8JKPAoOXEEII6T0YvN3D4CUfBQYvIYQQ0nsweLuHwUs+CgxeQgghpPdg
8HYPg5d8FBi8hBBCSO/B4O0eBu8HprmpEbU2C0wmC2z2WjS1ntKEulo7zGbhiahrQHOby/RHGLyE
EEJI78Hg7R4G7wemzqxFapgHrl53gXdgNEpNtfIJjWakvXiK2zdc8SKrGPZXJdwveffgbUKN1Qxd
lRrlwmtHXVUNe33TB/+CIP7DUme3wGKr/eDXTQghhLSHwds9DN4PjFWVC5cD8zFgoBNGz1uDC/7J
sDYIJ9RXwvXP/Rg7cBL+8gxFtfh3/Zh3Ct7mOqgL0xH6wAPXLp3H6dN/4Pylm3gY+hIV5roPGp6N
dTYUxvojICwLde1PJIQQQj4wDN7uYfB+YGzqAtz99WspeAcMHIUvNx5HWJ4ezfUq+Px5AJMHzsY5
z0gYhOBtsFajMDMRUeFhCA4OQfjTWGSX6dAovKgbrZWIf/4CyZn5KMhORlhwKMIjXyCvTIXywkxE
CucPeRaNtIJy2OrlFGy0m1Cak4zIp2F4EvwUcakFMNg/bCi28C7Ba6/KxN2Te/Hzrv04/dd5XLlw
AedOH8H6levxj186aho/3D2pt+oQcXkrdh94hP/Oq5cQQsinCoO3exi8H5jXg1dw7ALsuOgPpaEC
XmcOYpIjeKstWoTcd8b275dj2ux5mDFjAiZMXoAN+88gVWOHLc8Xi2YvxvL127H1h1UYN3ocxk9f
jE37j+Pgzg2YOnosRk2ejTX7LuJZZhUa7FrEBntgz4+rMWXSBAwfPRnz1+zEX48SobV9+KOdvUvw
VsR74cjOdbjwMAJVjttcayzFvZP78MMBXxjrxW01QlOcheeR4QgOEb4kRL9ArlIPcdKD3ahFUWY6
snOzkRjzFKGhEUjJKkK5oggJcVHCl4owRCfkQmcRpyk0QJWXjOSMbGSlxCFU2FZwcCRS8yshDcgL
X0airv+MPUeCUSP8uaneDk1JFmKELxPBoc/wMq1QeA459ksIIeTDwODtHgbvB6Y1eEdOxuTFK7Fw
7hRMWrINd4Pj4Hr6UOsIr0b5Als3rsTYGSuw5+wV3Lp1CiunjsXng5xwMaEK5rSbUjB/MWwU1uw5
iiP7tmGaGNDDJ2Dqqm04dHg/ViycjgGjvsKxm0+RF++PnWvnYcSsFdh24AROHtuDWVMn4bP52xGc
rUL9B54z/C7Bq06+j6O7vsWR87cRlZSLSq0BtcIN1+TEIiQ2H7VNzTAXx+DSyQPYue8QDv96ANu2
bcWJq94oMtZCnRsP59924+DxkzginPbz1u3Y98vvOPvnGRw9cgR7dvyELT8fgfeLPJjrrHh65Vfs
2X8Av+zZj4O//Ya9W37Ez79dQGiW5rXgtTfYocx5jounj2Ln9t3YtVP4+/3H4P0sCTp7z+8fIYQQ
8q4weLuHwfuBaQ3eiUvx45+uuHN2HyYMnIzVWw9gz6YNwv/LwautLsVjL2ec+vMKfB/64a7zP1gz
dRy+EIL3/Es1zBli8A7FiBmbEV1hgjYvFnsmOmHQ1KXY654EgzobN09tEs4zA3v/dIbrlRNYMMoJ
I+f+gBP/uMDT+TQWz5mGzwaOwpknmULgfbjpACLvErw1VXl45HoOP333I3buOYy/L16Fyz0PBEYk
ts7hLXr4G5ZvPI6gmFTkZqfg0b0/sGnHXoSUWFCR+RxntnyLncev4UlMIiL9buPQZuHPh87ikbCN
5LjHOLF7C/ZcC4JCr0fwnzvxzfIf8LfrE6Tn5iE12h/Ht32NTcc8oTG1BO8TVFcVw//CYWzd9zf8
I14iMS4cLmcO4YAQx5FZVR9lygghhJD/Fgze7mHwfmBag3fMUuz65ykKE55g36r5cBo/EaPHTcBg
R/CqKnPgfvMctm3ZiGWrVmHFylWYOHSEEKhtgnfwCIxdexMGIakMigycWuiE4XNWCQFbggZTMdwu
7RaCdyr2nrqAc6cOCTEtTqOYhrkLVmHl6hVY+vXXWLBgKc6HZAnB+2GHeN8leIW3M8yaUrx4Goz7
7ndx5cIZafrG+q278eflByi3NUKXFwlPvyhkpMYjNOg+/j3/G36UgteE8vTn+GvfL7gekgNxQoS9
PAnOfx7Evz4h0IjB32zAo3NHsevcAxRX6RB8cifW77+FEmONI1qbkOH9C1Z/swPRZWpH8AZBWZSM
Sz8J4XzwH/gF+OPx44e49tfv2PDdYfiE5ErXRQghhPQlDN7uYfB+YFqDd9QS7Pw7ElZbFZ7eO4mF
kx1zeh3Bmx11B6sXT8OQRVvxl7M3ImJCsXvyFAxsH7zfucEmhJhBkSYH7+yVOBNYjAZjEe5e/FkK
3n2nr+LWueOYPdQJM9ftxw3PIIQ+C8W9a5dx7LfTCMqoRE3Dhx2HfPvgbYK6IAlxqXnQWepQX2uD
Tq1EdkoMfK8dw6oVG+CfZ0JF4kNc+Os0jvz2J85dOI8Tx/djQ0vwpj3H+UO/4W5chbTFBl0WXC6c
xA2/cOilVTFqEXX5BPb/4y8EbzWCju/ET5cjYLK/WjJDn3QDK9d+A5+0stbgVRQm4fym1diwaR9O
nT6BkydP4viJEzhy8gaeJRQzeAkhhPQ5DN7uYfB+YGzqfCF4F7cGrx3NMJW9xPm9azG0TfAmB1zA
innjMWj+FtzyC0GA2xl8NW4sPm8fvGvl4NULwft7V8F75h5iQu5i09IpGLdgJQ7+dQW3L/+BnRu/
wcIlBxGRp4FjIYcPxtsHby0Sva7it4OX8TJfLe041oIx1RPfrlkJ50QFgn75DiuO3ERkTDLyCguQ
HO2GzULwhpVa5OA9KARvbLl0uXoheO+IwevbefAGn9qJjXtuQ2luGeEFCh4fxep1WxFR+mqEVwze
C9t+xOFzvsjOy0FOTg5SYsPxwO8xkvJU6Ok9JIQQQt4VBm/3MHg/MHZtETxPrsGA8cvw89VoaQ9/
NNqRFX4X65dOEwJ1gRC8z1FeFItTG5dixIixmL5gCWYtWIDRQ4bhf0LwbvLIeBW8G8TgbYaxIgtn
Vo3B8DlC8Aa3Dd4ZQvD6QqEtR5j731g8dxqGjpuE8eNGYdDkL7H7L3+UVdvbHPHtw/D2wduIkghP
HPppG/advI6wl1lQlFeiODsOt0/tw4qvtyJSqYH7hqVYKURqfrkaJRnPceXwLqzf8jN8U8qh6CJ4
rwnBq2sTvLuF4C0UgjdUnMO7aiNOuj9DkUqD4vRwHNq+Duv23UFFmzm8uqpC+F3cjy0H/0bgC+F2
lebgscdl/HLGGU8zNZzDSwghpM9h8HYPg/cDIy5fpSrOQOSLZORIy2XJ1Fm0yMtIRGR0Ekoq9aiX
9vxPQ2RYKIJCwhERG4/Y5zGIin6O5DIDGsxK4bwxiMuskEYQG2qtKEl7gZiEVBRrhQRuEB5bIbwi
o+ORW6yWVjCwGdTISH6BkCdPEBgYjKdxKVDoLGho+vBJ9vbBKx6lTo0XAa7YvfUnbNm2C78cOIB9
u37Cmk0HcOtxIox19cjy/RurV6zHnl8O4uD+Xdh78AC2rFuLoxdu4WViZ8F7FjcfREEv3Qw5eI9c
C0RJtV4O3k3bsWvHNuw/dBD7fv4Ra3eeRmhmFWrtBsTd+01apcEmPFeKzGc4d3wPNv60C/v378ZP
ew7ivE8UyoxcmowQQkjfw+DtHgbvJ06TEIQNjb146FzxoBUNDWgQFN8cH4t3CV5xp7Vaix6lhblI
io9HTFwcEhKTkZlfBr29QXqM6swa5KSnIzU1FekZWShWlCE/QzhPXhEMZiPKS0qhcRzOubneBnWF
EiqdCfIU5iYYK8pQptKjVvjC8OTETmy98AiZmRlIE7aXlJSKvBIVaoRvKc1NDTBXKVBUKn9paayz
Q6MoREZaKlJS0pCRXQSN0YYPeCwMQggh/2EYvN3D4CUfhXcL3haa5S8CQrQ3NnYyGUN404tv/Jag
b25uQtNbj2LbEXRoJzZfjYJRjGlhWz3ZRsv5PuJ3CUIIIf9BGLzdw+AlH4X3C94PgR0xN07j7P1E
WGs/1dtICCGEyDB4u4fBSz4Kn37wNqPOaobZXsfRWkIIIZ88DN7uYfCSj8KnH7yEEELI/x0YvN3D
4CUfBQYvIYQQ0nsweLuHwUs+CgxeQgghpPdg8HYPg5d8FMTQzcjIkF4HhBBCCHk/mpqaoNPpUFRU
1P4kAgYv+UiIb8ySkhKo1Wrp/wkhhBDyboiju7W1tVAqldLnKukIg5d8NKxWK3Jzc6U3p/gaEN+s
lFJKKe25Yk+ZzWYoFAoUFxejvr6+/cctAYOXfETEb6Tic19aWoqcnBxkZWVRSiml9C3Mzs5GXl4e
VCoVY7cbGLyEEEIIIaRfw+AlhBBCCCH9GgYvIYQQQgjp1zB4CSGEEEJIv4bBSwghhBBC+jUMXvLJ
0CzaTCmllNIe2f6DlHQJg5d8FMQ3ads3bFMzpZRSSt/F5rafqeIfSAcYvOSDIr4P5TdoMxqF/0oK
f9HYBDQI/21o/W8z6kUbKaWUUtqq4zOyreJnaKPjc1X8fJUi2BHCRIbBSz4I4huvNXSlN2dL3KL1
TVznsLZBtqbVJkoppZQ6PhdbPidbPjfFz9CWQaOWz9jXwpfly+Alfc+r2JVHdMU3ZIPjDVrrCFzx
DWyvb4ZN0Cpa1yRpoZRSSmmrLZ+P4uel+Llpr5dDuCWAW+JXHPVt+exl8DJ4SR/TMXYdoStUr71B
fMM6wra2CSZBY00TDIJ6O6WUUkpft9HxGdkofV6KmmtbAlhWHAl+Fb6M3hYYvKTPaJk/1DJfV4zd
likL4jdT8ZuqqUZ+01YLb16trRFV1kZoLI1QC6osDbLmRkoppZRKn4vCZ6Tjs1L8zNQJn50tAWyu
bYS1XhxQkn9BbRu9//WpDQxe0me0jO62zNdtjV3HiK5BiN1qW5P0hhXfwOWmBiiN9VAYG1AmWGqo
FxT/K1uiF62nlFJK/zO2/Rwslf4sf04qhM/LcuG/FcJnp8YqDxqJo8Bi+IoDSuJ0Byl6pekNr+bz
/ldh8JI+o3V0t800BnFkV/z5xSC8KcU3p9rcIIVumfBGLq6uR6GuHvmCudo65FbVIYdSSimlkuLn
ovj5mCdYIHxWFlXLUSwGsBS+lkbpF1NTjTzNQRzpFQebxF9Yxc9jBi+Dl/QynY3uihPrxW+dBsf0
hQohdtMqa3EjwYjDYdX4JUSHX4Jl91NKKaW0S1s+Lw8In50nIvTwzbSgUAhgtaVBil5xpFec3iDO
6eUoL4OX9BGtwSvN3YU0uit+2zTWiPONmqASYjelohYnI3QIzjEgr9KAErWRUkoppW9hsWCawgD3
FD0uvTBIo77iSK84vUGc0ysONomDTi2rNjB4GbykF2k/nUFcMkUe3W2S5hqJP8HcTDAiNM8Is9WO
2to61NfXU0oppfQttdfUQllthU+6EQ+yLNL0BvGXVHFqg7hygziXt3VaQ/sP7P8IDF7SJ8jBK4/u
ytMZ5Lm74t6k4g5qedp6HAzRQme2o7Gxsf3FCSGEENJDmoWQra2rR0KZGediDNKcXnFwSZxCKP66
Ku4wXi8djU3+fP4vwuAlfYL4hnq1s5p8IAlxPpG4IoNSeCNma+qwJ0grfTMlhBBCyPshRm+WyoZT
kXrpV9RKcwOqbY3SYJM46PRq57X2l/xvwOAlfYI4R6hlhzU5eJuldQLF9XUVhnpkquXg5eguIYQQ
8v6IwZutrpGCV5zHKy5ZJg4yidMaxOCtb5Q/l6V5vO0v/B+AwUt6nbY7rL2avysGr7yzmriGYLqK
wUsIIYT0Fi3BezJCLy1ZJq5rLwav+OuquCSoPML7391xjcFLep1Og7e2SfppRZy/Ky6enVpZy+Al
hBBCeom2wSuuZ/9qHq+4SpIQvA0MXgYv6VXaB2/LDmvVwptO3HO0WF+PFAYvIYQQ0mu0BK+4Jq94
YIoyg7gmrxC80kEo5P1pWubwMng7NmlPZPCS12gNXsdOa21XaBAPNiEeUU1cg5fBSwghhPQOrwVv
lRi8DXLwSiO88koNDF4G7yeCEIi1NTCbTTCaTDC102g0oUZcV+QTp2PwNsEkBW/LCG8Dkhm8hBBC
SK/RNnhztfWtwSvuPyOugy9OL2TwMng/ERpQGh8FT+cbuHz9Bq62898rN3A/SSWF5KdM3wav+KXA
DovJCL1eL3wxsErzknpCU1Mj6mprhdvUh18ampvQUF8Lu124HnGyVHuaGlAnvv5r66V/nN6FpoYG
aTk3ccpItwi3pdZeI83ZIoQQ0r9h8HYPg/eTogYvnM/iu9nTMXHqNAwfPgKfDXTCgKHjMW7KdEyY
MgmLL8RKh+n9lHlT8Ba9c/A2wKgqRUZCLJ6FBSMwIAAhoRFITCsQ3tANb1hmpRk2vRY5qRko0r7f
663BboSyVIPaTp6G5norKkuyEBubhGKFFvXtblS9QYn0pJd4kVgMa23D6yf2COGxrCxHTnaR8A/Z
G9YwbjQh5WU8ykxvOF8HGmE1VKNab5T26iWEENK7WK1WFBQUQKPRtD/pnWkfvOIO4gzeVzB4Pyka
UJEei0cebrh7zwX71izCqCFOGLl8Hy5evYIDP/2AXX96CsFYJ527qcmK3PhoxMTFIKNYibS4WLxI
SEFqUjxCAgLxJCwS6YWVsDlGQMVQK85MQHhIEB4HBON5Up7wRqh7Qyi+PW8M3ur6dwreOnM5Yh95
wN3DC4HBIYgIC0NI4AM4X3JGcKIS9d2OfDdBX5qHIHdfRBTo25/Yc5qbYKtIgYdrMLSd9GqjvQpJ
0Q9x/vxlPHqaCJ297f1rREVSKFyvX8L5m+FQGWve4bFvgiotHg99Q5BSbml/4uvUq+B+7Qqiy8zt
T+meZjvyEp8j+mU6tPZOqp4QQsg7I8bukydPsGPHDly5cgVqtbr9Wd6J14K3qk5aApTB+woG7ydL
HcL/3IyZo52w4NgDKKtKcWPzt/hy1lKcDimVzlGjjcfmr77EsjXf4NrjAGxfvBiLV3yDtatXYMKo
sRgzZR6+2XEOwS/LYLNW4XmgG37euBKTJ43HsFGTMG/1Npx+EI8qqxzQvUVfBa+xJB6+964hLDlX
ePPKl2uo0eNlgDdu+6bA7piqUGfWojA7AympacjMLUW1Rbx/TTAo8xDm54vYIgPEEd86mwnlxXnI
SEtBZo7wTdtga/35v7nBjiplMdLT0pCSkoGCEhXEdrXrypD07AEuX3VBQm6JtPdrWxrtWiQ998e/
F8/DxecJshXG1qhtrtPh+UMP3Lx0Hv+4PIPa5Ahe4bo0pYXISBG+rKRmorBM3folBc2NqDHrUJSX
LdyOdOQWlCAvIRqBj0OQWWGG3aBGpVoLW63jcWyuhbqwCBqjHU31atwXgjdWIQdvs7Atg7oM2Rkp
SEvLQJFCA3u76SDNDTXQKXMR7OsJN78AvMwuhqK4ECXlGtjqXhW+XV+J7AIlbPU2KPJzUKxUSo95
qvCY5xSUQt/6mhL+ga21QVVWiMz0FGRk5aJCa4Lj6SOEkP8UYu+Isbty5UoMGTIEs2bN6rXoZfB2
D4P3k6XmVfAe8YWyWo/wk99j2LChmLzZE+IjVhZ2CgMGj8SkFYcQ8fIRFg90wmcjJ2P++v3448/f
sXHtUgwcOBXbTrji+bP72LFmLkbOWYWdh0/jzMn9mDNtMj6b9xOeZFVKx9juLfoqeM2KJPi5Xcf9
wEjkllTCYLZJ27eoi5FdXIUG4YqbbBpEhz2Cq6sHvH28cc/VDaExydDa618L3jqLDjmJz+B33wte
3p64e88DD4NeQKm1oLG5DuXp8Xjs4QYPbz888PHCnXt+eJZSjsrsaNy9eR3/XLiE2/fDUWx4fZhX
Dt4ncHe7Cw+f+4hMzpdCWcSiiBdukw8e+tzBVZdIqMUR3uYalMVH44Hbbbh5+sDbwwO33R4gJqkE
NU1NsBvVSAwJgIebG7zuP4Cv30PhPPfg8SAEWRVGVKQ+R3BkAhT6GscN0CPC2wtx+SrU1ang1SZ4
DYo0PHkghKyXF7y93HHP4zESMpSobfMPX5PwBSL3ZThcr13G5evO8A6KxovQh/B7EIoitRHyXalH
frg/bvi9gMlWCX/n63D19BTum/BY+XnD3fUewmKTUV3TKHwhMaMkIwb+vl7wFB5ndzcP3PePRIFS
jx5OvSaEkH6B3W6XYnfFihVS7LY4e/ZsKXpVKlX7i7wVDN7uYfB+srQP3hqYsj0xe+wY/G/Ed0g2
mBDwy2x8MWICtlyPQ0nmI3w1cCgmfPk9XOKUqKs14LnPBSyd4IT5W/dh//79mD/SSQjejTj29y24
XTuJRbOn4rOBI/FnUAbMdb336u+r4K23aJAaF4q712/jnvt9BAaHITI6Bqk5xTAIcSW8jVEZ/wAX
rnojNrMI5RVlyHwRivuurojIVKO6JXgLq1CZlwj/+z4IiUtDiUKB3NRYuLt4ICy5EDpNAQLv3YL3
4wjklVZCU1mC5088cP5qEMo15ch4EYR/r95DbL5Sul9tkYM3HIEhkXgeHgj/kBgoTXXCg1KDnKiH
8AmORXp8IO7cfS4Fb40uG96XL8H7SRTyFRUoL81HRNB9XLt5XwjaaigyIoXAvoPw+EwoVZXIz3yJ
+x63cMMnBDkVBpTGhcHvSQyKdXbHDdAh0N0VkTkVqK1tE7xNJkR7O8PlUYTwZaEcypI8RAY9xB2P
IBQbX43wNzfWQl9VjGcBvkKYhiC9WA1NYQLuC8EdmVUmjTw31VTi0a0b8E0oQ0NdBTz/+QdXPIOR
WVQOtaoMqZEBuHPTBVG5wmNekYcgH3f4C1FeVKZAYVYi/Dy98Sgqtd10D0II6b/U1tZKsbt8+fLX
Yrd99L7PSC+Dt3sYvJ8sHYMXQlycXjURnw8ahf13XPHTpCEYPmEtgkoNKJeCdwS+XPcL0oziK7kJ
ZS/9sHfZCIxbsxlL127GBHEHuIHTMPfLVVi5ZiWWCW+8hV8uwz8hWULw9t4Qb18Fr/jzeI2lGiU5
mUh6GYeI8Cfwdb+Fmy7ueBySBH1dLZK9zuPizUdISEtGcnIy4uOi4HrNWQjNHFQ5gjcmpwRpcU9w
29ULYdHxSElORWp8BNzvOsM1NAl5KU9x75Ybkkq1rfOCa/VlSEnJg7WhCWZFHK47P0BVp3N4xeAN
kUZdi4U4fewTgDQhsGvNpQj19cCz9EIoM0PhcjdaCl5tVhAuX/JEfssIbbPwD5MmH/ednRGQWIjM
CB/c8wlDpSMOm+qMSI8JhquPOMIrBO/LMDwMjkHpG4K3wZiNGxcuwFMI7jThcUlJSkR06H1cueOB
mEJxikcbmq1IjZHvg8YmfJGo1yPusTc8ghOhNdfBXPIczte9kaezoqmhUgrewExdy4VhN5QjzOsO
vIJSUJAVBWdnFwREvERqcgpSEp7joY8rbvlHokjruM2EENLPqaurQ3x8PNzc3Lo0PDwcWq22/UV7
DIO3exi8nyydBC8aken+MwYNGYoRM2djxOARmL7JBbqGOkfwDsOUpT/CN1N4wzQK0RJ4C2smDces
zXuwfcdezB7qhFnfHsAtn1A8i34K9xtXcPzonwjKqERNL+6N31fBa1KXolChgqWmAY0N9bCZDVAr
i5AU9Qj/XrqJVLURiR7nceFfTzwJCURgoGBQEB48CsbzxGJoHMH7PCMfCZEPcfHKbXh5P8KTwCAE
BQbgsf9DhMXnoSgpBHedA1GsteDV1wDhH4km4XqbmmAsE4L35n1oOpn6LAdvMJ5ECQFeXYpnj/0Q
Hp+OkvQIePs8Qna5DtrsELi4ysGrSfUVgvcpjG0e/zqbDlH3bsLvRR4ywn3g7ZcAS8vJzTUoSowW
tiXO4e0seKvxpJPgra2Mx3khTK+7PESI+LiI9/mxPwJDniFD2W6ntiYLUoT7EBQRLwSvWPWN0KRF
Cf8gB6CwUoPsAE+4+ScLz6lwmhC894TtvlTXtl683mZAeqgHPO+/RFZyiPB8XMc9D3/H4xyIgEfC
bYhJQ0VL5BNCCHlvGLzdw+D9ZOkseIFa9TMsGz4CAwY64Ytho3EsqER44bYErxMGjp6IZZv24s+z
J7B13RIMHzgGPxz9FwH+d7B52VSMnfc19v95CTcu/I5t36/B/EUHEJGn6bB81vvQV8Fb+jISfj5P
UaQytQlRwF6eiKuXLyGmTIdkIXgvuT2HqkojLfeiKlcgNy0BaQUq6FpGeHPLkPEiBK4eAUjIVkjn
02gqkZOUgPRcJZRpT4XgdUWasrp1nmltVQ6CggJQaWuUg9f5PrSd3PTW4I1MgrnOhuzYEPh43IWH
y03cD0+E2lSL6pwnQvBGySO86Y+E4HVFYcvSYc1NsOvy4eXsjEfxhciK8IabTzBUjtUSmuuNyIgT
glkI3mxH8PoGx6JYJ78+Gk0l8L17C8/aBW+jKR83L1yEX0wRqqT7q4aypBApLxJR5rhsK47gfRKZ
iCrH9TaYyvDE0xMhEU/hceM2ovOqpOdWDF53cYQ3+9UIb41RhYi7LvAKTEZhVgzu3PFCVGpp6+Nc
kJGGtIwCVFvfdrk0QgghXcHg7R4G7ydLm+A9LgRvy2iYECNeO+dLwTt45DYkmxuEV+6rEd6R46dj
0YolGDp6NAY5jcb81fvh/6IAJmMFnnr9gyXzpmHI2IkYN3YUBk5eiL3nH0Oht7/D8lhd86bgfdcD
T1TnJcDH1RVu/hHILKpAtcEIbWUhoh564NKFuygQHiNVoi8u3HBHVEYJDCYDyvIS4ePrh/AsNfSt
c3i1qMh+iQf3biEkJhkqnR6q4gwEP/BCdFoRqlX5uC9Eo6tvFIpV1TDqlIjyccX5y4HQ1wvBW/Ic
V67dRqZSI/wj8voj1xq8EULwCvfdUJoKf/cbOH/+Fp5nlsIm/F3b4K2tzoG7EOv37kegRF0t3J9i
RPq44YazF7LUJiizn+PW1dsIjsyCulqHsox4PLhzo3UOryIxDJ6uPogT7q9OV46kUH9c//cSnraf
w9toQeTdf4RQfoz8ch2MepU0NeLBw8AOO96h0YyU6GB4+4cio1gNe40Qps21yI1+gHt3ruGC6xMo
DHb5S4cQvD5C8F67dx9ZyioYjVXIig2Cyw0XPBMec50yB4H3rsM/PBYKTbU0rSQqyA9hcanQ6FRI
Er7ERAmPudHegAaLEpHPQhGbq0JdYxPqjUUIePwYCaWm128fIYSQDnAd3u5h8H6yiOvG5iIl4SVS
SzTSwSZqdEV4ER2Ck19PEIJ3COYcDIH0Q3Jr8I7Fl6t+xdOMVCEcwhH6NAZp+QqYpSWrhPAUYiQn
LRHPwsMQGvoU0QnpKNdbe/3IbX0VvI214h7/cfAQovf2nbtw9/CA2907uOLii5h0hTQto0EIzoQw
H1y+6QIPTw/cu3cXXqHxUJpqYSzPw1N/eZWGeqsOOS9D4O3mgnvuwvlcnHE/QFyJwICGhlqU58bD
0/kO7t5zh4e7K644+yAhv1q4X82o0WTC4+oFuN33R67u9XkNcvCGCsGbIgSv8DjYNYh94otbbqEo
rJRHpqtzwuDiES0vS9ZUi4qsF3C/egUuwnW53XPFzSs+iM9Rola4P7VmLVKeCQF55ZZwO4Xb4uEJ
tzsucPcTg9cMm6YAYT7uuHPLFe7ud+Ht7Y7Ll/9FRF4lautU8G1dpaEZRmU6Aj2dcfuuOzw97gmP
nasQ+AWvlkBrQYjbsoxYeN+9jdtekSgsN0q321qeJFz3NdyPyWtdFk4MXi8heP9xdsNdVzdhu+5w
vXMbgXFZ0IurNIjPWXoU/NzvwNVNuH/CNr38HiGrVCO8HhV4InxZcQlKgMpYiwZDAdxcbsI9Mg92
YfsN2nRcuPAPfBLeb89lQgj5L9A+eHmktddh8P4fouD+bixeOBejhg7BgEFz4JVrlU8Qgrc07RFm
DRyNJd8dRUGN8IJubEBDY1PHkdtmx2kNjdKboy/oq+AVaayzQ6/VQFFaiqLiYpSWKVBZpZeuQ0aI
RIselRVKKJXlUJaroTfbpcPwipc16athrhFHNJtQZ7dAq66AoqwUCuG8OqOl9bDDTfU10Feppesp
LSuTrkMMUOkaGmpQrVZBXVUFa7v13JqbGmA1G2Ew2eRD/zY3wmrUQ1ttRq3jvOIBQKp05tbrkran
UUEpXE+ZcH9UGr3wD5Nju+LhgW0mqMuVKCstQ0WlGlqtDrpqoxSFzY11MOu1KFcIl1Uohe3qpL18
TTXioYvrhdupdnzhETdVD1O1BuXKMpQK26rUaLs42pvwvNVYUC3cf5XGAJvjPNbSeLjd9kKa4tVU
DzF47wrB+yxfA3VlhXAbS1Gh0sBkr3e89oR/YOtswraE+6colW+jcNtrxdefcNsNeh2qDBbpMMzi
46Ct0kBrsktfLJobbNIyPTppHWVCCCHdweDtHgbv/yHUaU9w88o1/HvzDoJfiisGOE5oboBBnQmX
i1fh7h8FXWcN8wHpGLzNQnSJwduICrMQvNX1SHnH4G2hWQjBpqambqK9WTqty5NbaTlf52cU/16M
rw9Bd7dDvCPd3Z9uL9uOlvP27NzC+euMKM1Pw2Ovu7jxKAEac+2ry9ZVwlUI3tgKecpNd9t9m9tI
CCHk7WgbvHlVdULwinN4hT4QgtcqBG8tg5fB+3+Fxvpa2KxWWG12eYehNjQ11sNmscJWU/faDl0f
A/GNJAWvYNvgrba3jPAKwVv5fsFLPhxNZiXC/T1xzzsI2ZX61w/h3FCFMC9/FInzNwghhHw0Xgte
bUvwNkpHBLXWNTuCV/58ZvB2bNKeyOAlr9E+eMWfUSyOEV6V8OYTJ9KnMnj/79DciFrh/WoXvkx1
nO/dhLqaWnn6BiGEkI9GS/CeFII3X1cPhbEBGmujY4S3GXXifi4MXgYv6T06DV7hzSbOI1KZG6Sl
UtJVdQxeQgghpJdoG7wFQvAqjfWoEoLXWNMEWz2Dl8FL+gTxzSSOBopvLvFnFPHbpd7eKP28ohCC
N1PN4CWEEEJ6i5bgPRWpl9a7Lzc2QCsEr0kIXnFqYX2j/LksBW/7C/8HYPCSPkF8M4k7e4kjvGLw
2uqapG+Z4rdNpfAmzNbIwSuuFkEIIYSQ96MleP8QgrdEX49KcwOqbY3SPjRi8MojvHLw/hdh8JI+
QQ5eSCO84pus7UoN4jzePG09DoXqYLC9vuRU6woClFJKKX2jLTQIn7XJShvOxxikgSV5/m5j6woN
4sqY4lTD/2jvMnhJ39Aywvv/2TsPtyqutY/+N8nNvcn9cqMm0dh7pago2LuiiF2xF1QUBVTsig17
QcWGiiAICipNeu+9w6Gj65s9gCIlUQNRk3c9z+9RmD5nNnvNPnv2NA1N1tCP97XeeV4VQnX3efJl
CQ9jtQuvVg0x1roQSyQSiUQi+eOouja7rJarr0q5GVWuj4iUX9HQnaFCq2PVOPINrbtvRHhFeIWO
RCtTbx9ca+jH2zAOYElVvd6nKKtUjcWrvnop4GF8OcmFNWSUSCQSiUQi+ZikF9cQlVvNpbBSDgUU
k1BQQ87b7gz1+ouZ1Det6l1H/9QH1hQivEKn8FZ4Gx9cU4Wtoqah8BVV1JFnqCNDk97QzEpcnhez
xTOf9ffzWOeRy9oWWSORSCQSyT88LetGlXX3c9nwII+djwtwCy8lPr9ab+kt0OrYksp6/TXw6ltU
9U3r2wfWRHhb+eiHRoRXaJP3ujVo1ltV29CXqLSqnkKtMOaW15Kp3Z2mFlWTVFBNXF4VMTmVRGVX
EpFdQURWBeFaXmWqGCQSiUQi+cdG1Ycqqm6M1OrIaK2+jM2tJCG/iuTCatK0ujS7tIZ8rW4trqjT
G5j07gxa/av696q6+J8quwoRXqHTeNfK23B3qQpdpXa3WV6l3XlWaHeg5TXklFSRnl9Gck4xiVlF
xGcWEqeSUUhMekFD1P+b/yyRSCQSyT8mjXVgUz2YUdBQT2pJ0JKUXURqbgmZheXklVVTaKihtLIO
Q3Wd3tBUowvvaxFeEV6hs2gQXnVX+VrvLF9Tp75aqdcLYVlVLYVllWTm5JOZla0li6w/SGZ6CrHR
0USERxAR8S6R0fGkadfR+/NnkqHNH6XNGxWb9N76M1KTiYuOJFytJzJST1RMHClp6e/Nl5oQS0RU
HOkZ2rozUol69Yr41Iz39ykznZTEOKJj4klv/F16ahLRr4IJ8PfHz+8Zwa+iSdbW3fJ4JBKJRCLp
iKi6KzM7l+z8YoorqinX6tiKmjqqtTq3Vpfddw+H/1MR4RU6jeZPj6q7S1XoqrQCWFldS3llNbn5
hXpBVdfChxTCuuJ4bl1xZe+evezd+y77D57gyp0XFFS/fjfzmzoK0wI54OTMmcuPKGo23K8hOw6v
q0dwctKW37dPz4HDLlxw8yIqpUDvb6zICbrKkaMPKVRDp1Wnc8zJkfMh+e9WpPGmpoyk4Lucv3aH
QjUaRUkOwd7XOeC4nQ02K1i5cjXbHA9y+2kERRW17y0rCIIgCB2BeolTaWmp5lRZFBSXYqiqobK5
8Na/PxrSPxERXqFTeG+4lPqGr1Nq6+q1wldLlSa8hsoqUtPSqaysbLlou1SnPWb5PDOGT5rLmo22
bNu6VYstqxdOpXu/aRx5lvl23vrqUp64WNOly8+MGj8f71TD22mF0Y9wWDiecROs2bxtO9tst7De
ZgkTjKexdM0BXibk6eMVxl6dz7Ahu0gurOBNRQgm3bpidizs7XoUryty8bu8iakLVpFQbuCV7yUW
zprI9IU27HLYieOuLSyZZcqEeSu5H5JMTTMnFwRBEISO4vXr15SUlJCVlU2lJrxVNbXU1NbpdW+D
8L4W4RXhFTqapkKlCpguvFqBq9UKXnWNdtdZVY1B+8wTExM/quBVZ/iy3HI8y47eJrWwkhptXbU1
VeTFuNO/by/MnAMb53yDIT+STZMGYb5gEfMmm7D55AuqG6cWxXrhuHQJ9gf9KVd/DKoqKclN5cm5
vViMNGHtSS+yy+pIuL6YYSbO+rbeVIUxRRPeyS2FtzIfv6v2TFtgS0J+Gm7H12E0cwU3g7KoU4dW
V0XS0zOsnD2XE3deUFz74ccrCIIgCB+D8qm0tDStntU8q7paqydr9bpXtQA3F96PqXv/LojwCh1O
8wLVILz1mvDWvRPeyirKDQZdeD+GJuHdcPohWeVNfRReUxR/Wxfe2SdD9d+8eV1Lku8BjIeZczko
hGv2U5kwfydxZQ3LFMU+xHHlUpxcXvLee94qUzhgMxOTJUcJTy8lvg3hHf87wptYmMm9U1sYYzqB
Hcev8iIinrwirWCVZfHiyTNeJeRQ1dhdQhAEQRA6GvWtaWpqKhXav1VV7wtvS+n9pyHCK3Q4LWX3
nfDWUq3dcaoC+WeE12z2Ymx3OuDk5KTFgU1LZ9J9iBU3Ixv619ZVF3Bh6VhGLDpGXlUZEV5HmTxm
Ci5PM/Tp7QovlXjussZ4wjYC4vKI/UjhTa6oIiXsMbu1/RlvasT0eYtYt2kr9gdO4xEQo49MIQiC
IAidxfvCW9XwTahW96o6WIRXhFfoYFoKb3PZbfrcy8rKPll4B5mMZ85cSxbMX8j8udMY0P1Xuvbe
Rnx5nT5fecojzHr1ZLD1Ufz9fXA7tx+znsOx3uGmP7zWvvBW8djJGlOLrTz7FOGt0n6uqSArPoSH
Ny/jctgZ2zWLGWs6BrPJlrjce06+oWEfBUEQBKGjaRJeg8Gg/1/Vu03S2yS8/1TpFeEVOpTmsttc
eFWBU5+5KoCqIKqnST9VeK0dTuMXHEl0dCzRkaHcOriSXj1Gczm6CNV/9+Vpa7p2+5n+I8yZMMGC
cWNGMeC3Xxk7czWPUyvaF97qDI6vno3pkqO8atmloaJBeKeciGi+BPUVefhetNOFNy4vl+Cnj/EO
SqS6vo7KshKyUuIIfHiRlVPGMmXzKSKyyt9bXhAEQRA6ClXHpqSk6FKn3ErVu0p6pZVXhFfoYNpr
3W0SXvVZq4tNPUn6qcK79swDMt/24YWaLB/G9euNk+qyUJPKJpN+DF9xCF9fX7y8vPD2vs9llx1M
GjyB7WeDyWkU3j2a8L5rb60m7pELc8cMYukxD/21x+89tFYZg5UmvENWutH8ajXkJuC6djJTF+wk
NC6EU9vmsHLXMRJLm42DVpPB6TULsVh1jOC00ne/FwRBEIQOpEl41beoLVt5RXhFeIUOpD3hbeq7
qwqgKojFxcWfLLxrTntowtusa0BFJHMH9GXG6VAKXhxmUI/f2B+Q/W46r8lPfMHueabMstlNwMtH
OC6Zw/K1J3js/4wnXvc5tdeWueOGMnjiCm4HJVNd/+Z94X1dgfu64XTrP5q1h24RlZhMvCa4Vw/Y
YDTKmHkOdyksSePW0XWMGmzMOscT+IfHkpIUw6PLjppID2TerovE5n34MGyCIAiC8DE0Ca/6FrV5
K2973Rr+SYjwCh1KW7LbsnVXFcSioqJPFl67S57kVjZrQX2dxk7jfvSyPMmVNYP4bdgm4qqaTdeo
K8/k7ql1DJ1szaELbjguGkvffkMxNjHF2GgkI8eYs3jTXu4FxlJS1fBwWcJ1G4ZZ7Ce1SBNe7efy
7OccXj+X7v2GM87cgvHjx2BiPIqFO88QklmmHXstBSlhuNotwWLkQEzGjsPCfByjhhgxf/VunkSm
UVUnA/EKgiAInYMS3uTkZP1b1JatvP/0bg0ivEKH8Xutu02ftyqAqiAWFhZ+tPC+qS0nIy2Z3OIy
3vfGWvKS4olNyaMgLYa4xPxmXRUaeVNHeXEO8cnp5BYUk5ueRExMzNvEJSaTlV9Mdd07Ua4uySIh
JZ+a+qaN1VOal0l0aBDP/Pzw939GSHgcWYVlNI029qa+lvLCbBKiX/EyMJDAwBeERUSTnlOkv89c
EARBEDqLJuFV36I2tfJKt4YGRHiFDuP3hLd5dwYlvAUFBR8tvF8Mb7Tja/qj0c7fCv081De83eaf
9AdFEARB+Hw0Ca/6FrWtbg0ivCK8QgfQlvCqAtZceFUBVHeeX7XwCoIgCMIXSHPhberW0F4/XhHe
j48Ir6Dze8LbvP+uEt78/HwRXkEQBEHoQJqEV3UbbN6PVzmXCK8Ir9BBtCe8TZ918wfWRHgFQRAE
oWNRwpuUlKQLr2pcauvBNRFeEV7hT9JSeNsaoUHdcSrhzcvLE+EVBEEQhA6kSXhVt8GmB9daCq9q
jBLhbe2kHxIRXkHnQ4VX3XmK8AqCIAhCx9JceJseXBPhbUCEV+gw/kh4mw9JJsIrCIIgCB1LW8Lb
fGgyEV4RXqED+Bjhzc3NFeEVBEEQhA6kSXjVczIivO8jwit0GCK8giAIgvD5EOFtHxFeocMQ4RUE
QRCEz4cIb/uI8AodhgivIAiCIHw+RHjbR4RX6DBEeAVBEATh8yHC2z4ivEKHIcIrCIIgCJ8PEd72
EeEVOoy/RnjrKS/KIzUxjojISOIS0yipqqdlkX3z5jUGbb68/GJqm0/Ufl9VUUZeTo6+D82Tk1tA
eVUtr5vNLgiCIAhfCyK87SPCK3QYnS68byqIf+qBi+N21qxYwqIF81m2Yh1Ohy4TnV/Bu3L7hury
LK7t3o6D8zFeZla+W0e9gajnD3HaupXt27e/l63bd/I4Ip5KMV5BEAThK0SEt31EeIUOo7OFtyzt
KQ4LzZk2dxH2e/Zz8vBhnO3XYdp7GEv2+WKoazTVN/XkhF3BqEsXegwYxfpzr6hrWkl9IY8u7cVo
yGgs19jhvN+Zffv2NWY/AbFJVInwCoIgCF8hIrztI8IrdBidLbzpfi7MMx+A3SUPcisaFLamLJPz
m+ZjtugSxTX1+u/qa8vx3D2VPuOWsHbFTMYtsCOxvNFi64t4fHkfE6es5HxAOrV1tfp+NqSO+tf/
nMIvCIIg/L0Q4W0fEV6hw+hs4c15cY4FE4cwaf4mLt97RnxaDoaqegoTg/ELSaWmUVar80NYaNyP
RSefE+Z3nHEm5rgEZjespFF4J0xaymmfeErLS/V90lNm0AS4QZoFQRAE4WtDhLd9RHiFDqOzhbe6
KJk7ZxyYPNyY0aMnMs9qMTZr1nPg3F3iC6poKrcJ97YzcMAMPDMrKEwPxm62KQts3SlRjbya8Ppq
wjum3zAsZluzctVKVqxY0ZCVJwiJzJGH1gRBEISvEhHe9vkihFclJydH8jdIdnY2WVlZ+meqLqy0
tDRSU1NJTk4mISGB+Ph4oqOjiYyM/GjhVQ+jVRRl8SrgCfduXObYfnuWazI7eORoZlrtI66sTpsl
n0PTB9GrjwXnPB9x99p5Nln0ZPSUlTxJr9CF10cTXrPh41m27QCuZ8/i6uqK66lTnL3kS2pWWasR
HwRBEATha0CJbUxMjF7HxsbG6nWuqmtTUlL0+jg9PV2vm1U9reprlZb1+N81TV7yWYVX3YWo/0u+
/hgMBj3qglJ3lqpFV32+BQUFequuKlzqglOF7+OEt57U4Pvc8npOZlEV9bVVlBblkRL3irsu6+j1
22DOhBRSmXCDob92pVu/QYw0NcXExIiBA3rSY+h4tlwMo66xS8OkyctxfZKEoWmftf2tqKqRPryC
IAjCV4sSXiW5Sm6bGhPz8vL0b1aLi4v1Oll926rq6Kb6umU9/neNcpHPLrzqX+Hrp3O7NFThd9CW
WRM38DA0jdpmU0qDTtO/z284B2TyxGEU3Xss5G5IGMHBwXr8vG6zbb4xM1Y4klzWILyTp6/m8suc
ZmsRBEEQhK8b6dLQPspDRHiFDqFzhfc1qY/PMNfclJEz1nH27jNiE5IJD7zD+qlj+bXbRHxjXzK7
X1fGbH1ETbMyXGfIxdN1I0PNLbngH8OTi/sY09+CNfbn8fbxwdvbW4+npz8JOUXvv6hCEARBEL4S
RHjbR4RX6DA6V3ihvqqE0PuuzDYbzaBBQxk5chTDhw6kh9kiTj+KIenRHn7t2pVz4aXvL/imisTA
G1gNH8vqfbfxvHwIs66/0rN3fwYPGcLgwYMbY85Zr2DKZKAGQRAE4StEhLd9RHiFDqOzhVdRX1NJ
cUEOSXGxhEdGEp+QTHZ+MVW12jarSvX+SpV1LQvwG225Korz8ikuq6SqopyCNjq05+TkYaiqkVEa
BEEQhK8SEd72EeEVOoy/Qnib0LfzDyusgiAIgvB7iPC2jwiv0GH8lcIrCIIgCML7iPC2jwiv0GGI
8AqCIAjC50OEt31EeIUOQ4RXEARBED4fIrztI8IrdBgivIIgCILw+VBiGxsfR1xyEolpqSRnZpCW
nUVGXi5ZBflkFxaQW1xEXkkx+aUlegrKSr/4FJWXUVFTrT+786mI8AodhgivIAiCIHw+lPC6eT1k
wJrFDFy3hEEbljF443IGb1rJkM2rGLJlFUNtbbSsZujWhgzbtubLzva1jNm9hf0eN0kryNOk99PG
UhLhFToMEV5BEARB+Hwo4b3h48Vwu3WM2LmBkfYbGbl7E0aOWzB2ssV4z1ZM9m5ryL7tDXG2+7Kz
z07f9xE717P37nVyS4pbHvYHIcIrdBgivIIgCILw+fhbCm9jjJ22MtbRlhcJsS0P+4MQ4RU6DBFe
QRAEQfh8/J2FV7X0qlbeZ7FRLQ/7gxDhFToMEV5BEARB+Hz8rYXXuUl4I1se9gchwit0GCK8giAI
gvD5EOFtHxFeocMQ4RUEQRCEz4cIb/uI8AodhgivIAiCIHw+RHjbR4RX6DD+GuGtoyQ/i/jocF4E
BxEelUhhRR0th6J+o+1DWX4mWdkF1DQfsu9NPZWGYjIzMikoLqeu5YLUU16Uq03PwlCtrfd1NXna
NVpQVttyxne8rqfaUEphUTHlFVW8brVOQRAEQeh8RHjbR4RX6DA6XXjfGIj0vMa+LWtYbDWPeTNn
MH/BUrbsdCEsx9BMNN9QVZaO66Y12rS9+Kc2u77qy3n19Da2q1dz4MId4otaiGxlKmeP7WGNzRYC
U3KprUphr+1m7O/Eacf2/qyK2soSwh9fZfeObWzeYovdzv1cu/ecvIr6lrMKgiAIQqciwts+IrxC
h9HZwluS+Jgd882YaW3D4ZOuuF28yJnDOxjXZyjz7Dwpr2tsyn1dR3bQOYZ36UL3fiOxORXMW62t
L+Lxpb2M0KYNmLKaKwHpNG8ALgq7xszxw+nSxYSbYalUV0Qwc1A/Rjv5txbe+ipSQ++xYNYEJi21
5fDRA2xYOI9JZiu59CiOmhazC4IgCEJn8nvCa3bAkaUXXLG/dZWdN1xZ5OKAmbMI78dEhFfQ6Wzh
TfNzYZ55f+yvPCCvsqEFtdaQi9uORUxYfoXi2obf1deWcW/7BPpOWMO2DXMwm7eZuLJGrdWE1+/y
Pkw04e3SczR2pzwpfGum5Xg5rsGk96+a8I7nVlg61ZVRWA3qz7h9z1oJb21ZDt6HLRllPps70dkY
KsqJ873GmimT2LDXjfy69+cXBEEQhM6kbeHditX581wMCiUkNZWU3BxSctIJTQjn4gNXph6xbyWW
fyYWJ0+zz/MGS07tZUwb0/9MRHiFL4LOFt7cl+exmjQEs2k2nL7uTXRyFuWa+JakRxMck0VtY5+G
6twXzBnZj+Xngol4dorxRuYc9s9oWIkmvD6a8E4yMsV8zCSs1xzgWZpBn1Sb95It86azcOFMBgyc
qAlvylvhHd2G8NZXlhLjfQFXTcALdZ9+TVboXWynj2G94zXypFeDIAiC8BfSlvDOO3uWOzHJJKTG
4O57F6c719jz4CG+Kblk52dw0f0YEw/uaCWXn5oJVz0JzIjG/upxzNqY/mciwit8EXS28NaWZvLo
8gFmjDJm1MgxTJ4+i/lW1uw8eo3ovMq3Qhp7ayMDB8zBN7eK4swwdluaYrnBjSIlpapLgya806cv
xt7JjhXzVnL6dhTVmqzG33dg+uxVnL1yGDOzGX8ovLx5TU1FGcWlFdRry5dkRnNupzXmUxdw6mEc
NS3nFwRBEIROpKXwGjs7s/9JCKmpkZy/d5oZmtiO3ruN0c67sLxwm8DMPEJfXGf+JXfuRATg5HaD
2zFxBMb6svCgI/v8n/M0OZ7niTHcC7yPzfEG8TR3OcwObz98E+J4kRyHf/RLjt08yUZ3d9wTcyip
MRCflcTNB6eZengnMy9r642K4rm2rheJ4Zy9fayVzH5IRHiFL4LOFt6Gh9EKSIgIxe+RBxdO7mft
AjMGDh2pSaYdUSV12iy57J3Qj559xnHyzl2uXzjFunE9MJm8BO8Uw1vhnTJjDWc9PHDYZM26g26k
leRwcqs187a7EhJ0jSkWHyC8jbyprSDl5V12WFlgNmkmOy74kF3+O6M6CIIgCEIn0FJ4xx09yYXQ
RCKCHrHuyPb3H1pzdmDBOReWnNnHgnsvya+sILewmKpqA+kpzzkeGEtOeQXp6fEEpWZQXFVEYNgD
Fh3Yx0YPP1KKC0nPSNDkOIG0ohJy015yKfApT9LyqayrJCc/g0eersy7eIvnGXkYyrJ5Hh1Jalkt
xYUZnLnm2Epo/ygivMIXQecKbx1Jge5c8fAnrbCK+roaKsqLyclIxPeCLb17DuDEy3wqYq4w4Jeu
dOs3kMHDhjF02FD69u/Fr4PHsd41iLpG4bWYuppzz+J5eMSOeSsduf7gKqssZ7HP3Y/c+LtMG/9h
wltXWUTA7UOYmYxhyjQbbviFk1da1WqYNEEQBEHobFoK7+QTrlyPSuV5gAfL97c/SsP8eyEUV9dR
UxLD5ssnWHzhHikV1aRE3sb6zEHmup5h35NoCgqSuXTvEoeC44mND8Lx3CHmnDzM6dBX5BXEcPje
WRbeDSS6KI2TDy5jecyJk1HpGAyp7Lh2Upt3P9bnzxJeXk9WkifmbUjt70WEV/gi6FzhrcLXeRNT
x9rgEZT6btQFjbLgMwzo8xvOARl42w2ix2/LeJKQrK9f5dULbxysjZi+dCcJpQ3Caz5lFWcDM8l8
fh2beeYMHjqIXpM34xGiFczke0xpIbwTD71oJbxv6iuJCbzCqLHmzHe4SnxmPlWND84JgiAIwl9N
S+G1cDnDlYhknj+9xzLn1sI72cWZeccdsfYI1YU30NMFs/12jL3oR82b1xiKM3mVmkRYWipxucXU
VRbgG3hNW+4oG2/c4NLzQAKTU8k2VFJRFIPTzWPMcPMhIj+ZfW4ujHfex4PsQmqqS4hIT9HX9So5
mXI1Vn5pBNZtSO3vRYRX+CLoXOF9Q4b/eSwnGDPAfBku132Jik0gxM+NpWYj+aXbFJ7GP2dyz66Y
2T+h+QAJ9RV5eF+wZfC4ubj6RPH4YpPwZvG6LJYjm63o1aULVo4Xic+vprK58JZHsVwT3t+MNuHx
yIv79+835MF9Hnk/4brjFIaamnH0zmMCnj7Fz88Pv2fBJGYUvjfcmSAIgiB0Ni2F1/zYaS6/SiU+
whfbkztbCO8J7iekkJ3ixxbfaE14K3G75MRoTSynuAfr9XlZQTZx2ZkkZmcQn5VKeEIYpx+5Yesb
QqahjPySXCLiXvEsKYPM7Gj2uB9j9nUfIguS2a8L7348s4qoeV1BclY6iVkZWjKJT9ckPMKL2W1I
7e9FhFf4Iuhc4VXD61YS63MFy3Em9OnZm759+9Knd09+GbeMy8/TSH6wi5+7duVKbMOoC295U03y
i9ssHjaGlXtu8vDqYRbMWYvbq3x9WvBVO6YPm8IJ91DtrhNq0j2Zam6lCW8a1ZWJbNCE9+euv9Kr
d2969erVkH5DMZqyG8e5P9Pt55/p2buPti+96a0yaA57Tj2n+v29EARBEIROpaXwjnLcw97HL8kr
SubiPVcmNBPeWdcfE1dUQWqIGxu9XunCe+VCg/CanbqPob6GcN/jTDzqxCQtSy6d5XZYANcf38In
r4SwaD9WH3Ni4hEHDjwPJD2voYX3feHdw52sQqqLQrE85fx2XbbPwngW5M7ENqT29yLCK3wRdLbw
Kt68rqemuoKCnGxS09PJzSuksqqG+tfatutr9W3Vt9GBVi1XW11NbV29tm912n7V6ssoXmvL1VTX
UFff2Cb7Rm2jYZ2qZVkt1/Laraqqprq6ltqalr9XqdG2I+27giAIwl9LS+Edab8Jy4vX8EnNp7ww
Dc8n7qxzPYqdhw/RBaXU1WSx/+IRluh9eN8J75gDe/ApeUNVZT63H1xg9ZXLPEwuojAnifuP3fDN
r9TkMYKj18/g4OVPdHElNaUpnLl1ikU3NeEtLCci4gm7z+1nrXckRVW1ZCQ8ZZPrYbZ6vqCsrpbs
GPdWQvtHEeEVvgj+CuEVBEEQBKFtWgtvw5vWlly+xtO0PCq1Ormurk6vo6tK0zjndoRJB+yYf1cT
3qpyTXgddeE1cd6Bhct1wotr9IewVSoNhdx+fB6TQwfY6hOsv1xJn1ZXRlZxEfkVdeTH+bD5+g0e
puVTrU1MC73J3GO7OBAUR2Xd68Z1vaEoO4w1h1sL7R9FhFf4IhDhFQRBEITPR3vCq14tbOy0jVnH
9rPuwklWn9nLBE10m0ZpaC+m+3cy1eUgS087M63FNIvDDlie2s/Uo7v1n6e77GHGUQfGtrEePYf2
YnX2GAuPN8z/KRHhFb4IRHgFQRAE4fPx+8LbepSGPxLeLy0ivMIXgQivIAiCIHw+RHjbR4RX6DBE
eAVBEATh8yHC2z4ivEKH8SnCq+aVSCQSiUTy52MwGER420GEV+gwPlZ4ExIS9N9LJBKJRCL58ykq
KhLhbQd1fkR4hQ5BhFcikUgkks8XEd72UedHhFfoEER4JRKJRCL5fBHhbR91fkR4hQ5BhFcikUgk
ks+Xv7PwGmv7bLxrM4Hx0S3144NQ50eEV+gQRHglEolEIvl8+bsKr5LdUbs2sfLsMRJyMlvqxweh
zo8Ir9AhiPBKJBKJRPL5ooT3urcngzetYMiWVQy1tWHYtjUM2762QYJ3rNe7BYxskmEVTSS/9Jg6
bGHZmaP4xURQVVvTUj8+CHV+RHiFDkGEVyKRSCSSzxclvM+Cgzh6+zrH797khMctTj64w2nPe5zx
uo+r9wPOPn7IOR9Pzvs+0nPhideXHT8vrgY84VVqElU1nya7CnV+RHiFDuGvEd5SMpJiePnsCQ8f
efLkWTCpeaUYDC3n69wYysvISU0gPiWL8jamf0jKCzOJiYwiOasYQxvTPywGcjNTSE7PpqjU0Mb0
jktRdhpxyZkUl5a3mvbpMZCTnkyidh47dr0VFOdmkRgbQ0JaDiVlrc9NQWYSkZGRJKQXtJr2ISnO
zSAhMYX8opLf/fwM5SWkJsSQnFnYappEIpF0ZJTwJiUlkZ+fr/+/tLRUFzz1Qorq6mq9Xq6rq9Pr
6aY6+5+COj8ivEKH0OnCW57L00uHWbdgFhPHm2FuYsL48ZOZv9gO37gcyv9C6S0tyOTxyTWst71L
YRvTPyQRN+xZOHcW8xzuU1jeWsjaThkpYb7cvXWb0MQ87ecSnh0/yAbnq7xIzm9j/k9PWV4CHpdu
4RsQq+1fBfEeu1iz/BCvErJ/V/B+P2UkBj3i9p37RKQo0Szi8X4HVjm4EZ7Ssfuf/OwydmvmM8f2
PKEJOS32OY8b662YPn0Gqy6HtVr2Q5Lkf4qtaw7iH5JCWRvTm1Kcl8qZhYtYfyuy1TSJRCLpyIjw
to86PyK8QofQ2cKbEXoTm0lDmLRgJUfPXMD96lXOHd2BSdeejF1+jeySjm0h/L2U5CbjZmuC0cRz
5Lcx/Q9TmsyeyUP48btv+ab7TJ5mlLWep82UEux2mFUrNnAhMA0ljB5bFmOxfC/eMTltzP/pKUv1
Y6P1Ug5cfkS2JrzZITc4ceQG8Wl5f0J4S3l+zpGlq7dzIzhD/zns5hWOX/YhIauojfk/PXEezkwe
8TPfdJ3IWa8IXdqbppWnPsa46/d88823jDnwrNWyH5K4O3ZYmK7ltk/c7wpvYXYcOwZ3Z8KJl62m
SSQSSUdGhLd91PkR4RU6hM4W3tiHzkwa+QtbXG+SVtggiKWFGVzdtoCxi8+SVaJ+V0ywxwVs1y5l
zjxLFm3cxVWfKEorysmMDeXuuVNcdrvIXttlWFmt5sjZuzx5fBeHrWuYM2cRm/deISwlh3JtPYHX
D2vTL3HxmD2WlnO16etxuRmgt+iW5KZwY7sZRtMvUaD2oyCTFx7n2bJiEXOsVrLz+C0iUlQLbOvj
UMkJPs/o3sPZ7LgN0//+wuprEQ3Tyss0sb+Po+0BnqY0CGB5cTbBXnc5e/IGPj7ubJxqRv/+IzCf
b4e7VwBu2xczes4K7J13Y7PcmjlLbDjhHkhBUWnDOgsTcD/qoO3/XOZbreXk7ef6PpfkpfPM46J2
jG6cc3HSpi9g1UZn7j2LJjXuBWd2LGHgbz0wNp/HqftBRPjewOGoO1HpDcJblhPDtcP22nJzmDtv
Jc6nPEgq0rZnKCUnMYTze3ewWJs233oZjieuE56SSpD3NdZONKHvQGMmLdzJPb9g/G+cxuXKIxJ1
4S0i4vENtq9dyNy5c1i2bR+ewamorg/F+el4njzIFY/7nHa0Yc58K9btPop/eHqr86sSf/+wJrzd
Nan9kQUHbpGYW/J2Wvj51fzwn+904Z10MEBff0lhOt5XjmKzZA6WmujvPH6FkPimm4gSEsP9OLpz
I1baMW3YfUjbhwUYj1/LnacJZEY8YI+LB4k5hY03A2UEX3fE5VEsRZrw7jbtzqxTwfq6ygpzCHl4
ia0rtWtlwQq2H75OWFJuq/2XSCSSj40Ib/uo8yPCK3QInS28KX4nmGbai37DZ+N4/AaBYbHk5JeS
mxxFSHQapQYDyQ/3YTx0AOaWq9m0YRWTRvdj9MzFeCbkE//UnfVje9LX2IIpVkuZZz6O4b0HMXyY
ObPmrWDx7IkMGTyUda4PScnP4fLqMQzq35c+Q6exeostyyYPpecgE9ZfCX5PePOLsnjifohRRqaY
TJyP1exJmGr7sGrPScIz30nWuxRwb9MUeozcQFBsAkemdeGXQbvJ0KYZyoqJfuhEvwGjOB/WIEFl
efFcP7qZudabcbt9noVGw+j23W+MGLuCK57+3HRYzKi+v2jrm87ideuwnNCXwcNGciM0STsnqbhO
M2dgj4FYrlqD9bRR9B41kU3XQ8hLjeDcFgt69B7M+InTWLZqKZPNjLFYvpurN2+xZ81cfvulC9/1
MWPbJX/8L23EbNJOAqK0PxhlKRyfM4WB3ftr692qif5cfuk9ktm27iSnReG6whSj4WYsXrWepbOn
MqLneLZpNxMeN09hOXwwXb/rpYn0am48ec51u0VMtz3Jy6Q8wu/sZvrYwfQZMxWb1UsZ17U7w0zM
ua6di4LMKPZY/Eq/kaaa4C/BxmY+5iN7sGjzbqLyW7fux993YPIM7UZlqhHDJ27DJyKtob91WSI7
jfsy2moJJqqFd38ApUW5PDhsxYihgxgxZQ5LLWdh+ls/LNfu5FlSIanBd9m9eDQjx5hjtXIl1jMt
MOrflR+HL+dOYALhbusYYbaT0MSmrhMFnBr9C8aHAt8TXkNxDs/vHcfIyIRRFpZYz53K6KH9WWZ/
hNCM4lbHIJFIJB8TEd72UedHhFfoEDpbeEvzU/G85MzkAQPp1b0PQzSpMzEdwzK74wQmFegPrgW5
zOS/Jts0kUwmLSWWR9fsGTbMhMuvsonxc2ORSX+mbjzJ89hEgu+exGrsEKYv34V3SDyJMT6sn2jC
mDXHCUtJ5fKSYfz8/WiO3n1OUlo6STEvsZv6Hb8N30B4RpPwXiQxyg+H2UaYzduDf2Q8CbEhXHFY
zoTxVpzwiGr1dXd5RgAzTAYw/+BDsgrLSL67lX9/14MzYQW68EY82MnPvfvjGtLQuliWG8eVg2uZ
ZrWVUG0/PA5sZ/aU+ey78YKsvCw89i5m5BALdp17SHRyCvGBFzDt2x37uyHEeO2h3/f/Zte1AOK1
aXFhTzliM4khFlsIiY3glI0RA4zGcfZRKEkpcdxxtmX69GUc84og6YUb86fOYLXzBV5l5PPq2gpG
GNnyNDxDu/k4yOCu/8fyw/eIS04nLTGS83bT6DFwEV6Bd1k6aCAbTj4mITmVKH93bGePw9LGmbC0
NG7vXq9tYynH7gSTXZCN+6bZTFx7hBdRwWyfogn5xE3ceRZGckoSET4XmfbtdwxdcZ3MjAi2m/6P
fpO24x0VT0p8EOf2LMN8hpV2Q9P6gbD4+/ZMnrWJE8f3YWpiwr67geSWGsgLcmVAl6GcfHSTOZrw
mjg/JTfBl1n9fsN4xXFeRMeRGBvKjX0bGdt7LLYnPLhzYjumRpPYfuaBdkzJxIU8ZNPk0XTts4w7
AQmEXVrEgOHbCY5vEt48Dg7+FyOcnzUT3iBy4l/gPG8kxjN28yRS205cGNed12o3GnM45B7e6lqR
SCSSj4kIb/uo8yPCK3QInS28KsUFOSRGhxPg85CLp/azeo4Rv3TvQb/BywnM1NadGYe35yNuXHBh
85oFDBrQk7668GYR4+OGzTRNWm5F6i19xYlPsF06j/X7L5Jaotafx9XV05mw9hjBSalcsBzGgMUn
SMhpankzEO22nB+79uFiUHSj8F4gMvgBq4x+pq/xTJavWsKKFcuYNM6U/+s2GaczARS3OIaIm3YM
7vUTo1btxsX1HKecZvHdv75llO19StsQ3nJNeK8dXMe0hXbEFpXy/MI+Fi9YwbmnKaguAPd3LWbK
ot08Cs9skK3CYBYM6YudexB+LrP5/j//wmLBYtYsWcKi5cuw+PV/9BhgzNnHAZrwTmHiTBdS9BEe
SnhxaT+LLJdy2i+J4iRvls+dh+O5+2SXVRB1faUmvFt14Q0+v4hu/5uE59sH5QwUZiUSHhFPniax
US+f4HH7OkecNmE5zYgeXXszz+Yg8cUl+J+wY8GiDbi9VH2QC7mtCe8UTXj9fK4wZkhvrF28ySpq
7NNsKMJj4yj+12OTdhMSwc7RvZh5OLBBDMuyeXx1L3OmLcAjtvVIC7rwTljPzQdPcLIYw9gNF4jN
zOfBJmP+Z2xPQtZzpivh3edHnM9hfu3eGyevlEZhLSc9zBO7WROxXGCHva0lo+ev50FUY9cDQwkB
Z1ZiYmTDHb8EXl1exMDhdu8L77B/YfSe8L4kLcKHdcZd6DVyhn6tLNc+j6kWZvzYzRy7Y34UtTgG
iUQi+ZiI8LaPOj+fTXjVB5CXl6dvXJ184eumc4W3lLCHZzh66R5RqQXaNVNKUWE+WenJ+F3YQpcf
u7LvcQovzyyjT+/e9B5lyZZdTmzfsoReTcL72I0106ew+16svs6S1GdsXbGQTfsvkaYLbyG31s9g
0rrjuvCenzsM0603yMxv7AurJe2xPf/t0o3DPq8ahfc8UUH3WT2kCwOGTGfdprWsXbuWdRs2sMHu
CPefRlHS/DjKUzky3YxfvvuW7j/+xM/dutG1Sy+9L+n3XWfyPLO18JZkRnHefrkmvA6a8JZowruX
RbrwJqMLr/1iZqzai290dsM2ikOZM6Qf2zXh9T8yje///S9mqX3Ssnbdetas3czu3YfxCXrBqXWT
mb7kpt6nVxfey/tZPH8pZzThLUr0ZtncOTie9SCr9H3hDTkzn24/ruFV3ruv4Q0G7TMpziUl7ilb
zfvQf8gwbb9scXTaxaLZ07C0OURCcfE74X3xvvD6e59j1JBeLD8fQE7xuy4KAYfH8uNP83maEIH9
mN5YuoY2nsscvK45M/P3hNdiLbe8orX9XcXwQTY8fOLJ7IE9sDr2nOKil5g1Cm+89x5+6tGHg8/e
PfiXE+vHvqUWzJyxkg3rZzPaejNece9akmPvbsV83HruPGlbeI+1I7wbhv2PPgOmvnetrLc7xB3f
iFY3RxKJRPIxEeFtG3W86jwo9zAYDK189EPzp4RXfRiqlVek9+unc4W3AI9tSzEZYMkVn8j3xCD3
6TF+7vJ/7PIO5ciA7/m/9VdJy8gmPy+TYO+jjBxuiltUbjPhjdGXK/4D4b2yeBjdB64hOCP/7agE
fgct+KnbaLwSkt8X3nFDmGN/m5z8PP0mTg29dcH1HF4vE98bpzcn9CrmI/pgc+wmUfHJpKWlaUkn
3nMf3373X2yuRxDj46wJ7wAuhDc8tJYZ8YRdM4Zowuv4TnitV3EuQD3M1SS8e94T3tmNwhvsuoQf
/tODGwkN+5WXk0l8wHV27TxPREIIp9ZPYvoy98ah1doW3r2XPMgxtBTeZZrwduHcq4YhygzaDUiU
+zaGDB3IsdN29B00nMOesWTn5pMW7s2eZZOwXK0Jb0mj8C7dhFuQGqXhnfC+eHmfycP7M8lO3WQ0
9X3OZp/J9/xkcpCktCbhDWmY1ii8M/5AeG94xVKc5MnUEUP5pWsX/vMvM27FZFNeGMBYvUuDP+kh
F+ndrSfrLjUNUVZKzJNrWI80YsmWU5zasxqjCcu5rLeqq+k5uK20ZGDf5dx5lqC3eA/4zYaA2MzG
zzuGlf/5tm3hNevPlK03314rSSE+XHE9w4OA+E8e01kikUhURHhb0yS7yjWVg3wW4VVRGy4uLiYn
J4fU1FSSk5MlX2lUIVNJTEzUZTYuLo7Y2FhiYmKIiooiPDycV69eERwczMuXLz9SeCtI8jnNVJN+
fD9wOrtO3ibwZQi+d08wufevfPetOb4p6RwY8g0/DFyN58tXPLlxlIk/fM+v/Yax3yOUyHaEd70m
vA1dGhqEd4wmvC+V8Ko+vD/8mz6L9+MTFs6Tm478oK2v27yzZDR7aC0zM5Lzu6bRddBoNqr9enqP
jcun8fPElZo4JjY7hkIe7p7GwG4zufUivkXLbxRrv/kX3YY78Sr6NsY//YLFjnP4B3rjvHE6//mu
G1M04Y1qFN6pw0dhvfUkL2Jicd/RvvDmpz/G/Icf+GHAIu4FhBDkeYmFvX9h6Kg9RKb8gfDGe7Js
tinzbGx5GJJM0CXVh7dBeMtSPRn+Sxd+6LuM+y8jCfI6z7j//kTPEbvxcrfjx1/7snzfDQKfeeO0
fi7/+Xc3JlvZ8zI5WxdeC+0mZIW9K8Hx8bhtbBDelwlpuK0ZSY8u37PI4TzPnvtybMkgvv/3d1hf
DCcv/dOFt8yQx+XlxnT/4Rt+WeBChmqZbhLe/QEUZsXiMO5bfu4zCPtzHnjfPoONRXf6jJ6Oi288
we4HmD3o31jMX82tx8+4c3wzYwZ05dtBy3B/rl3rng4M1s7r0v3nCQx6wqEFP/Pvb7/B4j3hDaZY
+7/bnpn81H8Uq4/fJDDgAdtWz6Lb+MUc9Y5vdQwSiUTyMVGSq16oo+rY0NBQvc6NiIggOjpar4tV
nRyv/d1V9a+qq5vq7Zb1+d8pyi2VYyrXVM6p5L+li35o/pTwqg2rHVB3IeqDkny9US23KgUFBfrd
pWrFVRdZVlaW3m9GXXQpKSl6IVMy/LHCq4Z6ivW5wqyRA/iPJirffqvyDd8YWXMlKF2TmgoSHu6n
+zff6NP+2+Unpi5fwuif/42RxTxueLQlvKuxPXiLjDK1/gbhXbjzDBFp6Q3CO3YqM4b9wL//1bCt
PrN2EZarhiHL4N6BRY3DkhnIin+Jw3JzvWuC2vbPwyax53oAOaXN9r8wks2TxzB2zSki01oL2rN9
U/jv/7pwOViTwJ1TtHWp4/g/+vYxYtasGcywPkaCJuZZ0X5sWKi21Z1Nh85xfltL4Y1g0ZD+ONwN
o7DMQObLy5rYNZyTb//1Pd2NVvMoNp+ClFec2jyb6evbFt6KvEhOrptOL00S5++9zGO3nYwavUsX
XtUSmebvisl/v29c73f8NGYNvsmF5KVFcMB6eOO5+JH+A8cwYaqx9rMxG7Y/ICHcixWzR2s/92DH
GTcubJ3N1A2a8KoXaRQl4rpuCj/999/6etU5WHb8kbZ/Bk3eWwpvLj7XDmI1YyGeCa3H8I2/v5fJ
MzZywzdW7/Ob5neEQb27sftuKEXqzWuNwjvnZBAVhjJy4v3YPKl/435/Q6/hYzn+IKThxqQ0C79L
9pj3/7HheLsMY8SAHvxqsoo7zxMpK0vi9OrBdPtvw3n+ZtI6HJf0aGjhzYlj78SmYckM5CSHsX/1
xLfXSrfB47G/7Kd3G2l5DB0RdbOpuk6MGTMGFxeXt89NSCSSv19UXdwktUpkVZ2rvklU5T47O1uv
l9U3S6qebqqzW9blf8cox/yzsqvyp4RXpUl61VfeaqckX2/U1wUq6k5KFSQlvqpwqYKmpFcVPHXH
1dQK3LKwfljKyMvOIkVbV05Ovn7tvDdd24/CQnWRl2kiU05ZcR55BR875FOB3od3tP1tMgsabsZy
c1uPBPBeNGkqK1HCX6wdf+thsj4q2jEZ1Lks0taly/ifTan+h059Hq2n/ZmUkqfd0GTlvT/msKG8
nKL8XHLzCnXZNKjuLIXF2jXyYeelrChfv1Eq7CQJbC8G7XopLtBu1HLzKGnjvJdr11axdl2XaMfT
1ss3ivLVfjf0EWs57b2o67LxWikq+rBz8ilRldq1a9dYvnw5mzdv1uPh4aGXzZbzSiSSrz+qrlIN
Sk2ym56erv8tVY1PTaKr5lF1dFN93bIe/7tFuWVHyK7KnxZeyd8j6mJSUYWu+Q1Mk/yqwqYKnbrT
VK29ny68f0UKuDhtFCO23ySj4N1DaxLJ1xR1k3Pr1i327duni+758+e5cOGCfsPZVAk0peWyEonk
64uSWVW3NoluU0OH+r2SW1XuVX9WNW9Tnd2yLpe0HxFeiZ6/l/AW4nPcDqcrT8kv/tDX/kokX1ZU
ubt//z6Ojo74+Phw584dtm3bxqlTp3j27Jn+1afq76cEuKl/W8t1SCSSrycivJ0bEV6Jnr+X8Eok
X39UBefn58eePXt48OABly9fZvjw4fTq1Uvv0zt16lTMzMywsrLCzc1Nf9BF+vhKJF9vRHg7NyK8
Ej0ivBLJlxFV9lSF9/z5c70bw6ZNmzh9+rTesjt79mwOHTqEnZ0d8+fP17s8qIfaevTowdChQ/Xu
D6rMtlynRCL58iPC27kR4ZXoEeGVSL6MqIdDT548ybRp0xg1apTemrt161auXLnCwYMHefz4sd6i
q8RXzXvu3Dl9+vbt23X5VV0dWq5TIpF8+RHh7dyI8Er0fIrwqoGwJRJJx0WVRTXm9Y4dO/QW3atX
rzJhwgS9+8LTp0/1cqnmU2VVlVP1chhVLtVIKhcvXmT9+vX62J1qPS3XLZFIvuwoqRXh7byI8Er0
fKzwqgdlBEHoWNRbhVTZ2r9/vy68asD527dv4+zsTFhYmF4mm8bKVlFDF6kKUonvjRs32Llzp/7z
P+ENTILwd0PVwSK8nRcRXokeEV5B+PwoUVUVnOqyoLopuLu762VOlUPVAqRGZfD09NQfYlMjOKgH
2VQ/X1UJqq4NSnhVa68IryB8fYjwdm5EeCV6RHgF4ctAtdaqwefVm9V2797NixcvdNlVBAQE6HQT
cIYAADQuSURBVF0XlOQqwVWtwKq/ryqTTk5OelTZFQTh60OEt3MjwivRI8IrCF8GqnVWlUE1SoMa
g/fo0aO6ANfV1REcHKx3XVAtwCpnzpzRH2RT/1cPrKlpSpgFQfj6EOHt3IjwSvSI8ArCl4Pqy6sq
u5s3b+oiq8biVf151Su+lfzGxMQQFRWFv78/hw8fZuPGjXrrrqos1bKCIHx9iPB2bkR4JXpEeAXh
y0K11CYnJ3PixAlmzZqFg4OD/pBabW0tQUFBencH1a1Bjb27ZMkS/SUVqvwKgvB1IsLbuRHhlegR
4RWELwvVtUGVTTWurhpjd9y4cdjb2+uSa2NjQ9++ffVxevv164elpaUuw9K6KwhfLyK8nRsRXome
v0Z4aynITCLkuT8PvR7xNPAVOWW1vP6UB8rf1FKs7VNeYRm1n7L8R1JdkkdqejaG6lpaba6qkMS4
OJLTimilG69rMRRlkZSURmFpVcupH0R9RS7xCZk0PLbUPnWVZeRon09BSUXrfRS+SpT0qjLp7e2t
S+7ChQtZunQpy5cv17sxWFtbM3r0aL3Lg6oYBUH4ehHh7dyI8Er0dLrwvi4l8NJh1s6fySSL8Uwc
OwYLi8nMW2iLX2rJx0tvbT7XLx7D/twdEkvqWk5tRW1OEM62F8j4NOckM+AEtquPEBqX10pqq+Jv
MnP6DOZbO5HawkqrC1N4eGoTM+dt4OTVMD7lcaKK2IvMnbeQ+D8w3uIEH07Z7+LanUjt1kL4u6Ba
bVX5Uw+xqaHI7t69i4+Pj/6CisDAQH2IsoiICL0cC4Lw9SLC27kR4ZXo6WzhLYi8w/pZxsxfb88t
Tx9ePHuG160TTO0/hHHLblBSW99ykd+nvpzQQB/u+b8it+KPl62NO8vA3jOI+BTj1Ej3dGC6hR1+
Ydm03Fp5xAm6dOlC957DOP2yoNmUOrJePWKTSS+69LVg8zG/P2ylbYvqqCP06GnKK0PLKe9TEOGO
3eKlHHQN/iSxFr5c1AgNqmyqMqkqPlXpqaHKVJlVZVX9X8beFYSvGxHezo0Ir0RPZwtv2pPjzBvf
H6cbXhRUN7SR1leX4XV4DTPWX38rvDmvHuCwyppZs+awat0e3AMSqOU1+UmReF25hM8zb47tsufY
OXc8rt/g5u2nZJfm8/jqCQ4ePcS+betZOHc2C1fYcv1pAtV1r8kKvMSiCSPp1q0nC1bt4mlaFfU1
FSQ8vcH2ZVbMmGPNeqeLhKYWN+5tDWnR/hzatoa5M2awdvcRzu61ZtyU7fhH5rRq4S2PPElXTXhH
j/wNc5u7NLWzvakuJMB9D8N6dKH/kAlsPuKvC29VYSqPrhxj5WJt2/MXY+/iTkJu6dv1FmjbPrjV
htmzZrJo83Hcz6/VhHcG4aU15Ibfx8H2EC9zGtT5dXURoV53OX/uMXFht7FbtoJD50IbWnhrCgm+
f4m1y6yZMcMKu6O3SC2paLX/wteBEtrmaf47QRC+fkR4OzcivBI9nS28+cGXWDh5GINHzsHJ5SZB
0SmUGOqoLM4lQ5O9eq3Orki4zljjEQw2WojjPifWzhuNyXRrXF9mkvbyIZvNBjJ85HBGGE/B8cwV
Du3dxoY9rkTlJnJ0vTXD+/XFdPYKdjrtZInZcEaNMuVKSBbxniewnDKOLl1/pu/MrTxOKCYp8CKm
JqMxnbaCzeuWMc1oIFabnQjOqSQ79C67Fo1m9JTZbNhhx+oF0xg9pCfdx27CP6Zt4e3WbQpnzm6i
/4gJPC9qkPfyzAhObbZg/Fwb1ixbzua9/hiKk7hwaBPDBo1h7oLVrF81g7GjRzBx81kiM0sxJHpi
PcuCvqbz2bFvPztWTGLI4D6a8M7mVUkl8Y+dGWk6kZvx5fo26stTuXVyG8s3HSUkuLnwluF/xIE5
Q0dhuWwNm23mYmRsxGSnO2SXfUo7syAIgtCZiPB2bkR4JXo6W3jrq0sJeXAOq9HGDOwzgKHDRmgC
ZsLibccIzqzg9ZtqPFb2p/tv1vgm52vbLyElzItNk41ZcNCXhKD7rBvVhxmLduMfq161msKZvRuw
2eVCVHYCB23mM3y6LQ9eJlJSVkpB0hMWDB/EIJur5BUXkR24n1+7T8Inq4iivFRcF41izKz9ROYW
UlyUzYtbx7G2mInj+cfcO72TcRMWcfxeCMWlJRSmB7Hbcgp9h2/EP6pt4f35l+m8SAxiWZ+BrLqR
oJp3SQq6xZJJU9l10Y0jWzWx3uNLtO8FVpiZsmbXRWKziyguzMb39AbMTcfg6hOCh9M8hvWewdXn
8RSWlVNSkM6ZRf3fCm+ctxODjMbiFtcgvHVlqdw4voXFGw4Q1kx4C+I92bzAjHV7NZFOV8eYx4uL
WzE2XoB3Qj510igoCILwRSHC27kR4ZXo6WzhVdTXVlFalE9KXDhedy6yc+VE+vbtQ/9BSwguLObE
mK6M2O33VsZe19dSXqzJmqGC1Of32TBjFjtvxjRMr8vhXAvh3XjkNqkljY9rvanDb6+2fqO9ZFXW
Yog8Qfce5oRXvKG8IAGHCb9p02axdPlCFi9exMzpU+ne04INm104sHMR09Y6EZjROKbpm3oirm1g
orkt/uHtCe84wstL8dw6BtMJ+8k15ODruprJ81byNCoQlw3LNeF9TJC7C0usbDj3NO3tg3qVKY9Y
MH0Mm8/f58RCC0avvkRG0bsHkAqeO2rCO6FN4a3XhPfWcdtWwpsSeI4lUwYxarwF1lbaMS5fzowR
Q/it2684PoqmUoxXEAThi0KEt3MjwivR07nCW0e0lyvHLj8gIbeCN29eU19fR02VVrgf7qNf754c
fJqEi2lXzI9FvlvszRte11brA/Ar4d1iackB77TGVb4vvE6a8G4540G64d0jZZHn5tF/5AFyNeFV
D5b92mM84YY3GPIT2DuuBwOHzMFu93bs7OzYYW+Pw8Ez3Ll1g/12Vkxdv4/nme+++k/z3Mm0yXb4
v2pPeMfySttO9sszDBxhymXfJxyYb8p8p0cUJD/j6PqFuvC+vKkJ7+L1XHyR9Xb52qwnWM0ay4YL
9zhuZc6YbTfJKX237crw45rwWrQpvDUF8VzZs0YT3uPvCW9qwFmWTh7IBO2cbdrecIzb7Z1w2nUQ
v4RCalsehCAIgvBZEeHt3IjwSvR0rvBW4r17LeMGL8Q9MPG9EQQMoWcZ0Oc3nLXfu5h2oafRQRrG
OXhDaWYMB2eMZN6qG8RqwmurhPdx28KrWninrD9JRGZZ45rzOWoykt8snMmtahDe7prwRtc1Cu/U
wUza9kATv9f6sE9lmbE8cjvP/ScBXD28mfFztnA3NLdxXcXcWLmQkcM2tvvQmi68SqYL4rAb1YVu
3box1GwKlyKKKU15J7whd12wMp2O86WXNL0TK+vZaWaNG4STuyfnbSYweNhaQnNK3m4n5PAUTXhn
EV5aReLToww2NsM9seEsFsQ+xWnuqFbCmx1ynZUzzHC86kledcMxvs4L4rCDK5G5Za1GmhAEQRA+
LyK8nRsRXomezhVeyAtxY9G0UXQbNguH03d4GfIKv3snmTKwH91/mUtIQQ2JN5drUtqDuY5XCIt8
wVlHK/oaT2Cvb2pDl4b5lji2EN7VjcJ7XBPeAV27smT3cZ6+CuXGnqUM7NuTlVfCqdYktzz0CL/+
+ivOVx8Rm1HA8yur6DloBIsPXCco6AkHdiymp7m1JtRJxD48yRLjn5mxbDP3/J5z59gmzIf3oovp
RnxjclrJYoPwmunDhtVXlRLoupiuXfowcdZ+MrSZ3wmvP4WpAexZO5neJvPY7XoPr1suTLcw4uex
2/CLziX3xQnMRvVn1CJn/EMjeHrNnq7acak+vOHldeQleTKx/xCm777Is+feOG+aqcn1AKw3uDQ+
tLay4aG16jROblnCwD4TcdLOd+gLbxxmjKZ/j5W8yChqdQyCIAjC50WEt3MjwivR09nCC6/JCL6P
zcwJDOrbV38tat++/eg3czMP4oob+7NW4XXURn9VqspQYzO2XfSntL6e9OBH7Fuzikshja2udXnc
PGKHnfNZYnMTOKAJ7yCjKYwYaqSJbl99+WUH71FQ2dintyCQ1abaOkcaczailKrSbG4eWPF2W8PH
zWKP23OK1Tss6ksIvn2YBeOHNkwfMY0ZFqYYz3YgMD6/VQuvIeY8AwctIFI12b6pJTf2PnNMJ2J7
JUqfXpYWwmn7DdifDKRGWzo35gnbVszU1t2wnyOnb+RWcDqVuoXWE3X/EGOMhunnSE1fssSUocMX
EaWtv8aQx/3DSxr3eygWE2aycuUK1u28Tnz8U/Zvc+SEJvnqqCuzX3F45XxGNR5jv1HWXHqaRGVd
yyMQBEEQPjcivJ0bEV6Jns4X3ibqMZSWkF9QQFl5ZZtjiL6pq6aqWivQNR/YDlmbhqMmvNvOPSDT
UEuVoZyq2vo/fr2u6iOstlVVQ3Xj2MDNeV1XR011NbX1H7Cuj+W1tu4KA4aKKuraes1cfY32GZTq
rdOtUGOvavtWV1P7AX1xX2vHVqV/pqpbgyAIgvBlIsLbuRHhlej564S3E6hOZ/+6JWw7/YCMsj9+
zbAgCIIgfGmI8HZuRHgler5q4a0rxNftOr7BCZS31SIqCIIgCF84IrydGxFeiZ6vWngFQRAE4StH
hPf/2zsTf6j2x///UVFpR7olpCSyL4lCtKCSSgsVSqh0lZLKpX0hbVJSaROF7Huy78yYGa/fOYfR
NLfup9vt5Pet1/PxeD4e9zrmnJnjcbyf3vOek7wyeKkkg5cQQgiZPBi88srgpZIMXkIIIWTyYPDK
K4OXSjJ4CSGEkMmDwSuvDF4qyeAlhBBCJg8Gr7wyeKkkg5cQQgiZPBi88srgpZIMXkIIIWTyYPDK
K4OXSjJ4CSGEkMmDwSuvDF4qyeAlhBBCJg8Gr7wyeKkkg5cQQgiZPBi88srgpZIMXkIIIWTyYPDK
K4OXSv6c4FWitaECzx/n4OatLDzIe4XmHiU0o/rfJy+jahW6m2tQ09QhHFuNwd52VJWVoby8XLKs
vBJ1ze0YUqj1H0oIIYTIAoNXXhm8VFL24NV04/Hpgwh0sccy6yWwtbDAUmsbOLkGI6em+6dG78hA
Bx4lBSIkNAuDmgGUPr0CHzs72NvbS9oJOji6YOOuI3hY2gzFT3xuhBBCfk8YvPLK4KWScgdvW9EV
hLhbwH9PPHKfF6K8tBQvc9PhOX8BrNZkoFv582ZTR/rbcDvGEY4+V4Tg7UdhTooQ4A4IS76FwjeF
eFHwBLfSE+Hr5YTFaw7gbnETft6zI4QQ8jvC4JVXBi+VlDt4G/KS4GNngsM3HqBTOTZlqlENIf/U
DnjvuoaekbGk/Fh8C7vWusHGdiU8N8Uip6R1fA9qdDa8xblDoXB3tIHrKj8c+ese6juHoeooxdmY
Q0jNfo2OobH9KNtfYt/GIyhqG0Dtgz8RckSI2UfpWO/siktvanDnoDMcfa9hSAjeNzln4LR8NRLv
10EzqoFGrYZyqB8ld07B12kJdpy+iaZ+Ji8hhBD5YPDKK4OXSsodvB2FGfB3WYQ5Ji6ISMhAwdtq
dPeroBzsQ3ffsLSkYbj6Bv4wM4WJXTBiDu6Fj+VM2Hr64W7dILpr3+DE5hVYaOOI4MjDiAr2xYoF
xog8dQk1lXnY6u+E0NO3hDBVSccbqr6IpYtdcb+hG+9SN8BotjHmm8zDPCt/ZL1r+Fvwrlzujfic
+s+e80h7IXZv9sTGoxmo6Rn5bBshhBDyI2HwyiuDl0rKHbyj6mGUPbqE9bZWmGs0E7PnzMW8ecbw
3BqP540DQvAqcDNgFmYu3oeq/iEoFINoKn2AsOVW8IvKxgsxSq3dsO/CKwwNK6DoLsepfRvgH34c
T1/cQYifPTafykRj31jwDlZdhuUiR+TWC8GbEgADgynYmV6I3v5BDPa2fjF44/SCFyMfkLx7E8KF
4K3uZvASQgiRDwavvDJ4qaTcwSsyOqqBamQYXS11eJ57DbGhrpgzywjTpnvjeUcXTjpPwdQFLli7
1h2enp7wcHeH4fRFcF97HFfObscKnyDk1A1r9waNWgWVWo2hpry/Ba+i6gqsJoLXSwjeHWga/2Sc
uIb3m4K3rwKRYb7SDC+DlxBCiJwweOWVwUsl5Q3eEby7fRLxqTdR3jL42ZYPjxNhPGcG4h9X46wQ
vNOmuyHqcBSioqIQHRODuD9P4+KVW7h6Ogz2vsHIa9IGL6BWKjE0qMBA/aO/BW/ni5OwWOApBG+P
ELwOMDA7gf7xx31r8HaVZGKrt7UQvJdQ0zO2X0IIIUQOGLzyyuClkvIG7xAeHgrDCrO1yHhYgr4R
FdRqDdSqEXQ8S4bJ3Dk49qIWaZ7TMcs3DX2KEag1agx2NuPRhUSczXyK/GsJsHHwQfKjWmlWVzVU
j5SYzXAIOoz7BQ+wNcAFW07dQkOv8NgRBR7He8Js9spvDl4nW28cvV+LEeE5jSiFiG4rQ/KOACwQ
AvxM5hsM8tZkhBBCZITBK68MXiopb/ACHcU3sdnHFkbmHohMvIjcvCe4fekYHM3MYDJ/PYo7R/Dx
SQxMjediZfhJPHqah9QjWzF7iQvCM9+jqfgedjnMh6PnJmTceoCrJ/fA03Y+9p26gJa+RpzcGQAr
jxAk37yHzLP7sNTCFAYGDrgvBa8jDBboBe8hFzj6CcGr7kfRvVRYzzKHc2AUzpw/i6T4SKxyXo5Z
c40RfPg8Kto+zSoTQgghcsDglVcGL5WUO3gBDVqKH2B3oDeWWVnB0tISVkuWwFqIzAfVPeP/8IQK
Ly8dgLX1EiwRti13cMfes4/QKS6fVQ2g6skVhK1eiSXC45csWYFtMSl4/6FX2nfTqyvYus4N1sLj
llivQkzMVjg67sGrjwOouBKKZb4XoF1MoRrswuPTYdiw/z6GNcOoepaJTdbWwnG12sHTNwyns54K
Ma2YeAWEEEKIXDB45ZXBSyXlD14tGgz29aJDuID7B4YxOvr3tQKjKiUUCqXwvP5+71u1SoUh4fkN
Diug1uht1GigUSqhVI3iC7slhBBC/r+FwSuvDF4q+fOClxBCCCH6MHjllcFLJRm8hBBCyOTB4JVX
Bi+VZPASQgghkweDV14ZvFSSwUsIIYRMHgxeeWXwUkkGLyGEEDJ5MHjllcFLJRm8hBBCyOTB4JVX
Bi+VZPASQgghkweDV14ZvFSSwUsIIYRMHgxeeWXwUkkGLyGEEDJ5MHjllcFLJRm8hBBCyOTB4JVX
Bi+VZPASQgghkweDV14ZvFSSwUsIIYRMHgxeeWXwUkkGLyGEEDJ5MHjllcFLJeUMXo2iG/WV71H3
oRMK1ej4V9XoqK3Eu+Iq9KjUn75XM4CKtyVobBtAR2MVKpt6Jrb9G9SDrSgrrUGfzr5/FhqVEh11
71FcXIKS0lKUvH+P9xU1aO0ehEb/m/8lGtUIOhoqUVHf9p/39X0Ix/9QjYJHd3Hl6mVk3s5D1Yde
jHz2ZIZR++4l7t26jrRLl5CT9wZtQ7rbBTQj6GutxZMHt5Bx6QKu336Isro2DP/8HxchhPx/AYNX
Xhm8VFLO4EVvJQ5FbIbXgQyUfhgY/2I7Un1XY/liS1wq7YR6vIP7G+9g6XJ7RFx9jXsHHBCw6QoG
J3b07QxVXYaHiz0eN3dBo23sn4Sy9yPuxLlj8WILWFiMa2kFa7u12H/iPpp6R/Qf8s0o+1txL361
cF6uf+G8qFD7/CbOnU3H67pe/Y3/HU0fXl35E+tXWGLRwgWwnD8f5gsWwnLJKpzPK0P/iHCi1S1I
2+gBG0tz/LHADNam8/HHQgs4eWzD8zbl2G6EP4AKs5PhaW2FRX8sxiJT4fwI+7GwcsKB5Cw09qn0
DkwIIb8+DF55ZfBSSVmDV9ODG/uCscx1L3LffZRmJtVdBXBeZg6DKVOwIaMYI+PFW3dnN+aYmCGz
thftVc/x5EUVvid/VLWXYGVuj9z6SQjenhZk7vOAneNRFNfUo6ayHG9fPMSJnSFYPtsKkcevoUV/
xvMbUfZ9xK1oZzj7XsPfd6HCu8tJCN6yH1ffduhv/M90VeQiav1yrNq8FzlvKvBR+IVcXZyDbc52
WGgXh+K6blTfPQArkxnYmZaDpuYPwvc0482DVKyYbgrnrXcwpB5EZcFF2JtYwtkzBnlva9Dy4SPq
y1/hzI5NWD7HFnHpj9Dx/X8TEELI/0kYvPLK4KWSsgYvRvE+6zA8bXyQ8agMQ0KAtuUdx9JFbvC1
nY7ZvmfRoxTfy1Yhe9dsmJrFoKG/B88vHsPelGfo6mzEvYxE7ItPxqGIjTA1NYeD1w5czS/H4Phb
6V3lBTi6fR2szf/AEvdQHI3fDBNjVyF4e8aCt6cKZ8LXY6npfCw0d0TowXRU9ajQ01SCtNhwHL9W
BLGx+hqKcSp2Hw6dvydEqbBzVRsyj+1F7MnrqGupw4NzMVi11AJmptZwWrcXj6p7MKoX1MqeZmRG
u8Et4AYGhW2jwjdoNGoo2stwMnojLNbuxa13nRBfb82L29gd6ILFC01h770dtwqbMSwu+1A24XrC
NqxYYCa8XhshMmPxukUhBW92jAuc/K+jX9xDXwvyM2IRsH4jQnZEwHfpIsydtxAWKzbgr9uv0atS
oCL/KkLX2mPRAlNYe27A2XulUIyI53sAWdG+CIs7ibjt3sJxFsBqWQCSbrzC8OcvSaK1OBPhPgux
PTEFTcNjL3pUo0LpreMIPZCOipZelFwMxvy503GjtntiycXIUC/uHQ/FlmOP0dlWi9RQW6xw34TH
TcNQj/81MjqqgbL1LWK2+8HcPwoP37ePP5oQQn4PGLzyyuClkvIGL9BbcRuBnjaIvpiD9uERPNzv
ioXhGcjPioTxPF8U9iiF6mnAzhkzsPzw47GwO+gKl4AraP9QgrPbl2Hq1FlY6bEORxJj4O9mjaXr
o5FT3o2hukfY4ueAqYs8sSf+JI7tXo2FJjNgMEWc4RWCV1WHiJkzYGQ0HRtjjiFmVwAMpxrDwT0O
pTXvkBxsj7XBSWgWIrAmPw0hK6bCacshPK0fgKLpCUL9HRGZfhOXYvxhY2qCkIh4pByPwpJ5c4V9
RqJRisdPTARv4E29WVgFCq8eh5fTOpy8/V441lkEOv8Ba+9NiI47ACcrc8yc7oMHZQ24EbYUxjPm
Y/eRMzh3PALzDWdg4eJjaBoPXhcheAf7hf8+sxfTjW0RcugiHj64is2OdjCesgguqyNx/001irPj
sGr5PBiv9EV0/CEELlyAOdONcDinBiPqfiS7TYXhNCPMtQrCqbOnscfPErPMbbHzcslnz1ykt/oh
9m+0xdRplli39QjuPHuLj11DUKnUkmL4f8iNwQLjmZhu5Ia4c1koqmzCgALQqFUYUanQUfMSe5ct
hvdOIdj1Z95HFShIiYLrsnVIz3kv/QFCCCG/CwxeeWXwUkm5gxeDlYjesAreB66gsq0GkS52CEt/
g+7mR5hvMgeJxf0Ybb2DaTNmIeFFx8RMprMQdu3NZUgNsxP+ezNefhQzaARvziciIGAPLhU340Xq
TjgvcELq3bcYkKYV1ciL84LZbAcpeOuzd8LAwABH8lqkp6JR9uPN9WjMs7BFXNZLPEjfgxU+m/Cw
qRNPM45i5ZQpmOWwFRlPGtDwMBF+9kG4eP81ru/ygcXSLXhQ9RFKoe56Ci9j/eZk1Co+//jY14N3
BKVZJ+Fn543EjGz8GREE56B4PKvukmaBRz8+hYu9FfzP3sZx1z8wa+k+VAwrpW0fn5zFxu1pqOsW
zkucG+yCUnHpXASmL1iB7amP0SftX4N3F09gy+ZI3HjXIfR1A44Gr4XFqhg8q2ofm3FVVCF6ySLM
WHkcncPdOOdiCKOZIXivGHuGfa0VOOo7B46e0agbW3KrgwYtZU8Q5ecCY+F8iufUwGAKlnptxY3X
DRiUPpCoRkn2CTjOngnD8e+ZKgT2mj0pKOlQCsH7GntWLsWaxIIvBK0SL/6KhtuKQGTcr/iupSyE
EPJ/FQavvDJ4qaTswYt+3Nu7AUvXHcH9JxfhYO+EjJd1GNa04dBCUzidLMSHJxGYMdsZL3vH1qp+
Ct53QvD6YePWW+NhJwTvxUQEB+3BjeJGPD66A57BR5Bf2T1xtMGqDFguchSCtxuFKV5CeIWjcWKr
Bp11b7B7hQ22XXuH8vxr2GC/Fom3CvDXiVisWbMO/v7hOJqSizuHwuG9NQGPa7pQmR0LVxszaabY
ysUPsSlZqOrox8SNJ8b5evAq8S4zCb7OfkhITsGOEDeYWSyHm4sHPFxXY7WrNUzmzcTSPTeQk7QB
C+fPgdH0aVjmFYyki7lo7BN+Vr3tyD7ggilCSBpOnQprl7VC3PZg7Cnonpc2KJqfIcTPERuTMlHf
+ykfKy5shMnsYLzr7cTJZYZYnPByYptmqBMvLoRhiZMHcpo+f/bSLO3ICNQaNYZ621D2Khcph4Jg
s9gYhoYOuCz8PAcUCihVYlqr0POxFk/vX8KBTfaYaTQL5ku2IK9ECF5nS/jsu/uFNcgKvEqLhseK
9fhLCN6/BzEhhPy6MHjllcFLJeUPXqDmdizcHAOxO9QHlg5ReF3fKc06vkp0gNGqKCSHW2He8hQp
aj8P3iKk7vJB8N4HGJuI/HvwegQfRl5l53j4CcFbJgTvQicpeN+dcRKCNxLN2ltBCEftqitEpLMN
wq5Vorv2BY6FrcaakIOI3BWDA0czEXdoF7bu2Yltgb6ITr6Kxn4lFIMDaK8vRfbFUwh2X4ZFprOF
/drhfqNe1uoE76e1sKNQDzTgQkIYbLzDcfF2NiKC3TF9vhu2hkXjaEICEhISkRh7GBdyS9DR0YO2
6je4knoUfrYLYDpvDuaZ+iCv+oMQvK6Y+4c1AsN2wXvhYqzeeAJV/WLQjp+X4LHgVbUWYMs6J/gf
uYHabm0+jqIkIxAmc9eisKsDyTaGWB7/fGK9rVoI3oILO4Sfzypk1+reB0KFmoLrSDx2Ag9LOybO
s0h74QU4L1+I3Zce40Z8MHaeKcCAtCZ7DI1KgaLL4TBZZImk2/k45PEHXHziUTP0+VIQjaIFl6ND
Yb0iFNcK6ifptmuEEDI5MHjllcFLJX9G8A7VPUCAEIrinRkc911Hc/dYvnYVnsYco2mYMsUA/mdL
pa99e/A24dW5CLhYeyMl+zW6hxVCmPYi/+RGmM0Vg7cH1de3YYaBAU4+bcTAkALDfW0ovHkY5otX
4tD9Rqj7m3Dr1DbMEZ6XhVswzr+owePkQ3BYYAADMw+cySrCoLIFV6P3I/FcLhra+6EcUaL5cRLm
zjJC7LPPP2A1FryucPG9iK4B4XwKv6B6Oj+g4MZx+NuaYt2BJJR9rEfK/iCsCY1HfnkbFEolBnsb
cSk2Ghn37+NIQBCOXy9Gz8AwRoRjVWRFYZbxfCTlVyE7ygtO7hnoG2zDowtRMFvmgr3pBRhUKaXz
snHjTlx43ig8j0oc3OINp02xeFr2AUPCz7m/qxqJnuYwdUpCu3ZJw8JwvO3qh0I4TldTGZLD7OHg
sxfV48scxl8V3l5NxhpzZ+w7cQdNPQPSc1YMDaDp6Xk4LrPEgZt5OL16BebOD0ZeVTP6hXMtzggP
9rbhxV/hMF1si8tv65F/YQ8WL7ND9KUCdPUNSudyeKAX7+6dQ6CrNdYfOoeKjs8OTgghvzwMXnll
8FLJnxG8UNThyHp3GBvOxMGbhejRrn3tL4KXiRGmGMzGhaqx2dKRvlbcjvUcD95ipO5ei+DILwVv
G/qrc7F3kwss3EOQlH4d11L2Y6mlCQwMxj+0NliKLcsWY+6MlTiWdg3pJw7CYfp8rFofhffidLJm
SIitNHjMmg73kEi8bFWgMT8NwY7zsMA/CrnSHQOGkBsdCnsTG+w5nILsu1k4Ge4Gs8VWuPD+83ve
Srcl2++KRYv9EXf8BI4lHMaODT5YusgMy9fuxqWndVBDhbKsRKy3M4Hf1khcycrE6ch1WL7MGilP
i5Ae6IaFs2xx+MwV5OTcwpEQWyyydcKNd3UT50U8U931RUjabAdHzyBkF3/A28wU+NqthF/YETwp
q8GzCzFYazMPHsEROH/pIuI22Qqhb4Fd10ugVPdJwWswyxjLN8fj+p1bSDoYjFnmTthy6vn4uf5E
X/1LHBd+DiaLHRAYfhRXbmbjatoxrF6xHBaWG5Bb8gENT1LgtsIC0xevxdFz13D37h2cOxYOi9kL
4eGbgIZhNboaXuHY+iWwsrFHcEwKMu9mIz0pEj5O1jD32o1rz+u4fpcQ8tvB4JVXBi+V/CnBi2EU
nI9C0Jo9yCsXP/il/foAsiJWw919P2rHPyilGu7Bq+vHEB6Th+72GtxKiUVC2iuMbVah8sEVJCSc
wuMqcd2uBk1Fd7A3NBAuLs5wcXVDeLgvVq/ejtcf+6W3xocaniDS3w2uLi7C93giIOhPvG4aWxEs
vs3fWfMKZyKCcPhUFlpHgMEPRTgVtwMHz99Cfc/YcgBFRxUuxYVi7SpxHy5wdXND/PXnGNK70e/I
QCeepIbDTdiu1ctvAw6cvIzi2jZMvJGvEl5jdgq2BqyGi/PY8z5yMRedg0oMfXyHU+Fr4O42diwP
r9U4/aAUQzrnRQpSIdYrH2dil9tmJJ17hpYPpTgdv1s45jqk3X2OXkUPnl9LQrCfF5zHj3Ho4iPh
jw0xKQeQ6mSI2X4RiAkWzo2rK9y8fBFx6i5a9WtXYhRddcU4HR2OVcJ5dnJyEvbpAreQaNx80zjx
obX6Z9cR5L0KzsJ2R0EXN0/4RaehZOLmump0t5Th3OGdws/DWfgeRzgJ+wnZE4f8siau3SWE/JYw
eOWVwUslf07wyoxGJbyGQekes/r3xtWiHP8F8V/Wh46MKIR9DEH1tYP8S8R/inhocOCLz1upHPvZ
/Nd/cVc8xqB0DI3O+tsBJC8xxPJT76T/U4pLFBTfkpsaKITz3C38Au4fGIJG86WzqcaAsL1TcHj4
b7d7GGNUDaWiH109XegdHP7bh/8IIeR3gsErrwxeKvlLBC/5lwzgnP18OJ8ZC15CCCGTB4NXXhm8
VJLB+zuiQOHlk7j6auz+xIQQQiYPBq+8MnipJIOXEEIImTwYvPLK4KWSDF5CCCFk8mDwyiuDl0oy
eAkhhJDJg8ErrwxeKsngJYQQQiYPBq+8MnipJIOXEEIImTwYvPLK4KWSDF5CCCFk8mDwyiuDl0oy
eAkhhJDJg8ErrwxeKsngJYQQQiYPBq+8MnipJIOXEEIImTwYvPLK4KWSDF5CCCFk8mDwyiuDl0oy
eAkhhJDJg8ErrwxeKiln8GqGu1DzvgTVjR1QqEbHv6pGW9V7vHldji6VGtqvajT9KC0sQv3HfrTX
leN9Q5d2N/8K9UAL3hZXonfk075/FhqVEq01JSh+X4tB3Q2jSnR8qEdJWa1wPlvRKLz+IuG1FhXp
+wolVa1Qq3/2MyeEEDJZMHjllcFLJeUMXvSWY9+OQDjuPoe3Tf3jX2zDSXcnLJpnjLS3HdC2XX9d
JszMrbD9wnNk714Cb990DEzs6NsZqsjAyuWWyG3snNj3z2EUfS3lOGxvDIuVq/BnXuOnTSPtuJZ6
ENa+Efgr6yqit3vBWHj9xsb6zoOxSQwauod/eqwTQgiZHBi88srgpZKyBu9oH24d2IxlzruR87YF
GuFL6o4nsF+6CFOmTMG6tDcYGa/S2ls7McfUDHebBtHdVIrCd/VQf763b0JVexlW5g7Ire+G5qdW
4yh6W8pw0HYKDAyM4OCzDYUd469A3Y6sU/vhtGonbrxoQH+PeF470Nn0GhGrnbAsKAkvq5qkX3Bt
bb3Q/NwnTgghZBJh8Morg5dKyhq8ApV34rFq2Wr8lVuCQaHjPuYegfVCDwTaT4fR6tPoVopROILM
7dNgahaP5oFuPE07jO0n89HZUYes1FhsP3AUEdt8hJCcCYuVQUh/WIoBsZ4FOkofI2aTB0xmTYfx
8kDExGyCibGbELw9Y8HbXY4/Q1bD1MAQRjOtELj3DMq7RtDVUITTkSE4fOG1cHSgt+41jkVux97k
W2geEnY+0oqrB0MReeQiapqrcefkHtiZzsFUAxNYeYQip6Ibo5916afgnSbE/NyZSxG4//7Y0gZ1
hxS8dkLwXi5s/fSQkVpE+7nDeXsaqls/WwRBCCHkN4HBK68MXiopd/D2Vd3FBi8b7M+4j7YhJXL2
OsN872UU3I2G8VxvvOxSYlRTh9BpM2B39CmUfR+RHeMMZ//LaG8uQWqYNQwNZ8LJeyNOnk7ABs+l
WLJuP+6VdWGgOgebvFdgmoUPDvx5FskH/GBuOgMGU+yk4FUpKrHD0ABGs+Zga0IyEvYHw2j6PNg6
RuNt1TucDlkJn02JaFSqUJ13FkE2U7AyOBr5tf0Yrs/DFl9H7MvIwsX9a7BknglCo4/jr5Q42M43
xtSpe9AwojsHPR68ruZw3JGGq+d3wdzRB2cKPmB0RAjek18P3uVC8FYweAkh5LeEwSuvDF4qKXfw
YqgahzZ5YfW+Syj/WIHdLnbYeaEIPS35MDeZg4TXvVC3ZGHajDlIfNU5HrwuQvBeF4K3TAjelXBZ
tw2v21QQZ4LfnE9EQOAeXC5uxoszO+G8yA3n7pdgUJrxVePJMV+YzRGXNPSgLms7DAxm4M+nY5Gp
UQ7gbeZhmFnYIjbzFXIvRMJeCOmc+jbkpx+Bw7TpmOsUivS8OtTlHIOfQwgu5xYhM8IXltZBuFlY
gY6+frS+vIKt4efQoBifZpYYD17HP+C+9SY+VD/H4TXzsWpDNIpbP0ozvPYMXkIIIXoweOWVwUsl
ZQ9eDCBn/yYs84/D7dw0rLR3xaXX9VBoOhBvNR8Ox1+g/uEuzJjjjsI+6AXvOyF4/bAxNBtjH3kT
gvdiIoKD9uBGcSMeH90Bz+AjyK/snjjaUFUGLBc5Smt436SsEoJ3N5omtmrQWV+EPStssO1aCSqf
3sAmxzVIuJ6P80mx8PXbiICAcCScvofMmB1YE3YUT+q6UZNzHGtdrGFqPBfWzmuw//gFFNa0YPiz
T8V9Cl43IXiH1H14cy8F9lauCEu6jstJUdIaXgYvIYQQXRi88srgpZLyBy9Qdy8e7o7+CAtaBUvn
gyhs6JI+wFZ4whVGbntwdKsFTB3OSVH7efAWIXWXD4L3PoBC2pNe8B7bAY8NB/GovH3irgb9b8/D
cqGTFLwlZ5yF4N2JOuX41lE1OmpeYJeTDcKuVaKn7hX+3OkNr/UR2LUjCtF/ZuNo7G6E7NiKYL+1
iDl9Hc0Dw+jr6MCH6lLcv56G8HVuWGG1AIaGtrhdpxupesErfGW4sxoXE9ZjpctKrPX2xkoheK8w
eAkhhOjA4JVXBi+V/BnBO9zwEOs9bGA4ZQpco27iQ89YvvYUp2Ke0TRMmWKA9X+9l7727cHbjDfp
B+C21AvHrz1Da5/w/HvacPfIOsyfIwZvD+qyd2O2gQES7r5HV5/w2jqbkC88ZrGFI448bIZ6oBm3
U3ZgnvC8rDxCkP6qDk9Ox8LpD0MY/uGFs7ffYmjkI65GReBwUhYqm7swNDyEugdHMWeWEWIL2ide
45eCV1xi0Vx8B3s8zDBVOMZCIXhvMngJIYTowOCVVwYvlfwZwQtlAxLFOylMnYu4rDfoVY6vfR14
h7VmRphiYIwrNWOJONLfijuHvcaDtxipu9ciOPJLwduGgbp8xIR6wcptIw4np+HcsXAsszKBoaH9
2F0ahsqxx8UWpjNtcfDEeSTHR2DljEXw25qAKnE6WTOM0px0eM2dAY/N+/G6TYmmZxkIcTHFooAY
PKroEL5pGPlHdsNlgQ227z+Gi1cuIH6rE8yX2eNaVd/Y65DQCd5t2uAVUHbhyZVjsJs/G+be4cgq
avv0ECF4DwrBa7cjDZUMXkII+S1h8Morg5dK/pvgbWho+L7gFXL19eWj2BUSi4KqNoxMLH0dxP24
IAQGHkGDeG8wAbWiD8V3UhCTWIDeznrkZCQh+UqxdOswQIWa/CwkJ6ejoLYH4prcltKHiI0Mg5+f
L/zXBSAmZguCgqLwtm1AWjYx3PQC8aEB8PfzE75nPcJ2paK4RfuPYIyiu6EIF+J24cRf99EuHGSo
tQTpJ6Jw/HIOmnrFD8qJzVqLzBORCNngL+zDD+sCAnDyTiGGP7sv2SiGuhpxNWY7Dv31HEqdLQMt
5biaHIW9x9NR1Kg9toCqFTcSY3Eo7SFaxme9CSGE/F4weOWVwUsl/1fwihfdfw9emdGohNcyBKVK
89V/oWxEeK0KhUKK4O9FpVJK50z9+Q14CSGEkO9GG7xNTU0TwdvR0cHg/UEyeKnkLxG8hBBCyP9R
GLzyyuClkvrBK15UXwpe8SIU325h8BJCCCE/Dt3gbWlpkZYSMnh/nAxeKvm14BUvMm3win9t6gbv
KN/SJ4QQQn4I4vgrjq3iO6lfC15xfGbwfp8MXir5T8ErXmziRScGr3gRin991tXVSY8jhBBCyH9D
o9FI4604torBK76jqg1e8Z1WcTxm8P43GbxU8kvBK15cusGrf6cGMX7FD4BxppcQQgj5PsTYFcdb
cTJJe4cGcawV31kV32Fl8P4YGbxU8p+C90u3JhMvSvF+vNoLk1JKKaXfp/Ye97ofWNPekkwbvOK4
zOD9fhm8VPJrwav/wTXdZQ3iLG9tba20yL6yshIVFRUoLy/H+/fvJcvKyiYsLS2llFJKfzu146B2
bBQVx0pxzBTHTnHdrriUQZxI0q7f1b9DA4P3v8vgpRNqg/ef1vF+aZZXjF7xgv2n6NW9+EtKSiil
lNJf1q8Frzg+amNXnCyqqamRYlecQNLO7opjrDjWapcz6N6hQTd49cdw+s8yeOmEX5vl1V3W8KVZ
Xt3o1Z/t1Y1f/QimlFJKf0X1xz3d0BXHSP3Y1Z/d1V/OoLt+l8H7fTJ46YRfC17tsgb9WV7xL1H9
6BUvYN3w1cYvpZRS+ruqjVxt6Irj5ZdiV3d2l8sZfqwMXjqhbvB+aVmD/iyvbvRqlzeIF7B4IWvj
VxvAumovekoppfRXVH/c046H2tAVx0vtMgb92NWd3f3acgYG77+XwUs/859mebVreb8UveIFqw1f
7YyvVvHippRSSn9XteOhdkZXG7ri+Kkfu7prd/WXMzB2v18GL/1M/eDVj17t0gZt9IoXqH74auNX
G8BaxQudUkop/V3Ujn/aMVE7RuqGrjiG6sau7lIGzu7+OBm89DO1F5P+LK/+0gZt9IprevXDV7yI
RcULWjeCKaWU0t9N7VioHRu1997VDV1xLNXG7v9aysDg/T4ZvPRv6gbvl5Y2/K/w1cavNoAppZTS
31ntmKiN3H8KXe04+7Xg1R+z6bfJ4KV/U3+WV3+mV3dNr3iB6oavNn61AaxVe4FTSimlv4u646A2
cLWRqxu6+mt2teOtfuwyeL9fBi/9ot8avdrw1Y9f3QCmlFJK6Vjg6kful2Z1Gbs/XgYv/apfi179
8P1S/OpHMKWUUvo7qz8+6kaufugydn+8DF76j/5T9OqGr2786gYwpZRSSj+pO1bqjqG6Yytj98fL
4KX/U92LTjd8/yl+vxbClFJK6e+m/rj4tcjVytj98TJ46TepH7364asfv5RSSin9Z/XHUf1xVn8s
pt8vg5f+K/Uvxq/FL6WUUkr/t/rjKUNXHhm89LvVv0AppZRS+v3qj7P0x8ngpT9M/QuXUkoppV9X
fxyl8sngpZRSSimlv7QMXkoppZRS+kvL4KWUUkoppb+0DF5KKaWUUvpLy+CllFJKKaW/tAxeSiml
lFL6S8vgpZRSSimlv7QMXkoppZRS+kvL4KWUUkoppb+0DF5KKaWUUvpLy+CllFJKKaW/tAxeSiml
lFL6S8vgpZRSSimlv7QMXkoppZRS+kv7/wAsDjFQd6EBVwAAAABJRU5ErkJggg==

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_sampleauth-conf.png

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

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_openam-auth-sample-login.png

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
rkJggg==

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_scripting-engine-overview.png

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
NObsQlpvt4f2PjhKB1xPIEaYLTd3/5TwqteDGE92OB6kZXe2UveDE6nNjtG06cZB8o1AG4NhTEV4
XwfYU6DnGZ3s+mwX2SZkd4uQ3Y1EjzbQJ48t5PLAkT68dNA8F0GQHwfCC8yNSAuvEv8n/nTm/nWa
d24TDT40l/rsn4EYYbpusvop4VWvBzGejD22lNZc2Utujz0078uIxhSEl0dmcHexpyCfYNmVortZ
iO56Iq+1ImuIPFaS34OTFPgEF7AhyM8EwgvMjSgTXsQ04uTk9FPCq14PYp4xBeF980x8GHseC25f
2CQruhsWD6P1C4dQ0MOVUnbp4TL66r6MPF3thCBjbF4EiWggvMDcgPD+ZoHwImHFFIRXjszwaJuU
3SDPdbRk5gBq0qQxNW7cmFbPHUDkvpTIbTGR6wJ64nyYnvo6adYR3rx6eptmTxtGhQvmpb//TkIp
UySjksX/R+tXTdMs+7N57nOdrp3fQW8C7mjmRXd+xfFFJhtWT6d2revrHzvaHKb7Noc0y30vtjf2
U7kyRal82aLk8/CCZj5n/84lchnOhxd2mvm/ayC8wNyA8P5mgfAiYcXYhZfvpPbU7ZSs6pLXOnp1
fxl1/6+NlF1Oh7bNhewuJHKZLzKXgh7Mo4cu2vWENyOGdKU//khEk8b3J4c7B+niqc1Uv04lihs3
jpQx9fI/k3MnNsptuDqc0MyL7vyK44tMFs8bS9WqlNY/btSgGtUT+6de7nu5eHoLiX9/FCtWLNq0
dqZmPqd+3cpyPi/34YWtZv7vGggvMDcgvL9ZILxIWDF24fX1vENfvbhXdw2R52p657w0hPB279xa
ii49mE3kPJPIaToFOm6nZ/6umnWFJ9mzZaYeXVrQx5ffKn/8M0tS0cL56H3gXc1zIpqYFN5fcXyR
CW//zbNvle+fEd64ceJQ6VKFqHHD6pr5fKwpkv9FZUoVhvCqAuEF5gaE9zcLhBcJK8YsvDwywzO3
o0J0VwX36S6nr25LqE/3tnrhXTSlhxDdWVJ0yWkakeMU+uwwk1ycHej9i4iP2JA6dQpq26o+fTAQ
Qs6FU5tpzfLJQshspTBOthoQYj5Pb1i/qlzu3XMbGj6kKxURApnzH0uqXKEEbVwzQy43a9pQKl40
P8URUsZ/dh83qpd+HZeErDVpVJ3y5vmHalUvRwtmj9IL2a0ru6lG1bJ04tAaIXLVKHeubFS3dkVZ
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
kJysWQAAAABJRU5ErkJggg==

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_scripting-sample-chain.png

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
7gAAAABJRU5ErkJggg==

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_scripting-sample-policy-resources.png

iVBORw0KGgoAAAANSUhEUgAAArwAAAGJCAYAAABo5eDAAAAACXBIWXMAABibAAAYmwFJdYOUAACA
AElEQVR4XuydhXsVR9uHv7+n79uXFgguLdJSpBQrpZS2lOKuAUKABOJO3N3dXYh7CHF3z8nxQ/33
rZzY2RMhJEDDs9d1X5DdWZvZPXvv7DMz//fq1SsQBEEQBEEQxHLl/zRnEARBEARBEMRygoSXIAiC
IAiCWNaQ8BIEQRAEQRDLGhJegiAIgiAIYllDwksQBEEQBEEsa0h4CYIgCIIgiGUNCS9BEARBEASx
rHnrwqtSqTAiEaNnZAjN/b2o6+7Ey652vOhoRXVnG2q6O9DQ24WOwX4MiEYhlcsF2yAIgiAIgiCI
+fLWhLedEdikF2WwT0uAflQgrgZ54Bcve3zvaoVvnSxw0MEUhxzN8J2zJU642+K8nzPuhPnAOD4c
gQXZKGltxJhMKtguQRAEQRAEQczGkgtvRVsL7kf44xt7kzfmJw87BDDyOzQ2JtgPQRAEQRAEQWhj
SYS3d3QY8ZUluBXijQNaxPVNOeFmA6fMJFS0t1DIA0EQBEEQBDEriyq8CqUS6S8rcTnADUeczAWi
utj86G4L29RYDIyNCo6FIAiCIAiCIFgWTXj7RSOwSo7GIQczgZguNSfcrJFT/xJSBdX2EgRBEARB
ENN5Y+Fla3XzGmpxLchDIKJvk2MuVnDNSoFIKhEc44dCV1eXYB5BEARBEMSHzhsLb0ZNFX5wsxYI
6LuA7enhWqA7152Z5nF+CFRWVgrmEQRBEARBfOgsWHjZxmKxFcX49i3E6r4ubK8QbDdomse83JmP
8LI18i29PSisf4m82mpUt7VALJ2luzeVCqOjI5AolMJlszA2Nga5UiWYTxAEQRAE8bZZkPCy0hRT
XsT1n6spm+8DbM8QumG+C6zpVWGgvR7pGelIT+fJK3yBYemkvCnGBpGfFg8/P1+ERCWhoWeym7S+
1gqkpuViUDl9u+K+NmSkpaK0uh3K8XlDvchMiIaPjy+iE7PQL+Glsru+HCkZaWho46VdKROhoigX
yQnp6BlTaDlmnrmEV8nIa1xxPo5bPcXnD65j6/2r+PqpHqxjwjAqFgvSs0jFHXjsaAnn4ibBMk2a
6oqRU9cOFXN9BId6oKp7UJCGIAiCIAjibbMg4S1tbeQGiNAUzfeNO6He3Khumsc/OypUJYbg8rkz
OH/xEi5dvIAzZ87AzDkYI1Il5GMD8LA1YOadw8VLl3Dh3DlcuHwN2bV93PqVKY7MsqsoG51eu9lT
noLrl87Bwi0dMuZvhXQYLoZXcObceVy6fAnnzp1l1jNHq0iJgeoEXDh7BsauQRiRKdFZm4/758/g
omEspILjnWQu4S2sr8F2/ZvYoHtpGpvvXYFtbDg3Cp7mOk257thy/xo2GftgRDU5Xy6XQcTkrUgi
5WpylQoZMjLcYZdXABnzd1t7EwbGxJBIpYxo8+solQpIZHzDQrlcilF2fW65cL8EQRAEQRCLxWsL
b313J056PhPI5fsIO3KbR04aVyOteR4zo0J1agiuMMIbVdqC9sYquBpexfm7FmjsHkVrZRyuMbJr
4hyD5u4elKYE49KZszBxDcYoI6eVaa6MuN5ElYbw9lam4/rl87B0y4KC2cfLWCtGdq/BKTQDXb0d
iPO1wzlGcj3ja6B6JUWOnzHOXLiLjIpqhNjcxyVdIzSOzH4eswmvRCbDQRP9aaK78e5l3PRyhmNC
NL54dAtVLRq1uLI+3De+AfvMbJw2uwfvmgFuvmyoAQZuljhla4bzFgYwT8tHTUE4Dj66ia0PHyGq
cRReQR4oaanA/adPkNLI11QXFUXgcUwWRH21eOBqhV9sTHDc1AhB5XXMOQuPmSAIgiAIYjF4LeFl
QwTYUAFNsXyfOepsifymOsG5zMyk8CbXDUEuHkCk6TVcvGeJlp5RPPd6iDOXjdA6oo57VUoRa3sd
Vw2d0DssnafwShHy8CzuGDuiY4jvVUI+NoSmpkb0Doxx8icZ7oTtg0u4cvMmLp69DL/EQi3HOp3Z
hLe+s50T3EdBXnBPieeE90GAJxfKkFZRip2M8Lox86eu0/kiDjsfmqFRIkNKuCl+conGqEqBFC89
nHYPRvPgMFpbynHO2h41Pb2IS3aFaXoORqRyPHO3QkFbD8K8HsEyvRAK1St4e5kioKwGUa56uBuW
iq7hIZRXpOOktSdEFO9LEARBEMQS8VrCG1GSz9Waakrl+w7bTy87+pvm+WhnUngvXLyMy5cv48r1
m3AMiORCGnI8HuCCniNGpZN9/hb5PMDZW+Zo6RPNU3glCL1/Bo/sPNGvjslVycXoaG9D/7CYr+1k
xLIoMQCXzjFibGCFpoFZGpapmVV4uzq40AX7+EiuwWHmi3L0DA2iorkRe5/e5wTYPTVhIr1KKYKH
rxW26N3BwwAv3Da9g13GT5Df2Q9Pk2swyW+bTKsOScjM8oJTXimzroIRXmtGeAfQVJ+MX73DGbFu
wRULK5T1DsDB9DIOMts6Z2OMs9bG2GvsjD4SXoIgCIIgloh5Cy8rjKe8HAQy+SawoREWydE45b24
29WGQ3rCPAemmBRev+QilJaWory6DiNiXkxfJDrgzLkbiCpr5f4W9dTi6c3z0LVk5FUknxDe0kEF
13hLyaEpvHKkWt/AxZuPkFfD9p2rRHNRLG5evQz3qLKJRm391Vm4c+0CjJxTuLhf4bFOZzbhlchl
OGT6EDse3oRzUgxkjPSyNbu7DXUnwhtetDZPpB/qrsU5sydwzstBaG4mQvJzcNfmPuyfF8LD+Boe
JVQw5/EKMskoQuIT0DMm5YTXuWC68I4Nd0DXwZZJ44BzXlEYUUjgYnYN90OTUFxbjYLKInglpmGM
4ngJgiAIglgi5i28T+NCBRL5JpzxcYJUpcTf//yNUUbGfl1i6f2Zkeua7g7BeQmZFN60FpFguaiv
FdYPLuHsufO4fksX165cZAT4EgKSqzlRrUxhhfcMzl+4gAtqzGPrJ4TXghFeVl6lI1V4wKQ7d/4C
7j54gEvnznHrlXZP1uT2V2fzwuvAN3TTPBZNZhNelpLGOuzQv8nJ7WkHC3xlwMsuy7O4yGlpi4pj
cdg5clpsbXF+AI66huFlmhV2mZggsboGUdG2OOjsiz6xHJnpzrjuF4CafumE8L5SSuAf7oytdy/B
q6KH2051jj12mVsho7YeoXEu+MIxmLowIwiCIAhiyZiX8L7sahcI5JvAhkWk1FRi6tQ7JsLtMB+u
SzHN9IuFW3aK4NyEqNBemQ9PNxdU92obtU2FgdZq+Lq7wN7eHg5OzkjIrZkQ0q6a53BzcYHLFOLK
ujDa/hI+nu6Iy2tS1+Cq0FVfAh8PZ247Tq6+KG0dmrav0fYa+Hu7IzLz5USt72zMJbxsbwiJpYU4
YWOMbQ9uYOv9a9hv9IDroYHtMWFq2oKCGERVN0ybNzTQjGdh8RhQShGXGor7fq7QC/RFdnM3d3yd
LSUwC/RAQpsIqTmpqO9nu4Vj8rOuEAaBoWiXqo9DIUEks/49Pzc8CArE89ZewbESBEEQBEEsFnMK
r1yp5MIBNOXxTTjMCG9mffU04f3nn3/QMTKEC/4ugvSLxXFXawyNTfaZ+2YoIZfJoXjDmkn28z8b
XqB8w+2wzCW8LGyPFe39vShtqkdxQy1qO9ohls0dHyxExQi0EooFhyKo11+E8yYIgiAIgpiNOYW3
e3gIVwLdBfL4Jpzzc0YeI1zaJjEjgJcD3HDAwVSw3mIQVJgjOMflQk1NjWAeQRAEQRDEh86cwlvQ
VIcjizh88JVADzT092h67rSJrellwxs0110Mzvo6YWy2oXQJgiAIgiCIZcWcwuuYkSiQxoXCym7v
2Kim3wqmfxj6xWNL0pDtqLMFKtpbBOdJEARBEARBLE9mFV62f9Xzvs4CaVwIF/xd56zZ1ZwGpeJF
H9XtoIMZIksLBOdKEARBEARBLE9mFd6Owf5FiaW9FuyJtqEBTZ+dc/r9zz9hEBsi2N6bYpsaB5mC
71eXIAiCIAiCWN7MKrwZtVUCWZwvrCiz3Y+d93NB1+iwpsvOOLG9NXD/MrSPDOKYi6Vg22+KflSg
oBsugiAIgiAIYnkyq/B65aYLZHE+XApwQ3ZDDfrGRCjvbJ2Q2LkmNl1cVSkSqssRWpqPH9xsBNte
DNheIPpFbB+xwnMmCIIgCIIglhezCq/RAkZXY2t2mwb6Jmtq5yu7DMVtjfjR3RYHmW0sRijFTPzs
YYeu4UHB+RIEQRAEQRDLj1mF9264n0AW54INQXj1x++aPjvn1C8W4YyPo2B7S8ExFyt0DA4Izpcg
CIIgCIJYfswqvAsdcMK3IIuR3j80nXbWiR1wwiwpaklrdsdhR3prG+gTnC9BEARBEASx/JhVeC8u
cJhfdqCKyIrCeYUz1PZ2ob6P765M/kq1oFrl14UNmWgl4SUIgiAIgvggmFV4b4d4C2RxvrDSG/ei
FL/9qb2m96+//0ZNbydOezvie1crFLY04k9m3qvff4dxQgRXC/uThx2+W4JeGo46W6J9sF9wvgRB
EARBEMTyY1bhfRQVJJDF14GV1uCSXK4/3akTW/P7vLGWE9rxtGxjtRxmHrtsVC5D8stKNA70oqSt
GfcjAwTbfhPY3h86h5ZBDK9Kiu6mGqTGR8Lb2xsenl4ICYtBftlLDIxKhOnfIhKxGGIGmVK4bFmg
lHPnJxZLuAFaBMs1GOxpw/PMFAT5+nHl5BsUjvSCEnQNLZ/u8VQKqTpPpg/dvZBrQalQTKynUAmX
vxNUSkgk/DHNhUS2tP18yyUS9X7kk/OkfP5LpHKotKxDEATxITOr8Nqnxwtk8XU57GSO+Bel+Puf
v6dJb8tgvyAt25ispqdrWjp2+v3PPxjp9V+0+N6zvk7oHR0WnO+/BRUjW501Ofjl6F58tGKldnS2
4op5MPpHxG/94aeUD+Di5/xxeLxY/HxWKRWQy+WQK+YWzaVirCaMz+f1p1HfPyZYzqJSyNBSnYd7
pw4Iy2cKP+q64GXnICN27+58FoOWDAvufP6z9QlGJuaP4Oo2/jxdK4empFdBoZBz5ajUct6NOVHY
vW4lVm3ehqz29+OlQNZdhr27twvKbyZ2H72AoOQiDIllgm29GTKEX/+O28dPT50g4e4DORIMLnDz
vr1jhH6JUst6BEEQHy6zCm9sRbFAFhcCG94QXlYw0ZCNDWeIqigSpGMxTgjX0F1+Ymt9n8aH44CW
dV4X3TBfDIu1S8r7jko6jBgfS2wdf7Bu/BI/X7yBe48M8fjJU9y5cwPfHfhi4qG7ev85hGXVQf4W
a8lY4b26i9+/7xIIb0txJO4/eATTmGrBsrfFWEM0n8fbzqFpUHgtqcY64W1yH59vXMOlW7FuK749
dRm6Dw24ctLTu4cfjx3CqpV8Pq3/8gCMg7Ih1bKvfwstOXZ8nnxthrGJ+SO48RV/jl5ThFcp7oOf
+zPoMddt8gthPH1TXhT2bOSF9/n7Iry9ldi7ZwdzLjrYuG039uw/oJVdu7/Ap6vHxVcH3116gOKW
xbwPZIi5zwvvKUZ4pWrhTTHjhfcYI7wDJLwEMSPsS3Z9VweiCp8jODdz2ZFUXoz+f3Gl3lIxq/C+
6GgVyOJC+dbJAl55GVD+/huKWhvxi6e9IA1LSVuTputOTGMKOXTDfQXrvC6mCRGQyBa71uXtUJsW
jC/Xr+UebEcv3ENZfQuGRscgk8uhUCgglYyhv7sd8X5W+FxHLVMHL6K4+e31O8wK77lNauGtWfwB
Pkpijbltf2ORLVj2tpgQ3q2M8A5oCK+kC2bnfsIn6peO9WefIqeqAX1Do5DK+HKSSyUY7OtGUXIw
dqrTfbT2M+gFlQv29W9hQnh3TRfei+prwevl5LWgGGnDpV+P4L+r1sElo1WwrfqMKOzSYYV3O553
vtvwnHEmhHfNTtgFPUdXd7dWOjvb8bIsB6ZXDqmldyW+/ukWOsTCbS4M7cIbc18tvLomJLwEMQsv
GbexiA3Dy652dI0MLSs6hweRU1uN236uGBgdEZz7h8yswitnHszfu1gJhPFNODRHWIJ/QTZXAzzT
xIY3GMSG4KCjmWDd+cCGRfjmZc4r7vJ9xMXgV+6htuXgryjvFNYsTqCSIy/IEjqfruLSX3GJE6ZZ
IlTMvisLcpFbUguZluVvSkmsCXdOhy1zBMveFjMJr0qlQIL9Y6xhlv139TqcMfKETDG7fKiGXuLS
lzvxX2adNZ/tRnJF91sPQ1kMtAuvAlWFuXheUjPtWuCE9zQvvO6ZQuEVDfSiMP85iqraoNCyr3fB
hPDqfAnX2BeC5QJUSgQ7PsCnq1bhv+t3wD3pxSKVqzbhVaG7/iWy8nLR2DGwSPshiOXJ4xAfdAwN
aurFspoKm+rgnBwrOPcPmVmFl+VJ7OuPtvYmHHW2QFJ1Bf78+y/N8puYhqRiGC5gFDgWNrziOfNg
0DzPfwci3Nm3nnvQXfCsmPuhJh2E86WvuPQrjhhPkZB/N2XvsfBKB2tx4suN3LKdl23QOji/z/GN
eVH48vNNzHprcds6+LUaeL0vaBde7cwlvO8jU4XXfT7CyzDWXYWT+79k8mU9HjpGL1JokTbh1UxD
EMRM/OJoMWvF2nKY/vjrL9zxcxOc+4fMnMKbUFUqkMalhu2KLJd5O5ltkv/2iusFQnPduWC7QOsd
mTu2ZbSvG51dvROtrUd6WxFkb4FTp88wXISeuQvKW3qnS6ekH4khrrh29QK+/+EEzl55gLj8+mnb
lUvH0N3Vgc7OXii17HcaSil6urvQ2d0DiZw9jhFcV8dDBkz5PDwbAwU2vISs+AYlo8LlLOLhPqRH
+ODerSvq87sCG+9ItA+KBGlZRns70dXdB5l8suZS0t+B3PR4RMQ9h/iVCv3dHejo6MCwZHI99jN+
D3PufYOTn6h7GsrgZvkEv55h9nv+Ah6YO+B5VQvkGvtUqcRcvnX39CPF7wF3Tl89ikR3fw8zvwtd
fdrzY6i7AcFulrjIndcZXLz9BNHZlRDJ5pIEKarzk2BiqIvTZ8/g3EUmTzzD0DzAt4qfSXgrvS+q
8/sr5PXNtY+pDMP2h6PcursuGmFEor2Vf1NZNp49eYhfr9zFrVs38MDMETmVzYL8moqIyaOOjm6M
KfnjGeqqhY/dU5y7wJe1voEdUgpqmDwWrjsVlUqEnPgg6N65zOXl5Zt34RGZgd5R/lhnEt4B9bUw
JFFBNDKAzh7m+m+sxOkfD+A/K9fCIqoEnb096OnshmiMDzWSMy+17LXSyZStWC48lnFaq3LhaGyA
M1d0cYfJj/sm9sgsa5wxP6SjQ8yxdGJgRMTduzLxCDIivHDpCpsXF3D9pgF8I7PQOywMo1iI8L5S
9MHwGB/a8IuhM8QzyGljWRbsDKeUq7nTLOWqXXjFQ/1cPvcMDEM5Q1kq5FKUpEXBUO+m+l6/hEc2
nnjROvX3SIlB5h7v6OiCSDK9xw1tKCTD/H6HZ/niRBDvET/bm2kqxbKcbvm4CM79Q2ZO4W3p78Uv
XtrjbZeS712tkd1QM2tNL9vATXO9uTBLiBScoxApvH9gG359hmchiUh2NcY2dTzsyg2bsGK1Dv9g
X/kZLhgEY0whQ0awLdZvYGtfV+HTdZuxYcM6tfisxN6zT1FUz8txdW44tq1bjY911iOyUthYZxIV
apI8sXmdDtbuOYasRlbSR3F9H98I6rxFJqQzPNSmIuupQohfICJSCgXhBeKBNgS4mOKLjfxx/ufT
1VizaTNWfsKHQXy0Yhf0bPxQ3zU1DkgCl/3suW1DQGYVeuvyYXznHD5dtZrfxoZr6JMP4MJWddxm
5eTLRdPzOOxZuxJrNl9HWXkBDC7xD22WT5l8XbmGr71mG/oc+OkO0ivbJ8+jLxub1Wm1sXG/GyPa
48eowmB7FewNLmGlevl/mXNatXYt/vMJ//fn356Ff0YVJFrysCIzHD/tntLwb91GZl0+31luWAei
rkTdS8NU4ZW24+J6Ps0ug4i5X2g0aMn0x43bujB0CYN4SrdWbK8U5dnROHPg84lj4PNr/Jh0sPf4
dUQX1GnZ5xhM9rJpdiGloQG+RrexcS1//a5YuwErP+XLjWXNkRtIKW0VhBDIxoaRGGiPL9TpuLRT
7oO12/fBMiQHdVn2/PJpwjuCy+prwa20G17m9/DxlO1MY+UOOIWUcfdJQ1YUvlrLN1rLbhPWkr/I
i8fFo2zNKb/uJ+s3TSmjVdh15BLCc15o5IccCY/PMMvX4JaJO7JC3XBk+wZ+HZ11WL1mHRdWwm1v
xxHYhRVOuz4WJLzyXuh/xwvvGaPxHhX4ZWy5ljHneXqWct33ww3ECMpVm/DKEafPx/AevWWEfvH0
MBq5aBBJYW44+Nlkfq/euBmrV4/vayvO3bVBUUMfVIp+3D3IH9PP5sHCc5qGGG6nt3Fpj7vla1lO
EO8fJLwfJnMK75hMCsPYEIE4vg2OuVoh+WWF1k8Pqj9+x0nPZ4J1ZoPt4aGup1NwjkKkCL7ACs8a
bP9qH3RWsF0MnUFwXDqKy8tRkJcOy5tHJh4Uv966ha2b1uKjbSfhF52CorIKVJaXwPfZI2zewEjB
Jzr4Ud8FozIlJH31OHtiHzfvtmUUJDN8ulYpJHAzuc7JwcEzDhiSsw81Jayuf8Pt95ONB+GW+mLB
fZTKRrphrndefQ5rcfKOMRKz8lFWUY7ighzY3r+Mtcyy/3yyGr88csDA2Hh/nxL4/MgK7044Bwbg
x72T3TTtO3EaBg5RkM7QS0NLYRz2bVqJ/63ajm++3sWd22c/30VIPJ+vxcWFiApwxNfq7a3bdRjR
6hb8irEmuNk+g90zZ9y99K16n7/AztEJdrZ2CEialIKx/lY8vqwun7U7ccvCC9l5hSgpLUFqYijO
HdvFLfvvhr1wTK6eJhOdOR7YuY0NLWBebtb/BK/IJGa9MpSUFCDC3wF72W2u3ozd33zNb3+K8Iqb
UrGCW74PkWUtgjyfE5UKSqVSEF/elOWBbZ9v4fa3ftsBOAfHMdcYm1/5iApxxeENalna9jWs419q
hLqMwfwgu3wDvj5yiHsB+OLHawhNzkQRc17FBfnwtzdiXsL4bXx1Ug+N/dMFM9X7MdZxDSVXYf/x
e4hOzWZeWJj7ID8bfo6G+Jw953Vf4MChPXyeaAjvRC8NFX2M4CXA/pk9bCxMsXsXK1WrceT4fdjZ
O8De0QOVjXz/2LP10tBV4Ied27dy21y9aQ/sA2JQqC6jmDAPHFW/wH36+V4YRVZNyQ85koxY4V2N
zdt3Y73OWqz+bBdMPcOQV1KC0pJipEYH4IS6G7WPVu2Ef3HXxH4XIrzK4Sb8fIjtPnAtHjwLmxbS
0Jg5pVy3H4RLyJRyDXaZVq42CTVTzkO78M7WS0OUmwF01rJluBr7f7yCsKQslDL3eimzr2Cnp9jG
ni/Drh+vorJLhPY0M+7vjzf/ioZZGttJOjKwiV13zRHktk3tdo4g3l9IeD9M5hRelpTqCoE8vi3Y
EAS2V4e/pwxTrPr9NzxLTxCknYuHUYGCc9POuPDyD4GNX15Dw4hmwyMFzM9Oplm15yzKuzVDJRTI
89bl02w6hRe9bIiAFLEmN7l5O3++g+Z+4adTFslwF64dZGs8dWCfNVnTWZMahK/WTdY2sq2/g+Kz
UN/chv6h4Xl3Op8bYanuRWA97trGQ6zQTCNFlssddY3XVwgtGRc4tfCqa4HZWuFvzuihon2yF4iZ
uiXjhZeVydX4z6r1OGkWKahNZBnpKsevuzbhP8z6+364i9bR6Xlflcj39/qDU5FgXbZ2N91Pj8+f
VVtgHlMq2Id4oAW3zvPCsO37G2jo5YVV3lOKHWtZmdfB+uOG6BTkCYOiA7eP7GDyZS2XNyunCG9j
ijW3zY8/O4nSpsUZ2ETWmYcNXBnoYMP+e2jWEpYiZqTqzomd+O8nK7Hp6+PIn9YF1rjw8nx74S7a
hjR7KJEjy8OQW5+V9YiChollkoZYrgHeRyvWYcd1PwxqeUFrLo7C4W1sLd9qTqg/nkl4p3RLphK1
48qZo1wMr0/epFSOM5PwyrqLsZE7ntVYv/cWGkeEx6OQduPhqS/xMXM+6748gIy68bIYF17+eFZu
3omUes179hUGO0txYif/teHHW74YU0vqawuvSo7cEFts1mHuk5Wfwco3f+LlStaZi/VzletQA26f
2MGVy+b9J1AwUa6vJ7zi+nCs5va1FgfOO6FvSpgRjwq1Gd7YsZGtsd8IA9ck5kW6B5e3873B3Amr
n+E3RYmcZ+w+V+HAdfMZw3AI4n2DhPfDZF7CK5JKcN7PWSCQbws2vCG2sgSDEjHahgfglJWMI04W
gnSzwcYF58y7sdoU4dU5iKwO4SdVlueRDrwMrFyP++7JkGmpbVWNVGI397D5Eknq2qvRhlR8xm17
F0ILmgTrsLQX+fKi88U1tEmnLJOPIivIHT8d5mspJ9DZhG++P4VbD57C0tkLSdml6BmaIaZOxsj0
Hj7k4phuIAZlWtKwSDpxlfscvhI/Oaaq56uFdzX/MDx83ZKR9un5M7vwsvM34JvzT9A9MlN8oAJV
8V5Yt3Yt/rdxH0KypsdBz9pLw1gTTm/n933WLmfGfm1HWnNxgMu7bfDIruHkJMPDGCs+XYX1XxxH
WlW3YJ1x2oqTsGcb2x/ryik1vCpURvLHtYWR6Ga1RL8RSjHCTa7w2/z6NApn7FpOhc6yBOzdzDaW
2wQD75Qpy6YI79pjyG3XHpetEjXge054dPAkWN3dm3IU7hf4z/FfnjBEz0yxtCoZiv2twL48cfuZ
h/DO1WhNq/CqpIizu8tta+PuE8h82SNYb5ye6gwc2cHWAjMvdPZR6i8hU4R31Rdw0biuJmDy3dfs
Nv73CftCeRWtI7zITQrvTjhFlTAvl1JItSAeG0HLy2I4Wz7F3h38fbJ19028HH+5ZbYfZnyZL9f9
Z1DUMlPNqAodZfHYs4kNu9gEQ5/xe/A1hJe5F82O8l8s9v5qii6B7KqRD8L6ykEu3de3bSCWKxHj
oItPmb/X7buB9jFh7LF8pAXXju5n8nITnvhkLPhrE0G8bUh4P0zmJbwsle0tizbS2UI47GiOHz3s
uGGBDy7gOO6F+2FYrF1chUwK72E9Fy1xkTxNedHYs2ElPtnwGWKqZqrRG4XZfvaB/yVS1MLLPrgD
Ln7GbX/f4wgt68jgf5Vv6X/TL19Yu6JSYnSwFxV5qTC6eVpdAzeFT3Wwcv0WbNr2Ba5aB6J9ZHqN
XnOsAf7Hpf0B1XP019ma4YLjhw/gyA0PdYzseEgDu/4pvJwIdZhkTuFduQEGfkUz5iuLStaJWzvY
cInVuO44Pe56NuFtjjPkY0T3XEaXbLZzU6LY4xK3ndXnXSAW9+HxzR+5v3++4o6RGRoXsaiUI3A+
f4zPgwnhZYTD9Co3b8v3Nxnhne+1NjOijkr8emQn2NCam08jtcYbT8BIZ9xDPtTj06P6EE0smxTe
M065s+S5GM7H+C8Hd3x4YZZ0FWEn98l9GxzCCrWsM4lK0YWbm9XX3xIJr7i3AVdP8L2OnL8bONEI
TyvMC0yyyUku7SeHbqNXykrrpPB+dVp/lhcuJXJ9TbhBQXb9cA71g/z9MznwxGrobNqGrTu+0M72
ndiwefNEPPBHK44gtX544j4WtVfg1GG2XNfitkn07LH4bLnqH+bL9buH6nKdv/D2FAbgU+5rzB4E
59QJtz+FwYpo/Hz4MA4zL6O9EjnaSxKx//M1+N+6z+CX2yFI31oYgd2frcaabbvVbQyE2ySI95HF
Ft6//pCgpq0NNZ0Mbc1oHRXjz8mP0sLpnz/R3dcLET8W15JNbyK8NV0dMI4PxwU/F+7reGFzvdZR
MUcHO/Giq3/y2aJSoLWzFbV9M1T6ML/Nze1t6J+pAmUJmbfwslglR79T6V0orCwXNs1Qm6OVSeG9
5hiuZTlPc34M9rIPZebhl9cx08NzDFaH2IfeFOFlGK4Ox3pulK3DKBqcLo3SzudcDfD/Nh5DXku/
lm1ORyEToaGyED5Otjh36hSOHD40rdHcln3fIbawQZ1eibxnp7n53+q7CrY1N5PCe9IyWsvyuYX3
0w1bkd6ovVeFSVQoeHaW28be207Tls0svEo8tzrHLTuk54TRURHD6Iz0vQjjG7XtNkJPXzOun2Al
ZCWMomq0HM90mtOe8fk7pYa3KuwJN2/T9zfQNNPN/hr01ebhu90b8b+1mxBe3itYrom4OZGLN/9o
83l0TIRjjAvvGjhoCR2YSpHTz9zx3/Hlhbe7KBSbNq7Fqi+/Q3r13PvP9+RrLZdKeIdaK3By/2Zu
W/7FM9fAjyNpTeNfBjedQsMoK63jwrsKJ/XtMDJLTx1tuQFYu27NjMK7mnnJ3bJtp3Y+247Pv9iD
r498jwv3TFHRMV0Ge2ue4+hXG7Fi3WZEVszWcJVH3JygLtcL6nKdr/Cq8DLGlguJ2PHDFdS95kuY
UtQJ3V/ZnkPW4KqRP8Y0XgIjnfW5sKg9PztgeDZpJ4j3jPkKb+/YKOr7evDnX3zjefYrc01vl6Ax
/auBEhx0tMC1sADoM3J4K9AVerHx6JD9Pi3dxPSXHNYx3gjoVGgu4ad/lAiKD0LK4G+aS15rWojw
ypVKpL6s5CoWT3s7cpWFVwM9uPDS2IoiyBTTQ5fqiwJwMTBz8muqchTW0V64mDGDcymGYRzujoAW
7V8bl5LXEt7a7g6c8nIQCOX7jkdOKvNmMlttnybjwrsehn7jnxGFjAvvmq0n0SCaafvahVchG8TD
k3xYwjmXgik1bwrkOfCfbY/ceIp+sbAGdTaUcin6u1qRn5UEy0eX8bF64Il1X32Hwl72wc2c2xW+
cdF1hyDB+nMzKbwPAzK0LJ9beFcyspCjpeW9Jj15fKv/L686TJs/s/BKEXqFb0z26c5vcPrsefxy
+uwMnMPJn9WN3zbeQH1XEy4d5VubR9fOXVulrVuylmQHbt6KHb+iomWm8IPZYH5My8pRUd3ASIwS
rcUJ+Jp9QVi/Bfld2mO9pyF5iUPsMa3Yi5KJ2NZx4f0CqS2zj7pT6ca/YIwLb9vzIGxcvwY7vj2J
6r6596+9W7LFE96ulzk4ou7xIatj7uN5Ja3Dt1x+fIXnPWz6ceFdg9tmATM2GOX2lR+CdTMJr852
PHGM5BozlmqjuBgVVS/R3t3PlaPmtifvg60o6J7HeTDlenBauc5XeBXIdtbjYuEPXbiDTtHrxtgq
UBFsxG1z3VHmJa5/6kucCA+O8D05OObP/fJBEO8T8xFeVm6vMKL3k4cd12PUiEyK+xH+nPhl1b+c
lvbVUBmOezqhavQVJ8cS6SB8GKG9EJ4HJf5Gd2cNXNJj4JCdjVbZn8Dfcjgwy0O6GeH9S4XyFwWw
TImFd3EFkx5oaCrAeXdr3ExMRlW/CP/8MYaE/DRYpcQhqrYdM2i0YFqI8NZ2deBn5pzP+jihrrsT
g2MiritX88RIbsTcxKrSaekbS4JxMTh3shcopQjOMT64kdUIthKquakcDslRsMvIQAPbhaVyBJaM
8Aa3juBlYzmCi/PglRoD69Qk5HfO/ex9E15LeFliK4r/VbW87AUqlb+eNE4K72bYhWlK1STjwrtu
61m0T42znYZ24WUvhAQPE6xiHhg7vrmMFhFfe6Ic68C1n4/go5Ub8dQnb1qDK4VMAolEArmWh+hM
NCYYT0jv1hsRkHNSyArvFlgGzHxuMzMuvNvhlaG94c5cwrt6035UDcx9DkMFz7htvI7whl/nhfe/
K3Xwic7auVnN/nsUOdWF+H4zn08+ZTOFp0yiTXjFjQmcXHy04mskTOlSbb5ImuP4bTJ5m9w6xAnv
fja/Nl5C60yxl9MYxL19MwnvLmS0vY7wKlHkb4W1q1Ziy6GfUdI59wvKUgtvNyO833LC+wuaZuk5
YJIhPP5Gu/DqmgdBumDhnedIazPA3gfsi4zOpsvzLte708p1/sKboxbeU7dcMaKtEeZciGvxLff7
sRW+hW0T82VtUVyt83936aNfcx2CeM+Zj/CyPUHdCfPhendiR4g9pe6elR0cq7G/d1paTni9nFAt
mVTR3ro0HHVxRkX7S5zzsMSj5BQYhrrhoL0X+n6T4xknvDLmxTkVJ5xs4Jadghs+NvghoQoVtVk4
72aF65ExqB7ohpunLc75e8E7JRhHnCzhW9eL2SImxqeFCK9LVjJ/nozcej1Px4/utmjs7eZqfdm2
U3fCfCGRT4ZJNpaE40xAAhr6etHa24PW7hbmPF2hywhvZ3MpfnWzxMOEBOgHuTB56YlO6QjMOOEd
QmxuFA47mEE/MQnPwtxwmNl+Yf9MX8vfnNcWXjaGwzkzaUGDPrxtfvV2QFWH8GE6N29DeF+hryoV
u3dsxicbv0JwZiMX49dRlopvtm1gHvRfI6d5apW/BJ4/8eJwyTFJy35mxlnve269zYeeYVgpRdAN
vob3gs2b1PB+xryVVWhZPrfwsjW82vpW1aQjle8a6XWEN1QtvL8YOaGzvZ3rEH9W2trR2T8KcV8z
rh7nQxpCKueunR2ri+TSTu+Htw1n1f2cHjbS3gPFzKhQF83Xpv1vxwW0DIvRUpKAr7ewfcxuQWbb
PGoCx6qwhz2mFQdQLBqfv1DhfYXOgjBs2rAWnx/+GRVdc5dXSxbfS8VSCW9XTQ6OfM5vK7l5Hvkh
fqnu4o65l/rYH9HFE9559dIwA83FzH2wmQ/tyZ5XuVZqlOv8hTfLTY/re3r/2TtoUze+ez2UyLLl
hzP/4sx4HL8UUbfY7hHX4ran9q88BPE+Mx/hZSflb7/BYMpos2xXqFVd7ZrJtAtvfTojx27wZjzh
fGQSChtrUVDNvLQ7mSGosZMT3kDmN9k12gEWeUUoYJbHZ0cxUmiHerkE1hEeiOn7DaLucpxwMYN/
5UvkN9UhMMoRj9OyIf9rbuVdiPA+jQubON8TbjZIelGGnpEhmCREcJWd14I8MCCaDElsLInAdy6O
eBofDlOWuBCc9bCBbmYdYnLDcS4iATkvq5Bdns6FSQTWNk8T3tvjFWeKYdj4WMAuv3aWtiZvxmsL
L8uoRAyLJLZg3t+a3u+Yt7DS1katQdZz83aEV8WIoe1PB8C2jL9mGQA58wBO9HuCFWz3Uld8IZ72
QJbA5Rj/sN9y01PLfmYmwvkOt96G7VfQJlWh1J2Pc/3ysq0grSYjDSk4fvQYzptHqD9ZvLnwfrx2
M3zyhI1gpqNAytP93Da+feA+bdnMwqtCngs/0tlPT9znHjlMNoSXlZWo7xyAuL8F13/iQ0xu+ZYI
Gwpq8DLMgEs7faQ1tiGceqS1tTuR1/sagiHuxr1TfN/Bey6bcl08DTbm4/i+TfhYZyO8syZr12Zi
qDKAa1X/0ZYr6Ju4dhYuvN2lkdi0cR0+3nYYsaVzldcrpJmpG/ItkfCOtFfh9CG+31rHlGbBOpoM
V4fx+bH5HNq4xpXvh/AO1Ofie7Zc1zD3Qc58ytWfP4+tV9HPHfN8hVeFxuRnXAzvxkPnUdU+e/kr
ekvwE3Ov/3L/GYamDHwy3JGPQ2vYMvwMKcyLhryvBJtWMX9vO4b06vn0a04Q7xfzFV6pSonrwZ4T
XnHMxUrrKLBC4f0bFUUxOOrkA9fMQBx2cYddbBisGGwYgc7v6uOEN6B1GE5hNrgZGcgts4iLgE1c
LNpkYpgzUhjZq8RQezF+cDbFI2Y9S0ZGzWOjEFJeDeUSCa9jxmSXr2wMb2hxLh5EBjCyyldy3g71
4cZnGE/PhjRcCMnEqEwGCYt0CA5R3riWXovAVF/m3N1gHRUM86gQWEYHI6e1fUJ4IxnhdayZ7G2n
MMkOdtnT+8ZfTBYkvCz9jOHfCfVeUI8JSw37VjL/Lsi08XaEl6Ur15F/mH1zA32jozD6kY0j3ciI
ovDhVOrE17R8tOIo8ucRU8kjg/O949x6m/faYpiZ153nxoVSsJ9I02aNDVWhzPcGt+6qC+6LJrxs
zdBNo3BIZmllrxiuw8ntn+OjT9bggXvstGUTwmslLJu2dBt+8Ictp9EyNptwqlAVzPeH/OlXJhhj
blLTe2e4z7/Hzluhb5beK5TSXpgcVw9soTG0sHSkGsc28THOX11xQ696qNy5KE/0wLYNbH+tG2Hk
nsx18STpa8ClH1jp18F5fU+McoOPCNdlUSlG4XaJF/ZtZ82n1C4vXHgVgy+wbxvbm8hmGPvOXpOn
GGXKi7umVi5AeIXSp014pUPtuHOaz/efbzhgcJZeOFSKMfje4btU23rSACJO4N4P4WUHn7l4nP0S
oYOLj7whmqNcXS/yI8ptO2ehLtf5Ci8jyzVJWMuFJHwOp4QywfYnUaE1hR+G/NPv7qNfMhkGppSO
wvLOMe7e+M4sESWB5tz/D198tIC4YIJ498xHeKUqFS4HuHFOwY42y4ZHstLHhjdUdLZOSzsew1sy
JINMqUBnTwPu+jvibl4b8qtSoZdeBvGr36BUjsKfkb6KwWFOeIPaR+ET746Axk4of/+d63v7SWgK
xv6UcsIb2i7BaM8LnHK1Rv4wI5m/v0Jvax4iKxownw4eFiK8bI9crNiz560b5ovBsVE8igri/j7k
aMYJ8NT02mN4vXE1sx5pRfG4m1qMQYkUorE+eIT7oaSnZ0J44xjhPR/3nFs+KurCEyZ/nYvr3z/h
ZRkQiWCdHMNlgqZ0vit+cLNGVu0LrqWh5vHOn7cnvK/kPbjHDTCxBZfu3+FGPFp72BDDWh7Gsu5M
fKUe4vibS0ZoHphNVllkKI0ww47V/DqXvMr5C0k5BMPj/AhpO07eQ/Ow9hjn0ZYCHOU+0a+BQfR4
oPpiCO9KbNrzI7IbtOQHi1KGFF9LrNLRwcrthxFfOj0edlx4Nz1KEIYNSNtxaTe/jx9uR2Jkhlpe
KSMv36s/j9/xZfudVaIs9Bk+WbkKqz7bi+CcmXtqqEzxx+eb1UPSagivSilHtOM96KxcydXgXbEK
xOgcMdd9NWk4dpCX1U1fXmB+TNXbU8mQ7swPoqGz4wBiZhq9TaXAi0Q/bFjHlIvO57CLypuyfOHC
y94Hcfp8zw2bvjk9c9y1fBQRtvf5/GB5DeH9z8q1ME+sE9SoaxNeVuqee/NhH6s+34eQvFrhsXCo
UJ8Zhm2bNnKj4pkEpEE5rR/edyu8bLmmOfH5pbPzIGLLhTXcfDqmXBN8sZ4dDIUpV/uY8aF75y+8
r1Qi+FzazZfhobOo5EI7hPuS9Dfizgk21Gk1zph4Mg/tqRKuRH6YHdbprMKGzw/h+337uO09dMsV
3n8E8S9gPsIrZsRVPzoI5/ycuTAGtrbXMjmaa9ClGdbACu9BR3NcD/GFfpgPLvk6wzanEKOMlUoY
kbMJdcKdqHA8DffAnbhE9CmlcORieOVo66jEFXdHPE2IhK6/B2zz6vDbPyqEJfvhVGAwnrd0IrMg
Fhe93GGeEIoLbq5IbxuAcPxZ4bQQ4WXbPIWX5HOVmWwIx7P0ePzq7YgjTubwyk2HWDa9EqexJBQX
Q4XCq1fQhsG+JpgFOeB2ZCgMQlxxKyYeHWNDsFILbzwbw+tsh3uRIXgU7IJLkXFo0OhGdTF5I+Fl
Yau2HRYw6tlSwFa/tw30CYZmfX3eovAyFEUYT8oCg4F/siANjwpeZvxABP/5ZBW++uk2SmbotF4u
GUWwxU2sWs03xPpo+y10TulWqDrdjx/8YgVbW2aKPtF06RX3N+P8Sb42beWhK6jpGo/ZWRzhXbmC
Ecu1p1DSLXwAtxWFYucqdhCElTjyiw0GNGrAxoX3o22mXI215vrZEbwUcd0pWcdjTKOxjnS4E3rn
fuDT7DmDklY+D1WSVpxZz4vsijXHkdsufKEQt2bioA7bkf8arr/fqSOtjaOU9MDqRz6W+D8r12D1
kfsobxsUSN0r5kevPMEZq7khX9X5Vdw7LZ1yrB6n1MtWrGGuoVphfHF/fTq+28T3ofvF0ZOoHZia
p28ivMz+RyvwDbf/VViz+RqzbeHLUX6wPbas5If6ne9Ia+PCy9bg37VJg1xjm9qFlzkecRPOTuTH
TsRXC+8pUWc+ftyylquF3Pr1EVT2jpfjeyK8r/hy/UV9Hp8w5ZqqpVz76tImyvXLY7+gbnC8XF9D
eF+xX0uK1GW4Ep/t+RkvuqZfr+xLmuPTK/gv85vy8ZY9CMgTCrisqwxffsH3yjBOXqfw3iWIfwPz
EV52+uOvPxmRU+Gff/jwgd/+ZP9+hX80m4z98xeUv/82geqPP/DX3+Np/sGff/4BiVyMEbkCv//F
quo/+J2Z9webhtn2b3+oMCKTQMa4y3ikwl9//cHV+v7BpP+H2b7ilYJLw257YtNzTAsRXhY2FLSo
pQF3Qn1wzMWSq+lOq6mEXKNLMi6tQg6xfOp8FWRyGfP7yv4uqSBn/j84OojeUZG61xoVI9UyyJUy
LqTBqaYLI+JR9DPLJXNUDr0pbyy8LGzmJFSV4hzzVvMuenBg3zzYgOqOwbn7rJ0fUgSqhdd2HsK7
lhHeaaOhTWNSeMdHWtNkoKUMP+7kR0P6dPsxpFfN3F/qSGctHt0+ow5J4Nn7w6/QN7GCi6sXXFxc
8OThbexVd9/EsnH3ScRM9MPLo5IOI9D+iXp4UzbG71fYePghJDQMvm72+P4bfmCMj1ftgVNQIeQT
NaUSeKmF13MW4b0yi/CuWncOTwxvYOVqHazcuA13TOwRGhaO4KBAGN/nH9rs5949P5xBpRYhrs1y
x7pP+e3vP62Lx4aPYWCbOtEPoHSoG9Z6Z9U9JqzB0bO68AwOQ2R0FPzc7fHDPv7c/vvpF7D1ez6t
439RazYOfcPXiP1PZwNuGTHHFhWN8NBAmOjx8bmfbtyBhza2fBdgWoSXQ94H1/tnsXm8JnjVRhw5
fR0W9s5wcnaFnbUZfvyWbzzIsmnHYbglTe/uZZzhpkz88PVuTrBXrN+KiwZWCGHzKzgQZg/5wS5Y
dhw+icRqzX5dJ4U3fQHCy1KS5outn/FCu2nXIZg7eiMiJgbBfp64f5Htp5W5B744BGs3R+xgj0VD
eK9rEV6VuBdPLp/g5q/Yshe3DIzw8JEx0oqaOeGfSXhZZF15+PnAPm7wlI/XbMRZfXMEhbL5EQwL
Az5MhWXbgR8RUzF1NLZJ4b3DCO/CuyV7c+FlGWrMwPF9u7kBKlas/wyXDKwny1V/arn+gqRp5SpD
lBbhTZ5BeFkKErywazPfh7HOl4dgaO/O7cvPyxWXfuAba7IDjNx6Eo1RrfkiRfQ9vrafZevFEEgE
aQji38F8hfffPi1UeN8KKjkS8hLgXTd3H++LxaIIL4uKbSDR2w2b1Ni3Kr3sKCAZNVVcQzrNY1o4
zJvHHbYx2VbYhk/9PDydSeG9graZhuedEN7dSJ5haFilZAAPb/OjQh0+8wRdc8TFSUZ7kBkXimun
vpvockwba3cdgJGTP4prO7gGcZrbUUlHUJQUjnPH9vOjk2lw4ORNxOdUQzytw3kZgi6y4RDb4Zle
Jdgmi1IxjNuH2TCNbUhqmxTWceFds/kc6np7EOtvg33qXg2m8j9GYm6Ze6GuR7ugSUe64f7wMv43
5dy/vBM7rZZwrL8dkd6W+Hqberjbaejgm59vIzqjUmtcbHtdCcx1WTHSXI/J031nEZBYANHISxxj
521nhHdQi/AyyKWjKMlJhLHuhYkXCwGbduGmuRsKX7QwZSQ8Fg7mhbKrrgz2Blf5AQg0YMX8urET
Klu0vVCNC+9+ZHXOPthHtR8/cIR+UNq0+Uq5BOV5ibj9E/8pW5ODZx8ipbiBeRnLxpfsvP1ThXcM
975ly+BzJLROrTFXorM0FRcPsi+W/HY+3rALPmn13PK20gR8/bkOdLZ8i0ottcq9TVVwNrqlNT/Y
LukuGTxDaaPm0MPjwrsWdy0iZx3hrLskAuvWr8Wen86jSR3yI++vZoSXkcO1jPAmvLnwsuXayZTr
s8czl+sNY2dUtmqWK1ub+wtYcb9uFQAZd28rkO10A2xIwml9B8GgGiqmDGvy06B/6Qe+zYAG274+
Dp/oPMF6UxE3RqjTb0dI7dvvNJ4gFgsS3vcBFQaHB9DPjYKpuWxpWDThnUpZaxPXdQXbZ5umoC4G
bGzJ967WXGvCobF//w+vfLQb9y7xNTY3vcuEn75nQSIaRl1VKZLiYhGbXYSU+BgkZxagvq0bsvl+
HmDetHpaa5GeEIPw0FAEhcegjJFk/kG6eEwK7xm0qfsfZfsWrqsoQkxEBMIjo5FZUIGBOYR/HIVE
hIGBPoYBiCTa11HIxMz2ixEbHY3ExDjm3BJQ2dA1pcZ6ZiRD3SjITEFsZj5y0lNQ0bDwFukyyTCq
y4sQHRuJpMRURMUloexFA8RTGgfNB5moH2V5mQhX51fGa+TXm6PCQEcD0plrLT47H+mZz9Hc/eYd
hYtFQ+jv78PQ8PD8r1k1cvEgKgqyEKHOj/S8MvS/tfxYPKSiPpTlZkyU6+vcB6+HCkO9rchNTUB4
WBiCwyKRU8pch/MY5rOvwI37jfrk+yfzun8I4n2FhPfDZEmEl0UklSCrrhqWSdFcf7ia0roQjjpb
4m64LwLys9HS//aqwZeajspE7NnM1pwcQHGv8BP+ckGb8BIE8S9A1g+zM2yozwbou8YLlxPEvwgS
3g+TJRPecdgWf32jI8iorYJxfDi+Y6RVU2Rng63NvRLgBp+8DG5o4xGJeIF9676vKOB9ex8Xb/r1
06Rl3eqZhJcg/p00Pw/Btk1rsWrHISSUz9zGgCD+DZx2ssIff/6p6YfLamIHzbgX4CE49w+ZJRde
TdhWfi+72pH8ohwez9O4ASwMY0O4Pu4eRgXCJD4Cz9LiEVach/zGOm4M5zfvdeE9QyVFcWoy0tJT
4fjwFP+ZcPN3yO8W9gqwnCDhJYh/D4NdLchMz0RqXDBOHGD7B1+J767Yo3/G9goE8e/AOSUW+Q21
+OOvvzQ9cVlMit9eITA3E9FF0/vM/dB568JLMEga1UOeqhvZrN0KPe/kmRstLROa8+Owd8NK6Gz+
Ca0kvATxXpMT5TStMd3qw1fwvOXNY7YJ4l3TOzIEr8xk2MRHwDpu+WGXEIlgRnjZkc80z/1DhoT3
XaAYRkaoP9zcveETFIFyQWvy5clARy0CPF3hF11EXRoRxHtOb0slgnx94OLqg7iMQoilr9fAkiDe
d9gG4ssVzXMlSHgJgiAIgiCIZQ4JL0EQBEEQBLGsIeElCIIgCIIgljUkvARBEARBEMSyhoSXIAiC
IAiCWNaQ8BIEQRAEQRDLGhJegiAIgiAIYllDwksQBEEQBEEsa0h4CYIgCIIgiGUNCS9BEARBEASx
rCHhJQiCIAiCIJY1JLwEQRAEQRDEsoaElyAIgiAIgljWkPASBEEQBEEQyxoSXoIgCIIgCGJZQ8JL
EARBEARBLGtIeAmCIAiCIIhlDQkvQRAEQRAEsawh4SUIgiAIgiCWNSS8BEEQBEEQxLJmTuGVSCTo
6upCW1sb8Rq0t7djZGQEKpVKkKcEQRAEQRDE22NW4RWLxRgeHsYff/wBml5v+vvvv7mXhdHRUUG+
EgRBEARBEG+PWYW3p6cHf/75p6bL0TTPiZXe/v5+Qb4SBEEQBEEQb49ZhZcNZaDpzaa+vj5BvhIE
QRAEQRBvDxLeJZ5IeAmCIAiCIN4tJLxLPJHwEgRBEARBvFtIeJd4IuElCIIgCIJ4t5DwLvFEwksQ
BEEQBPFuIeFd4omElyAIgiAI4t1CwrvEEwkvQRAEQRDEu4WEd4knEl6CIAiCIIh3yxIJ7z8Y6G1D
bEUx4tUkVJQgv60Dsj//0ky8rKdFFV7lKAqz0pGRXYIxpZblU1Ap5ejv7UZX7zAU0mGUFeQgt7gZ
Ki1p/41IRUOoLspGeHAgAkMjkFFQhcFRiSDdRPqxHuRkZKJTJJu+TClGWVEunueXQjxHnmrC5nFf
dxeGxHLBsvcDJdqYey8tIwMZE7DXTylkgrQzo5KJ8KIkF1n5jVBqWf7uUWCwpwu9/cNQqjSXvR+M
DbUhOz19SjlkoKi8FkMiqSDtvxaVDL3MM2N4jD8niWgYnZ09kGq5r0RdVcjILIZIIkdzOXNtFdcK
0syETDSIjq5uiMQa9/L7jlKCquL8addAccVL9A6JhGmnIB8bRkcnk6+imX/fxCPtyExNR2WnCE1l
z5FVUi9IQxAfOkskvH+jrDARh+xN8KuPG/TCfHHN2wbfOFjBorxDM/GynhZTeIdronBfVxe6uvpI
a5x9yGLpcC8CHE3x2CoRkrFexIf7IyC04LVE531FpRAjO9YH9+7qwtrJHS62ptC9ew8e0ZkQy1WC
9CyDnQV4rPsQxX0j05cpR5AYwUhzeAJGtDyYZ2NsqAtupo8RVbV4Zby4yJHjacflzWNDI5iamsLU
xATGFoEQCdLOjEoyiLSYIHj5P38/rx/lALwsTODkE43R1yzDt0Vfax4esfeugRkcHOxhZviIKxff
+BxIFNqv2X8dilZYP36KlLI65m8VKnLjYPDIGq1yYdqh+nS4e4SjZ0SMLB8jPHKJFaSZiY6cEOgb
mCO3rE2w7L1GMYRAR2uu3A2MjGH06AHzW34PZrbuaB5VCtOr6S6Ox4PHT5CYXTdjhcVI3wt4urkj
u5G5V72e4rFLvCANQXzoLJnwVhYn4rCDCbzrBrkhdhXyEei7meCATyJe4R90dVTghpcNfvVwhFdp
PbfWK2kfnCO8cNbNBpd9vJHRLeU394cI/gl++JWZf97fD6W9Ym52TWkknqZkQfb7X5CIemEX4YvU
fiXyy5NhkZ6PrIJY3IxKheq3UbjHeuOUmz10g0NQNyzn1hcNNuJpgBN+ZrbrkFcJ+Z//4I/fFQhK
DsIpdxucZY4hrX2QP4YFTosnvGJEPL3L/ECywqsLU7c0SNXLxgY6EOJqg8ePDWDnEoTW4QEketlB
/8F9Ju1deDEyFxXhh6AYvmZP3FUFZ0szJv1j2LmHoWNUzkhDP0Ic7REcHgoH86cwNDJDUmkT2AdX
a1UObCyewuCBIVz84iBWvtsHtFI6jAhfW+bcDFE/ooRSKUWckyks3IIwKOpGiIsjMsoauLT1RSmw
tfXGi9YiGOo+RlhSJGyePoaptTvqBhXMQ2gUaWFBCAxNw4iC2b64A0HMQ8mQyZtnnjHoFvEPosHu
GrjZmjN5ZgzPgHgMjvQi0vEJ7jJloW9mjuiMF2h9kQ9bCyMmjSGsHEPRKREe+9tFjjxfO9w3MEF+
wxCTT2xe8chErfBxdEZ8chSsmPx4Ym6Psh4ZXuTH4RmTX+2yV1AMNcPd0QkBgbGIjw2CT1ghBrrq
4OnsgsyyUrhYPUVc9QB6msvgaMm8XBkYwiMkmau16++ogoejK1IzY2DObP+ppTNeDigw3FIOByd7
ePkGwNqIuc7MXJBbkAtrM2M8NbFDQV0n91Af7m2Ct5Mld017BCVijN1mexVzPG7MNmNh/oTZppUL
qntEyI7xxv27d6H/8BE8onKhELXD39mSuV4fw9LGBS9aFuseXDj9bfnM9aeLsOp+vgwkrTBh/rbx
DcewVAnxSDeCPWy5e9LZKwL9IxIoFVLkJ4YwcmyAJ09MEJFWDpVKiYxwL+ZejoObFXOtMQIdV9yq
3o8S1RlhMHvyBI+NzBGT+YK736XtuXB28kIc8/toxGzf4pk3usakkIuHkBrmzc0zMrJAfEEjtx1J
Xwv8HdjfB0PY+8RjRHA+crzIioS5CbMfRnAdmN+Q9vYGuFkbcb9NT5kXK9/ISBhzQqcLW1dvFOSk
w8baCZn52bAyfozYvCx4+TDCOypBtq8p9IxtEepmC0NDY4RnVDH3pQT5CSGw80zlfuf6a5j1rG0R
G8fcz+aG3HYfGDuiYUyBoZ5GeDlawIC5/jyDkyCWKqCQDCMt3BfG3LmZIy7/PajxVA4jxMkaD58Y
42WfjClfBUrTAnGPOZeHrjlQMOXXWJIMMyPmfnxixpRHE/pbq+HM3Gfs+eo9sUFFzwiG2irhacf+
FjG/Y3auqGKeUWMjbQhxd0dmTT/SvU3wxC2Bu1ZK0yNg8cSQyVcjhCQWQfGOf7sJ4l2y5ML7NLMQ
z5tqkVqRgTOO5jDMb8FAfz2ueFjgRnQkTGMD8L2zGZ6VNCI0JwIH7c1glJoE4zB3nPF2Rf3YKBxC
HHHU1RZPEqNx18caP/r44iUjaUXpzjgREgvRqz8x2N+Eq84m8O2QITY3CN/Ym+A7D1cYpCbjCbOv
7z0cYJQUhRuMdJ+JiEVXXzWuOpjjKiM71qnhOOloCdfqNrwoCmDWNYd5RhqsoxhJ9onA6D+a5zf/
abGEV9RWxP3oufpEwsfOAo+eWqC2V4JXqjGE2T9lfgwt4B/gD0uTx7hv4YesGB8YPWKEV88c8fEx
jMQwP4I2SZw0GBnoMw9EG/j6eeLJPV1Yu4VjgJF/U/YhYmgCHz9/2Jo+gu4jTwyKB+FuyMw3dUFk
ZAgsTZ/AIaVBcHxvE5V8jDk/b9xjJEdP/xGcPPyRll2Ilu4hqCSNMNbVQ2ROOZc2N86VyTcjFDex
wquLe4ZW8PX1hJHhQ+g9cEDnWD98bMxgauWFLuYacnighyemtvAL8IGx3l04ByVhqL8Wdvp3GWmz
Q2Ag8xDVZ0QlKA7h3m54fJ95+XD0QEJiBlxsnuDe/ccICgmGlYkRHL0zIdFy/G8PXnh17+rBxsGD
uT4C4O/vj+DUUogHKrj8eMScq68Pkx8GjJwYRqKiKBmPmHMKKe5CW3EaHjN54B9fCB8XC+iZxKKn
qYx5gOox5/kA1vbOSC8vhOWDuzCxcYC/nzcjOfdh6Z2OhposrkbTwMIR3p4ueKx/H8bPUtBZnQ0D
/Xt4/NQSHq52/IP8sREjP54wfqALI/doSJmXV09LfWabjsw2fWFq+AB2wblorMmcts1HzDZN7OKR
/zwOBnr38ZiRhJC0YiSY6eL+Y1MER0TC2cYEVr7xkL/jWtRx4XWKykBpaSly0yKgd/ceXCMyIBIN
wN/mIYwsbBHAlJGlkT6sfVPQ3Z6Hh8wLq6VnMML8XWFi+ATPOyWIdnnC5NsjuHr7w8HKhHvpSnvR
hYrUQNy9dx+2zp7wdraGLnMtxufXYqw+hnvxNbF1hK+XK3fNWkVXob4sCQ+Y+bZ+EQj0dMBTgyco
aO6Cn4Mp9E3s4e/rxd0njx2jMTLly0lHSRLu6enBwSMAoZ7Mfpj7LTQqHqHBnsz27sHS3oV5AcyB
g405c2wP4B4Sg8LUaOjdu4v7+syLpKMLktKDoav/DK0DIk54dZl0Tsz5OD+z5L5iRTDyHeXPvNQa
hkHM7LOrMAp3mWsuND4b/vZG/DVt74u2wR54WOjD1HbyWnkWkofayhTu3GyYcwvycuTOraRPISiX
t8o04eXDPkY6G+BgrIcHzL31sjQNhsw1/czdl3mptON+30ITniPE1RxsTbC5jQfqe5rg+lgP5ozo
xsdHwNzwPvQdE9DXXojHTL4FlXZMCK+kv5S5X+7C3M0fkYHuMGVehDLbxoTHRRAfCEsuvKx4TmKH
7EEpKqriGLE1x/24aJhFB+C4kylO+wfAOysKh+xNcSU0AMYxEYivaUVv90ucY4T1WmIBlH/9DXFv
Ho7bWyO6rZcRXjf8xAjv2P+zdxbuUVzrH/9/rlWAKm2pG8UpTqGFIjWgLXFPNu7u7m7Eibu7+8Y2
u5vNWrK72Xx/Z2YDJIHeH5dbCje8n+d5n5bRY7PzOWfOTJjwLjBZuRn0QHgP+3qhSCjBxFAdTgU4
w7qUCZB+DbPTfagaGUdrDRNbP1f8lpYA/+IUnGVpPZ9RgY5GTpad8VNKLOyy05HdNYzVZy28ajlq
M2N5OYjKb0RZnCe7sVkhr7IbypkG9sNuhoSSJtajV2NiuBcNjR1YmJtCpIc1jOzSIRGPI8ibdT6Y
8HZW5fNCk14/xnr7cjTEO8HYygvdQ61wYcf3js/hpwU05Iez8zmiS7SAcAGTEhsnBAUHIzY5C4Oz
z/5HU7Y4h97mGsSxG/W9kWx7v0TMznXBmd08Mytb+e2qckN44W3aEN6E2iEolUsojg9mN1AzlHcP
MNkwCG9nI7tJmrLjuPogLj4CtqyczN0i0JTNpNnMHsX13AiYCkNdTWjsHodkbgS+1oabzPL8GEK8
7Fm9WMA3MAThUanoGJ5/xnNeDcJrbGIGD59AhIeHIzwsDDF5DZDNt8Kea093u6GQziEhxJ2Vkwf6
R7rhzTo7jj55uJMZAxMjdnOenkT0hvAKB1uY8JrDOTQfsyIJBooCYGTphOrOMaiVMhSmhDDJcUZ1
x13+BpzYLIR8fpiJmT3sHMPQ21bJC290UTeWFwfhyOotIDYbYvky/2jbxi8Vot477BgmcPYJQnRs
DJyszJjgOKGmvYw/ZlLLDCvvYfi62cPeKRyzMiECba3hHZyMRaUchd6sY2POiVUAE+lY1HYMsWtj
e9n8tXFPeO89oeHDxBwZVQOQjVaw/BpD4OGL6IQEuHGdD2MBmtlvlw3XrpkIBweHIz2vAvNSBRNe
B9j650LKrtOZ7kpYmJkgNK4QEUxyLayc0bewDIVkEoGWRvBJLoaEE14TB1SyDr1cLES0J6vfhEYM
tBbyQi3w8ENISARyiusx2F8PexNuNNEP8TFMeG0sYW5lhw7hg/myUiaZNSW5SE1NR6iPM8uLKRLz
q6GU9bH6NEdeXRe466SxNBVmrP0MylYgbCvhhTcouRwLYikmWpJ54R3bEF4rz3hIWH5mBxrgwtqX
k18uUuK8eeHlRngn67J44S1uncZwSRTLjy1K6wexNFjAtxUXJtlRnPDybcUZlc3FvOzdy1t2UR0W
l59tp+dRwiudHkKQixXMBJkoyAzlxd+PiX+Ynxc/Zcs/MgO9lWksT6ytFHVCrVpCT3M18nNzkMJ1
3K1MYGQTg8mJOsPv22bhZde4HSsDOxcP1n7CkJpdhlnpM5Z+CopnGE9deKN7ZvklwvEGXGD/vlnW
jeb2DCaVTjDLTIJjejycMxLgWngXs/JFFNUVwSI+CGcCXXEs0B1pjXW4EuoK88pedlRAp+zDt77u
SB+Z5oX3/MYI7/R0B676bxLeiCyo2fai0XqcZkLtVj/M77+iWMDwggjVxRFMeJ1xk4mNTVoSXLIT
IWC96SWVDFXNJbCIDcI3TAIO+/qiS/3kxvtnCK9CPI2oAMM8VTMzMz64UR1v7tF6byGTEgtk8zcZ
NRbnhRganGD/ZcLraQMjp3RINwlvR1UerNgNraBngd++L8eT3Xjc0TnYzISXu3HVQMnkoKkogv34
2qFXosB4fwdS48Lg4GAPMyaERl6FUDwinX9VSObGEM3aQFRJDxQqNVTLs0hzt2D58MbARCuc2I98
5J1q/tF4NSer94XXHEV9c3wHoiI+nBfB4ube+8LbVJ7LbspGsHNwQmBQKMIjwhAckYKGTB/WKXBG
bdcUf/4F4RiGJ2ZZOkbhx4Q3qXGK3YiUmB3uRHp8GNwc7GBqwoTNIwpziofT/9fFxpQGa0dUs3wr
lcqNUG0IrxUqB2agks0jkR+pc8aEdBEpQexmy8TdhomXeUgpE2LhQ8IbVmJ4jD6YHwATO0+0D3Pl
qkBlfhwvyZVtnPDaom1BDeXiCPw9HZjwBt0X3qSKUXYtjsOdm3KTXACZagW18S688C70ZPMdGBcv
b4QGBiI0OAS+QfFoaOOE1xbtohUoRayz4cEJbzAvvEH3hVcF8cI0SrOS4ObKOrpcZ0gQgUXFs73R
3xPexMZxcDI42VHEP8oOTszB3EAJL8CObu4ICQjg8+sXFIfhRSm6mysR4e8JO5Y/7poPZeXGCa99
5F2+M7U02QJLC1OEROeyfd1gaS3AqEzNv+AaY2cEl+g8g/BauPFTOxSSBcT72PLCq5CJ0FJTjBBv
V9haW/LHD8zM4zsVZtbuCA4NQSiL4KAIDC3cezFThd7SZD69ts6eiI72fyC8y1uFt6nsYeHNqJ/k
jzO1TXhtAjP5/Egmu+HpaA1H7ywkxzLhdUiElP0eTdQbRng54R0pjWYdUCa8jYOQDuRstBWfTW0l
AaMilrfaEpY3t/t5S26cfqhe/tLYLLxCGZQKOQbbyiEwM4KVTz4KM4PAjeT6sjyEBgUjNCSYH+Ht
r0rnO0eZpZ1QiXogYPm1tLZFaGwsHM3Y77F19COFl+uA9rXXIDrQB/Z2Nnx7CyobejhdFBQvSDw1
4W1hwnuUF17DHNjVlSU4Rbviu7xmDI7U4gL7cfaqbURxRx0E6VHs/3uRXJ6KH+KTUT7QC++UUBwN
YMLb2Q0zdtM+HxGOjI5mBGcF4lhIEKqFYl54j7IfhYi6KvjeicEx303CG2IQXvXSCH4KdsVl9uOQ
3d4Il3g3XEhMR39vCY77e8C+tBy1Pc3wyIpFZOcImiqi8HNSIsqGh5FSGocjvm4okei2Zu8/4M8Q
3qn+Wv5xr1N0ARoaG9DQUIcEb/YDZu2FgZlRBLIbm4NPBGpYOYSyjoSRbRgm56YQ5WXD31QqKorh
62UQ3rGuKthamsIlIBEVlSXwtTWCvXcEJoQ9vPAmF2wV3vbZMQQ5OiEquxQtjVXwcrBkApH1TB/V
y8UziPEVgHusm5iVj4LCXAQKTGHpHIKJuSH4mHN5CkVVVQWCPLl5hQ+mNNh4RaGivBQBLg4wNXNE
76zwvvCODTfD2swUbsFJqKmpRGp0MKIzizDVV8okwBS+EUmorS6Dj8AMjlGlTHiH4WPJpCIsiZ2r
DhG+zvCLyUFzYzmc7a3g4BaAcekfv4zy9IMJKDelgYmCf1gsUlJSDJGWj3GhQXhrhrYK7/iyGsMV
ibzQcC9H5nVNQ/Uo4S3k5nevYHGwBFZGZgiMzUBtTQl8nK1h7hqHzi6D8HZJtgpvz2MI79JMO1yY
xAVEp6KuoRZJ0UwAk2sw2mMQ3m7pVuGdWZpm7diK/b8XCuubkOhkB5+wBDR3tCPJh9W/dTDm5M+J
8LYYhG9FMcY/UeHm8M7P9MDd0gTeoXGob6xHWlw4/OJLMd1dAAGXp8pmVBUmw5LbPrePF14jczfk
3K1ERkwAPxKYXNaJ0qQgmJiaITG3CHdzEvgnP0nFjYYpDWZMeIe2Cm93bTocXfxQ3tCBOymRTE45
4a1GgKMFnENTWZuuRHJkKBPI1AcdN7UMhQlhfPtILWtETU7MhvCy342lXtamTOEXGc9+U4VoKE2B
qZElkosq0HaX60wy4a3lhP9h4TUyEyCjrBY5SWGwNGVin9uEjDg/cPP0MwpLEOPvcl94x+4y4TW2
QHBkOiam2uDM2kpgTDrq6muQGMW1lVr01Gdu5K0Thez+wuUt4u4zfsltQ3hNzS0Qzu5zyYlxcLEx
YeXgjKqRRTSXpcDCxBIpBeWoKM2Hv7cH8mqHMVnHhNfYFD5BSehr5aanmCIsNQ+97bXst8jiD4VX
PFwCgYAdo6we9eUZ/HQgt+zuh9NFQfGCxFMT3ramjRHeXoPw6jRK+Kd540hIMkRaJYrupvKjvMf8
nfF9fDrGVFp++sKlQBd8HejGljvBtKgR8rU1iGc7cTvYkd+WmxoR0TKAVf06E442/BDoiEN+TjgX
GYgTm4V3Y4SXS4tougU3g7lzOeF4gBfyhoRY02tRW5+DM37OOBHApSEBQ1IFZEyQzWO88HWQO1vu
BpuSOmiffID3TxHeppwgGBvZo3HhgTxNtGexm4kxEuvHMNZTBRdbCyZwpjC3d0NF77ThSwZpYfwc
Ol//AHh4MuH1K8CySo6ecm7+oDFMTExgbGyHmt4pqOTD7AZsxoS3bpPwOmNoSY6a7CiYm5rCwsIc
5jYeqBsU/eHbwn9JqNWYYeLlZWO2IWZG7CZii4q2IajUKjTmhfOjGaamJnBxc2bl5Ir24Q3hdXBg
+TZl5WKJ3KYJqFTziNwQXk6KxpsKYMvKhtvXzMIeNV3jUKsV6KpMh60Zt5ybyxuE3kkRFEsiJAdz
UwGMEBRXhtrCBHCjTeasnIyN7VHQMvrMpzRUxRvmyW4NAdomOOG1YcI7u0l4vSFkYqNeGoAzV36C
UEwvLj8QXrcHwhtVvvGiFCub5uIkfq6vmZkJbF0D0TslwngvJ7wOW4TX3jES/e0G4U2t3iy8xQbh
TXKHTUAqlhVK9NXlw97C8DTDysELLWPzrJ1zwuuwRXgdnKOwoJChPJ6TIyNYsxv9HNvOyZKrBwu2
vxWSCpv5Nv1w+fx1cU94H3zRYwlpAtYefWIwI5ZhvOMunK3M+fxyXyCo7pmAXDKHhGAPfr60ubkp
7H1iIWTXIy+87Fq1tuCuX9bhiiyGWMG9iDiNtAABjNl1zc3/dA/OYPUnNwjvvRFeqQiJfvZwTG6E
WDiMYA9HmJhx5WQKx+B0zMnk6G8ohBlr/ybsmje2ckJFz+ymdqzGbF8tLPhrzhy2DqxTbWSCiMxy
yJWLSPDhOqIsTZk9GOmogp2lGUxtnJGbnsoLb3bTphFeKya88xsjvM4Cdt2Z8vLuEpIFMbsWBxvu
wIK1K2MmtwJuhJsT3vZpVve98LHiXuC1R4tIjt6aPNiZc23FlLUVH7SOL0AyM4pQLyc+b+Zc3oLS
2PX9LDufK/eFd/O16OASgPreMb58FdIZ5IV7s/ya8L/NAt8UTEmVUImHEGDDbW+LqsFBpPpx7wqY
wdLCGvb2rPztozG6IbxZHVO88ArC8qBaFiM9wpv9ZpnDgns3wTPi4c8yUlC8QPGUhPfxWNOo+Ufj
+i1CqYd6lZ1fx01AeMD6uh5K9mO7snUxdDod5CurWxc+Ar1+jd301NBu21+r1TAJVGPLGC471ypL
g1qnxX/hujx/hvA+TqiVCiyKxZD/wWe5toeKia9YIn1sIVMo2I1zaem5e8tXtiTF4qJ4Wz7UWJZJ
IZE9+gYnX5JAxj3iZnLcWZkBKyYTzl4JWOC+0sDWq5RySMSSh6ZtKBXL7FySh+RJpVKw2Pg323eJ
lZNC/XyV09MOpVwGsVjK8v3wuicNFX9M8RO1OZVKCalUyq6HR7eB5zHUfPta3PaCHWvLy1LWpuT8
N4a5qTOZgXYQxFfz7U6ytLyt86nmrwmJ7HG/78u2Z9eKbFmx9Tjcsdk1wE1/eXgfw/qlJRlL039e
N38Y3DmlS1uOqWJlIpHK/t852I9uK1ze2LUu25a35zwU7PdJuvTH9adWqVgdyx7zt1sNuXyJHc/Q
fh5eT0Hx4sQzFd4Xgb9KeCmeIDjhrb2DhOR0NHZP/U/dFClezOA+NVWbn4SMau5btw+vp6CgoKB4
dJDwPmVIeCkoKCgoKCgonm2Q8D5lSHgpKCgoKCgoKJ5tkPA+ZUh4KSgoKCgoKCiebZDwPmVIeCko
KCgoKCgonm2Q8D5lSHgpKCgoKCgoKJ5tkPA+ZUh4KSgoKCgoKCiebZDwPmVIeCkoKCgoKCgonm2Q
8D5lSHgpKCgoKCgoKJ5t/FvhnZqa2u5vxH/I7OwsVCoVBQUFBQUFBQXFUwj1Y/zVx38rvPPz89v9
jfgPWV1dhUQioaCgoKCgoKCg+JNjbm4OS0tLDzns9vhD4eVseWJiYru/EQRBEARBEMRzgVwuh1gs
fshjtwcJL0EQBEEQBPE/CQkvQRAEQRAEsaMh4SUIgiAIgiB2NCS8BEEQBEEQxI6GhJcgCIIgCILY
0ZDwEgRBEARBEDsaEl6CIAiCIAhiR0PCSxAEQRAEQexoSHgJgiAIgiCIHQ0JL0EQBEEQBLGjIeEl
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

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_scripting-sample-policy-actions.png

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
o/sHxBRNynKxAAwAAAAASUVORK5CYII=

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_scripting-sample-policy-subjects.png

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
rkJggg==

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_scripting-sample-policy-environments.png

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
im1dbFuPt08iIvr7eivB+3wTyLI+iT2Rs8+z/CP0PUrB7i3bcDC0eO6PiPReU14y9p+/Nvfi32d6
BJnBHti6ehWCEyp/9VuTF2nNdMX3e6J+/d2+6kqcMbD7079jmIiI/p7eoeCdxmBrHeq6X/Il/L+R
pr8JBUX3oOC5fPQ3NDrcj7rW2R/U/N2mx9FUWYKCskdQjb1q7op5GepAZX3fnKPYkM+Db25sx/ir
T4qIiOiVvUPBS0RERET0x2PwEhEREZFeY/ASERERkV5j8BIRERGRXmPwEhEREZFeY/ASERERkV5j
8BIRERGRXmPwEhEREZFeY/ASERERkV5j8BIRERGRXmPwEhEREZFeY/ASERERkV5j8BIRERGRXmPw
EhEREZFeY/ASERERkV5j8BIRERGRXmPwEhEREZFeY/ASERERkV5j8BIRERGRXmPwEhEREZFeY/AS
ERERkV5j8BIRERGRXmPwEhEREZFeY/ASERERkV5j8BIRERGRXnsrwaudGEdNRxu6enrQ29vLwcHB
wcHBwcHB8UpjYGAAY2Njc/Pypd548E5PTyOqOB9rPOxxMipo7o+JiIiIiF5I6s+2tjaMj4/P/dEL
vfHg1YqZ+znEC6vc7Ri8RERERPTapAbt7u6ee/ELvfHg1YyNyUd3GbxERERE9FtIZwxIR3lf1RsP
3pExrRy7DF4iIiIi+q0YvERERESk1xi8RERERKTXGLxEREREpNcYvERERESk1xi8RERERKTXGLxE
REREpNcYvERERESk1/QyeKUvGJZmtr6+HlVVVRzv0GhoaMDQ0JD8GBERERG9CXoZvNL9NDY2ymEl
/XvufHD8OUOlUv3X0dHRgYyMDHljIiIiInoT9DJ4pZns7e3F5OTk3B/Rn0gK2uHhYSgUiheO4OBg
2Nraor29fe7NiYiIiP4Uehm8fX19clzRm/UqwRsYGAhTU9PX2vCIiIiIfo/X6Y6/VPBK4UVvFoOX
iIiI3kWv0x0MXnopBi8RERG9i16nOxi89FIMXiIiInoXvU53MHjppRi8RERE9C56ne7Q++CdGu1G
UnQsyh61YEp3CVruFiLpXjc0/S1ISyvC2JzbPN+EuF02wsJi0NLz+vPxV8XgJSIionfR63SHngfv
NOoz/bF27ToYu4RCPSYl7yRu+17AvpBKDNbm4PhBL4zMvdnzTPXBeMsGeMcWoH94dO5P9dbj4JW+
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
V1kAAAAASUVORK5CYII=

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_enable-entitlement-debug-logs.png

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

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_scripting-sample-oidc-consent.png

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
RU5ErkJggg==

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_fedlet-demo.png

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
uCCf3LxCymRt9mpLeeR9nol9ZxIsMlNZJ4+S8sYdYX5DVjNTIY69pLQc2USjteIcVVSUUpiTxC3n
g6xdrMAi23qJfR11sjGKq4WE1P5BwuXI1qugpLiQkooGme5rqBP7Ky0sICcvT5ybij9c92UqcxO4
edaGXYcc8A0Lx9vFlmUaa1hvef/VgehlaS8VaS0qo+IPJwgQ10p2TnJzycsvfk07L9nMXlFcdDjM
/qNn8A8Pw/OsuSjIbGK348PfvW5/iCiAyZrIPH36lAJxP/7h4f1Pkf1WcQlFJRVUN2rgWSN/nZyT
m0+JEFDZIVTFe6C69ABHXB5RWFImv3cbT2QmnhlxvxWIZ6u8skGt4R9SQ4n8eouMo0o2cmmDJeVl
FBWJ+1Ps6zcnq82LxHKTA/ceJv/ufflHlIvnKU+kqahE3IcNRE/2fe5rvhcXn6LCYopLqxp//wri
WZWNj/uaVSpLCkXhNF+k71+bzre6VPy+KChXy3deK57R8mf//mNk95DsOv2JVf+AmkbT91ZVVb1S
OP89SsW1K3p5fGtZO1PZNX3N7IS1Yt9Vv8WSZ/H4tXFVFnNl92ZOjljesNa6ftmL/cja3peL+Fhc
P1a0bFlFRf3z1Gg9WSysfRbHS3g23Pg/SZ284qSkSBbT/2zcqmucL/whshhaKfZfKI/njbaQ5RMV
ZfI43mhXsinRy0pF/lEqnsc/8xsNEXGvqj5ml1bUP//Pl4h0yvKNYtnvNfj+n6OWKnHMhfkiPX/6
fP1nqBMxoLhQ5LHydr6vT3GdOFey+7r0NflbTaW4B4vF+RLnURqcQeJf4VXh/UfIx+E9xRhVh8ad
2f4QkbkUPOGg0kzGLt2EifEuVo2cxuKjd+Sv7v+S1JYTE3KDBYuX8+hfMYLaMlIf3WTrvJkoa27C
N+v/YKaqfxM1RWncOGnCnPkL2WiwC+3Vy1Dfsg+v+MY1Av9uqgsSOGe9E7XFGmzZaYDG8sUsNbTk
fkp9LezfhZq0+xjsdODinbhXCxD/R1Rnx3A/MpGnLw3fJSEhISEh8XfknxdeWQm8IJnAR4n/XK2b
KD1X5KYQ4HmNc+fP4O4f9deVXRmyWYqKcoh7HPuvvSqpq6ZYpDfY15ewpKevlFb/6lSWFBAfeh/X
ixe5fMOb2GdNAf63qRDnPCbYF5cLF7jq5U9izl/6LvnXKMvhSXwimfnF/3X3hYSEhISExH8j/4Lw
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
rkJggg==

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_fedlet-sso-request.png

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
RK5CYII=

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_fedlet-sso-response.png

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
5oezKPKMSg/iGr3kqTe2lTFFMbuZnF2NKNhP5SeOeGJWSIuXraUd3szOFopp2zca+wNpvnrGqtG2
mWKplz7tuhFha+WbqmaYXqY2y7XJnym67XXVt12PNlpQv/ngKGr9oMxD2xKIYrHx7JH3N1PhFIgi
AODSI1YUecbV+y452H7phsH0StYYf/ajB784UdQDKC+zDZsyxX9r1RTSZu/s8Zc67Wd0jBYHznv4
sp3+MzXeHzB5Dr2oBvA67YvCEUkurepnjuZM1LRRC+dPm0+m2XMm+zaOVy/Q6GeT4rmdN1Md11zO
1OzlWubAitEijLeW/abRUGOmyM82db5s+5vj8sSyr7ZDh/H2bNZkerGFLNd1z+anbK+rvu16NDHr
afwufjY5y7eF35rV+WcO/9h/lsjboOLPfXtMUeT92ncPoAZi60dX181NalcAALiQcYgiLwdupz5q
kNbbz1pPEy93MP6gafyfIv/mlzdmdAxe+OBNPgsznlOJ5cJT/v/FZQwMv9DDs7U+anb0b9dO9YTt
lDerCf7VQdoyM+Z5ZPDvJOYsNGzjYZpg2dh91kf+uXqmZz/TtJeTJafE/ylqgdFby+y1SpD5rdig
HvV5Zr2ZGy9Tmv8SIfN02Rtf38n1qCn3X0K6s/0KdeyUl448l5dIS31R5LaSz2dZXHm5Woui+X+K
djn4XIgiAOBiwimKmsTRvbR39246eEQuXaaKeFP100/o0PF/2UEpw1/RYUHU8HM7TrOqtsTBS5H8
Nm15jQze5dI2b4tKT34VKL4uxBdxvHM0egZqCrHLXld92/UIAAAgmZREEZx7Kk4W+MusUf/YDwAA
oOaBKF6w7KZZuVNp2KRCvLwCAADnCIgiAAAAoIAoAgAAAAqIIgAAAKCAKAIAAAAKiCIAAACggCgC
AAAACogiAAAAoIAoAgAAAAqIIgAAAKCAKAIAAAAKiCIAAACggCgCAAAACogiAAAAoIAoAgAAAAqI
IgAAAKCAKAIAAAAKiCIAAACggCgCAAAACogiAAAAoIAoAgAAAAqIIgAAAKCAKAIAAAAKiCIAAACg
gCgCAAAACogiAAAAoIAoAgAAAAqIIgAAAKCAKJ4jKspLqXTvXjp48KAdBAAA4AIhRhQTlN0kjdLS
orfc9afsCClSQvmzZ9Pi/B12gEEJ9a4v86nzwoKksHB8ez+Zsk1vibQa9dni/35k0Gb7tEqoPJ94
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

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_fedlet-attr-query-request.png

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

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_fedlet-attr-query-response.png

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
CACAkv8H3OT95KvY/AgAAAAASUVORK5CYII=

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_fedlet-xacml-query-request.png

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

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_fedlet-xacml-query-response.png

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
RU5ErkJggg==

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://backstage.forgerock.com/docs/openam/13.5/dev-guide/images/thumb_sae.png

iVBORw0KGgoAAAANSUhEUgAAArwAAAGKCAYAAADucZJuAAAACXBIWXMAABibAAAYmwFJdYOUAACA
AElEQVR4XuydCbxNVfvH9+vOg8yUImMyZCYpChkqryi9QkIoiVSI5JUU0USDlG4DJRUaNYdKg+of
etM8SKIMZUimO+z/+u5zl7blnDuec88+5zzfz2d9uGfcZ++11/qtZz2DZQmCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAhCzPOvAK2Uq8WFsLm/xzwGdxMEQRAEQRAEv5jC
0RSx8bktQbXE3JakWrLRUnJbqmrHqFZJtRNUq6nayao1yG38v55qJ6lWR7Xaua+prlpF1dIt32fo
zzO/h+/nWGj62Gj5iWNBEARBEAQhBnALWi1qtWA0xSyik5amWmXVWqh2jmqDVBtXqlSpO9LS0p5K
T09fof79IiUl5eekpKTf/vWvf+1Qz/+p2k71mp3Jyck71Gu2lSlTZusxxxyzrXTp0tv4OzU1dTtN
vW8Hr4mPj/+D9/DehISE39XjG9Tnfqlev1q9/k2+Sz03Q7WrVfuPamdYPrGMuOYY9fFqUaybFsOm
xVhEsCAIgiAIQoRiWmvdllqsoghaLKcVVKupxGUTJTjbx8XFnav+P0SJ0v9WqVJlXr169V5v1qzZ
t23atNnTtm3bnK5du2ZeeOGF+wcNGrT/uuuuO3jrrbfmzJ071168eLG9cuVKe926dfZ3331nb9q0
yf7jjz/s/fv32zk5OXZB4bW8Z+vWrfYPP/xgr1mzxn7nnXfsZcuW2YsWLbL5rqlTp2aPHDnyQL9+
/fZ379794FlnnZWjji9btd0tWrT47qSTTnqtcuXKc5Q4nqB+zyVKgHdRYrm9+l3NLZ84xoKMKNZW
YrcYNq3CgiAIgiAIgkfw54qgLbZa3JZVrVViYmJfJQBvVALwfiVyn6pevfrrnTp1Wj9kyJA///vf
/+bcf//92fPnz8987rnnMpcvX26vXbvW/uWXX+y///7b1KeeICsry965c6e9ceNGR3CvWLEiZ8mS
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
5iF6pTiFIMQwbrHrpB1LSEhoWb169U+ffPLJLCkmIQiCIEQiGzZssJs3b75HzWnDmNssqcgmCDHL
UWI3Pj7+zNTU1NWPPvpo1sGDB83xQxAEQRAihvXr19unnXbaD2pu62b5Mg6RZlNEryDEEKbYJUCt
eXJy8nLcGDIzM81xQxAEQRAiClJoLl26NLt69epfqDnuOOsf0cv8J6JX8Ax0Ri3MaKzK3A0ndGlF
a7pMML5N1CFvUKlSpefuvvvubKmeJgiCIEQLuOZNmjTpUGpq6mtqrqtp/RPIxjxozo3Sit5MjUaT
hUUeaJHLiaIzVkhKSuqRlpY2RnXWm1SbIq3Y7ebcdqtq01NSUu5U5/jVunXrZl9//fX2tGnTit1m
zJhhz5s3z169erUt1uLogYnjt99+sz/44AP7+eeftx9++GF79uzZ9u23327fdttt9syZM221aLLn
zp1rP/PMM/aKFSvsH3/80ZZFlFBcCJ794YcfnD5F36KP0dfoc/Q9+iB9MSMjw+mbH374oROtL0Vy
Ih/GkCeeeMK5xuZcU9A2ceJEu2zZsgfVfLdUtdty5z89F5pzpLTiNbTaTUq3TUhOTh6gdNxJuXpO
u5KIALb+seI6pWwTEhIGqZP1TefOnbeqAe3g/PnzsxYsWCAtyE2d1+zHH3/cVv/a6u+gtAcffNAe
M2aM3aJFC9LDOMEDQmRy4MAB++2337avuuoq+4wzzrAbNmxon3nmmfbFF19sjx071hEc999/v/3I
I484IuTOO++0b7zxRnvQoEG2unftxo0bEzhiX3LJJfaTTz5pSz5noaD88ccfTp/p37+/04foS126
dHH61qRJk5y+Rp+j7913333OQps+2adPH6ePNmjQwD799NPtUaNGOUJZFl6RBTl1mUeaNWtmDxky
xLnG5lxTmMYcp1oOc94CP3OhtOA19Jq6XocGDBiwu1y5ct8kJibebPks61r4xnQxEO1PShTl8RUq
VLi3Q4cOf61bt868B4QIAusu1pe2bdvaH330kVh7IwBEwebNm+13333XHj58uN2qVStHPNx00032
ypUr7b///tt8S55wzT///HP7nnvusc8//3y7SZMm9oUXXuhY6X766adCf54Qvezbt8/++eefnb5B
H2natClFBOx7773X/t///lfo8QPBhNCdPHmy04cRTiNGjHD6MX28sJ8nlBxffvml0wdY7GzatMl8
WogguNcGDx6cValSpXeV8G1gHVkBL+asve7gqVrHHHPMU+PGjcvcunWred6ECAQB9frrrzuiF2uN
TDLeBEvuqlWr7ClTpjjWW6xiWM6++uqroF0ztpd//fVX+7nnnrNvuOEGu2/fvvbIkSOdLejdu3eb
LxdihJ07dzp9YvTo0U6fYPuZv+krwXJJoA8joh599FGnz2EFZhGHe47kGvcWZFb4z3/+4+wUilU+
OmAxO2/evMyaNWt+mpycfFau3kP3xZTo5cc6LgyqnaDU/7Njx47Nkm3P6AP/u7PPPttevny5+ZQQ
Zr755pvD28APPfSQ4zMXassrae8QNG+99ZZjyTnrrLPsJUuWBE3gCJHBCy+8YHfs2NHu1auX/dpr
rzl9IlgLrEBg+aWPs6Dr0KGD0/+wIAvhh12fRo0aOS4ILMKF6IEYkOeffz6zatWq7yvRWytX98WM
6NWWXX50xdTU1BvV6n6veZKE6AFf0G7dutl//vmn+ZRQwmA5wbd63Lhxjl8u/nGhFrmBYCBkF6B1
69aO+Pjkk08cQSxEJwiZjz/+2HFXwC+cRU+4itxgeSLY7ZRTTnEsywiucB1LrMMuD77+uMEJ0Umu
m2PmMcccs1DpvirWkZbeqAU1r90YysXHx3ds3779T99//72Yd6IYJrpbb73VGdRk9R4+tm/f7gSa
XXTRRfb06dOdMpxeYP/+/TYBlBwXLg9Y3cTiG13gIoOwJJj1scces//66y/zJWEBP1HuhZ49e9pz
5sxxspEIJQf3OVlfrrzySnFjiHIIRr3ggguyEhMTb1D6r7z1j09vVFp5ddox8uBR8OD4SpUqfaQm
uhxZWUc/u3btcix5DG5CyYPPIq4lBKQF0z83WDDxEeRA9L1aBNsLFy4U0RsF4CeLCwGZW0gntmXL
Fs9dV47x22+/dfzXzz33XFuCpksOdv3Y/fu///s/8ykhCmGBWbVq1e/j4+M7W0eWfY46MF3z4yh6
cGypUqWu79ix40FZ1cUObBsiurxiWYwFsJ4+++yzjuB48cUXzac9CdkdEL3XXHONE9jkNYEkFAwW
uVh18dPeuHGj+bTnYC566qmnHF/SRYsWOW4PQujgfJON4eabbzafEqKYhQsX5qSmpmYoHXhCrh7U
FfCiBqy7mK5xZaig1H3bSpUqfS0BA7EHuVrZVherfughYBCrFZPKp59+GlHCEWsvBVFwc8A6HUnH
HusgZMj8cd555zkuKlzLSAJfctyvWHBFglCPVPDhrl+/vlMoRIgd1PXOOffcc3+Li4s7Bz2Yqwuj
yrVBuzJgwq6WmJh4i1r57zdPhBD9ILyIzA5XoFSsQCqmf//73/Zdd93l+O5GIrhdLF261O7atauT
rkrwPixMyLrRqVMnJyAxUq2kbLXj24toZ+EoBBcyZpAh5qWXXjKfEqIcjF3zHp6XXbly5eeUHjze
8hWmiBrXBh2olq5aZdVa16hRY/XXX38tJpsYBBFDgAKlQIXgw2CC2GVblkCwaHAZwuJWq1Yte9as
WZI71cNwbUgrRdGStWvXmk9HJOSErV69umOxll2p4EHmHgwfQmzCgrJJkyZZSg92Va2S9U+qsoi3
8mrrbjnVqickJAwfOXLkIbHwxS7vvfeekxILHz8heJDSi2IO7dq1cyyj0eQGQCUuihOQugi/ZMFb
MIFNmzbNCfr64osvzKcjGvIEX3DBBc69JRQfjB6UiCYwVYhdHnjggaykpKRlShfWsHy7/+jEiLby
uq275F476fjjj1/z0ksvRc9MLBQaLEGdO3emAov5lFAMKM1KeqXVq1ebT0UFiN4hQ4Y4fsnRYLmO
FrifJ0yY4FQyIwtDtMHCkUU67g1PPPGE+bRQSAhEJRfz999/bz4lxBCkJjzxxBN/jYuL+7fl2/1H
J0a0L6/bultNtYtbtGiRKduSAqIM30yx1hUfJuSVK1fazZs3t9esWWM+HVXg+0fUP24xMo6EHxYe
ZGKgJCx5NqMZ0vlVrlzZWViKe0PRwTXpuuuuMx8WYhDVF7JSUlJm5+pD0tXiyxuRGRu0dRffDKy7
9TBf33fffTJSCA5YI9955x3zYaEQIPoI6GrTpo397rvvmk9HJZQgv/TSS+2pU6fKgimMYKmbPHmy
44tJaeBYgMxCjFu4N0STy1BJwYIVd7ZYGauEvPnhhx9yatasuSohIaG19Y8vL1beiEPn3cU3g3xr
51SsWHEjg6QgAC4Nt99+u2xPFwMsu2wPxlridhKYDxo0yL7zzjvNp4QSAD9MCklcccUV9tatW82n
oxoC2MiAEq2uQ6GE2AIKEEkJcQEwXlx22WV74+Li+uTqxIi18uq8uxVVq52cnDz1qquuEnOMcJjP
PvvMCUSi0wuFB2sJBSXeeOMN86mYAKtivXr17CeffNJ8SggxRNl37NTR/nnjz+ZTMcGyV5bZ5cqV
k5RlhYSc4JSWFgTN3LlzM9PT0x9SOrGm5bPyohsjKngNdwaqZ5Bf7TjVmqsf9NyHH34oe0DCYfD5
69evn/3111+bTwn58OOPPzpuDA888EBM+xNSlY3qfUTSx/J5KCnYxqdgAP7i77//vvl0TPHoo486
uysiegsG5ZvJz3zgwAHzKSGGYQyvX7/+b0onNlbtWMtXfS2iUpRhjiZYrbxqNeLi4s5t167dj1u2
bBHBKxyGyZM0U//973/Np4Q8oJDEoEEDnS1l2Rr0VWwibdSGDRvMp4QgQ1Bkhw4dHFcawXYKuxBA
Kfdh/ixevNi++uqrzYeFGIc4lK5dux5QWvFy1apbviQH6MeIcGvQZYR1oYm6pUqVGj5mzJgcGRQE
E6xEDRo0MB8WAsAi4b777rNHjBghvs+5YNkl8vucc84xnxKCCK5HbEkvWrTIfCpm4ZxQhpjFpxAY
RA25d5ctW2Y+JQjOTmVqaupb6EXrH7eGiEhRpt0ZcD6mbFyjChUqLJk/f77MzsJRMBCecsopMb89
WlCIbkbYsT0o/AP+zASxXX/99RFbztbLsLiaMWOGkwN59+7d5tMxzXfffWc3a9bMfvHFFyVzQwDo
M8RrkOVCEEy2bdtmp6WlbVF68XTVqlo+d9iIcGvADJ2iWgXLV0GjVf369XesX7/e/I2C4DB+/Hh7
zJgx5sOCAb7OWMPZwpeJ9WjIFkBxAPKkyvkJLpzT008/XdxGAvDxxx87vuQi6PzDooDdAamuKQSi
c+fOuxISEkbl6saIcWvADH04965qQ88444xDElAiBILFEOVwJadqYCjF3adPH2frXsRcYBAcXbp0
caqyCcGBggtNmzaNupLBwebhhx+2r7rqKhnH/MDugMRqCHmRkZGRnZSUlKE0Yx3L5w6LjvR0tgZ3
dgbHnSEuLu7piRMnijuDkCdnnnmmYyURjobFIql82LIX8gYXGXI7X3vttU6uWKF44CoyevRo+957
7zWfEgzYliXrzJIlS8ynYhoW6OwOvPDCC+ZTgnCYn3/+OadMmTLLlW48zTrSrcGzHJGdQbU2SvD+
+Omnn5q/TRCOAN/ABQsWmA8Lis2bNzvVrGKtuERR+f333+1u3brZTzzxhPmUUEioKDZ48GB7x44d
5lOCHyhGgTUcq7jg45dffrGrVasWcwVKhMLBGNO+ffuNSjOeb/2TrcHTRSh0sQmi7Ii261+5cuXf
xZ1ByI+XXnrJvvHGGx0LnXAkiN1bb71VsjIUAnI7UpRCcqQWnb/++svJt7t8+XJxoykgnCcyNpAm
T/LN+sDVAzcjQcgL7pdrr702Swle0pPVztWR6ElPCl7cGTA/kzQYc3SD5OTkaUOHDpWQaSFf8L28
9NJL7T///NN8KmZh8qSKWKtWraQaXREgxzPBkJK1ofDgh3rZZZfZ1113nfmUUAB69+7t3Luxbuxh
DBswYADVtMynBOEoMjIysnKrrtW3fEUoSG/ryfRkHBDmZ8zQmKObJyQkLHrttdfENCDkC9v2+L9R
LlbwQTU1LCNr1q4xnxIKAFtkRIZ/+OGH5lNCPrzyyiskg7d37txpPiUUANIsMp5RTTKWwYBBQLK4
MwgF4Z133sk56aST1lm+qmvVVCtr+eLCPCd4iaYjHVlF1Wqp1qFcuXIrcEQ2f5QgmFCUZOTIkY4P
nOALVLv//vslsrkYYF2aP3++s3MgFBxELgGSuDIIRQMLOcF+bOfHMgQi408vCAVhy5YtdsuWLQ8q
/dhKtZqWLx7Mc+nJUN8IXp2O7KS4uLjelBMmclUQCsIdd9zh+KoKvsCrnj17Sl7PYoKFrXPnzk7u
YqFgrFixQtyLggCL9yZNmjjZG2IV8jdLOWGhMJx33nmZlq/MsLvqmqfSk2n/XdJI4L/bMCEh4fLh
w4fvJ3+oIBQEAtcoHCDY9tSpU50gPgl8KT5sz+MHHcvCo6Cw03L++edLCqkgwA4DPuRkoInFgFN2
qUgRKNlShMLw3//+N0vpx/lKRzbI1ZPEheHH6xkwN+O/i78F/rtNEhMTp999993ZEt0rFJSNGzfa
J510UsxnaqAQR506daR4QpAgHy++vLNnzzafCgjimGT5Q4YMcSLuhw0b5uxAfPnll+ZLj4JUXvfc
c48jtBGQgaCQA6+jvfbaa+bThyFgceHChc7r2CL/7bffDj+3fft2+/HHH7cffPDBoFhk77vvPkfw
SvGE4EBJ3bZt29qrVq0yn4p6yOE8YsQIya8uFAp249LS0r5FR1o+P94yufrSM368Ov8u5YTx321V
qVKlZc8++2zsLWuFYtG6dWsc182HYwYsutScR1wJwYNcoD169Mi3NC4ZHTj3pUuXthMSEuxy5crZ
lStXtsuWLWsnJSXZamxz8tIG4ptvvnHSofE6ykDnlY+V9FW8jla+fHlHIPjjo48+YgJwXqfG1SPu
D3Iz16xZ0y5Tpkyx3V82bdpkN2rUyF63bp35lFAMyC8+duzYmFtEsBhjoUlZYUEoKIzBiYmJf6rx
rpPl8+PVZYY9I3h1OWHKwZ2kWttTTjnl1zVrJLpcKBwErt10003mwzHD66+/7ljYxJUhuLBrQADg
nDlzzKeO4Omnn7YrVKjgiFzSmr388sv2qvdXOVv8VBu7+OKLnSpu/mA369FHH3XEaZUqVRi0Hcts
ILTgTU9Pt//1r385llp/DB8+3E5NTbXj4uJCJng5P7fccovjRiMEFyzyZGz45JNPzKeiGnbs8AWP
9UwVQuFp1arV7lKlSo2wPOjHi+pG8JIv7TjL53fRrXXr1lls5whCYVi8eLEj+GIR/N0R/MuWLTOf
EoIAFR/PPvvsPP0p+/Tp44hQ+qG/HKq7du0KmGIJCy3CRg3UjnBG+J5zzjnmyw6jBS/pvxDHFBgx
3Xn4TAQ4pVn5N1SClxR45I7NzwIuFB760UMPPWQPHTrUfCqqef311xzLtr/7SBDy4vrrrz+UkpJy
txofT7Z8+Xg948er8+/iv4u/BX4XY3r06BHbjphCkSA7AdWdYjHY0Sc6LpRcxCECC+zAgQMdP9VA
NG7c2HFlIC90YcHnGssun0GVMrJDJCcn25u3+P8sLXixPPOeWrVqHWUFvOfeexxXCiyvCNtQCV4E
+sSJE/P0ORaKDlZeMjbEUuU/duro44JQWF599dWcxMTEZyxfPt4TLF9CBPLxhh3tv0u+tBqqtYiL
i3ts/Pjxgc0ogpAHWLMI6Ik1Jk2aZM+cOUMsIiHkgw8+sE8++WSnKIU/EKlqDHMs7YF8agMxa9Ys
x7rLJM815G/E81VXXWW+1MEteMkXjDgm97K+/iz68GmvUaMGE4AjiEMheAnqw79Z8u6GFlxGqF4X
K/c3O3XPPfec+bAg5AsGh5SUlLfV+Hi6aidaPj9eTwSu4VeBfwUFJ+qodmpqauoatgQFoSgQtIXv
ZCyBBYggp++//958SggiuDP8+9//tufNm2c+5ZCRkeEIT3xmO3XqZE+ePNl+++23891xQMTUrl3b
rlq1qq1jFxDXJ554oiNS/aVEcwtexHW1atXs7t27Hxbab775phM0Rz5m/CFDJXgZqzknUoI5tFDQ
o0WLFvbatWvNp6KShg0bOhlnBKGwqHuFimtr1fh4nmq1c/Ulhc3CXoBC++/iZ4G/Rfv4+PgdDNCC
UBTIQUuapViBrfYJEyY4qa+E0IMwvOiiixx/XBMeI3cqQhPrrJWbRYG/8e9lAjf9bOHFF190Xocf
rg7SIfDw3HPPdT7HX8Utt+BFiF933XVOdghcIxDQuDGosdReunSpY/EIheDltyDCxBJXMmDlJRgy
2q28zP8sACX4VigKuISpsXSrGjsHWL5ECBQ0IzFC2AXvEQUnVOtXvnx5CcsUigzWXfy/8gouiiYI
FCJXJz68QuhhEh48eJBTUcwfLEDIm0oe3gEDBjjXpmLFio67AsIXH2DcADSIxgsvvNAJPMONwQ0u
CmRgILuD6SJhCt53333X+XwWP6QIw7VHi4ZQCV6yT7Rv3/6I3yOEDnZw6AtF8RGPJBYtWuQEYwpC
USCWYOzYsYeU4B1l+RIhkBABw2pYA9fwp8CR+HDAmpoUJnTq1Okv8wcIQkFh4r7iiiucpO2xANa/
a665xnxYCBEIWqo/jRs3znzqKHBlwFqFACYDAxZX3BRwV9CsWbvG8bNFrGKN/frrrw833oeLBMLV
TNNoCl5EUIcOHexjjz3WKURBujKsgRAKwYsAZ1chr6IXQnDBbQRLfrRXsiM7ww033GA+LAgFgjH6
gQceyFbj7Qw1Rp5i+QLXKECBgTVs6AwNOmCtuRrc56oBXMwFQpEhkpn8je6KUtEK1bEuueSSmPHr
8wr0sY4dOxaqGACBbgjblJQUJ80UMDBj8dVFKQI1cug+9thjR3yeKXiB//NaRCwCmoIZEArBS58j
FZk/1w4hdFCJjyDBaK5Cii86bj6CUFSeffbZTDUGPq3GyGa5+pLANQysYQtcw58CR2IcinEsPjUx
MXGx6ujReycLIWfLli2O4I2FnKD4hJIqi6pEQsmB2Bg9erR9++23m0/lCf6uuC5Q5hcIRCKoDHcH
tqqpwmY23CIQyVhv3fgTvO+//74jXnkcP2PKCkMoBC9FMnDbiBXXIa/AIhd3lYKUqY5EcMEhu4ik
VxSKw8qVK3Pq1KmzWo2FLS1fBV8q+Ya14hoZGtwV1s6Kj49/MxaEihA6cGVgq/Xbb781n4o6EFyI
jmgPYvEiCEdEpDsIDbeDQFZf+uPxxx9vH3PMMY6PIuC2QEEILL+8DyFtNraxzzjjDMe1gddr/Ale
fNd4nMfee++9w1bAUAje//znP07deqHkISBxxIgR5sNRAbEICF4Z04TiwIKwVatWv6kxso3lq7iG
YZWMYGEJXDMrrNVXrbsakD/asWOHWHiFIsNAOX78eFZ45lNRBWKmTZs2jp+nEB7wraWcs4aiJ02b
NmU7zUklhrWKxvZ/u3btnAC0Zs2aHXY1IG2ZGveoDHT4M0zoz3fddZdjBcZ9ReNP8AYiP8FLVbe5
c+c6/rhmIzjPLO+K9Q2Ls7gzhAf6T506dZwdgmiDhVpeFQYFoSDgQqbG3Cw1Rraz/qm4FrbANQSv
ztBwvGqNVOurFPm30XgTCyXLnXfead97773mw1EF1jUi5CV1T/ggi8LVV199WHDiSkMuXfxoaWRn
wJeWYDWsqIhE3A6AgDYsuzxuVkgzQXQSjIZ1WG/1BlPw8jmBGhZocgm7obAG3yuED1xhnnnmGfPh
iIfF4uWXX24+LAiFAoNQ9+7dEbwDLV8GMDKBha3EsJmhoWlCQsIVF1988Q4z/Y4gFJYFCxYErFAV
LbCljOASwgeLc4oukPsW8B9H0D711FP2rbfe6vRBIs4JTMNaSulrDa4KZGXgcfJG5gVuOhSS4PW6
CMV3331nL1myxNm6yy+ACXcJvoeUfW5/b/xBeZzPCdR4z9atWw+/B2tv9erV7W+++ebwY0LJs2zZ
MsePPNoWvA888IDjpiUIxWXo0KGHlLacZvlKDKMzydQQlsA1vhAHYhyJa6jWPD4+fozikNRjF4oL
1s/zzjvPfDhqIEsAldWibbKLNHA3IAVeLKXmWrhwoZOhQggvLJ7IkhFN+bdZuFFcQzI0CMFg5syZ
OSRCsP7J1ICBNSwlht0ZGoiga12qVKlbZ82alZOftUIQ8gPrE/6U0cojjzwStUErkQYBaFOmTMnX
yhoNYIxA4Ed7HthIAKv9tddea7/xxhvmUxELbj64y0iaRSEYkMIvLS1tvfVPpgZS4IYlUwMZGoiY
I0MDEXSnpaamZjz++ON5O6MJQgFgixgLaDT6g+Pyw1Y5lbWE8EN2gwsuuCAmqo2RaQKrYqwUdfE6
Tz75pCN6owXcZS677DL7q6++Mp8ShEJDP0pMTPzD8mVqqKNapVzdWeKZGnSGBiLniKA7vWLFii8t
XbpUBK8QFMhg8PHHH5sPRzz4i/bt2/dwpL8QXnArQQTiUxvtLF++3B41apRj6RXCD4utM88803w4
YtE51H/66SfzKUEoNIzNSlv+rVpny5f6tooVBsGrMzQgeImco9bxmbVq1fp0xYoV0b8vKJQIvXr1
ciwg0QYR/VdeeWW+gU5CyTF16lQnOC3amTVrluNOEwvuG5EAC48uXbpEzcKexTyCF+ErCMGgfPny
u5W+7Gf5Ut+SArfEU5NpwUvEHDWOqXXcsVmzZpvEd0cIFkQw33zzzebDEQ/pqBAeIjq8A+4ldevW
jfpk+eQBdqc1E8LPTTfdFDUZab7//nvHpSEaXdGE8NCkSZO/lL682vKlviUFLqlwS1zwEilHxFx1
1Zqo1qVt27b7ZJtWCBazZ892SrNGGz169Dii2IEQfsiDS47bdevWmU9FDVSUO/vss8X65jHIpcxi
K79czJEALhoErUn2GSFY9O3b91CpUqVusY5OTVZiaMFbzvKlimihWq/27dvnEKUpCMHglVdesTt3
7mw+HNGQQ7Vly5ZH5EUVvMGgQYOcUs+hgIA4ikesX7/eETiff/65k47KXdY41OAeNGTIEPNhIcyw
09OwYUN79erV5lMRB1H1WKwFIVhMmTIlm4QIli81GQZWdCf6s8TQKcnIwUuqiFaqjerRo0embNMK
wYJctY0bN44Ky4fmwQcftPv3728+LHgASjxTDCTYAV2IW/yDO3Ts4JSTrVKlin3iiSc6Cx+qnW3Y
sMF8S0jAV/TRRx81HxY8AJka2NGKdCihjcuWIASLxYsX56SkpCy1fIbVGlYYUpMheImUI0UEqSJO
VW3m4MGDgztTCDENQrd+/fpRZQ3t1q2b/cQTT5gPCx6A/sb1IXVXMMEPvVSpUk5ZYTKPDBw40Knu
lpSU5JQsJiVaqLeA8aksXbr0EZXiBO/w6aefUlUq5P0g1JAB5PHHHzcfFoQiQ2qyf/3rX2/m6sza
lq/2Q4kKXp2DlxQRpIpoq9qCiRMnRo8pTvAEWMG++OIL8+GI5LfffrNPOukkCejwMMOHD7dfffVV
8+Fi8dBDDznbvObCjQAffDcRw88+++wRzwUbShqfeuqp5sOCR6BE9EUXXRTx6bz4DS+99JL5sCAU
mT179mAcWKU0ZgfLV/OB2g94GJRYajKdgxfBSw7eM9QBvUm9eUEIJgTZREuBBoQUFkTBuyBOcTsJ
pmtWXi4599xzD9YLJ3tCKJk4caJ96623mg8LHoHYl2HDhkV8erJOnTo5rkGCECxI31mhQoXVSmee
q1q9XN2ZZpWg4CUlWWnLlYM3LS3tf4sXLzaPVRCKBT6V0VKXHR89fDYF7/Lmm2/aY8aMKbFgMnxq
1fjpFCIJFQTMXXzxxU7AnOBNWBTdcsst9ssvv2w+FVGwIyf9TAgmVCatXbv252qcvNAKUy5eBC+5
0MiJRm60Dqmpqb96ZWWHCZzUO3m1bdu2mW+LeciKgJV+37595lNhg/yUCxYsMB+OOJjQrrvuOvvt
t982nxI8xJo1axxra0ncA/QJFnRxcXFOMYhQsXHjRsdnOBZKJ0cy+PZTACVSIYc1MRdeSHvHseCv
bs77Zot0n+lgw7iHe9WcOXPMp8IGx9S2bdsflc7sb/kMrBhaMbiWiODFUZgcaORCIycaOXg7q0F7
N2l2vAAXq127dnm24kTKczOx9Yk1qKQsQSUBwTNpaWmeWgwQ8HP//febDx+GrcC33nrLSbk0d+5c
J2ACK0lBfOHwm8NdgkT8eQXzcD4Qqnk1PiOvbXA+AyEleaq9DanDeve+0N69e7f5VNCZN2+enZKS
Yp9++ukh9esm3RV9Ly/XCiH8UPY5L9cWYhnwxabf0J555hnHBWL//v3mS4+CVHiMU1hf8+oHGK3M
sc1sgbKKkHIRwesFEblr1y7Hfcyc981WnCIsfAc64MMPPzSfiliYB5W4dAJsvQL9qVevXlsTEhIu
t3xFzih2hv7E8BpyzKIT5EbrqdrfXujoQIoXdTx25cqVnaAQf40UPUWF38lE1bt37xKZGEsKLwpe
BpQZM2aYDzswkZOnt2LFik4EenJysnP85cuXt2vUqJHn5AEZGRn2CSecYB977LH2vffeG1CwkluS
ogR5Nb4vLwsakf8cj5fOrXA0XENy1YY6Jyr+3Ewq9N3nnnsuYN8LBiwAb7jhhqivIhfpkIaxY8eO
5sP2H3/8YY8fP96uVq2aXbZsWWfuodF/jjvuOCpROQUfAsEim+wgjFOIwE2bNpkvOUyDBg2OGtvM
Nm3aNPNtDohqrwRGIr45P8nJSUfN/e72xhtvmG8tMASdch3QG9GCFwUvaSKHDRu2JykpabTlM7Bi
aEV/InhDnqlBC15yodVQrblqlyrBscc80HChBe8DDzxgPhUUELx8PtuErPKiBS8K3mXLljl+r6Yg
YDuKgV6t+hy/sUmTJtnzHp7n+MH16dPHyXfaunXrI97jBrcXBCgR8nwGwplB0h+LFi06vIBiodS9
e/ejGtHJeVlOsMSMGDHC8UcSvA19aMrNU8yHgwYWIYQFC7TbbrstpEKU+4bAOHZABG/DbiGC9Jtv
vjn8GNePYEPGKPI3X3rppY7b2X333+dUNEPIVqhQwX7vvfdcn3QkCxcudAQMafAY3/MKAuY7EhMT
7dNOa3PUGKcbn+cPDAPnnHOO+XBY0IKXeSBUYMRgXoiWstDgRcGLEUIt+A6qfnm95TOwnmj5ik/g
aRBywUtkHDnQKDpRU7WWql1d/cTqESl4GWRIo4Kw8id46AA8j0WGwYdOTnAen9+qVSvn5udGp7Hi
c8Nnf/TRR45vFgFL+KKyCjZhwsOixGdwDL/++qvjT8sW/QsvvHD4c3gMfxbSG3FMbPUT9EI5VFNs
cawcO8f98MMPO5Me22B8XqDtUy8KXnwqr7766qOKASAUuAaIVnNngd/+888/55leiq09kv+TJqxr
1652mTJlnFyY/tCCl8HcXx8pCE899ZQ9c+bMkIobIThgcfVnaQsGn3zyibNAo7/deeedee4KBAP6
GxMybj+C92Gsu+OOOw7/zbjHLgCWXH+7Dtqli5SH/uD5K664wlnYE4yJmL388svNlx0GwYsVuSiW
T4Q4Oaa9QGEFL+eZ4GhKvptzDTDvM3eysGB+Ya7AdZJ54dxzzz2sAWi4RbnBos7j6BHmdOZuMg+Y
MO+zG8N1xk2Ff9EOnFfmZOZtPoe8tMz3PP/YY485OoD3+TO+cf8zFzKmsVuKDiBeANcUf8YXLwpe
fsPtt9+eo/rwZMtnYK1h+QyuGF5LRPCSA43kvyQBbq3apFNPPfXosxcmCiN4OZnXXHONM6iw7WfC
YMEKmpKjdHQGI7Z1+HwGj3Llyjlb6DR3hRmEKUm42TJPT093Vuj8W716dScnp/umQrDhU8xnsM3O
DcTxYAHi/9wcF154IZGK9meffeb4HnFMfD8CFdFGh3ZD56fjcqxsu/D9/Mt3YJn++uuvj3g9eFHw
MtCQrgeLrBvS3xDsw0KlKDBYMQlwXRnIKADAZOOPYAheAtYQvYL3wUcRNxd/E19x+OCDD+xatWo5
48CsWbNCLnaBiZH7Oq8tb8E7IGBYgGtY8JO2jsdMo0ZBIGCRPofLFcKrWbNmztyCEPZHcQQvqe+u
v/568+GwUFjBiw5gDma+RJS6QQT26NHDmTt1APXgwYOdRSvzAvO01gA0d07tlStXOgtcHsfCzmuZ
uzt06HBUfnkMabitMNczPnDNGCuYt9euXes0Poe4FuYttAXzNTqAa+ov0ws7i1xzdArfjQ5ITU11
FlD8BlMke1HwAoY9NV/fbvkMrFT3xeBaIsUndJU1kv+SBLiNatN79uzpDQde+x/BiwWFwCR/ze3o
jzilU9IhX3vtNUfYcgMQAIUQQlzp1+NnhUDi8/FXInCA1RVNO/MjYM8//3xHkJ1xxhnOKo1VGRZW
aqbzmZRg1NY+PpvX85lYHbEcs6pjtclqkImXfLS6o7Zv394RT9xMbJPzODeK+zfxGxHGkydPdgYv
LJocI59Dpx80aNBRA6gXBS/nmxtzx44dRzzO1hrni2tdWOHAeW/RooUz8ODfRoAbwRYMJv6i84Mh
eBkwvZLFRMifmjVrOtbYYMB4ws7OKaec4tx7CINgi+lAMBZxr+AHKngf3BkY4/XcwK4hgpcFGGN6
YWGe4P30OXYKMerw95133Wm+1KE4gpeiLexieQEteBH75tzvbm4oAY5RCWHIjir3LXPklClTnDnb
LSjZVcViyryAAUlrAJoOgGaHEQ2AK9yECRMciywWYnYlEaloA3ewNG5HOgblxBOrO4Y4rM48zuuw
KvN9CGGEOdcU9xREeL169ZzrisZww5xz1llnOcY49AILXwQ52oVjQx+48argVf04W+mzByyfgVVX
W8PwGnLBS5U1kv4ieJ0qa+pA7lWdvfDLzxChBS+WTy62v+auKU/HxsSP2GSlhI8dGRgIhMKx3YzC
zMuHl89asmSJs6KiQ5vbG6zYGVBOO+20wwLZLXjxyULkmSBUeV5bfDX8f+CggU5nR5hpGDD9bVnw
OMIWkWxug3lR8HKO2CYzsyhwk7NAQbQyILHVw4rZdG/wB5Y2BjCCDrEcI3KvvPJK5xyaq3vQgpdr
wwKEQcZsX3755VF+xm7oC17JYiLkD4ubYJVIZbFJJgYmORaa3333nbPQcjfzXgwWTJJYrsSVJjJg
8Y6YYRsaEFyNGjVyxh/mCPokIsYcD/3BeMSYhYBiZxAQZMxxfKa/bXUEL/MeBhlzjNMt0GKNXM/s
UHoBLXiZz8y5393ccK45ft6D0YnFB2ITCyvjtxnsl5cPL9eHeA8WuMwf7vuP88c4wByMe4GeN7Tg
5fxT/MY05GjBy/PoEzdcV64zesUN3+VvTsTyT9/gHLldHL0qeBcvXpylzs18y2dgxdBayfIZXkNe
fALBq6usUfXiDLUienTSpEmeGVG14GVVzMrHX8OXxQ0dg9Up72vcuLFjieX/rJjMjpeX4OU5VmaI
p0CBIryPQU1b/NyCl+0Kf8IJwcsWvCm+ge0PbTnyB5/HzcqqFMGNSwXHh0+wGy8KXsQAgRrmYIOY
x7rNapzzws3O9tWZZ57pWDFMf2o3vXr1ct6Hy4s+1/hiM5AwsJkDhBa8vAfry/HHH39UQ1SYFnMN
YobPLUj6IMEbsDV74403mg8XCVybuN+wqDD2IDbMdt5555lvCwpkH8F3U4gcmjdv7hhgNCyyseox
BiGS2MomYJcxh91Gc37SYKVkYY87hB7T2SkjmJdx3hz/AcHLeIooNsc43QLNDywSOR4v8E+WhuSj
5n53M9HGD84bghgNgYUWa625aMxL8K5YseKw/vC3QMD4wXvd8Sla8LLb6O8ca8GLFjA1AotqNAtG
oEDzDBZ+djNxjeCzyAHO57k1hVcFr+pXWWXLll2ijret5TO0YnDF8IoeDRmYj3VZYapdUPWinbpI
TysB6TnBWxAfXjd0IoJVeC8tUK7evAQvqyUtXhlo+D+NLW0a78HyrN0nwC14A/l50snphKzMTAhK
YxV62WWXHX6M38KWLIMQNz03MKIYKxP/57sI/HLjRcGLhRzBq63hbviNDEQ9e/Z0BmLOD78RccGA
zURhDgwIYazvbHVpqwcgSlkd8z73ZANa8PIcgyAZHcxGJglzQNTgZ4zIFiIHXJUGDBhgPlwkmBAR
Enk1rC2hAHcgc3EveJt+/fo5Y7obFvwswlgcMX4x3iNMWUSRlca01jLu0X8Z60nr6B4H+Rzei2HG
XKTrLA24+JljnG6mK4CGRf37779vPhwWCuvD64Zzxe9nzGcuIQOQP/ISvOzyco1wNTQ1gNYBzFX8
X+/EasGLy6I/tOD1F2uCLsAqTX9wG4cQuegMFlFoDvoD15fGa/k8906WVwWv+g3Zxx133OvqeE9X
7WTVjrVKUPAeUVZYXdgXn3766aPNkmGiqIKXzsEgwHvpDOo3mS9xyEvwIhaxMvI84tkcLHRju4MV
OLgFL367/kDwYsX0V7hAC14mNw0DD5YA3DSGDh3qbPvj04w1GAHJjYyl140XBS83IC4NeVlsgYUG
/lH8Rs4VNzQO/+7MCwxk/H6e4/wTFUvGC92YaBgQ8GtyW02K68NL9aRoytUYC7ClTB/xZ52JJJi4
I71cbayBQDXHZg1zFAHHiCMCqhGojE0ExbrHLCyI+KPi8oW7l3ucw5eTcY6+YbpZFdWHl7GV4ChE
oBcojuDlnmcRwXnlPJkGEE1egpfrw3sxxJhzv7ux+NBxI1rwBtrt0YKXnMwmgQTv/PnzHd2A1Zgd
UeYi/HmZBzHe8Hluv1+vCt533nknp2bNmu+r421v+QytCF4MryUieCkrjOBtqFoHJSBew4TvFYoq
ePHrZRXEFgYDBf/6S1WVl+Dlb3Ky8jyDBh0oUNNb527BG2igKazgRbwSRYpYc0/aDEykSOO7zEHV
i4KXLTh+l7+sEoHABxprA7/RPTjwWfo8c20ZINyNDBo8R7Cf2/e6uIKX/lDYviiEF6z1TAimK00k
wW/AGugVESIUDAQWYtbcnTJBKDGGYynEDc89NzAn4P7AfIb7g3ucQ+gijHjezHJTVMHLHHbyyScH
THlZ0hRH8GIc4rwRuMq/nDN/Bpe8BC+LDAwuOjAtUON8mT68BJn6oyiCF+Mb15TdTPeCiL7DvMrn
RYLgJeCvUaNG/1PHe6blM7TiYRDy8sIIXqpbIHgp70aZt06qLScLgVcoiuDFr4UbNiExwUnxhZWP
bR+sPKbIYRuIQYYk4eYNzgqcDqkjY/MbtCAUgpetFPyH8O1xw7Fr351IELwsIEhLZv6O/GDC4De6
q63h4oFfFStvbmh/jQGOc+nOeVlcwdu0adNilbA0QciwWGLQotF/zK3JSIB7g9+S1z2iX5Pf66Aw
ry0ILGj95c2OFBgrmHSD2TeYNOlvpLWi77GYDsa5LmkK0k/0awK5KrkpzGvzA5cBHVCbHxiaiD3A
x1dnFdFFdRizuP7mGEfjPcxRptteUQUvlmPmT69QFMFLX8CvmXOGy9tHqz9yjBWIyNGjRx+VwQd/
WOYS5icTdhvZYWXBWdAMKaEQvBh2CJg1j53XI2z5vEgQvMQftWzV8id1vB1Ua6Ta8VYJCl7qGFPe
DcF7jrpxVhVFCIQKLXjxUaUil7/GhdWDEz40pBzB1xWTPzBo4F/DYwhDMzCAzsw2AalMzOeIZEVw
0tlY6Zmdje1SAtZ0WeJQCF6yQHCzEYylj49Jir+5qfiuSBC8OjiN8+yGcxhou5lrp8+nOy8kQYks
Yugf7gnK3cj+wKCBG4imOIIX3zr6SmHfFwhufHwymRDx+8Raw6KMQRBrTSD/Oq+BYGdHZfr06Y6/
bCCw7PMaGj7ZecEko1/rL7izsFBiWPvZRyJEcuPzGQzoxwQkjR071tmKZfuaiZStXzKbYDAwx0Gv
gpGClFJ59SnGFtJJ8hrGDZ01wR/0ZbaIeS33pjneFxbGPHKxIkr4P2LSHwg0ovyZo7jOem7A+MRu
FTEHjAfmGEdDhCFQmSPc431RBS+uESzsvYIWvFhpzbnf3dyZjPTOIHMp5xV0ek8WCDoHr4ZdQM4x
cy0xIO6FJXM7rngsKpiXzXmbPkK2IESzJhSCl35RtWpVZzGkj4/5kep99Bs+LxIEL9Z0Nd5ss3yC
F92J4MXwGtLywnww5dyoY1zd8tU17qFO3EcFWY2WFFrw0tnpjP4aAWVahBDVj2WPjukWUdwQOHsj
NM2qXXwHqzueRwjRSfXEzcBPdDQrRaL6EV84mrNKRFgjUnBM11uNoRC8S5cudTo0PrwMnvgmEzjF
DYqQR/hFguDl3HDsZJdwQ1oXGoLE3feYmNmS0oU53K42lHPl9+XlHsEAhLWE92vxqAUvgyGWWsS3
v2ZmdwDyHmJpz8uSVBCYpEiZw2fR77h+ZPrAEsG15/iYvPBDNncdvMiGDRuc4+W4WRAEOmZd1ZCG
wArUNzm/3If6tZQHLi7s8gQqoxoJUIEJQVpcmEy513CRYgJnXME/VEf0M8my+DcFgVdh94YJnX5C
Pm5/cxeP0d94DfcbgjYQGC9wD+C1GDnMnOGFBTGE5VWPK8SC8P2Ibvc4wtiHyOGaEKCmFxzkcOe6
uIOYTZjnmMN4rzbyANeUc0NaLHN8041714THQxV4WRTcWRrMud/dtLAF+jhzBgHI7NRqiLWhv7M7
SCEHDX2EOZPdXkQiKUPRAStXrnSeZ37HnUQfA9eDBSMLacYqxm4KjWhCIXgx+nF8LG7oU2SM4Tj5
m1y8Zu5erwpeft+ZZ565x/J5FCB48TDA8FpigvdEy1fX+AK1+vnY36ARLuhUOhIxUKPzImhJ7Mzf
WCz8uWUgmBjEEBe8XsNWO2mLECB0Dj7DzHpAHj9SwOgsCTpTAjcPjuP6nCHqEKV8RqASoNwgDEb+
fAq5aZmM3Fsr3LBUhUNU6MhMVnq4a9AQSe6BDnB1YHUfSFSEA37HuHHjjhhogEo1DOqq/zk3Lb8N
qzrnmr/5zXfdfdfh1y9fvtx5LT5NefVVBDNBfbyW4BHQgje/hpXLhEnJzPdYFFhwsVjht/Eb3C4e
TJAE6+lJl+8rrsAONSwyuUYM0PTNQNlJtODld9P/zfyTGvIgI5x5Ha8PhuBlIYklMFLhHJPmsDhg
AWO3g3uNyRjLkLtKFzmFsexx3jEasLvldfC5ZBzW6Qz9pedyC15+GwuHQJZbBBL9mNcFQ/CycMYl
i8BjRI7+bI6FcR5Djl4s8huYT7Slkvseqx73VH6FU7i3mLsIrNKGHh0El1fzV3ab8TlQdoFwwDXQ
Ro+8mh4nEH38zTzrL+MFBiysvMznbhcFDFAIZa4JBi4+w71I5r24NnLdtAag8Vns0rkrIDIGcl3J
OuQP3Kv4fH/pRzkOhCrzOsHYGgwJ9HedoYF/MehguOFz+Nst+tlNYH5hrvESWNBVv9uv+t/Zls/Q
isG1RAQv9YvLWf8I3j6qY/1fXiIi1mG1yeDFNqs/C20ooQNjgUB8R8qWoxu2YUgLg2B1w0TL9iHb
RmyxYl1gFY1fNRV/WGW7RR/WLhKjI17z82lkAmQ1rC3gbD3x3vyaP8sHg1hxrWxMgKzK9fZYIGso
0fg68M5dhMSEAb0g9yvnj+8KVIbUH2zl5ffZPM8CBYs7Oxv8LkSVPxcVLXgZhBEplNT0d/2YsBD8
9ANeHwzBy3Y3i55g+GWGA+4DorSLAxMjEzkL/kDuHSzYuX5MqKRcDNQ/6U/0D1NQ+IOFLuNmQc89
YxsL9fzGOL4fUYc1jGh4xCSGC/N9WvBiAKCf8rtMtyrgGBlz6HsYP4IhePntZF1gzOOeIMUV1lgs
f2yvI7pY8ONfihBz328cD7s87Cbm50bFeMXuGdZhbexBaJvjmtn83Vu4EzEOC/7hOrIoZ17CWOGv
KFQoQXegQbCUet0Y4g/uqbPPPjtTje1dVGtq+QQvhlcMsCEVvNQvLq9aTdVaqNbvuOOOW1uQQUwQ
igJWJSzx/kD8sOLmRuamxvJe0EmyJJgzZ44z+RQHBkks12wb5+Wji/BgYmQSZ0LUwoNJjABOJmys
fj16/NuZpNneYuFgwoDITgMihkkMUUppTDMHNJHLfDZbcfi/8d18LlYSih0Eqh7G6xG5bPGxXcjx
svXHosxEC16OG0sUrj3mWMPkwTYh1g8EAK/3NykXFsQe3+ve3owkcJ9CiBQHXL+4Pnq3IxBYquif
WBzdFiP6B6KbKojs1Jx33rlO/2Bb1uxPwP3LThliDksiCzyzehf3PLlDeY6+yuKOBSo7GwgyLGz+
FkXAVj3HSH/GEMD//VXE1IIXCyh9CkuYP19z3CPol9wjLLaCIXg5dtyyTDc6+jm7jAhVDBn+XKjC
BeNFoK14QSgu3I9q7M9RY3s3y2doxeCK4MUAG3LBW0G1Wqq1Um1gzZo1vzAnIUEIFlj18rJYeplp
06Y5x18cmMzVfea4weQHIo3tMrY5CXADxDIuO0zMiBft5sJnks7ITLmDSNeJ7bHEspWNQHWXKAV2
LHgMVxh8xbHAso3I+3g9PmLm4oO/mRg5Ju2/dsoppziCwkyRBFrwYoXDZQdLmtu1CAiYwScNwUGQ
KK8PhuDFso/vfaCtbC+DxRILpnmuCgOTDOeSLdCCpDbTaY6oVKXhurLVSj+hz/Gv7h/syLitkCzm
iIngOfqf7q/8jRVSLzz4bQSypqQkO37W9Dv6aOnS6c7307dw2zKh7+GzyzHoimD0G77LzMahBS/W
bazCCN++/foe8RpgZ4Hjw5UDq3EwBC8intSRzz77rPmUZ+HexS1PEEIBizuMKer+7qlac9VqWD5P
g5AKXuoWm4J3sBo0vi5pE70QOyD0TCtPpIAlKZB/akFhkkYsFKRsJ1YzJnR81LU/uI7GRWBg5WXi
xxquKzGxranBZx1LKcJDZzrg3sYfXIsX7UfO89qXkBReesuXLTvez+Nm0QN8EhFQiBktxvCVRTTg
nmKiBS/ZNthSR5yYYhZLGMfG5xCsyevN1xQFRBAiOxLHNsQj2TvMBUdhYAuUc8nCxV/sgAm+rLye
BZB2EeC6cG2xvhIsipgjMJRgH/qedhvCbQarLteXGAyOn9diOcaqr91ZeEwLXr4LQarjIfit+LIj
fqmaaELf5t6gb2qhTQYGjs+sXqUFLwssJlv8KhGzZl/g2Eh9xeN8bjAELxAAiBtWpMACw50CUhCC
Cfc2c4y65/tZPs+CGpZP8KJHQyp4U1SrqFpt1VqrNkzd6D8Uxs9PEAoDW4pEHkcaTM4EDBS33Cb+
k1iYTD9mfzA5I3aZ2LF2AoIXYWoGFBH1jX8ifopsozJpszWrg8jcvl74oGmfRi1iteAlwMHtm85n
ERCBJc8dNMWgxSSOCHKnfUN86BK75jiiBS/b4TrqGYHh3rJm6x5LNO4Z+Dvy+mAIXrbhEeE6fWAk
wcIH14HigAWec8lEUxARxz3K6/le7VfKtab/mgHBZF0hSp1+yrUkOw2vwz/V/C4s7XwuOwPaT1cL
Xnxd3f2Ua1a/QX3HMuz2Cec7sAYjst1R7izO2JWg/7gt+VrwIsD5fFwhuC/0rgTgsoO4HjlypHNM
wRS89HszqNjLUJXUfU8LQrC58MILs9U9P1S1lpbP4FqigreOaqeqNlwNDD9H4rafEBngf4olJtLg
niDjQ0GsY3mBRRRLVqAMHm6wmjKBkw5PC2Sdp9M8DtyQdBESrG+4NuBegFULay1+je6GiOS1CBtE
gBa8BNKY6BLOCBINwhHRghhxu1EgTPRx3Hf/kQsbt+DldVhcscjpdHMIfFw4SLmHz3IwBS/HSABQ
Xn7TXgUhR/rB4qCt5QRM5hcABSxueD1+tNqyrCtVmfMD6Y+wQPN6zjNb+Do1pNnviDpHDOtCOm7B
a7oi0MfJFsBzbuHJZ/A4fQ8fWA2vwU+Z17vFrFvwAqKbgFB3rlkENPeKdj0IpuBlURlJ5cixSBMT
IAihok+fPlnqPr3a8nkWIHiJJUOPhlzwVrJ8grdNqVKlrlID12ZzQBOEYMFWNUEckQbBdAim4qZ5
04FDiL/8wJqsKwzp1GUIXoLPTNGCgCS4TN3HjoWNADLENYISgR2osbWMoNGCF7FpgoAxBS+iGgsx
vwVh4G66GAqBT27LnFvwgk60r0uv0jf4nlmz7nb+DqbgRSRhPQ6GgClpSBOF8CwOCFH6AkLOX4CZ
G/qDXoy4hQ8iFt9OM8CK3QRcarhW7DxMmXKTsyPA683+ppu70I8WvGZgJNeMjB48575u2rcdC6/Z
93Qea96n/YRNwctiSt+HuFkQIMq90rBhQyf6HoIpeFnQRZLFFJczfY8KQii45JJLDqn7dLzl8yzA
wwDXWvQoujQkxFm+L6isWl3V2iQkJIzu0aPHVgYAITQgXBhUC7OoYGuPqHdzoolEsLzgCxtpBEsw
YUlS95qTiSAvEHxUe8Lfkclbb8UjEPE1NAUv9ywBRnw2goa8nbqQBVWmEJv+GtvTbgsvvpcm/gQv
gWeIGiyPCFZ3w3VAl30mK4XGFLy4TvA6gvA4ZrJRYM3W2QiCKXi5bly/4i5YwgGCKb/+kh8IS64v
DQtnXmA1xdeX6+tOZI+AxV/XHIfIxkC/4Vpxn7B9z3t5rdnfdCNdIMLTLXjNeyuQ4MXtALHKIsDs
e/ieshDDiqzzfZuCF+hTCHr+ZfdEf55eoAVT8JL9gb4XKVBtj3FKCA7s1JHXvTC7S4yHvCdQWsBI
Z9CgQQfVfT3F8nkWYHBF8KZaJSR4T1LtNDW5XqsGqe1eErz4AZJChsnfnW6GgQnnel1+VJeCJOiF
iTRQKhsNryEowv1+tneZXArTMQsLkcRYEgj4KShYH5iAChJd7XXYLiOQJdJABDBpFbSWeiBIQYSv
I1YuM32SG/on7gXqvjwiNRSClz5k5oBmYGRbmaToCFh8etmyZZvWXzU6LFsUYtDuCIURvNxbiAGC
1diG5l50N8YPxAOCwh1EZwpejhOLMucDqz+fSTCeFlTBFLyIHsRQoNKuXub111+3rxp5lflwocHf
lfNJkvy8wIeTfoMvrNsPG8HL4sT0zWZyJqsG/YdrSmYQ+ik7Iv6gP+OTjhtOYQUvfQ83H4oD6JLk
Zt8jqI6Foi4e5E/wck/wufgoa2u2O5g2mIJ37bq1EZX1AN/8SPE55noTo8A1ZOeLbCb8n0xALMRM
0AjuOf+uu+5yAojzKjddXMjuw04d5dcLCr+BsTxSKh4WFrWAR/BOU62N5RO8uNaGXPDyBYcFb3x8
/HVqMNxhruDDCRMUFi11fEdYi7B4YV3icQZnOhTbXEzMupIQgxkC1l/HZ+uN97Gy57003sPfTMAE
6phWtGBAxDGCpTCClwEev01/wiXSIG9rJPmzachNGwwfUCZ4LNxYP7HAYl1y908GcCLfEWe8BgHo
XrwhJBAeDJ7at5J/sZjRn3VwE9u55MalP9OX9Y4CggTfSBZRVLPT1tTCCF6uIfcdk3ig88Hx8RqO
X/sbm4IXqLbG7yQVmrtaEgRT8PL72XY3t80jAa5tMO4ZhClFFxCDLERYxGmLJn2IRRPiGis74hDh
64Z+x+Pk0Xb3PXLz8rgWdfQl+hZ+sqTT04FozCs69RcVrXCFKKzgJeCM919++eUBd8nwOec9+Jgz
hvsTvIA/MmMrjXvHPd4HU/Cyqxeo4pYXIbAYMeh1WLQTGEl/xqLPmEaf43oyprAoMg0UOtUiBgfm
fP7l/byeHQl3tbRgwfjF9xRG8DL+m3mwowl1/yJ4Z6A7LZ+HQYkI3jTrH8HbVg1oY/v06fNnpAle
tlcZnFnV4QdIUJSOUEe8stVrpvTRgpeJlvfS2PqlMAJ5T/lcqhsF29pN8AjWjcIMpNEkeEkkb6YN
igSwrpNDNxhbTAhaPkvnxkVkIgJJ68TWta6jziRtVoRC8DJxM8BjKUeM0v/5HAZ493Y1/YUSvbgN
cM6xYLGr0alTp8PWV51zu6CCF4GEFQXxg7BwR9W7wXWABSifiU8x+BO8CB58lHmc34YI0wRT8HLc
iCzOfaRBlbhg+FSyCCIoi/PNBM+uEcKR7Ws+H8HK9WJypk+ZYybXHKMAQhBrMf2Cf/kbn1zt/8r7
CHrj9QSXMR4zceNjTn8kg4fOMlIYwctY3LJlS6dfMVYHQmdc4HvIIBFI8GIZ5LNpBFq6Cabg5T4k
O0akgBW0uPnGQw07XPQ5rimuLCwKV3+82hn/uF/oc+zImcYu5lI0AaKeOZ/5CBcOdtMYEylc4q52
FwxY9OmCPgUl2gWv0lYI3jvQnZZP8KJDS0TwVlGtnmpt1aR2fb9+/XZGmuDFSuSGAZdOi/WKAZbB
HSHsRgteItndYE1jJcagqrdsw000CV4GGXzwIg3OPRZCcwAtKghNrF069y2DLSKX/yMUEL4M6qag
RBRStQqhQv9FiPI+BDCDqllWFQGJbyxWDCYHXo8Axp3BnYe0oIIXf0Ssd3xfftYQyjDzu8i7yz3p
T/CC3mrnON0EU/ByX7NNiD98pMECGSt9MOA8sH2r+wTnl/7D5Mr/ubbco/7mAPollkr6Jn2Jv3kv
RgNEhlsgI04ZR+lT9B39eoLFuJf0awsjeN9++21nXGaHzCywYoLApO8hfAIJXo4RUctvdxdhgWAK
Xo6VRWKkwEKWrX4vQ3U+PWb4c1Oin3PdzfFTZ72hwI0b/kYL0GcYR8NNtAveq666CsF7t2qnW0cK
XnRpSDAF7+lqYBqvTvQuf4NduCiK4NXQ2bFqIQywWritO4EELzBAMYjjQ4NFNj+w+tExsT5wM7GC
5P2kACIljXsiwLeRzmz642pfZfzPsEywVcNEj7UikODlpiZiGcsVq10GaP0+JgvzZvcC/EZdvQmL
E1viwbaihwK2JUlLFuw8rpwDPpt+SkEIxEZeohrBS5UaJmJEM/2LFsi1ALBuMqFjyUB0RmLgVjBA
WCHYuS8Q+5wHdxYJr4LwD0VmE/oMYyf9jnSBujhJIBCsLGI4Z2wVI8SJmcirv3KOcYGg7/H5kXC+
gw2LzuLmUS5JELsscr3MpEmTnLkff/TC6JVAgpc5CEsxn1mQHUjGENzRcINgridQEgMZuyZYx907
gYhz/ItxF3LD2E82HRaRuGOwkCOVH0Y23Of8CV60BMdOmXTmen4Pcz+70boQUSQwatQoBO+96E7L
52GA4EWPlqzgHThw4G4vDUrFEbxA50CI8jp3bsa8BC9bDwUVvFgo6HxYD/geihOwdYcIpaoWf+v0
OMBNwWcz8Wq4YW+8caJzPLhT4HuJBY9SsTrq2J/gxc9Kfx5b5HwXK14s2ogiMjt4DQQXAwv+hAxa
TKAcN77W+QUaliQcD4EbBBwQLYs1k2sabMFbWNyCVygcuHBwXcmBTJoo3J6wNpuFFMIJfqnsRlHp
DCHKglcH7YYbt+AVCg7GB+5Z4Pqy+EToaHeicIPvMq4Aesudfuf14kAERjKnM1+6dUF+BEvwsqOh
gyeZrxlHeD9aBR2g00gCLkNYjtlV0yBM+QyELu43CGfmQXbvELIU5fEneHHdQLPgf0yfGj16tCP6
MXZxLsxqmF5FjcUI3jnoTssneNGhJSJ4j1XtZNXOUIL3BnXx9nhpQCuu4KUj69chsDR5CV6EMZ2Q
rV/SO+UFllk6PX6XJGDn+zh/WJD4m+a2tPoTvJRZrVSpotP5GQj5TAZGfH/YWqPjm4L3rbffcrYK
eZ70OwyefDdCiO1PRC9+dOYWd7hhAcGWKGVtmUAZCPh9XIf8tshLCgYZXGHYruU8EgjBJMDAFmz/
rsIigrfosBBl0uG+ps/R2NbHf9MMbgkH3Kv0MRa4HBuLaCY+yu3S/8KNCN6iwRyAKwcLes4f4zxz
AG4OVBQMJ/jXYyHkeBBMiDOyW2CR9zLsHGh3FMZqsr2wS4Foz2tnM5DgRWdQDAWdQBBmfpCVhJ1Y
5jPma4xazNmMI7iiuXct/QledlcwTjGH41fPLgnv2bZtqxOgyrhkCl4+lx1g5iV2AvkMjGVoIeKX
MNAhlv25eHgN9RvJwzvXCrPgvXHYsGF/eWlAK67gBQQWr8NCp9GCl6wJ+PXREKHc7HpCJJ9oflZH
hCYdjeAMsza7P0zBy7nGN5Ibwi3INTjXc+xuwct7CDDhGN03kYYbnsELERmMIKtgwjYo23sIN36X
bvwWXDH0taCxStaNgBh3wyrnbpwb3bBs64briG5MLu6G6wqNQVI3smfo6k7uRp9AjITbKsNx4Geb
lwuD4B98ifEJZRHjvrb0RdwGsLxhzWdrkMYCzN0fC9MnC9sf6Yf4DjJ5u4+NCRGBxDgQbpjgGUu9
ND9EAixOu3bt4ljjtN+0HvOIZ2BMQbiUdKMPEuzq7m/anc6MefEi3KP4ZuMnrn3QubcR8Mzj5L81
xS+Cl/gDjEzcz9zz3HekCmUOZle2IEYifN2Zy9Ee5neY+BO8GLboC2QSMdE51E3By+4o44Fbx7hh
AYUWYUfI64wbNw7BO0+1M6wSErzxlh/Be/nll+/10oBWXMFLZ0So8Dr+1WjBS0fkJqHp/2OxRYSy
Mgd8sOig7sakxqqOVRnbEHREPp+Bgu2hQH6ppuBlRcjWKsdnuiwAW5o85xa8pHliUOKGIOrendCd
1SKNG7dixYohSa1WHPDn43xhveJ36cZvIXsAlZ2YBNjeoeF3qRt+SjSdZB63DxrBSGxRuxsTs25c
F93wkaIxaPhrvS7oZSMq3cdGwy+b9xdkURNKyBlJ/3O7yQgFg50Ptht1cKBuTDz0CSwriBK2NOmH
7v+7+6Xuj/ii59Un3f3SX1/U/XHQ4EHOv9ri4z42xiR2m7xgcaPv4V8YKX6CXgHrHTmysdyb4woC
k75EPytKo48WtRFjYhoe6G+FzRkbTpjfyMePsYT4GOZJ7iHuaazqZrwCgtc95+udHh2wq4PUMRRh
/HDP+czZ2uDBWMD7WECzA4N/LnO1P/HrT/DiI835drtZavgONI8peHFz4j0s3P3N+bhFsAtDHmWv
M378eARvhuUTvLjUlqjgrW9FqeBFoBCxy+vcgR9a8LJSI7kzDesjbgQEt7EC1rAVyjaIu+E3o90V
CMZAYPIdfKauHoX/pxnQYQpe/LvIVcpN6m9lyecTcOcWvKTawTLN9zE4saozG5/HDe217Q0mTRzy
9XYUv4HGQMR1ZKHA1hCNrSIa15DGQEDDrUA3+gGN80xjoKJhAdWNRQUNSwuNQZLGYKgb54mGtY3J
SR+XbljeEDDhFrxC0cHXnjGASUFfVyYiLPrchywiGPto2gpGfyxMnwzUH919MlB/xLdYp2jTDbGL
WwPbtUJkoovCMPa7ry19j2uLyDJ3EkqikX7MFOGMySzuTd9Rr8M8yX3Htv+yZcucOZrfYuavZp5B
3BKYx5yPNRSXQHZfuE5asGIBJojMPedz/XRgJ6/FQMJYwlyLcQnLMpl8zNLd/gQvi2MW3jo9nxuO
ATcrU/DyGNeITCXmfE/DiMT36IIrXkaJdk8I3olDhw6NKpcGtgq1GCXnniYvH14THOQRze6G+4F7
WxmrB2nQWHVjReLGokPTsfMKWmNViGWH4/MXEIUI5oZyC14GK24uPp8bFkf2QM0t3L0AiwosXe+/
/76zKOBckAx/xowZnjlWIs9xCWEAYXDh+FiJc9zhdmkQig6BJViDmHi4f9g2xBePTCdegUBJFlf0
PRaFRHcz6Xk9al4IDIsZBC9uM4hJRAkNQwZzS7gs5izYMLZgDdXHhADHmOPPVS6SIMcy8yN+uW4C
+fCaIILJ4+ue89mJ1bmmAWGKWwj3LLuT3LeI1AYNGhzxOn+CFystcz7C2oT+gE+yKXhxseQ9pLM0
53l3K0y+33AxZswYBO9D6E4rjIL3hsGDB0dN0BodkpUc2zb4KrnLBxZG8BYWzh85I7mxsMC6/WhN
wcvvwOIZ6Hew+uc5t+DFIkmCbG4If+/xMgz6WErBjA72EgxkVHXCRQVfMCz/XghaE4oObkpsPTKh
6Pr2/haZ4WbVqlVO32NxyIKXABWvFwIQAoNRg+115iOMLri4IF5wUwl3jAXWSFx9yAbENj2LP/pa
pO8o8DuY9xGhbgoqeAsLsT4YojDisIBgIaPxJ3gpnMK8TqErE8YmFiKm4CVwlffgQhHpXHPNNTpo
DcGLS22JC952CN5LL700KtKSsQ2JSwHuBUlJiUetpEIpeDU4kWOddUfUm4KXyZfk6LwOHxz3ap8B
Ev9AfqNb8PIaUizxOLlhI8nqiK8RVu9Ig8GMScqLAkkoGOy+6FLKkQT3TDCKbwjhgW12nYeXMR3L
qr+iCOECsca4pud94kK8ECSZFyxWdYyNP7hfEJlY1t2ESvBqcJtCqGJo09fXn+DFyMOxsHtoBsbj
ksFOgCl4yfuL6wRumJs3b3a9I/IYPXo0acnut8IoeLHwTujfv3/EFZ5glcQ2NHntqBKDBREfVzoZ
HYetTHPbKFiCl47H8SG6+T/Hy79YZ/CrIfoTnz+NKXgBv1G2XliRsj2CPyGrPHIhIthNlwbAB5DP
4T1stTOoMgBgTeD95O0kGMJrPqe4YHBckQZbVCwuTJ9sL8HCh36FhVD3OQZd/NO4d8xGlDP9Bdcc
8/7QsMNgvo+GcMTXnd2GQO/1EnrxaFbUigRIfcSkGWlgdOB8Y5ni3sG/ESME/Y6+ago+YhPMfqYb
AoGx1V+cg9fhPomkSmtYEJlHvQwBXMx97Loxl+s5ExdG5nt8a9ld1WXNNcEQvMyp+Pdixd2w4f/Z
OxN4q6b2j687VveW6i1FKVcjKlJpRoNKpUGRVJQGSkTTa4gUISkhw2usDBEhw1/JUBRChIQkDYYG
URSqe+/Z//Xd6y53t51bt9sd9jnn+X4+6xPnnHvGvff6rWf9nudZ/8+8i00PKxweYZLJLOEEL/kA
JMAiarE0cozwPFSGwRKBpckveDmfmDvJzcE2SRSb1+Xv0BzsBGG78LaXDyqXX345gvdudKcqQsF7
9QUXXBBxrYXt4EBAZCIE69ev724dkQgSLmKdX4KXgw0RywnGgU4JIVtHE+8whaC9F/ZwghcQ69TU
RdwictmKoVoEJ0lOndaYTKjraA3rrPw4mXkvrATZws2pWkRRQb3ASGwtjGhk26+otyAPBOKUY4bj
z3rI8I8jNrzniR143DjWKO1DaZ5wiyOOO//f2cFxhheWhVnQrR4IJRaG/nMoEiDR85prrvHfHGhY
kHOeE3DgOst1CU8y1zf+n+uWv9sklWf8x5gdbBMjJojcRVpJPgIa4cpPBRX84kGo+3wgmEeYL5n7
EJMcU8x5iGCua3iRqVbgn/vzQ/AypxKgYs7Fh818znNyjDJvkxjr3XUNJ3iBSk+UF01OTnI/B/M3
GoIqL0Sm/YIXsKDg/7Wag9elTjzvgwRXKiCxGxl0sloLT1dFLHj/26tXr1+DJHiZsFn1IFC90TW2
AaiFye12LFu21K1hx+OJCHgjq354LlZktgxJXmEixd9JuS28TxyMZEkySfEe/OWjELoY4sMJBE5C
kmo4QTDdEwnhtyAzlPcZ7vMwsfB8CJZx48a50W58YjyexYI/ilLU8N4oiRNpMGnRzS6SBe/VV1/9
TwkbBrsJbLUyQTARICb8EwSClws7Gd3ev2XLk6xhLrRMNvgRg3aseeE84ntgJyTSYNE8ZswY/82B
hYg/0SsEAE1SCDqwBc0CnZ0wmvRwzOFr9YLgRRBzDfUea/iZKdtG/VSCGoj/IB9rfhA2RN4iBc51
koiDDKKT+ZK5kbmPaxfXN0QuUV0ivf5rGfB4SowdTiCIY4/flK6NeJ15XSLO+HI5zoneeiF3CH1C
BNoPc/TixW//096b90ZuCwEWdtGI4Prhmo7mQGPQXIp5n1wTdvaIFPs1RxC59NJLEbxT0Z2qCJLW
3Dq8+mIyVq84tgdJ8ArRBRcnIs+RBhdXkguDHF06mOBlFyEc/CZEGBCu/nbUCF4qVfijcZYbb7zR
fW6ETdBK4HlhsciWepDfY05g14qkRSJRdKJVjHARdRaNdufAG2lD8BKhI3gQDqJd3M92MoImUiAA
Q9Z9pMCODdYTQSgoBg8ejOC9Hd2piqrxhBa8Y/SJ+cvhrH4E4UDQthGPVaTBKp0yNUFoQZsTeRW8
wM4AUTeK0Xs5mOBlMue5yU4u6japBwILFBH6SBS8REVpchEpEGFje/mkk04KG23iNnIMsJORoGM5
mOBFHGORYNs4kpIPiWxT6itSwJvK7o8gFBSDBg1C8N6K7lSFJHhta2FeyBW8SUlJI88+++ytIniF
goIOPpTBiTTYWqKTT9A613k5HMHL3xKRYxvaG8U+mOAl0YjnRqywnRZUELosWIL8++UE4o4KIZEC
27J4wxG91AUNZz/gGGM3wXusHUzwsqDC44hn0Z8DEWSwzuH/jxSwkLBNLggFhb6eUZZsArpTGcFb
IUuPForgxUPBC49o06bNT34PiiDkFxj3w9UeDDp4voMeITwcwYtYtUlDtpsQWMGLZw2/uh3440jM
wCZAQgZ2jyCXx9uwcYPT+4LegY7Q5wQRQtqeRgrYR8g857ggsYZEGlvPmrmFYzKcCLaClzwG77HG
43lOkoHw8PI4f8vYIBNpEXqCEpFoOxMihwsuuCBdzzXX6tFCFZHg5YWHN23adEO45ChByA/YLqPO
Y6TBpEsJnJwinUHgcAQvQp4kIh5HwqTF9qa3hent6N69uxsRxgZBxM1f/idoEE0MetJhTnDM0ekp
kkDccsxwPHL8cFwhZim5RLQa37g/iQchi6ClhJf3WKOiAxUauI/kSv42kiBiTWJTpMD3G4mlI4XI
oVevXhn6mnBVlu6sqYpA8DbXY1i9evXWiuAVCgpK3kRqFx+afYRrchIUDkfwEjGjYgOPo+6rBcFr
y/5QkcEOor41atRwI4/UfQx6fVQqnpDpH646StChxiZJgZEG8wjHJMcTEUPK33HccIxRQgkR702Q
RvByrNlyT95BuUceT6e8cL7gIEN91KBXPfBCZQzOFUEoKLp16xbS14FLsnRnoQteQsq88CW1atX6
Olw9zmiG7TX/Fpu9zX97URPE93QoEN2dNWuW/+aI4Prrr3e3ZoPK4QheCqg3bdrUfdzHH3/8z+0H
8/BGCpQrpMNfJC7mEenU5Qz6osJyoGsU3z9dqPD3cqxRc9RyMA9vpDJz5kznoYce8t8cWCh3hd89
1gh33Ia7ragJ4ns6FLiOsYujz/8Ls3QngvdIPVL0iEecFgQIXl4AZY3gbabHwCpVqnxZ0F68H374
wS2OjG/Q31avKKDuI74lb7IedfO4/c033/Q8smih3i4VDvC4RSpEOrxdaCIJaiVS9zCoHI7gpW0l
f0eykfc8iBbBS43KkSNH7hdRjBSoa0sd1yBXwbBwPScKS1kr6qSHg8maRS+RWwr4W6JR8PLbUZ+d
zpuRwoIFCwqljBrHMzqAHYyiFnAkTzLf++dWjkXqPvvLNRYlnF9YZFjERyL4+FnA6znpvCzdWWiC
t4TaX/AOqFChwmcFKXjx0NEBDS8X3WeCMJHiDWM71+vvo3kE/sTCTLCiEgAVDDigw0Fxf7b8ItVf
xUWNcjdkbkciRGmIEgaVwxG8HFMcWyNGjNjv9mgRvBSJpzh8pERJ/fAbIkSCDgKPnRC6RPmPJS98
FhpJYFWwRKPg5Xij4kHQPe5eOFeYDwsSRC6JjegA9EBR1zengxnzvXfHAbguknhZmOce13F0QE6V
SBDgVNPxd2GLFEgAb9u2LZaG7no01aOGKmTBi8LmhS/Uk+WnBelzw+9HHUX9Wq5XC79QURNO8M6c
NdOtI+lvB1iQ0D0F0UEkKhzPzXvOFSB0lYlEiP5wIhM9j0TmzZvnJmsFlbwK3vvuv889B2hT6a9C
ES2Cl+vM9OnTizySlFcQj5HifaesFdd2xMyPP/7ov9v9DUhe5ZjzRhKjUfBy/tE0ZMmSJf67Asuy
95a5lTUKEiL8+Li5LnG9Kurdi5wE722Tb3NrjLNDVFg88sgjrg648847/Xe5zLh3hts62R+NjhQo
DakFL2XJumXpTgRveVXAgpcnRvCirHlBXriPPgg/LijBy4Xuzul3ugfWoEGD3FUKk3G4FoCFSTjB
WxTQllD/Bm5yVDTC7zx69Oj9PKKRBJMWPtegcjDBS9Y8iyU7yIDn8xCNQ+xi6/FbjKJF8NIuNVIj
IoCVhnMnEuA6igWD63yTJk3clqtEDaknzO4VCWyIHY5VatRaolHwYqFhrsspWhdEuD63bNnSf3O+
gY+b74TrTs+ePd3jZPz48f6HFSo5Cd6igDwRrtc5Cd5IJyu6/5f+jF31aKxHdT3KZenRAhe8KGsr
eHtpEfohXYkKAiZTLoBsZW3fvt1p2LChU7FixRyLwVPAnAgrXjCyyOnSde2117rtTFndhPPj4UVk
hURkgcHBgzeHCR4/brgM33CClw5SWAiogekH4U7LTO7HS8MK3j6/9z1xYvN+6CrEZMWF/vbbb3cv
/P5IExMB0U/9G7D6caM5dtiC/rwm/59TlyEuqiSFEQ1igiQ72r+YYMuRKDvPQ/cwSgMxIfE52Hor
yMkG7w7fFcI+EuF3YAuW7zCIHEzw+gfionLlym7ZJ7bswjWciRbBO2bMmIj1jgPXvkiq1LD2u7Xu
9Y7OaAgJWldz3eeYo0wZ1zi/dSsaBS/XPBrWUMc6UuDaceqpp/pvzjeYx2rWrOnu9DIXUO3l2GOP
DTufcxtzFbtTzKfMscyh5LLce++9YVtMcx3jb1hkoTno5sf8zN+w6EVw+clJ8FKTHA2yadOm/W4H
nps5l8U01xeOd6yQ3ObVGdg1eP/Y+di95X2w24TG8OuAuXPnuuUTuT5TAcerA2wZP67z7KKEa9vN
9/XGG2+4moO5ln/D2TGw2pCcyGfDSkmEnf/mvVHvuiBzl5hHTz/99J3KCN5T9aimx3+y9GihCF4U
Nkr7HD3eD3dA5Af8wKzqyABFNLCC0a/nTLljiv+hLhwcRAJY/VHShogwf8+BSZkkDjJ/1jUXFyZ8
DmzbOcr+Dbffc889/xIs4QQviQZ4dzhg/Dz11FOuUOfveG62H3h+tvG8FQg4eLiAcx+P874Pkjq8
YpStcp6P74PH8d92UNYGOCD5PFdcccU/fwecNHiNjzjiCPfx9v0wsbRr1871zFg4ETkxeRwnDeZx
HmffH595yJAhnmfPP9g5oAA7x0EkwgWOmrPr16/33xUIeH9UWMGD7z3GmQD47v2Dx/F4/6LIS7jn
i0SYRJgAIxUW/4iCSIJJlXOF6yXXanYUZsyY4QYwOCb9kz3Xco7LSPVZh4Nzp0ePHv+qORxkEHe0
fS4oOB6YowhE2Wgv/x+uvjKNYpirWCDxeOYnO59yO1v7WAG9YMviPhb6HHPev2Guw66xZcuW/f4m
J8HLXIsG8S/OAG1A5z+/DiAosnjxYvcxvH/aStv3wGPseydB+Omnn97vOQkw8Dh0AP96dQDBMyAw
hdag+ocXzic+L+/Xvhb/8tp8F97qW3zvfA8kjqKJ+L29WgndggYqCFj8NW3adIv+jJ30aKTHcXqU
1aO4HnGqgEDw8gKEklHYKO0u+ktaQrvQ/IYfA1Hn9e1yEa9UqZJ7gITr7kak0gpEtlhYkfBlcWJw
oHPw+ktccXDxw3EgIuZIFmDFSsIRq0p+SL8fJ5zgDZe0xmcgYsyBRCSNVSMrQFZaZOFSu9DbG54D
CXsCt/EeyEhlpYY3mM/E57fwuRDp+jegKLO7fW6H7Q4VLmkNITJ9+p3ugcrnY7VJNI4IOGKXz0AJ
EGtTQfDynnidatWqOZ06dXJXlVw0WIDwe3AShDvBDxdWuiQo2OhjJMJxmJMXVgguREdzqhoQCXDu
sMgvKLuZUDCwi0aAJ9zuSVDhWDv++OMLZOHBHHr66ae7EX8bocRKhUg788wz/7X4Zu5jruJ+5iYS
ItEnzLs0AuKc4Jrs/X4Rs/wNcyxWLSLCnPuIUCwUCEDmRO/ny0nwhktaY84lCsqci1DEj07UlUAO
Anb48OHu/wOagvdMwiyRV+Zm3j9imfm3QoUKbtUqCzvKBMp4/4hXrw6wO+/hktb4LIhzPgM7JWgk
vl/0ER5kNA7Pa6PoCF5+Bz4D7wO722uvveZWgkJQ85lPOOGEAglO8Rnr16+/Tn/Gjno01CNNFYLg
5Ym9ghel3Vl/0EX6x833zA5C5ohNVjBW8HAwU6lBv64rZv0geLkPIef/4tk24GAhMcK7fYDg5W8a
NGjwrzaiHIycaFgpvAd7bgUvpUkQ2pxkHFDhLgje98JJGC4yhginYxBRJy8H8/CGE7zr1q37p34q
Cwnv63333XduVIhtRVsWxyt4+Y68WzX8LdYLTgKsI/kN1pUBAwZE9PY40W8uoELkwCR6xhlnuDaq
SIYtYDuRCpEBNhq2liMJ5jXmVX8UND9gjkNMeedbFgXYGoh4eoNAYAWvfy4G5jJamzN/Y8uzWMGL
KPTeDuxeEy3mPm9w6lAEL2IbmxdCERHt36lgHrW5EPw3ItP/GO4nOIWWQIh6OZiHN5zg5Xvj+8Oi
5rdM8p3b92u1lxW86Al2xb1VMnhvNHkhOEkwLL/BUlm7du3PlBG8DVS24C2mCljw8gJ4J9KUUdod
9Q/wil4V5Lvgxb+in9/p37//PwcDPworHQ40vnT/QWEFLysXv7+HrSK8h/xgXjFsBS9bZ344qLFG
8Dde709uBS9Z+qwaEYrhxO6B4LlZ2fBjI0xplVmnTp39HpMXwcs2B0XcWRSEe0+cHPwN3zMnn1fw
svL0w2fkPraZwj3f4YBXiN8fIR6pELUnSi1EDkRUWFj7ry+RBmWc/FugQrDh+stcEmng4fUHmfID
IonMt3TctOcj/yJcEXHUafeep1bwErgJl0/Dbhs7kuxmWqzgJbjmD3rx3NRTZ3fYex0/FMHLzi5z
KsEbf5LvgeC1eW9EUdEBCF6CUQhwL3kRvOgdAooki4YLsvH98p5teTwreP3PYyFqzXtgRzq/r5tv
vvlmqEqVKkv183fQo74ex+pRRhWS4EVZ84Kn6HGWFrzPTZky5d/f2GHAQcePSuSQhDKvj5CVCQds
rVq13PafXqylIZyXBOFGopV+z87jjz/+z+3W0hCu1isimTI4/I13dZdbwYvnlRPFH5nNCczZNnGD
g5HPiWC2XltsF17yInhJ8OCE7Nq1q+eR2RBh4DmHDh3q2ka8gte/+gVKhnEfi4n87rhHEiFeIi4u
kQoXKrbH8/siIBQcnLf+iSwSIachEsVTLMPW+Zw5c/w3B55WrVr94xnNLzb9sMmNQmJNwDLn1QH8
P/oAG6K3NKIVvASZwiWoYU/k+bz+dit4uU6H6ymAXmAuxkJhORTBSy12nj83TYgQn8zrCE6irOgA
/kUH8B74zNhHvORF8JLIz/tHb4SDJDmek4UGWMHLZ1u0aJHv0abbHo9H/4QT0IeD1l6ZRx555Ov6
+dspI3irqiISvO31DzJ77NixuV+25AJOHJK8EGtcAPA02YGwIqxP+Bwx7BUSCF6EIa0o/bCy4kfW
79mtS2dB8HJQhfOgYjHg9fibZ+aaRDDIreBlFcVtiMeDwUFCVAnvEStJEs4w6yNAWT3hW0b4esmL
4KUSA++/T58+nkdmw4qO57Smda/gDZe1znYI9xWE4OWiwvsoqKTIwoALaLNmzYq8hJ2Qe5igiBxF
Oggn/IFC5EAnuUgqSWYhgJLf29lECxFYiD0ikX4dYINAREAtVvBi21sfJlmYgBmJxFQAsVjBS85Q
uDmMJHDmXnZ7LYcieNml5PmJFB8MnhdPLSKXeRcxy3nMTir6hc/L7qyXvAheLIhog3C7tmDzg9hp
Byt40UrhakQTSOPxBSF4X3jhhYzSpUu/qJ//TD1O1qOKHqX1SFYFLHh5AV4Ihc0Lt9M/+v0DBgzI
N8GLMGUlxI+hn/+AA0O5t+qCtTRwYPi/dMQrGf/c7+1ig+DltcKJOTykrPr4G69XKLeCl9JAiPPc
lAfCJM/qDc+nf5WJjya/BC9Gc04m78nrhYsMz0k0HLFblIKXiDcXC39zg0iDreVITryLNTg3IrVI
uxcmfDL+w5VWFIIHcxnXeP+2eiRARJKGNPkFCVckY/vn/HDD23jJCl48xeFKuxFMIx+mfv36/9xm
BS/JbOFKrBJ8IsDGuWQ5FMFLngvzcG7qYjPHogNYcPttmVyT8kvw8vzcRiJfOEhE4zkJukFRCrNe
/c0AAFznSURBVF69kMrQ3/+T+vnb6lFPZQveJFXAgpcX4IV4wZOUUdzTtKDLt5RSRJNN9KI0CwI4
3GAlzNY/BnaLFbyIUX/CCXV5GzVq5B64/LfFenjD/fB4gDDHE3X1mrRzK3g5udg+IfOTZLEDQckQ
3ofXq2ThYOJ9+wUvJzQHrf+ks4QTvKyGEc98Jm+2J5CsY8uO8bdQlIKXLSl+l6JuI3m44DcPtw0k
BA/OAc7ZcNuhkQaeenaNwnUvE4IHyU1+MRMpkDeTnx098dFjO2DOI/Dkn/8Z5HaQmIntwQa+rOAl
qOOvJ8u8yq4r87d319UKXvSEP1+EQBm6AhFqo51wKIIXocljCXwcLHhDSVXei792PucypUl57/5j
BMsFz5+TZSKc4CVqjEWChHy/VuIzUxkKjWCj50UpeJ988smQ/nwP6+dvo4zgPUaPI1QhCV5eiBfk
hXkDE/WXk29Kh1Ic/KgdOnTw37UfRHERc94fmQOT2zjY2T6wBnG8qITuw61obISXlRMeVftjId6I
tnIg+SsQ5FbwEqnFv8vtWAi84pz3xgXOTqxkU/M4yn55t2LwHDVo2MA94fyCFxFN5QnKiPA3nBRe
sRxO8OJ/soZ0Es1IDAMOciwiHOSsjr2NCIpK8FLlggtTfj9vYcMxGs7oLwQPJloSRPP7ol0UcI1h
+zdSOxXGGkTouDZHIohd5t/8wtoBSVrLCeYy23SBKCdYwcv8hufWG2iiSx+ls7AzeIWtFbzMsegB
byAIKwEWCBbBXmvdoQhe3hNJfQhM6kt7SwUyZ7N7bOdhqjnxPpibveKY6C55S3wuv+DFP4vmwUfN
e+S89+qAcIKXoB/WCd4TJdPsgoEa/PyWvAfspPY9FJXg5XNk7TpP16O1HnX1qJSlQxNVAYLg5QV4
IV6wjh6t9BhbsWLFfzu98wjJahxIRDwPBEIQkUr01G7ZccLxw/LDcDs+HrYhWMUQtcTs7U904wAn
mozQ5Mfnb0lUs4WVeQ7/FlNuBS8gcu1zMZESQcWKQQc5VqbYHoADn8LOPDcnGDYIMknxMvNY3rtf
8NptH16Xv+GEIPJtE+zCCV6gvi9NNjgxEbd0aOFzUoKNA5oTwx60RSl4uRBgqs/v6g+FDf5wVu6R
/jliAWp8cj5EA5zDlDAKl5ArBA/sW+ESgyMBgiXMRfkFu7HMmeEqLVisGGLOQrxxffVaGph3Ka3F
LgfzLsEhHoug8wpCK3hPO+00dx5lrsXPi4Ak6osusPO05VAEL1Djlvdi51z0Br5kkuuovrR48WL3
cQhxoqvoFYQt5b7QJOgA3g9i3S94sf6hcdAORMWtDiCgBuEEL5BQzfMR5CJohhbiX3aTeT0+g/2e
ikrwIt7175WpP9st+vnP0ONEPY7Wo2SWHi0wrOAtpYzg5YV5A5fqL+FP/zZ8XmDVgZ2B0L+/G4of
VjKs7iglYn8ABC8HCqtDflxOArbvOdAQj+EaZPAjc0ATWaZeKgcgBz3ilOhIOCsC75HIo3elxgnP
gYrfxw/RU7q+cALy3GzDYJXgpPKWcqHeLGL4uOOOcwUpzzdkyGD3gEZQInz98D0wqSGW8SXxfeDT
Bcz2vKZfhAPilIQwVrzU4uPzckL5o0FcRPD78Lxe77OFyDT3sXIN1wzkcEBg57RNE0ngtSYRMZw/
TAgWeNep0hAtIOALolSQkL8wl3ANZ/s+EmFRz/vPD7DgMPch9g52zUQn8Lr47plLreBlLmNu4jkQ
sMy7zIXs/Pq9sVbwoifYVWR3GVHJ3xCZxcdqd4st2C15j0RHvTDXIhr9zaqAGvY0m+L9ML8zEKdo
Cbv7y3lKEIn3j3hloEmuu+46NwDEZ0Us+0E7UPaM+uHoE+Zkm3dExQW0Qbi8BHaYCfDZ1s28H4Jt
4awdLMh4L36NAHSl5DXRP/kpeNEfI0eO3KN13QT9G52uxwkqW/AmIEwLEgQvL8QL8sKn6dFXj7+C
kIXuFbzAl8UPeqCyVl7BC/yweGMLorUjqySemyhzTkW68RAicInC5nfE1A8nF/5YFgJs4/hP6qKG
uoNTp0713xxxYDfhYmq3rYRgwvnJ7xRukRup4B2nkUF+TkJC/sOcEE7IRArMawi9ol5YeQWv9a6z
iOD95RSQ8QpeHsO5QiCJv/GL4/yAxQ3zO4nq/t1jCzqE5lsIWX83ufyG3wzrAosH/g3StYLPfuGF
F/6udd01+jdqocfxelTM0qEFLnh5gVRlXrC2Hi31OFe/mR1ByEL3C97c4Be8QnBgVRsuYh5pEKVg
9R1NQioa4ffhelDQC83ChEkMi4bYaYLNK6+88q/t8UiCc4boYFG3sg4neA+GX/AKwQHhrxeCW+Lj
46/Uv1FzPWrpUUGPFD3ijSwtOLyClxfmDfRISUnZFATBKII3usC4Hy2dokiajMSC8rEEW4AktXKR
jRawibGt6y3fKASPhx56yO3KGMlgGfAmZhcFInijC65bDRo0WKd/n0v1aKpHTT2OVIUkeHkBXogX
5IV5A91TU1M/C4LZHn8OHpNDEUn4X/HG+ntyC0UPHme/+T9SwePtTx4UggVtR/HkBc3acziwPcnC
UcriBRe2bUksevPNN/13RRQ02AmXJ1OYsJuG8Gbh6i0/eiAQyfwN1ZgKwsIg5B12DqpUqbJK68wB
ejTWo4Ye5fUooQqwJJkFwcsL8YLVlXkDXRISEhZNnTq1aM07jjlw8b8ezOjuhZMCj6Ws7IIHBvxI
7DoUDkriUAlDCC5UWgnCwj2/IelUOq4FF2wAJASR3BrJkOyU3+2FDxUWeFiTbA3/3MDj+Bu0QFF7
kIX9obTrEUccsULrzN56NNKjmh7l9CiuCkHw8gK8EC/IC5+qx9l6zBk1apSYxIR8hcxSjPvRAFsz
lIphQSYEE6qyhCu5E+mQMU7ll9wKAKFwYUsdn3VBJEoXJtQQpm6tIOQXJNUnJCR8oDVmdz0a6JGm
x3/0KJalRwsUXoAX4gXTlHkDHfWY3qdPH+lfKeQbRD0omXYo0fqgQ+Iape+E4EHBdSJU0VhJA08y
pQeLertZCA/lF2mPG+kLEkr6RUOSsRAcsJpqwfuW1phn6XGKHsfqUVaP5Cw9WqBYwcsLVtWjvh7t
9RjbsWPHTNkOEPILJmfqKEfTMUUDAGo8RtNnihZmzZrl1koOUkme/ARPI5YNIXgQ3fU3NohEaHSE
fUYQ8otHH300lJKS8pLWmO30OFmPKnqUVgXcVtjCC6CsyyjzwifpcaYe/Vu2bBkKQi1eITqgaUbX
rl39N0c0iCk64kSLTSOaoNkNojdaoesSFWkiPYoYbZAkRYODaChZSKUjSknKgl7IL0aPHp1RvHjx
WVpjttWjnh7HqGzBWyjwQrQXrqzMG2ijR58mTZr84e/OIQh5hY41l19+uf/miIdOO88++6z/ZqEI
IVmlXLlyuS5jFIkgQmiHTicpITjMnz/fad68uf/miIRGDXQNkxJ4Qn7RqVOnPfHx8VO1xmylRx1l
uvzS7bdA2wp7QfDa9sK8AdoL965Xr97Gjz76yP9+BSFPsL08dVrkd1nzQ+SadskSaQsOLEBoTRrt
UBbv1Vdf9d8sFCEIxClTpvhvjkgIeJGnEKntkYXgUaNGjV1aX16niqCtsMW2Fz5KmTZvtBc+75hj
jvlo4cKFspch5AskEBH9iDboSHjRRRfl2FJSKHxovXvffff5b446KLk2ffr0qPUpRxok5hLdzanN
fKSxadMmt1IDbeoFIT9ITU3drfXlULV/W2GanxV40wkLyprmE7R3o9sab6RH6dKlFzzzzDMSthIO
GyZkGohE4/YrVQD69esXFZ69aGD79u1Ot27dYiIq9d5777nJa1JcPxi8++67ztlnn+2/OWJBuLOY
X7t2rf8uQThkCArFx8f/pfVlL5XdZa3Q2gpbwnVb65acnPzkI488IqED4bBBfJx44oluB6JoY9++
fW5ih7QZDgbL3lvm9OnbJyYsJtR57dmzp7N161b/XUIhg6eaXYVoKlNI0jpWtC+//NJ/lyAcMlhk
S5QosU3ryy7KNDmj2Rm6s1CaTli83da8zSem33LLLbJdJhw2lCSjTWW08uKLLzpdunTx3ywUAZRS
uv/++2Mms5xaqdHiGY1ksDPgd12xYoX/roiFnQPqCX/88cf+uwThkMGClZqa+pnWlp2V6bKWpgqx
6YQFwYvCts0nGurRMTExcdKwYcP2UORcEA6Hl19+2S2hFK2wjU55sjVr1vjvEgoRFud9+vRx2z7H
CnSSq1evntgaihgSvDj2oqnRCYtGFlPR2J5bKHzGjRuXERcXNw99qfZvOlGogtc2n6AWr20+0UEL
3ms7d+68jZWrIBwODz30kBuJimbGjBnjjBo1yn+zUIjgNezRo4fbvjJWQOiefPLJzuuvv+6/SyhE
7rrrLmfChAlRZ6V55JFHnBtuuMF/syAcMn379t2ntSUlyej14G06QS+IQgPBS2kyXtg2n6AW74ja
tWuv0ZNHbOwNCgXGrbfe6sycOdN/c1Sxfv16p06dOm5LW6FoGDZsmHPTTTf5b456EFvUgxaKjkaN
Gjlvv/22/+aIh905knIF4XBgIdiuXbuQ1pXD9WitR11lej/QA6LQavCCFbzeWryt9Bh4xBFHrJCE
COFwIFHtqquucg3r0U737t1dP69Q+JBgc9RRRzmrVq3y3xX17Nq1y2nTpo276BIKH2wlCN5otJXg
3+XYEoTDgSZAzZs336NMhQZq8J6oTA3eQm06YfHW4qUYcEs9zk9MTHzn888/9793Qcg1bC8TfYqF
0jY0PMC6EY3VKILO448/7pxxxhkxm2Q7fPhwZ968ef6bhUKgf//+zrRp0/w3RwVUAqGkJNVoBCGv
fPLJJ1ivftS6sqcypW9rq+wavIXWdMLCC/LCtjRZMz3OKVGixKuzZs0SS4OQZyhaTvHyjRs3+u+K
Ooiw9erVSwq1FzJsl11wwQXO//3f//nvihkWLFjgjB07VhZbhcz333/vJqxGa/tdEtfoWiilyYTD
QV+fMitXrrxc68ruWfqyRpbeLNQavBYEry1NRm20Jnp0SU5OnnXZ8MtkaSfkGSoXEAHZtm2b/66o
g0nviiuukHavhQzbrtFU8D8vUCWAmrxsHQqFA7sJDz74oNvZL5rp3bt31OdgCAXLk08+mVGyZMkX
lCl5S+lbSuBSGaxQa/BavKXJjlOmNFknPW6rX/9kKdMg5BnqUiICozUC4uell15yzjnnHP/NQgGB
6Ljjjjuce+65x39XTMGW87hx46QmbyFi7VoffPCB/66oYtKkSc7QoUP9NwtCruAaPW3atFBCQsI9
WlN2UKYkWZoylcEKtSSZhRekNIS3NFl7PUYUL17891j1xQmHDzUcJ0+eHDONABD2p59+elRmbAcR
vm9aCa9cudJ/V8zBd1C9evWYWVwWNTTUofUuCZPRDCXvorlxkFCw0Mth2LBhfycnJ0/QmrKtMpXA
qAiG3qRgQpEIXl6YEhGUiqBkBKXJ+hYrVmzbZ5995v8MgpArqE87a9Ys/81RDdt/7du3Fz9lITB3
7lzn0ksvle86i/POOy+q2tsGFRbwdFZ77LHH/HdFHUSyjzvuOCm5KOQJejm0bdv25/j4+FHKVACj
Epi3JFmRCF5emBIRlIqgUgOlI3qVKFFiBY0DBCEvEH178803/TdHNUTYSPSQKG/Bwvdcv3595403
3vDfFbOQXNS6dWs3u14oOAgCNW7cOGa+51NPPdVZvny5/2ZBOCh0Iq1UqdIXWk8O1uO0LH1JRTAq
gxV6STKLrdRAqQhKRlA6oodW5XMuvfTSdP+HEITcQH1KMpljjTlz5rid16ScT8HBzgELi/R0uTx5
GThwoPP000/7bxbyEdoI01AnVqDSjrQYFvIC839cXNwyrSfPU6ZCQy2VXaGh0EuSWXhh3gBvhJIR
VGroqsfNZ555Zob4eIVD5euvv3aaNm0ak4KEqhTnnnuu+x0I+Q/bZFRmWLx4sf+umIdGCNg8aEgh
5D9EdylFFkvfL938YkngC/mHXiiFihUr9orav0JDOWUqgxV6STILtgZbqSFNZVdquFSf3Hs3b97s
/xyCcED+97//xWxbSiK7ZDdPnz7df5eQD7zyyitu7V3h39Adk/Mu2qsHFAV4xW+88UZn6tSp/rui
mg8//NC5/PLLxSsvHDIDBw7cm5SU9JDav0IDOpNCCYXu37V4KzWQQXeyHu30uKhWrVobli5d6v8c
gnBA2PaL5XJRtLllyx0Pk5B/4N0lYYhmC8K/IaEKu0fnzp39dwmHCfWOKTsYa22cqe/M9TxWPMtC
/pGWlrZT68jrs/QkFRqO0aO0KqIKDRZvpYZKylRqaK1Hn5IlS74+e/bsDP8HEYScIMJZp04dZ/Xq
1f67Ygpqo+J/i0VbR0HxzjvvuJPvr7/+6r9LyIJSQKeddprrJRfyD85noruxZvHjXOM6FuvXc+HQ
YLcpMTFxh9aR/fU4Q48Ts/QlBRKKLGHNwhsgc44MuuP1aKnHuQkJCQ/cfPPNmbTwFITc8MUXX9A7
O+YmBj+//PKLm+Eca5UqCgpKIxE1l252B4ddOWpCS6vr/IEmOi1btozJJFwWUKNHj3YXm4KQW555
5hknJSXlS60je+jRXJmENQojUCChyPy7Fn/iWlM9ummFfnO/fv12kygiCLnhqaeecvr27eu/OSZ5
7bXX3C3433//3X+XcIiQONOjRw/xEuYCrA0jR4507r333php/FJQsGNFbW1KdMbid8ln5jiKZYua
cOhcdtll6VT60jqyix6N9aiepS+LNGHNYlsMk0FHi+FGyiSuja5bt+46SVwTcgMXx4kTJ7pJa4Lj
7N692xX/b731lv8u4RD49ttvnebNm4uP8BBYs2aN6zmVKG/e4XpGpKpNmzb+u2IK2qbTSlkQcgOO
gNatW2do/XidHh2VKYRwrB5lVRG1FPbDG+CN8Ia8LYYHp6SkLP/mm2/8n0kQ/gUCb/DgwW7SlmAm
zBdeeMH1wMW6xSOvEGEjunvbbbf57xIOAFvR1113nVtWSsgblBi86KILY74Enm1qIgi5Ye3atTQG
2qX140Vq/5bCJKwVaYUGi01cw1CMsZgWcK30uKBYsWKvzZo1S2Zr4aBs2LDBLRklkbhssAP17NnT
efjhh/13CbmAY4qufUQshUODRCMawEjAIm/QxOOKK65wq4PEMiyeELxfffWV/y5B+BevvvpqqFKl
Sp9q/dhLmc69JKzRyTcQCWsWb+IaHdcwGvdMSEi4v1OnTrv9H0oQ/Hz88cfOkCFDXJEnZLNy5Uqn
cuXKbmkjIfcQ3T3//PPdKGUs+ifzgzvvvNP1oP7111/+u4QDQJJks2bNnHfffdd/V0xy1VVXOePH
j/ffLAj7wXX67rvvzkxKSnpC68dzsnQkCWsVlElYK7IOa37w8WIoLq+MwRijMYbjsaVKldoeS91l
hLzx2GOPOXfccYds34eBRhR0wZIEttzBhZOo+FlnneX89ttv/ruFXEJZPHzkDz74oOutEw4OEV3K
3910001yLcti4cKFbtUZ+T6EA8G5M3jw4L8peKBMhzXyweiwRsOJQCSsWXgj1seLwZjOGHTIuLh4
8eJr6XAkCAeCigTz58/33yw4xt/cv39/NwFEODiffvqp255aWjQfPp9//rlrC4nFslp5geYdZ555
phvlFQzsEFSrVs1NIBWEnNi6dWuoTp0667RuvEqZhhPkg5EXRmOzQCSsWWzHNRpQVFaeBhR6zNOq
XSroCzlC9IhMegzrQniWLFninHHGGa4nTsgZdpOGDh3q7hgIhw9ROawN2I0kyntg8DtjAZHFwb/p
1auXuxgQhJzA552UlLRMa8YLlWk4QT4YetL6dwMlePFX4OOlQDA+XhpQ9NRjfOPGjdPF1iDkxKJF
i5wuXbrIhHoA2F6+5ZZb3IlDfM45M3v2bPqwS0e1fIRGKJQpu//++2VbOge4dlG/+O6775YOiWGY
O3euM2rUKLnGCzly8803pycnJ89VpuFEsywdGTj/rsU2oPD7eC+pXr365vfff18yR4SwYGeQ0lEH
h21SFgZ4nWXi+DfLly93mjZt4nz22Wf+u4TDhO3ohg0bSve/HJg2bZpz3nnnOdu3b/ffJWh++ukn
N4l0y5Yt/rsEwaVu3bo74+Pjb9WasbPK9u/S34E+D4Hx71qI8vLGrI/X1uPtX7x48ddmzJghM7Tw
LzCqV61aVewMuQRLA61KY72+px/K2dWvX9+ZN2+e/y4hn8BW07lzZ+fHH3/03xWzkCD5+uuvu5VU
pFFHzrDDS01xqvEIgp9169Y5iYmJv2i9OFAZ/+7JytTfxb8biPq7fmw9XuvjtfV4e2vVPnXIkCF7
Sb4RBC8kNOJNFXIPbYeJJonwMFC94vLLL3cmTZrkv0vIR/bs2cO2ozN27Fhp05wFiZHYPWQBemDY
kbr99ttdy5Eg+LnhhhsykpKS3lLZ9XdPUPvX3w2c4AXeGH4LfBfUT6OOGvXUrqldu/a6jRs3iq1B
+Af8gNddd620Ez5EiPJOmTLF6dSpk5Td0mDxGDZsmLNjxw7/XUI+QwcxfOTUVY11Py8ijuopM2bM
EItRLmChzvclCF7Y5W3RogXthCfq0U2PpnrUyNKRgfTvWmw9XuqmHadMH+ROegxJSEhYzNaPIFjw
dREdISlGOHToTMcEQuQtVqGj1Smn1Hc2bdrkv0soINierl27tlufN5Zhl4X8A4l2547Nmzc7p512
mnv8CIIFq1S1atV+1DrxYj066tFAGVssOpJyZIHz71oIO/MG6Xt8jB719GijR18teB/t1q1bbPdZ
FPZj6dKlbrmjWG+/mVeIKjHhEu2NtcxwPvurr77qTqDU3RUKFzz33bt3dxYsWOC/K+pBsE2cONHp
2rWr7CocIiNGjHCbcggCsEuk56+M5OTk57ROvEAZGyxlbbHFYo8NpH/XCz5e22b4eD1aKFOe7OqS
JUtuWb9+vf8zCzEKnssHHngg5rdGDwdqfpL9TK3UWGLZsmWu4JL2rUUD5yzlBEli47eIFUhSu/fe
e52LL76YQvn+u4WD8MEHHzg1a9aUKK/gQlUTvXD8PT4+/ia1fzthyttiZ8AmG2jwW9g2w5SVOFWZ
MhODkpKSlowaNUrUjeDSpk0bZ8WKFf6bhUOE7PAaNWrEjOhl0VyvXj034REBIhQNtkLBUUcd5ZaE
iwXmzJnjtGrVys0qFw4djpnGjRs7zz33nP8uIQb5+uuvQ6mpqSu0PrxMGTsDNljssIFrJ5wTts0w
5SQoK3GSMrYGuq7dUqdOnT0kPgixzTPPPOP07t3b2bdvn/8uIQ8ges8++2zn4Ycfjlp7AzaG9957
z50wn3zySf/dQhHBwoP2w9Ec6aXC0COPPOIee7RbFvIOYhcrm3SNFEaOHLk3KSnpGbW/nQE7LLbY
wNsZgDdIGNraGuiWga2B7hmXlS1bduWsWbMkyhvD0Fudmql4MIX8Y9WqVW4iG+V/otEmwhY6NoaX
X37Zf5dQhHCsvfDCC67ojcbEZBaQNJagjixlyITDg06RPXv2lAYxMQ5JjOXKldumdeF1enRXprsa
dgaqM6AfA1uOzIttM0w4mi4ZtloD4eqL4+Pj7+rXr186XaOE2OT55593GjVqJKV88hm2C2nA0KRJ
Ezc5JJqi53T4OuWUU5y3335bbAwBBNFLEir2BtrIRhPXXHON2+Fw48aN/ruEPMCxwgKCVtVC7DJm
zJj0pKSkd7Qu7K9HB2WqM6QpY2cIZHe1nLC2BsLSZNsRpm6lR289rtGqfpW0Go5NSFaglJZEdwsO
vuM+ffq4vesjvfsTTSXuuecep1mzZpKgFgGwy9ChQwc3GZWdnEiFRRUC95JLLnF3FSihKOQfH374
oWvBiuRjRMg769evD9WsWfNPrQfHK9Ns4gw9TtSjkjLVGSh+EPjorhdvE4qaejTRo6sel8THxz/T
u3dvqUUVg7zzzjtOv379xL9VwPz6669uVyy2Dom8RSJk8BKppqmEtJ6OHNj2p4oBv1ukRkVpgYs9
6LbbbpOKAgUAtcMvvfRSN9IrxBbs7E6ZMiWzZMmSb2o9OFiPLno01qO6Hkdm6cbAV2fwY5tQlNWj
qjK9kc/Uo58e15YoUeIHCg4LscXgwYPdTGfZli54mFTwu9apU8dNuImkZLb333/fbW7AdjJRXiGy
QCSOGzfOadq0qRvNixTYbic6TdUTEmujyRYUNFgYlS9fPmIXRULe2LBhQ6hBgwbbskqRUcygrTLF
DShyQLGDQDebyAnC0WTZ0QvZm7xGrbVL9Zhdv379PdIaNXYg0tily9lSv7KQYWKhSP5///tf57vv
vgu0d5pjgw5erVu3dl588UX/3UKEQTIbZbxmz57tbNmyJbALXd7XmjVrnLFjx7q1hb/99lv/Q4QC
4Nprr3WuvPLKmO4WGWtMmTIlPSEhYaHWgEOVaSVsk9WovRsxyWrh4I3bVsNpepyiR3s9LtRjTMmS
JT+ZNm1aZiRFnoS8wSq+bt26MdmZKQjgQaROL8k3FM4PWtSUCW/+/PlOjx49KFXjrF692v8QIQJB
SJKNf9VVV7kNUihhFrTrPdaZGTNmuJ5Sttil1XnhQcUGWjQvXrzYf5cQhSxfvjxUrlw52gjfrEdf
ZXb96yvTShg3AHqRogcRCWFpG+U9Wo8TVHaUF3U/JS0t7ecvvvgimMt+IV9AzAwfPtyNngQ5uhjt
8N0TuRo4cKDTvHnzwJSQQozjlyQSiHdSWk1HH3j28e/TbAZfOTsNQYCqH6effrqbSMuiXCwMhQ8L
3XPOOUfmhiiHhWTDhg0z4uPjZ2vtd4ky0V06q9GRl+guOhG9GHF2Bou/RFmaMlHedsqo+1EJCQnz
2rdvv/u3334T0Rul4IVjkpMLWjDAp0hpuJYtWzoDBgxwmzkQ5SrM7WZELRn948ePd2syUztYShVG
P3h7aSmOt3fixInOl19+6TZ1KEw41qn4QV3d0047zRVcQYs6xxIshq644grn6quvlqoNUQrX+yuv
vHJPYmLiUq37rlKm0QTeXXK7iO7azmoRG921+KO8eHnxbFCxgQy98XFxcUv79u2bsXnz5sKbcYVC
4Y033nAL0hO5E4IFtobHH3/czainjNl9991XoFYCBDXRXJIWL7vsMkef887UqVMDE+0TCg9a82If
wOZANQeOCTy+BQWLbRZYHOMIXTp9zZo1y9mxY4f/oUIR8OOPP7p2Kxa+hb0AEgqeKVOm7PvPf/6z
Suu9G/UYqExlhqYq27sb8dFdi+28Zr28VGwgI6+VMvXXhutxc1JS0gcXXHBBur7oieiNEmghSbYz
24YS3Q0miFAmfcQASW00BOnUqZObZJRfYoAIDl3SqNDRsGEDV+i+9dZbboKaHBexC789IpdjgVKF
J598sjNo0CC3ycjevXv9D88TRHM5lknapC3w6NGjnS+++MLdTSjMHQ3h4PBbnXvuua7oletCdMBu
oj7n9pQuXXqj1nnT9LhMj3OVqbtLfwYqM3i9uxGZrOaHD0EhYTLwUPPUW2ukTHcNypQR4r4lLi5u
mb7o/b5y5cqQPvhD0dgeNdrBr8tqnQSpFi1auFuWQuTAliKRLwTCSSed5P5LPV9ECbVwN2zY4HZz
27Ztm1vrlyor/Is/C/GyadMmN3pHKSoaRlx00UVOgwYN3K1jnof7BSEcHFccI2eccYbbVY9jh2Sy
FStWuMcUxw7HGMea99jjWORvOTbxqLOrdNNNN7k7SxzDRA4RvSRICcEGHzWilzwDfkssMLIwiSz4
vfTvFtJzf+b555//Z1JS0vda392ux5XKlCHD0kr33Woqu40w+jDio7teUO+0i6POGt00MCpjbeis
TGu5UXrcosf8YsWKfdO+ffvfx48fn0kJCxlTMuzQq1++E2f69OmBG7wvunv16tXLrcEpW9WRi7Uf
kFWPcCXhkEkIEcLA+8v/E5HjX2wR3M52Mf9NVj7HA21mKYsmHkkht3CsfPXVV673/4477nDLVnFM
cWyRXOY/9vh/e1xyG7WbOWbp5ogQFsEUWRDpZT5hHsH6NHny5H/NNQU5CNboeTbEXJs13/4z/2YN
//wswzNuueWWzD79+uypUKHCuri4uNezdN1IZapzdVLGyoC1FYsr3XjRhRHv3fVjo7wpyiSwYW0g
pN1SGT/vAGUivXg87tbjST1e1V/YYj3e0ePdGBxL9XhPj+V6rNDj8/j4+E1169bNeOihh5ygjSee
eMJZtmyZG42RuorRBSIEiwMC4vvvv3ejLwhZPL/8Sw1Tfnei+0Td5PcX8guOJY4pji2OMY41jjlE
Mf9yLK5fv949NrEqyOIq8rELbqL7LJr9c01BjkaNGoWSk5N36rl2rR5f6Xn3s6z5l3n4fT2WhZmr
ZRid9rYeC7R2e0qPe7P0HJHdi/Q4W5kqXXWUsTLYRLWIrbt7MFDxGJMJYdNCjuy8enqcpoyJmRUA
nt6r9Ziox2Q9pupxlzIi+B49ZsTQuE+P/+nxmDIH0PN6LGvRooUYnARBEAQhn0BkU6qxfPnye/Q8
+4Eei/R4SY+5elBK65Gs+Zh52T9Xx/JAl6HPpivj071NGaH7X2U8u1TkYief4CZ6j2BneRWlVgYv
tkwZreOOUEb0pinzJVCP7SxlDM0DlPmiCIMjfq/TY5weN3jG+BgYE/SYpMcUZQ6sR/WYj79N6kUK
giAIQv7ADkKHDh32xMXFfaSM0J2jjMhF0N2hzNY8gTjEnH+ujtVh9Rj6DJ2GXkO3DVPGqoqeI1cL
+yo7+mnK6D6qMqADoyZRLSfCid6qyjSlaKjH6Xp0VKY5BbXaiPperEwpi0HKlDKLlUFxZiLeo/W4
Xhnj94N169ZNZ/tOEARBEITDZ9KkSaHU1NSvlRG6RHIRuYhbRNwIZYJwzMn+eTrWB7oMfTZAGb3W
Wxn9RgATPUeBAnK20HnlVAyJXYtX9PLh+RIq61FDmVUAwpeIbytlWs+xQkAEMzA9x8rA89JDmS0B
TrSxetx23HHHbaNFn/+EFQRBEAQh92BloBFJsWLFtigjdrFREr0kpwgxR2UB5mFyjdia98/TsT6s
NkOnoddaKaPfGuhxojLVGNB3eHZjTuxavKI3VZnqDUR7j1HmCyKLD3MzNXvpzsaXhxBmsGKIhdFY
Gd8LZTx6KnPy/bdMmTKfzpkzRzIzBEEQBOEw+Oijj0LHHHPM7oSEhGf1/HqzMhWjiFieq0yUkpqx
CDjmY/8cLcNoMvQZOg29hm5Dvx2njJ6j9Bj6Dp0Xk2LXYkUviWxk62Fi5ospr0y9XsqXEQYnuS1N
mS8wlgYRb1ZIHFRtlFllDk1OTn55+vTpIngFQRAEIY/88MMP1GlOT0xMfFEZ+8LlylgpiVwSbELI
YbesqUwgzj9HyzAjTRmdRvUFdBv6jZ179By6Dn1HglrMil0LH54sPSt8qcmWosyXhMeXOm104mAQ
EudLjJWB8GcrgJOtoTKR3j7x8fHTR44cmSmlnwRBEATh0MHKcOONN2ZqsfuuMklX2AZ76tE6a76l
7S0Bt6M8c7KMfw90GfoMcctAt2FdQMeh50TohoEvw4rfRGW+JAQwIXAGK4RYGxwwtlHHCcpsq3TX
gndcmzZttmzdulV8vIIgCIJwCCB2n3jiCZLUvtFz6q16XKrMDmorZbblbRcwuxXvn5tl7D8Qtgy0
GroN/YaOQ8+J0M0FVgBbERyLg1URBxOrpzRlPDIYw4eXK1fuk7Vr14rgFQRBEIRDYOHChaGKFSvu
io+Pp8b/UGUiu3h1bZ1YIpcIXcSbf16WkfPw6jYRusIhwQHDSoktAqwNnIxt9eibkJCwcP78+SJ4
BUEQBCGX0CmyZcuW6co0kKDs5/lZ8yoBpeOUSZ7HUmnFriAIhYAVvPhh8BFRy46udOdpwfvAWWed
9Yf/ZBYEQRAE4d/88ccfzoABA/7S8+eryjRI6KdMJYZTlUkSZ54lwGSrCQiCUIhw0rG1wqqT5LWm
enTTY3RKSsqWzZs3+89pQRAEQRA8/P33306/fv0ySpQo8Z4ySWoDlKl1TxcwgknkyuDZxYsqSVaC
UASwpeL18TZUpmTKxYmJictvv/32TP+JLQiCIAiCITMz0xkxYgRid73KrsjQXZnSYzS7opwWcyyJ
4jbZShCEQoZVJl4iyrNRxJmTs40y3demNWjQYO/vv//uP78FQRAEIeZB7D7wwAOZFStWXKtMrd1h
yjSVaK1HfWUCSZQAZScVC6GIXUEoIqyPFxM9/iI6mLRQpoTKFeXLl//2+eeflyivIAiCIPh44YUX
nLS0tE1ZFRloLNFbmRa47JZWV6b8GHkykqQmCAHAlidjFVpNmc5r9PQepE/iR0aMGBGSJhSCIAiC
kM3SpUudkiVL7tFz5f16jNCjj8pOUiMnxiap4dvFyiC+XUEoYlh1kjWKoR6vEYWxKaNC17XxtWvX
3rB69WopUSYIgiDEPDSWWL58uXPyySfv1PPkTGUqMlykTKCIxG+bpIZvl2CSiF1BCAheWwM9qr22
huHJycn/d/311+/1n/SCIAiCEGusWrXKad68+W8JCQlz9Rw5RpmKDF2y5s0T1f5JasytInYFIUBY
WwN9qymO3UCZrZn+etxaqlSprdu3b/ef94IgCIIQM6xZs8Y5+uij9yQmJs7Tc+PVelysTClPatiT
9H2sMp3UELvi2xWEAGJtDfiN2Iqpo8fpevTS44qkpKS3+vfvn7Fv3z7/+S8IgiAIUQ02hhUrVmBj
+EOL3ReVEbtDlNkJpW0wVkDELrkw3k5qEt0VhIDBSYnPiNIpnLBkl2K8x5M0UI+JFSpU2EyPcP+F
QBAEQRCiGWwMp5122g4tdp/X8+E1ytTa7alHK2XKj9m2wVRksJ3UROwKQkDhBLXJa9TkradMLUF6
gY9ISEiY3bdv34wdO3b4rwWCIAiCEJWsW7eO0mN/Z0V2aSxxqTJil5r1pyhT3YjyY962wSJ2BSHA
2OQ1orycvPT+bqJMe0SivONLliz5+fz586UuryAIghDV0FTi008/derVq7dbi91X9Bx4rR5D9ThP
mUpG5LqwG0r5MZo3idgVhAiCk5WagbZEGVHeVirLyxsfH//oySefvGPz5s3+a4MgCIIgRA1Llixx
mjVr9mtWZPc6lS12aSyB2CUoRGUjxC7zpohdQYggMNnbEmVEeVm9NlbGyztAj2v0yb+kS5cu6ax+
BUEQBCHaeOmll5zKlSvvio+Pn6PnvevVv8WubSxhxa7U2hWECMRGeTmR8fLaig30B79Mj4llypT5
6bHHHgtlZGT4rxOCIAiCEJHQVXTmzJmZFSpU+FXPdY+q/W0MInYFIcrwenltu2H6gnfQ40I9Ruvx
UMOGDbd/8cUXUrVBEARBiHjS09OdyZMnZ1SpUmV9fHz8Q8pUYyBBjWAPnl3mwXBiV2rtCkIEYys2
cFJTl5dWiXSRocD2YD2uS05OfrVjx45/+S8agiAIghBJ/Pnnn87FF1+cUaZMGcTuDGXq7FJ6zIpd
69kVsSsIUYaty0u3GLqvVVWmsDZlWChTdoUek5KSklZdc801mXv3SudhQRAEIfL4+eefnYEDB+5N
TU39Ws9rk/X4rzKBHUqPUZpTxK4gRDm2+5pNYOOEpxlFR2WsDaP0uCslJWXjww8/HJIubIIgCEIk
8d5774W6du36V7FixZYpI3bHKFOG8xxlKhRRZ9dbegyxi+VPxK4gRBFEeb0JbJX1OEEZa0NXZVbA
eJweSEtL2/L222+Ln1cQBEEIPCRcz549O1SrVq09cXFxL+h57BY9rtLjYmWseyRq00GNHBZv6TGJ
7ApClGIT2Ky1gV7hWBvoHY63aZgeNyQkJDxTo0aNnVu2bPFfVwRBEAQhMOzevduZPn06ft2fs5LT
xutxpR4X6dFFj5bK1KCnXTC7m7aphIhdQYhyiPImK9MjnJPfVm1op8cFeozQ46bExMTXGzVqtHfV
qlUS6RUEQRACRSgUclavXh0aNGhQZlJS0mda7D6gTKvg4Xr0VabefHNlxC7BHdsuWJpKCEKM4LU2
cPLjZaqlTNth6+cdqcetCQkJCzp06JC+bt06Eb2CIAhCYFi6dGmoabOmfycmJi7S89U0lV12rLcy
ZTeZ005UJkm7nDL5KyJ2BSHGYBuH7ZwSyrQdtn5eVsNsAeF7GqvHbVr0Lj7//PPT2TYSBEEQhKKE
kmOPPvqoU6pUqd+02H1ez1M3K5OcZisxnKlMQnZtZZotIXapQ4+NQcSuIMQgtu0wFwJbqqyuMn6n
7noMUqZ24Z1a9C7v3bt35rp16/zXHkEQBEEoFD766KOQnov+Tk5O/krPTTP1uFGZ5LT+WfNWK2XK
jrFrSc155jYRu4IQ41hrA35etnrowpamx8nKXDRYKVOom1aM07Xofbdbt26Z3333nf8aJAiCIAgF
Bl3T7rjjjtCJJ564Q4vdBcpYGKxft58yft3TlEnCJi8Fqx67l+xiEtgRsSsIMY4Vvd76vGSyskKm
QDf9xuk7fp0ed2jRu6Rjx477du7c6b8eCYIgCEK+QmLaxo0bnS5duqSXKFFii56HHtFjkjLNJJib
aJx0lh5N9aij/p2cJpUYBEH4B0QvFwWbxEaNQppSIHppwegVvXcmJiYubdWq1Z4VK1aEuBgJgiAI
Qn5DYOXpp5/ObNiw4Q4977yrTFQXCwNJ1TSTYBeSOQq/7vF6VFFmp9ImpzGvSVRXEIT98IpeahSy
HVRTmXJlXFB6KVOjF9E7TV98FjRo0ODPRYsWiegVBEEQ8g3mlOXLl4fOO++8UJkyZdYmJCTMUaZr
GvY6a2GgWZJtJkHnNK9fF5ueWBgEQcgRv+g9WplIL6KXrFev6MXe8Hz58uV//+CDD9wLlCAIgiAc
Dnh1b7zxRic1NfUPymIqE9WdoMdoPYZkzUOUHGumsptJ2M5pNFQSv64gCLnCX64M0euN9Fp7Ayvt
2xG9KSkpP911112h7du3+69dgiAIgnBQsC/MmTMn1LBhw53Jyclf6PnlMT1uzZprLlemaxotgskt
aaSMhYHKQlgYrF8XscscJmJXEIRcYcuVHUj0Ur2BkmW3xcfHzypduvRXAwcOzPjll1/81zFBEARB
CAu7g2+++WaoW7du6UceeeSauLi4eSrbqztKmdq6NjGthTJVhMJZGCQ5TRCEPGEjvayarei1iWys
sEkW4EJEc4pb9LivePHiK2rUqLF306ZN/muaIAiCIOzHjh07HNoClylT5k89h7ysx3SVXYHhMmW6
ftqork1MI6pLFQYsDARlELsS1RUEIc9w8fDaG2wiGyvrU5Sp00uR74uVWYXfpMddSUlJi6tWrfrr
rFmzQtKZTRAEQfCyd+9e55NPPgmNGzcuVK5cuW2JiYkf6bnjQT1uU6au7pXKVGBgJ9Eb1SXgQlSX
rmmllCmlaaO6InYFQTgsrOi19gZEL8kBFPXmAkSGLJmyeKu4SI3XY2p8fPzcChUqrBs4cOC+n3/+
2X+9EwRBEGKQ5cuXO5dccklGrVq1fk1KSnpPzxdP6HGHMvYFktKwyl2gx9l6nKGMjY6orq2taxtJ
SBUGQRAKBBvpZUVNcsCRynRkI0OW1XcnPfoqswVFBYfb9XggLi7u4xo1amQsWbJESjgIgiDEKAQ+
+vbti3Vhn54XPlSmeQQ+3YnK2Beo/oN9gV1D8kRoIsH8wo4idjob1ZVGEoIgFDjekmVceBC9eKlO
1KOJHu2VKRfDCh1fLz6su/XF7dVy5cptnjx5coZ4ewVBEGIDqvYsXbo0NHLkyAwtdLdmWRce1WOq
HjfrcY0y1RcGKJMTQqkxAijU1SVJ+hhl5hl/uTERu4IgFDhW9No2xKy66WxTW5kyMW306KGMr/cq
ZbapsDg8oS92n7Rr127f/PnzQ3i4BEEQhOiDNsBTp07N6N69+96KFSt+T16HngdmKxPRRehSZuwK
ZXy6BEk6KmOPw75wgjL2BfJFyiozzzDf2HJjgiAIhQail1U2HirKwVAWxlZwYGXOhQv/FZ1w6IjD
xY1khPsSEhJeLFu27Pb+/fuH/vrrL/91UhAEQYhQ1q5d61x44YUZlStX3pecnPy1vubP1eN/ynh0
bUR3hB6DlCkzhhWulTLVF+ooY5Oz9gXbGliaSAiCUKTklMyWpsyFiw44bE+xeqczDskIE5RZ4T9W
rFixlUcdddTORx99NLR161b/dVMQBEEIMJmZmQ411z/99NPQzJkzQ6effvquxMTELUlJSfhzH9fj
HmVyObjuU6/dRnQRugREWunRWI+6yvh0K6vsBhLYF7wVGARBEIocm8xmfb1csLA4kFXL9lRrZWoo
koyAV4uENqK9XAyfP+KII77q0qXLnmeffVZsDoIgCAGHbmivv/66M3HixFCPHj32HX300Zu00P04
Li7uFWVKi92pTHe0G/QYo0wi8wBlSozZiC5C1yak4dO1NXXZMZRSY4IgBBYuTGw5caHigoXvilqJ
XMxO0qO5MrUUWdnTqIJoL95etrn+py+ULx155JG/nXfeeZmS1CYcDmypCkIkQaR01apVTkZGhv+u
wLBnzx5n/vz5zvnnn5953HHHZWqR+1tSUtIHlJ9UJgmNAMYUZWqxY2EbqcelygQ6yOmwHl2sCzai
a4UuZcb8EV0RuoIgBBbr6/VaHLiYkXxAFQcudCS02Wgvq378XFRyoLPOw4mJiR9Wrlx552OPPeZs
2LDBSU9P9193BSEs3377rTN48OB9egJO//DDD/13C0JgWbJkiXPEEUfsK1u27O/dunXbg83rs88+
C7F4wzKwb98+/58UCAhuorcknK1evTq0ePFiZ8KECRktWrTYnZqa+lvx4sWJ5C7T1+qn9XhAGZFL
0IIumzaaS84GtoXeylzr2+nRUpndPqxufqHrTUgTn64gCBGD19drqziQ0OaN9uLtpXwZJWio5EAC
AzYHtsDuSUhIeE5fVFc2a9Zs56233hpC+ApCTpD4+OCDD2Y2bdp0d3Jy8pf6+FnHVqv/cYIQVO6+
++7MEqkl1ujr3//pa9+7XP9Kliy5tl69elvPOeecPSNGjAhNnjw5c/bs2aE33njD+eabb5xdu3b5
nybXhEIh548//nDWrFnjvP32284TTzwRuuOOOzLHjh0b6tOnT3rLli13HnXUURv0+/g8KSlpmT6n
XlXGk3uvMsEJfLkkoF2vjMjFqsbOHXXYua4TzW2lTB1dmhNhbztOmXkAy5vXuuAVuiJ2BUGIOLxV
HLzRXmr2cvFroMdpyvi5rM2BLTCiBJP1mBEfH/+Mvuh/Vq1atczx48dn/vrrr/7rthDjEAHTgoBC
9lvi4uIW6uPmeT1e79q1a4gtWEEIOkRvL7nkklDW8TtLj8eUsQjM0tfAOfr2efq/XyMRrFSpUmuq
VKnyS/Xq1ffWqFHD0YI4s3nz5umdO3dOHzBgQMbll18e0qLVueGGG/DXOtdff70zevTo0NChQzP7
9u2b0bFjx3S9MMyoU6dOpn4ORz/H3qpVq24vXbr0d3qxuEK/1gI9ntOv+1TWe7hPj7tUdhQXGxp2
BdrIE8ml0oIVuVzL2cGjhi7Xd2wLVO3hmk95Maou2GQ05gWxLgiCEDXYaK/19hLtxdvLxY/VvrU5
kNRGa2IunEOViRhMUMYPNkOPJ4oVK/aNvkDvIsLxww8/iNUhhsHvuGXLFodt36OPPnpHQkICGeGz
9JiZNZ6sW7fujo8//tj/p4IQOL777jtHi9adWmQiMBGXVLFBYDL4byKqRFbvV6a818PKiOInlFng
vabHEj3e14Nz4RMis1rAfqFF8kr9/yuybseK8JYe/6fHc8rUxOW5SDLjuXkN+/pEcBG4E5TZfaOJ
EDtxXJ/ZleujjC+3sx5nKiNyuZaThEY9dq7vVFygYQTXfNsdTYSuIAhRjd/byyqfbS18XEQArM0B
r9c5yvh7iR7QapIECC7891O/lwt5kyZNdt5+++2hr7/+2j93CFEOUds5c+aE2rVr9yfHghYJz6rs
iZqBp/D+4sWLf/jggw+G2LoVhCAzb968UGpqKt3HqFzDDhd5DQhMrn+U8kJwElnFQoDtCzE6VZlK
CBzzdytz3HMe5DS4n8cxENCIWp6D3TSek+fmNcYp85pEcCkhRtIZflzqqVNhAU8udgUiuSQiN1Lm
+o3IraZMdR4bzWVXz/pzEbrMASJ0BUGIerzRXi5+bGuRsGBtDlwwT1EmuaGDMltkA1QY4UtWcMmS
JT+tXbv23n79+mWsXLnS9aQJ0c1bb73ltGzZMr1ChQob9eKHyBbRf0TCRGWEAoNJ+zZ9/9y2bdvu
ksYmQtBp3779H/p4JdpK5ZphygjMi5RZ+PMvtgFatXMtvFIZMco1EWsBYhgf7fiswfHP4Jyw/20H
5weClr9B1CKqeS6eEw8u4pbX4jUv0ONclS1w2ypjQcOTi13BRnK9Ipcghk1CI7DBdZ4gB9d9hiAI
QkxhRS8XQra4vDaHNGVaSpLNS/kaLrREFQYoc7HnIs2FHOGL2HmM7eyUlJRfO3fuvJdMZzKa2fIW
ogME6zfffBPq37//vlKlSm3Xv/nrWb89kSkmekQCkzVbrQyiUhwntycmJn792muv+Z9SEALDyy+/
HEpKSvpKGQE7QBmRebYySb1YBfiX62AXZXa/uB4iRom49s/6G/IfGAhWhj0XGPY2BDOPQUxjSUDU
8hw8F8+JPYHXwIfLTlsrZYIPTZS5HhPF5dpcUxm7ArtzfpHrLSsm0VxBEAS1f7TX2hzweLENRhYv
UQP8vWyXnaHMRdgrfJkcJijj8WWrbpaeNN4uUaLEt61bt941ZcqUTMpSFVYpHyH/wbqwcOHC0IgR
IzIrVKjwo17YvKuM35DFDr/9GJVd49NO2OwKMIEzsY/Vgve5E044IZ0yS4IQNL7//nunZs2ae/Sx
zQIOIdpdGasAUVR2u6huQJt2BGdjZSwEBAJaKRNxRQxT25zrI15ahDKilXwIO/h/BvfxGB7PDhpi
mudopUzkFkuZFbe8LglnJBdjOUPgEsWl3S87cl67AtdusSwIgiDkAi6QRARsNQfr77XCt47aX/gS
ARmgjPBlS46tOqJ9eNkeJqOZbObatWvvoonFyy+/LBHfCILfiqhs+/bt0ytXrrxFi1YiuiTo4Dm8
SZnoLfWbEbpEvJi8WykTjeIYYULnGCGiNb548eIb7rrrLvG7CIHi77//dig1lpycTMIZkVgWbBzH
2AUQmmnKWL0Y/Hd1ZaKrRFm5JhJxRQwjjBGpXCNJGkMYI1y9g9u5n8Fj+TtELbYEnovXw57AayBu
eU2uv0RwSTr7jzJRXIISRHHZmbN2BRG5giAIhwAXSy6cCF+iBanKCF8utmT6ciHmwmytDogaonmI
HqJ8+NDY3iarGGF0nx6PabG0RAuebRUrVvzr2muvzSDJbceOHYHuZhSLUHFj+/btzqJFi0ItWrTY
k5KSYq0LZI7ze96sjF8RuwLbsQhahK4tZk80yooAJngiXxS95/F3N27ceK907xOCxPz58zOPPPLI
b5XZqaDiARFXxC4RVcQmUVREJgPLF0EAoquIUK6JWAoQpscqI1IJDtjB9dI/uJ3HpWX9DRFbnsMK
W56b17Di1kZwvQKX67PYFQRBEPKBcMKXi68Vvly0sTogctiGQ9gQ5aOc2RBlki/IcJ6oTCYzGcmU
8XkhKSnpIy2k1rdv334XzSwWLlzo/Pbbb/55SChEsC288847zqRJkzJPPfVU2pR+pRcpC7N+MzLI
rdClHNJAPXopE+Vn0cMxQLSLSZyJm8FEzvGB6GX7FnH839TU1MVXX311+t69e/1vQRAKnU8//dSp
U6fOL1lWhkHKWA6wFBBlxTbANc9aBRgITv6f6yEilGAAgtSKYUQqAhnByuB6aYe9jcFjeDyDv+V5
GDwnz81r8Fq8JtFbK24ZXJvtEARBEPKJnISvtTogchA7bOfha2urzKSBIBqgzJY3kROykm3U9149
ZmaVNltatWrVn5o1a5Y5atSozBUrVvjnJKEA2bZtm3PnnXeGzjzzzMwaNWr8ooXuUipvKBOZx6OL
dYGFCxFaBAGNSRCwrZTZsiWay+IHcWAjYUziTPCIXu5HFLMLMFw/95QjjzzyuwULFvjfiiAUKh99
9BFiN0Mfk08ok2yJ/7yVMvYCoq4cx4hOrn1EUe2w10MGYpSIK8MKYu9AuNrhv88KWmtJsMMKW/t6
ImwFQRAKEb/wZXvN6/FN06OWMn40onqtlMloRuiQgYyPk6gvvk+3XJUytSsRVg/pMUeL38+04PpD
C6K/hw8fnkGyG7YHPHbi/c0fiKz+/vvvzvLly51evXqlp6Sk/JmcnLxOf/8vKhPNJRJPRJ7fiIRE
a11gAeMVulgX2PIl2s8xwLHAYshO5HgM2ZpFDONXxPqC7YXFz+wyZcrs+vnnn/1vTxAKhdWrVzvY
a/Sx+KQyNiyOTa5XHKvYDjh2ibYiRg8kOG2k1SuIrSjOafgfKxFbQRCEAJKT8GUrr6IyXjYSOhBE
bHXj7aS0DlnKRAcHKJMYMlKZLfIJKlv8Evl9RI/5Wvh+oMfaKlWqbL7wwgv3zJgxI7RgwYIQ2dTS
2e3QQOSydfvUU0+Frrrqqsx69eptL1as2FqiucpM+HzvRN6JwBOJH61MZJ5SS0S9sC60UkboEv1C
6GJbIIpLRBeha7de7aSO6GWrl8UQOwAcB1he8Hlfr1/7rW7duqVv3rzZ/3YFoUD55ptvnA4dOuyK
i4ubr8wCfJAy1yd2qDhWWcRxXHNMcyyLEBUEQYhhvMLXVnUgqsc2INERBBHRPSYQMpEp79NKmQSn
7sokMhE5HKaM+GXbfIIy4hfxhaeOyO/TiYmJr+rx/tFHH72hWbNme6j4MHny5BC1fnft2uWfzwTH
JJ+9+eabztixYzP15B7SIndnamrq5wkJCQvj4+OfUSaaO12Zqhp870z8ROCJxBORJ1OdqCx2BDLL
bUSX35Xfl9/ZRnSt0PVGqjguuB+bQ5oyx0BblZ3ANumII474aOTIkaHdu3f7374gFAiLFi1yGjZs
mKHF7ivKLO5YgHGsU1WEREtsOByzHLsc1yJ2BUEQBBe7neeN+jJZEN1j4iDr2EZ98XNar29rZbYQ
ifpRr9Urfq3tgYgjPtK7lKkSgACepceC5OTkr1JSUnaWKFFi30knnbT3mmuuCb333nvOH3/84SZg
IfhioeMbn5EaxzSFoLrC448/7nTq1Gmf/m726u9mh14ofKq/r2ezvjvsI0TSqZl8szJdnmw0l++f
CDz+6zOViciSqU7iWXWVHdG1GePeiC6/vx9uYyFE9J9jgN+fCDG2CCLHY/WYlpSUtPrmm28OSbUO
oSDh+Jo3b15mpUqV/lTmGkKXM643WHVYiHFdOk5lWxk4tsMd14IgCEKM4xW+TBYIIn/Ul63CNGW8
vtbygPhto7LFLxHAAcpEXqgIgOeTyWmiMtFfKgbgM7UC+Ck9FhYvXnwFFohSpUr92KxZsx2XX355
+sMPPxx68cUXiQSHvvzyS2fLli0Rb4dA0K9Zs4aKCiE9gYfuvvvu0EUXXbSndu3av+hFwAY9vkxI
SFiivxMbxcWugMglkntT1nfJdzpcma1cFht873z/rZTxX+PDPl4ZAYAlAY8uW7zhhG5OETBu5zEc
A/wtgpkFD0KaCP8QZaL69/G73XLLLSE+myDkNyRm0gDnP//5z3p9bsxU5hxgkccCr50yvl0WZCzM
WKCxayFWBkEQBOGgeMUvUT4mEBv1tV5fBBCCqrYyvlCiiYjfVsrYHvDU4R8lmQRhxgR1lTLRX7Yi
EW+IOAQwEWCE3YN6PB4XF/cCTRL05PZeyZIlV1WtWnXTqaee+nubNm0yunfvHhoyZEgGlggtGB2E
cFBFMK2Zly5d6sycOdMZN25cpha2mWeddVaoadOmu9PS0jalpKR8rj/vEv05/0//O1cZ/zPfA98H
kXEi5BOUEZYk5vAd8l1SOo5tXLy5LDb43ll8IEiZ+InIM/kToec3w6edW6HrhcfxN/z2iGa2ixHT
RPfPVSbCdr0e95cpU+ZbRC+RakHID9j9WLFiRahnz56ZelG1Mj4+nkUyuxocd4hdSili12EBzsKO
hRkLNHaqcnN8C4IgCIKLFb7hxK830Q3xm6aybQ/4PYk0Ut+X7XWEmY3+0nee6CDiDfsDlQSI2ExQ
RuDdrowHmCgw4o8oJ21w6RA2W4/n9XhHjy9TU1O3FStWbK8Wx5nly5dPP/HEE9O1oMwcNmyYowWx
M3fuXOfjjz92fv31V7dKhHcwmR7q8D8H1ouNGzc6eJH/97//OaNGjXI6d+6cUbt27fRSpUql6wk6
U4vaXcWLF9+o3+8neizS4wk9HlVG3D+gjNcZLy4C91ZlIuGISL4XIuQkCA5QpqA+IhdLASK3hTKR
LXyLRHPT1P7+XCLzTP78ZgiAvES87O/Pc/B8/NbVlVncEFnj9yTSPF6ZSO+6oUOHhviuBOFw4Bia
PXu2QzUQvSB8VZndIRZ+7BxhY/CLXY55K3bFyiAIgiDkGW/U13p9mWDYJrd+XwQRtgcigSRI4R8l
Iogws9FfJqqzlRFvCCYbASZqg8DDk8rEhuhD/E1S2ZFghKEVwohFLBFERZ9UpizXAj0Wa+G1vESJ
Ep9roblG//f3+raN+r9/1KJ487HHHru1Vq1av5x00km/Nm3a9Lc2bdrs1CJ1V9euXXf36NFjd8+e
Pf9knHvuuX926dJld9u2bX/ncfrx22vWrLmtUqVKW8qWLfuTfv4ftaD9QT83NoTv9POv1v9+rP9/
iR6v6fGcMiKd92itCfco8xnw4DKB36yM15moFZ5YPj/fw0BlorhM7ETKsSuEE7nVlKk3yvfO988i
hN/DJqLlVeh64W95Hn5rnp96vYgMxAaRfIQ4NVD5HPfr7/vzTp067V21alVIStEJhwq7NR988EFI
n39/62PpW2UWuZwn2HgGK7Oz0FaZ88ArdtnF4JjP7e6FIAiCIBwUr/hlkiECaMWvjfySIIU4QpAh
zJicbPQXsYQAJrOaCDCCrpsykxmeVJKimNysCGY7n4gnZdCwQ0xQRggTESUiTHQUnytWAEQl4pIE
L0QxkVQixEycTynjjSUJjEgxIvklPcj4foXMb6JJWVUlXs3KBKf0EY97QRkRy9/zPI+r/SO1vJ5X
1BKltsKW9zpBmUgon4HJm+g20dFLlEk4Q+BiAcEfy/fB90KFhabKRFSxjWAfsSLX2yiC791Gcw/V
tpAbvKIXccGiBsFNFP8sZapCULmBz3dXsWLF3m7SpMkfeK/9gkYQcmL9+vXOyJEjM48//vht+vxj
8cr5zDGFFYpzhHOjtTLnA7tJInYFQRCEQsUb+fXaHtgG9/p+maDwl1oB7I0AI55IiGJCY7vcK4KJ
BCOqmPQQwmzzE1VkIiQiTHSUqDDWCCLDE5TxCBMZQhQjOhHGCFDEMdFiBqIUoXywwePs3/D3PBeD
5+X5eR2i0UQ5eX0itrwfhC3vETGIeOe9D1BG3OJBZAKnqgKikQguFhCvwOX7YWInYo5dwUZy+U6t
yM2LNzcv8Ny8DuLCit4TlHm/VvTym7Ag4TuaX6JEiV14raWCg3AgsAbdc889oQoVKmRk7ZLg1eW8
4hzC+sT5gpWH6wO7G1w/OBc4DzgHuO5wfAqCIAhCoYDYstFfJiEEkrU+IICJ/hKRLK+yBTDRyjRl
hB1Rw7rKRIERwYgpJjkiwWxjsoXOxIcQxhLBlj8RYWwRRIUHqmxBzESJACNCjOgkomrFMYOI8dXK
TKpEXe1ArDLs/3M/j+Px9m95Hp7PilkitQha/IW8PsIcrzLb/Qjbnsq8Z947n4HPQvQWi0JjZQQu
nxsByfdwnMqO4uLJZcHAd3cgkVtQQteLjegjenlPiHArevlc/BZ873x/LAgeT0lJWdulS5e/qEoh
wlew4NH96aefnOeff54kzl1a6K7OahHMYomFI+fXIGV2PbBBNVPmHOHcCCd2C+P4FwRBEIR/4RW/
3uivVwATAUYAE7XEAnGUMiKKKDATWw1lRDCRTiI7p6jsaDCWCCKirZTZ/mdSJCqMqCRqakUxEWKE
MVFiBBkilIgRIhlRilBmDMgaiFUG/83tPIbB4/k7Bs+DkOV5eX5eh9fjdTspI/54T61VtrDlPfPe
Ebd8Fj4TUe7qygh+r8C1VgW+H8QlEfNwdoXCnuR5PV6f98Lvx/vk9+I3QrjzG/CdIPxZINyix30J
CQmLatSosW3MmDGZP/74o1/7CDEG3fmmTJkSat++/d8lS5b8MjExEbsQ3nx2Slhcsmhix6CrMud3
Q2XsPJwjXCc4LzgnROwKgiAIgcQrgG200FogEHbWA+wVwd5IMFv7CGFEIhMgQquOMtv/RIURk/iD
EV9EHRHFiE2EMVHiVspYB4iwMhCl2CcYiDXvsLczeByP529bZQ2ej+fl+XkdXo/XRtTyXhC1RKQQ
trxXxDvvHTGPSLTilmg3FgFrU+B7YEFgBa6d1IMysftFL5Fe7A18Rj473xER7YHKeK8nKGMLeTg+
Pv7zunXrZtBi2i+ChOhn586dbnm+ihUrZqampn6tjBceocvCiF0BdktYbHL82Kgu5zbnO+cLxxrn
CMeeXfgJgiAIQqCxEUor5qwAZhAF9otgBCHC0CuEiQhbMYyQTFPZghiBSQQVUcy2OwMBymASZeAf
RpwebPA4+zf8PSLbPifPz+tgReB1eX2EOe8JIchEzXvlPfPerbglSoVgRNx6I7jeqFVRRHFzg1/0
8pn4HfjOicKzGCDiTVQcEYOYwe88g6TA5OTkjR06dPh74cKFIUrGCdEL3QOXL18euv766xG6v1DF
Q5nSfHcp49PFd481aJAyuybs0LArQlSXc4tziYUh1wCuB3aXI4jnhSAIgiDkCq/Is1FgBKCNBFsh
7LVEMBCQRIWJACEqiZoiMJkoEZuITgQZAxFKhBVBaoXywYZ9LH/H3/M8PCcD0c3r8Hq8Lq/P++D9
MEnz/ryRWz6DV9zaSFWQBW447G/E5+Cz8Xn5LqopszAg6k0yGyJmsDK+5wnKeDQf0qJ3Yfny5b/r
2bPn3qeeeir0999/+7WSEKFQju6LL75wJk2alNm9e/d9lSpVWq+F7jvKlA+crkxEl+ROfLpDlLEI
YQdid4DdGRaVHEecZzaqy3kjFgZBEAQh6mGS80aDw4lhryBGhCGKGUyYXnFsByItt8P7d/a5eF77
Ggxe074Pho1Ye4WtV9xGA3wePh/fOQIf8c8igei3tTjYaO9wZTyak1SWzYHSb2XLlv3l1FNPzaTV
sjStiGzefvttp2PHjplHVzr6L72ooTva08rUoZ6a9bvbiO4lyvjp8em2Vca+gA2IXQIWliweOdc4
pzi/RegKgiAIMYsVjlZIeodXFFth7B9MpHZ4haod3vv9f+sVsnb430M0CdsDYUUviw0WAkTliM7V
VMYOgs+ZaC8JbQOVqZyBzYFIHxG/BxISEhZqgbTh2GOP3Tlt2rTMzz77zNm9e7dfTwkBgqj8d999
5yxbtix09dVXp1erVm1HsWLFfkxMTFysTI1q/LlTlCnZR7UTfnesCySQeoUuxwi2IBZKLJhYYLKA
lMQ0QRAEQcglXqtAQQzBwHeB6Le+XkQLdhI8mER78WS2UqbLHoIHmwORPiJ+CF8ivkQCX0xKSvqo
evXqP1988cWZjz76aIj2zRL5DQZ0Qlu9erXzwAMPZA4dOjSzSZMmv2mRu1qL3CXx8fHPKtN8ZVrW
b3qDMrWoqbowQJkFj7UuWKFbW5ljBDsMXnB2TRC6LCg5nuQcEwRBEAQhUCBOvNFeLA422ltdGW8m
5dkQPET48G5a4UvEly1vtr7v0+Jpdlxc3MulS5del5aWtrdTp04Z8+fPd6OKQuGCJ3flypXO1Vdf
HWrQoEFm1apV95QsWfJr/fu8yu+kTKMIIvUkJk5QJpp7pTK2BcqLUbaPkoEkM+LRxbpgI7pW6LIz
4BW6HEeCIAiCIAiBxIpeG+3Fg4kXk6Q+Ev+szYEybmxpW+HLVjdb3nh8JyjTuIIt8QeUyep/t3jx
4j8eddRRO4cNG5a+ePFi59tvv3Wo8oAgEw4foujYSH744QeiuKEXX3zRGTx48L4qVars1N/91mLF
ilFh4WVlWnXPUCaSi8i9SZkmLSShDVMmmkuyIr9tO2Wax+DnZsHDwofjgOi/jeji/7YWIbEvCIIg
CIIQMVjhi5DBD42wQeAgdIjsEeGzwpeIL1YHtrwHKLMFTlUHMvmJ+lLZ4R49HtTj2aSkpHfpzHX8
8cdvPu+88/becMMNoSeeeCLEVruI30Pjr7/+cj7//HNnzpw5IaoqaIGbecYZZ+ysUKHC94mJiSv1
d/0237kydhN+AyLwtyqzKEHkUmuZ3+tiZRYu5yjj126lzG9bX5nyYtWUSUZj4YPdxQpdFkU2oitC
VxAEQRCEiMR6exG+CBy2rhG+bGXbiC9b3Gx1s+XN1jdb4GyFD1Gmji9R3/HK+EIRXAivh2hFGxcX
93xCQsLismXLrqtevfqeRo0aZV522WWZc+fOdbZu3erXdzHPn3/+6SxZssS57bbbnO7du2fUrVs3
U39vf5UvX36dFrhL9ff5ov5en9Lf7yPK+HGxKhBtZ+GBJ5cOelhQhqr9RS6/W2tlytHRAIZoLhUX
8OdSvo9yfUT68XfbCiZiXRAEQRAEIarwCl9bzcFGfBG+bHXT0IOtb6o6nKlMghNR34uUEVj4QhG/
CC/ELxUAEGT3KRP9pTLAS1q4rShRosQPWrztqFSp0h89e/bcc9ddd2V+8MEHztq1a0ObNm1yGyIg
/qIpGW7Pnj3/397ZhFhZxXH44Mc4jiKKAyKIXhNCM2VaBG4MIyqYCl00gbRooCCEFm5mndlm3Ei4
cJFQtunDRmvRbioYlBZltkhkwGBa9EVFU14QwZl7O8+c+ePxNvZhDJk+D/wZ6977vud97+Z5f+d/
zm1PTk7O/HTvxMREa3x8vHXmzJn24cOHpwcGBq40Go3furq6Jru7u39goVm+V+ym8E6uV1NpHeFB
gsWDIbgvppLikra/kMoDCN8F7Qp7UklyQ3JZlIjksgitkcp+1ey4EP25sQd17GxioisiIiK3JQhO
iC9T2YhvtDow1Y0kbUxlCpx2Bxa4kfo+kspeviG/LIYi+WUHABa7vZTKNDutD6+kkkwyBf96rlNZ
gD/Konc2/73Q29v7dV9f30+7d+++vG/fvumDBw+2jxw5QiLcGhsba58/f35GGNmN4FaEFgR2rTh3
7lx7dHS0feLEidbRo0enh4eHW/v372/t3bv3Ci0JWW6/6enpuZiv/8t87Z8uXLjwQ+5FruOz94Ye
XO4ViflwrpdTSdFDcOmnfj6VFJf9cvm5Xx5A+C74TthlAcndlork8r3RssADDGkuCxZjazG+67o/
V9EVERGRO4LOxBc5YsobWWIKnD7fSH3vS6Uf9IFUhAvxejLX06ns68tCKdLfoVS2OQsBJgEmsSS5
JAUmyXwj11tZAE+yC0Suj7u7u8+uXr36q02bNv28ZcuWy1u3bp3evn17a+fOnVN79uy5SovEoUOH
2seOHWuPjIzM/LgC+wSzuIuU+N8yNTU1s/hufHy8ffr06TaLxTgX5xwaGmoNDg5O9ff3X92xY8f0
tm3b2nl8Vzdv3tzMUvv9qlWrLi5duvSLfD1j7JqQ/55asGDB26ks9CPxZgeFkFseCJBb0nHSW+4V
LQosNiPB5UFiMBXB5f6y6IwUlx5rFp7RdsKDyD2ptKI00vWSy/cX24qF5PIdK7giIiJyRxPiixwh
SdHny8ImUl+2NKMPFMFCtJBfkt+dqezy0J9K+ss0O32/z6YiwCSUJJVskUULBDsJIHpM17O7AK0Q
iDBCyHQ+MszuA6+lkgwjjR+kMu3/WVdX14Wenp6JZcuWfZv//pgl+ZcsmJfya83Fixc3ly9f3lyx
YsWlLKCXent7m2vWrGmuXbu2uW7duuaGDRua69evn/nvLNbNlStXzrw/H6O5aNGiJseg8r9/zfL6
cz7+d5xryZIlF/I5Ps+vfZJrNNf76ZrIUrRxkNZyDQg9u1pwXZHacr0kt8gtSThyyyIz0nFaRHhY
4Bfw2BeZvmkeJB5NRXC5v9xn+nFJcUndeQDhu+A7oV2BLeeiLzcWoNW9uaa5IiIiIrOEGCFJ0e5A
vyciFXv51vLLYigEjMVuTKszvU76S98vi6foLx1IJakcTKX3FAlG9BA+xA8BRIRJg+lXJRFGhpFF
hJhEFIEkHUUmQ4yRTMQ46nguFnkhyPTDsqPBu7lOptJC8F4qospf/t/I7Ht4/5upCCypMwLL8Tg+
xblCZBkDY2FMjI0xkl6zJRhSi8wfSGVXC1oSQmyRfnZQILmlNSHklvYEHhK4Vw+n0qJA3zQJbgju
llTucyOVFJdFhnwH0ZM7V5Kr5IqIiIj8TUJ8I/WNlgfkF+HqTaXtARHbmK6lv0y3s+gNASahJKmk
BeKxVCSYaXqED/FDABFhkk5EmJYIEmHaIkiFme5HIElHD6SSlIYYk54ixxTiiYDWhZT+WcX7aDHg
81Qcj+NTnC9Elt5axsKYGBtCy1jZLYGxI7X025JuD6aSdLN7AtLPDgpPpNKawANBLbc8LHDPaBuh
DzcSXHqpQ3AjxUVwe9K1HRY6JVdEREREboJIfSkEK/p967YHekeZXkeA2e2hkYoAk1Dem0oLxP2p
9ADTh7orFRFGABFh+lRJPJFDJBFZfCaV6f7nUhFJ0mGkErkkNUU0SVBDkCkklGIXCQox7ax4jeK9
8VkW39FHS4XEhsgi5CS0jAVJZ2whtE+lMvaQWto7EPyHUrlOrhf5r5PbWm4bqdwzknP6cHmQ4IEi
BLdedGargoiIiMg8E5JVyy9pY6S/IcAkkiHAJMAklnelIsG0QSB8pJq1CLOtFonwg6nIMNP8CDEC
+Xgq0/8kxMglKTGiSVKMdLJwDgGNIj2m2E1irorXeS+fpe2CCoENiaWnlnNybsbAWOivZWwhtLRx
kNaG1JLYcl0htlzv3emPclunt9wzknMElweJuQRXyRURERH5Dwj5jdYHBK1uf0CAowWCFBjBQ/QQ
PsQvRJg+VRLPSISRxb5UxJH2iJDiEGNSU0ST1oBd6ZokU4gobQN/VbyP4jN8ftdscVzEG4nlXIgs
C8cYQ8gssk7vMkJLGwdjR2q5lo2pXFcttsg/1x+tCdyXuj3hRi0Kyq2IiIjILUYIMIW8UQgwQkdy
ieAheggf4hcizDQ+0/khw6TCIcSNVESShBSpRC5DjhHOKEQ5ChlFSucqXqOQ6vozcRwEllQ2JJZU
mnPXMst2bYyRPltS7JBargOpjZaESG2Rf66f+xDJbcgtFXKr4IqIiIj8zwiJixR4riQ4RBgprGWY
aX7EEYFEJEmHkcoQ45BjCvFEQOcqxLmuztdDXCmOFQLLeTgf56UioWVMjK1TaENquaZOsa2T2zq9
VXBFREREbkNq2atFuFOGIxlGIGsxRjCjkONom0BAb7b4PBWtBnVxzhDZkNkbCe2NpFaxFREREZHr
CBmuq1OM60I8a1H+JxWfreW1Fti66vEosiIiIiIyb3Smp/NVIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIiIiIiIjLf/A6U4IoKAfnY0gAAAABJRU5ErkJggg==

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.forgerock.com/docs-ui/prod/fr-docs-styles.print.css

@charset "utf-8";

@import url("https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/prettify.=
min.css");

@import url("https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-aw=
esome.min.css");

* { transition: none !important; }

@page { margin: 20mm 10mm; orphans: 3; widows: 2; }

.hidden-print, #index { display: none; }

html, body { margin: 0px; width: 100%; }

body { font-family: serif; color: rgb(0, 0, 0); background: rgb(255, 255, 2=
55); font-size: 12pt; line-height: 1.2; padding: 0px; }

p { margin: 0px 0px 7px 17px; text-align: justify; }

.strong, .bold { font-weight: bold !important; }

backstage-site-header, backstage-site-footer, span.text-muted.nowrap.hidden=
-sm.hidden-md.hidden-xs, div.modal.fade, div.alternateBar, .navbar-header, =
.navbar-right, .dropdown-menu, button.btn.btn-primary.btn-default, button.c=
lose, div.alert.alert-warning.alert-dismissible, ul.nav.nav-stacked.hidden-=
print ul, .col-xs-11.col-sm-4.alert.alert-warning.animated.fadeInRight, ul.=
nav.nav-tabs.fr-multi-screen, form#secondHeaderSearchForm, #onetrust-consen=
t-sdk { display: none !important; }

.dropdown-toggle { display: block; font-family: sans-serif; font-size: 2em;=
 font-weight: bold; position: absolute; top: 0px; }

#doc-content h1#doc-content-abstract { font-size: 1em; }

div.col-sm-3.hidden-xs.hidden-print { display: block; position: absolute; f=
ont-weight: bold; padding-top: 6em; top: 0px; }

div#doc-content { padding-top: 8em; }

.table { border-collapse: collapse; width: 98%; margin: 0px 0px 0px 17px; }

th { font-family: sans-serif; }

.table th, .table td { border-bottom: 1px solid rgb(211, 211, 211); padding=
: 4px; text-align: left; }

th[align=3D"center"], td[align=3D"center"] { text-align: center; }

.table-contents td > p, .informaltable td > p, .table-contents td > pre, .i=
nformaltable td > pre { margin: 4px 0px; }

.simplelist td { border-bottom-width: 0px; padding: 0px; margin: 4px 0px; }

img { margin: 10px 0px; max-width: 100% !important; }

.navbar-brand img { filter: brightness(0%); }

.co > img, .programlistingco .calloutlist span > img { height: 1.2em; margi=
n-bottom: 0.2em; }

#doc-content { position: relative; float: none !important; }

.chapter, .glossary, .appendix, .index, .preface { position: relative; brea=
k-before: page; break-after: page; float: none !important; }

.panel, .mediaobject, .table .cmdline, .codelisting, .figure, code { positi=
on: relative; break-inside: avoid; float: none !important; }

#doc-content h1 { font-size: 2.7em; margin: 1em 0px; }

#doc-content h2 { font-size: 1.7em; margin: 1em 0px; }

#doc-content h3 { font-size: 1.3em; margin: 1em 0px; }

#doc-content h4 { font-size: 1.12em; margin: 1em 0px; }

#doc-content h5, #doc-content h6, #doc-content h7 { font-size: 1em; margin:=
 1em 0px; }

.title { font-family: sans-serif; }

.figure-title, .table-title { font-weight: bold; margin: 1em 0px; text-alig=
n: center; font-style: italic; font-family: sans-serif; }

.procedure, .example, .informalexample { margin: 5px 7px 10px; }

.procedure-title, .variablelist-title, .example-title { font-weight: bold; =
margin: 1em 0px; text-align: left; font-family: sans-serif; }

.jumbotron { border-bottom: 1px solid gray; margin: 0px; padding: 0px 0px 1=
2px 15px; }

.jumbotron h1 { font-family: sans-serif; font-size: 3em !important; font-we=
ight: 600 !important; }

.jumbotron small { color: rgb(51, 51, 51); display: block; }

.jumbotron p { font-size: 1.2em; font-weight: 400; margin-bottom: 5px; marg=
in-top: 20px; }

a { color: rgb(0, 0, 0); text-decoration: none; }

p a.link::after { content: " (" attr(href) ")"; font-size: 80%; }

a.link[href^=3D"http"], .olink { background-image: none; margin-right: 0px;=
 padding-right: 0px; }

a.self-link[href]:hover::after { line-height: 1; padding-left: 0px; positio=
n: relative; top: 1px; }

.panel { box-shadow: none; border-left: 4px solid gray; border-top-width: 0=
px; border-right-width: 0px; border-bottom-width: 0px; margin: 0px 0px 10px=
 17px; }

.panel-heading { border: none; padding: 1px 10px; }

.panel-body { padding: 2px 0px; }

.panel-body p { margin: 0px 0px 7px 17px; }

.panel-body li p { margin: 0px 0px 7px; }

.panel-title { margin: 0px; font-family: sans-serif; font-size: 0.9em !impo=
rtant; }

.panel-info { border-color: rgb(209, 233, 245); }

.panel-warning { border-color: rgb(146, 26, 32); }

.panel-danger { border-color: rgb(238, 214, 214); }

.panel-success { border-color: rgb(216, 238, 207); }

.panel-primary { border-color: rgb(41, 101, 168); }

.term { text-decoration: underline; }

.variablelist > dt { margin: 2px 0px 3px; }

code, kbd, pre, samp { font-family: monospace; font-size: 0.9em; }

code.literal { white-space: pre-line; overflow-wrap: break-word; word-break=
: break-word; vertical-align: bottom; }

pre.prettyprint { border: 1px dotted rgb(211, 211, 211); padding: 8px; marg=
in: 0px 0px 7px 17px; overflow-wrap: break-word; white-space: pre-wrap; wor=
d-break: keep-all; }

li.L0, li.L1, li.L2, li.L3, li.L5, li.L6, li.L7, li.L8 { list-style-type: d=
ecimal !important; }

.glossterm { font-weight: 700; }

.variablelist .term, .simplelist, .literallayout { margin: 0px 0px 7px 17px=
; }

li > p, td .simplelist { margin: 0px 0px 7px; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdnjs.cloudflare.com/ajax/libs/prettify/r298/prettify.min.css

@charset "utf-8";

.pln { color: rgb(0, 0, 0); }

@media screen {
  .str { color: rgb(0, 136, 0); }
  .kwd { color: rgb(0, 0, 136); }
  .com { color: rgb(136, 0, 0); }
  .typ { color: rgb(102, 0, 102); }
  .lit { color: rgb(0, 102, 102); }
  .pun, .opn, .clo { color: rgb(102, 102, 0); }
  .tag { color: rgb(0, 0, 136); }
  .atn { color: rgb(102, 0, 102); }
  .atv { color: rgb(0, 136, 0); }
  .dec, .var { color: rgb(102, 0, 102); }
  .fun { color: red; }
}

@media print, projection {
  .str { color: rgb(0, 102, 0); }
  .kwd { color: rgb(0, 0, 102); font-weight: 700; }
  .com { color: rgb(102, 0, 0); font-style: italic; }
  .typ { color: rgb(68, 0, 68); font-weight: 700; }
  .lit { color: rgb(0, 68, 68); }
  .pun, .opn, .clo { color: rgb(68, 68, 0); }
  .tag { color: rgb(0, 0, 102); font-weight: 700; }
  .atn { color: rgb(68, 0, 68); }
  .atv { color: rgb(0, 102, 0); }
}

pre.prettyprint { padding: 2px; border: 1px solid rgb(136, 136, 136); }

ol.linenums { margin-top: 0px; margin-bottom: 0px; }

li.L0, li.L1, li.L2, li.L3, li.L5, li.L6, li.L7, li.L8 { list-style-type: n=
one; }

li.L1, li.L3, li.L5, li.L7, li.L9 { background: rgb(238, 238, 238); }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://imgsct.cookiebot.com/1.gif?dgi=eb963ed3-1ab0-4cd7-bc4d-102ff4d46a54

R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=

------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/html
Content-ID: <frame-81F67890C61278DD7BB0F61F2CDB60AA@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-bc98fc=
05-4825-4e5f-b9ea-87b4a51aebc7@mhtml.blink" /><link rel=3D"stylesheet" type=
=3D"text/css" href=3D"cid:css-e744919e-bcb9-43b9-9422-536385f6d8de@mhtml.bl=
ink" /></head><body></body></html>
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-bc98fc05-4825-4e5f-b9ea-87b4a51aebc7@mhtml.blink

@charset "utf-8";

#mttContainer { white-space: pre-line; left: 0px !important; top: 0px !impo=
rtant; width: 1000px !important; margin: 0px 0px 0px -500px !important; pos=
ition: fixed !important; z-index: 100000200 !important; background: none !i=
mportant; pointer-events: none !important; display: inline-block !important=
; visibility: visible !important; }

.tippy-box[data-theme~=3D"custom"], .tippy-content * { white-space: pre-lin=
e; font-size: 18px !important; text-align: center !important; overflow-wrap=
: break-word !important; color: rgb(255, 255, 255) !important; font-family:=
 -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Can=
tarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif !important;=
 }

.tippy-box[data-theme~=3D"custom"] { border: 1px solid rgba(255, 255, 255, =
0); max-width: 200px !important; backdrop-filter: blur(4px) !important; bac=
kground-color: rgba(0, 0, 0, 0.72) !important; }

[data-tippy-root] { display: inline-block !important; visibility: visible !=
important; position: absolute !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"top"] > .tippy-arrow:=
:before { border-top-color: rgba(0, 0, 0, 0.72) !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"bottom"] > .tippy-arr=
ow::before { border-bottom-color: rgba(0, 0, 0, 0.72) !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"left"] > .tippy-arrow=
::before { border-left-color: rgba(0, 0, 0, 0.72) !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"right"] > .tippy-arro=
w::before { border-right-color: rgba(0, 0, 0, 0.72) !important; }

.mtt-highlight { background-color: rgba(33, 220, 109, 0.25) !important; pos=
ition: absolute !important; z-index: 100000100 !important; pointer-events: =
none !important; display: inline !important; border-radius: 3px !important;=
 }

.mtt-image { width: 180px !important; border-radius: 3px !important; }

.ocr_text_div { position: absolute; opacity: 0.5; border: 2px solid cornflo=
werblue; color: transparent !important; background: none !important; border=
-radius: 3px !important; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-e744919e-bcb9-43b9-9422-536385f6d8de@mhtml.blink

@charset "utf-8";

#ytp-caption-window-container .ytp-caption-segment { cursor: text !importan=
t; user-select: text !important; font-family: -apple-system, BlinkMacSystem=
Font, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sa=
ns", "Helvetica Neue", sans-serif !important; }

.caption-visual-line { display: flex !important; align-items: stretch !impo=
rtant; }

.captions-text .caption-visual-line:first-of-type::after { content: "=E2=A3=
=BF=E2=A3=BF"; background-color: rgba(0, 0, 0, 0.72); display: inline-block=
; vertical-align: top; opacity: 0; transition: opacity 0.7s ease-in-out; }

.captions-text:hover .caption-visual-line:first-of-type::after { opacity: 1=
; }

.ytp-pause-overlay { display: none !important; }

.ytp-expand-pause-overlay .caption-window { display: block !important; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/html
Content-ID: <frame-3EDD8FACD1963C8B47BC1195A8A7527C@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://consentcdn.cookiebot.com/sdk/bc-v4.min.html

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3Dwindows-1252"><link rel=3D"stylesheet" type=3D"text/css" =
href=3D"cid:css-4f75114e-5faf-4f08-ae38-30892b5c39fd@mhtml.blink" /><link r=
el=3D"stylesheet" type=3D"text/css" href=3D"cid:css-22500acd-24e0-4538-8b62=
-18879e7f1611@mhtml.blink" /></head><body></body></html>
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-4f75114e-5faf-4f08-ae38-30892b5c39fd@mhtml.blink

@charset "windows-1252";

#mttContainer { white-space: pre-line; left: 0px !important; top: 0px !impo=
rtant; width: 1000px !important; margin: 0px 0px 0px -500px !important; pos=
ition: fixed !important; z-index: 100000200 !important; background: none !i=
mportant; pointer-events: none !important; display: inline-block !important=
; visibility: visible !important; }

.tippy-box[data-theme~=3D"custom"], .tippy-content * { white-space: pre-lin=
e; font-size: 18px !important; text-align: center !important; overflow-wrap=
: break-word !important; color: rgb(255, 255, 255) !important; font-family:=
 -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Can=
tarell, "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif !important;=
 }

.tippy-box[data-theme~=3D"custom"] { border: 1px solid rgba(255, 255, 255, =
0); max-width: 200px !important; backdrop-filter: blur(4px) !important; bac=
kground-color: rgba(0, 0, 0, 0.72) !important; }

[data-tippy-root] { display: inline-block !important; visibility: visible !=
important; position: absolute !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"top"] > .tippy-arrow:=
:before { border-top-color: rgba(0, 0, 0, 0.72) !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"bottom"] > .tippy-arr=
ow::before { border-bottom-color: rgba(0, 0, 0, 0.72) !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"left"] > .tippy-arrow=
::before { border-left-color: rgba(0, 0, 0, 0.72) !important; }

.tippy-box[data-theme~=3D"custom"][data-placement^=3D"right"] > .tippy-arro=
w::before { border-right-color: rgba(0, 0, 0, 0.72) !important; }

.mtt-highlight { background-color: rgba(33, 220, 109, 0.25) !important; pos=
ition: absolute !important; z-index: 100000100 !important; pointer-events: =
none !important; display: inline !important; border-radius: 3px !important;=
 }

.mtt-image { width: 180px !important; border-radius: 3px !important; }

.ocr_text_div { position: absolute; opacity: 0.5; border: 2px solid cornflo=
werblue; color: transparent !important; background: none !important; border=
-radius: 3px !important; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-22500acd-24e0-4538-8b62-18879e7f1611@mhtml.blink

@charset "windows-1252";

#ytp-caption-window-container .ytp-caption-segment { cursor: text !importan=
t; user-select: text !important; font-family: -apple-system, BlinkMacSystem=
Font, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Fira Sans", "Droid Sa=
ns", "Helvetica Neue", sans-serif !important; }

.caption-visual-line { display: flex !important; align-items: stretch !impo=
rtant; }

.captions-text .caption-visual-line:first-of-type::after { content: "\28ff =
\28ff "; background-color: rgba(0, 0, 0, 0.72); display: inline-block; vert=
ical-align: top; opacity: 0; transition: opacity 0.7s ease-in-out; }

.captions-text:hover .caption-visual-line:first-of-type::after { opacity: 1=
; }

.ytp-pause-overlay { display: none !important; }

.ytp-expand-pause-overlay .caption-window { display: block !important; }
------MultipartBoundary--k3syqKVKBAIZxRyO4L5dCf0DkGNkwyCb4Tm772aghM------
